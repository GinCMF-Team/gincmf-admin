/**
 * Copyright (c) Tiny Technologies, Inc. All rights reserved.
 * Licensed under the LGPL or a commercial license.
 * For LGPL see License.txt in the project root for license information.
 * For commercial licenses see https://www.tiny.cloud/
 *
 * Version: 5.4.1 (2020-07-08)
 */
!(function (x) {
  
  var w = function () {
    return (w =
      Object.assign ||
      function (n) {
        for (var e, t = 1, r = arguments.length; t < r; t++)
          for (const o in (e = arguments[t]))
            Object.prototype.hasOwnProperty.call(e, o) && (n[o] = e[o]);
        return n;
      }).apply(this, arguments);
  };
  function c(n, e) {
    const t = {};
    for (var r in n)
      Object.prototype.hasOwnProperty.call(n, r) &&
        e.indexOf(r) < 0 &&
        (t[r] = n[r]);
    if (n != null && typeof Object.getOwnPropertySymbols === "function") {
      let o = 0;
      for (r = Object.getOwnPropertySymbols(n); o < r.length; o++)
        e.indexOf(r[o]) < 0 &&
          Object.prototype.propertyIsEnumerable.call(n, r[o]) &&
          (t[r[o]] = n[r[o]]);
    }
    return t;
  }
  function u() {
    for (var n = 0, e = 0, t = arguments.length; e < t; e++)
      n += arguments[e].length;
    const r = Array(n);
      let o = 0;
    for (e = 0; e < t; e++)
      for (let i = arguments[e], u = 0, c = i.length; u < c; u++, o++)
        r[o] = i[u];
    return r;
  }
  const S = function () {};
    const d = function (t, r) {
      return function () {
        for (var n = [], e = 0; e < arguments.length; e++) n[e] = arguments[e];
        return t(r.apply(null, n));
      };
    };
    const O = function (n) {
      return function () {
        return n;
      };
    };
    const y = function (n) {
      return n;
    };
  function b(r) {
    for (var o = [], n = 1; n < arguments.length; n++) o[n - 1] = arguments[n];
    return function () {
      for (var n = [], e = 0; e < arguments.length; e++) n[e] = arguments[e];
      const t = o.concat(n);
      return r.apply(null, t);
    };
  }
  let n;
    let e;
    let t;
    let r;
    let o;
    let i;
    const m = function (e) {
      return function (n) {
        return !e(n);
      };
    };
    const a = function (n) {
      return function () {
        throw new Error(n);
      };
    };
    const f = function (n) {
      return n();
    };
    const s = O(!1);
    const l = O(!0);
    const g = function () {
      return p;
    };
    var p =
      ((n = function (n) {
        return n.isNone();
      }),
      {
        fold (n, e) {
          return n();
        },
        is: s,
        isSome: s,
        isNone: l,
        getOr: (t = function (n) {
          return n;
        }),
        getOrThunk: (e = function (n) {
          return n();
        }),
        getOrDie (n) {
          throw new Error(n || "error: getOrDie called on none.");
        },
        getOrNull: O(null),
        getOrUndefined: O(undefined),
        or: t,
        orThunk: e,
        map: g,
        each: S,
        bind: g,
        exists: s,
        forall: l,
        filter: g,
        equals: n,
        equals_: n,
        toArray () {
          return [];
        },
        toString: O("none()"),
      });
    var h = function (t) {
      const n = O(t);
        const e = function () {
          return o;
        };
        const r = function (n) {
          return n(t);
        };
        var o = {
          fold (n, e) {
            return e(t);
          },
          is (n) {
            return t === n;
          },
          isSome: l,
          isNone: s,
          getOr: n,
          getOrThunk: n,
          getOrDie: n,
          getOrNull: n,
          getOrUndefined: n,
          or: e,
          orThunk: e,
          map (n) {
            return h(n(t));
          },
          each (n) {
            n(t);
          },
          bind: r,
          exists: r,
          forall: r,
          filter (n) {
            return n(t) ? o : p;
          },
          toArray () {
            return [t];
          },
          toString () {
            return `some(${  t  })`;
          },
          equals (n) {
            return n.is(t);
          },
          equals_ (n, e) {
            return n.fold(s, function (n) {
              return e(t, n);
            });
          },
        };
      return o;
    };
    const T = {
      some: h,
      none: g,
      from (n) {
        return n === null || n === undefined ? p : h(n);
      },
    };
    const k = Object.keys;
    const v = Object.hasOwnProperty;
    const E = function (n, e) {
      for (let t = k(n), r = 0, o = t.length; r < o; r++) {
        const i = t[r];
        e(n[i], i);
      }
    };
    const C = function (n, t) {
      return D(n, function (n, e) {
        return { k: e, v: t(n, e) };
      });
    };
    var D = function (n, r) {
      const o = {};
      return (
        E(n, function (n, e) {
          const t = r(n, e);
          o[t.k] = t.v;
        }),
        o
      );
    };
    const M = function (n, e) {
      let t;
        let r;
        let o;
        let i;
        const u = {};
      return (
        (t = e),
        (i = u),
        (r = function (n, e) {
          i[e] = n;
        }),
        (o = S),
        E(n, function (n, e) {
          (t(n, e) ? r : o)(n, e);
        }),
        u
      );
    };
    const _ = function (n, t) {
      const r = [];
      return (
        E(n, function (n, e) {
          r.push(t(n, e));
        }),
        r
      );
    };
    const I = function (n, e) {
      return F(n, e) ? T.from(n[e]) : T.none();
    };
    var F = function (n, e) {
      return v.call(n, e);
    };
    const R = function (n, e) {
      return F(n, e) && n[e] !== undefined && n[e] !== null;
    };
    const V = function (t) {
      let r;
        let o = !1;
      return function () {
        for (var n = [], e = 0; e < arguments.length; e++) n[e] = arguments[e];
        return o || ((o = !0), (r = t.apply(null, n))), r;
      };
    };
    const B = function (n, e) {
      const t = (function (n, e) {
        for (let t = 0; t < n.length; t++) {
          const r = n[t];
          if (r.test(e)) return r;
        }
        return undefined;
      })(n, e);
      if (!t) return { major: 0, minor: 0 };
      const r = function (n) {
        return Number(e.replace(t, `$${  n}`));
      };
      return j(r(1), r(2));
    };
    const A = function () {
      return j(0, 0);
    };
    var j = function (n, e) {
      return { major: n, minor: e };
    };
    const N = {
      nu: j,
      detect (n, e) {
        const t = String(e).toLowerCase();
        return n.length === 0 ? A() : B(n, t);
      },
      unknown: A,
    };
    const P = "Edge";
    const H = "Chrome";
    const z = "Opera";
    const L = "Firefox";
    const G = "Safari";
    const $ = function (n) {
      const e = n.current;
        const t = n.version;
        const r = function (n) {
          return function () {
            return e === n;
          };
        };
      return {
        current: e,
        version: t,
        isEdge: r(P),
        isChrome: r(H),
        isIE: r("IE"),
        isOpera: r(z),
        isFirefox: r(L),
        isSafari: r(G),
      };
    };
    const U = {
      unknown () {
        return $({ current: undefined, version: N.unknown() });
      },
      nu: $,
      edge: O(P),
      chrome: O(H),
      ie: O("IE"),
      opera: O(z),
      firefox: O(L),
      safari: O(G),
    };
    const W = "Windows";
    const X = "Android";
    const q = "Linux";
    const Y = "Solaris";
    const K = "FreeBSD";
    const J = "ChromeOS";
    const Q = function (n) {
      const e = n.current;
        const t = n.version;
        const r = function (n) {
          return function () {
            return e === n;
          };
        };
      return {
        current: e,
        version: t,
        isWindows: r(W),
        isiOS: r("iOS"),
        isAndroid: r(X),
        isOSX: r("OSX"),
        isLinux: r(q),
        isSolaris: r(Y),
        isFreeBSD: r(K),
        isChromeOS: r(J),
      };
    };
    const Z = {
      unknown () {
        return Q({ current: undefined, version: N.unknown() });
      },
      nu: Q,
      windows: O(W),
      ios: O("iOS"),
      android: O(X),
      linux: O(q),
      osx: O("OSX"),
      solaris: O(Y),
      freebsd: O(K),
      chromeos: O(J),
    };
    const nn = function (r) {
      return function (n) {
        return (
          (t = typeof (e = n)),
          (e === null
            ? "null"
            : t == "object" &&
              (Array.prototype.isPrototypeOf(e) ||
                (e.constructor && e.constructor.name === "Array"))
            ? "array"
            : t == "object" &&
              (String.prototype.isPrototypeOf(e) ||
                (e.constructor && e.constructor.name === "String"))
            ? "string"
            : t) === r
        );
        let e; let t;
      };
    };
    const en = function (e) {
      return function (n) {
        return typeof n === e;
      };
    };
    const tn = nn("string");
    const rn = nn("object");
    const on = nn("array");
    const un = en("boolean");
    const cn = function (n) {
      return !((e = n) === null || e === undefined);
      let e;
    };
    const an = en("function");
    const fn = en("number");
    const sn = Array.prototype.slice;
    const ln = Array.prototype.indexOf;
    const dn = Array.prototype.push;
    const mn = function (n, e) {
      return (t = n), (r = e), ln.call(t, r) > -1;
      let t; let r;
    };
    const gn = function (n, e) {
      for (let t = 0, r = n.length; t < r; t++) {
        if (e(n[t], t)) return !0;
      }
      return !1;
    };
    const pn = function (n, e) {
      for (var t = n.length, r = new Array(t), o = 0; o < t; o++) {
        const i = n[o];
        r[o] = e(i, o);
      }
      return r;
    };
    const hn = function (n, e) {
      for (let t = 0, r = n.length; t < r; t++) {
        e(n[t], t);
      }
    };
    const vn = function (n, e) {
      for (var t = [], r = 0, o = n.length; r < o; r++) {
        const i = n[r];
        e(i, r) && t.push(i);
      }
      return t;
    };
    const yn = function (n, e, t) {
      return (
        (function (n, e) {
          for (let t = n.length - 1; t >= 0; t--) {
            e(n[t], t);
          }
        })(n, function (n) {
          t = e(t, n);
        }),
        t
      );
    };
    const bn = function (n, e, t) {
      return (
        hn(n, function (n) {
          t = e(t, n);
        }),
        t
      );
    };
    const xn = function (n, e) {
      return (function (n, e, t) {
        for (let r = 0, o = n.length; r < o; r++) {
          const i = n[r];
          if (e(i, r)) return T.some(i);
          if (t(i, r)) break;
        }
        return T.none();
      })(n, e, s);
    };
    const wn = function (n, e) {
      for (let t = 0, r = n.length; t < r; t++) {
        if (e(n[t], t)) return T.some(t);
      }
      return T.none();
    };
    const Sn = function (n) {
      for (var e = [], t = 0, r = n.length; t < r; ++t) {
        if (!on(n[t]))
          throw new Error(
            `Arr.flatten item ${  t  } was not an array, input: ${  n}`
          );
        dn.apply(e, n[t]);
      }
      return e;
    };
    const On = function (n, e) {
      return Sn(pn(n, e));
    };
    const Tn = function (n, e) {
      for (let t = 0, r = n.length; t < r; ++t) {
        if (!0 !== e(n[t], t)) return !1;
      }
      return !0;
    };
    const kn = function (n) {
      const e = sn.call(n, 0);
      return e.reverse(), e;
    };
    const En = function (n, e) {
      return vn(n, function (n) {
        return !mn(e, n);
      });
    };
    const Cn = function (n) {
      return [n];
    };
    const Dn = function (n, e) {
      for (let t = 0; t < n.length; t++) {
        const r = e(n[t], t);
        if (r.isSome()) return r;
      }
      return T.none();
    };
    const Mn = function (n, e) {
      const t = String(e).toLowerCase();
      return xn(n, function (n) {
        return n.search(t);
      });
    };
    const _n = function (n, t) {
      return Mn(n, t).map(function (n) {
        const e = N.detect(n.versionRegexes, t);
        return { current: n.name, version: e };
      });
    };
    const In = function (n, t) {
      return Mn(n, t).map(function (n) {
        const e = N.detect(n.versionRegexes, t);
        return { current: n.name, version: e };
      });
    };
    const Fn = function (n, o) {
      return n.replace(/\$\{([^{}]*)\}/g, function (n, e) {
        let t;
          const r = o[e];
        return (t = typeof r) == "string" || t == "number" ? r.toString() : n;
      });
    };
    const Rn = function (n, e) {
      return n.indexOf(e) !== -1;
    };
    const Vn =
      ((r = /^\s+|\s+$/g),
      function (n) {
        return n.replace(r, "");
      });
    const Bn = /.*?version\/\ ?([0-9]+)\.([0-9]+).*/;
    const An = function (e) {
      return function (n) {
        return Rn(n, e);
      };
    };
    const jn = [
      {
        name: "Edge",
        versionRegexes: [/.*?edge\/ ?([0-9]+)\.([0-9]+)$/],
        search (n) {
          return (
            Rn(n, "edge/") &&
            Rn(n, "chrome") &&
            Rn(n, "safari") &&
            Rn(n, "applewebkit")
          );
        },
      },
      {
        name: "Chrome",
        versionRegexes: [/.*?chrome\/([0-9]+)\.([0-9]+).*/, Bn],
        search (n) {
          return Rn(n, "chrome") && !Rn(n, "chromeframe");
        },
      },
      {
        name: "IE",
        versionRegexes: [
          /.*?msie\ ?([0-9]+)\.([0-9]+).*/,
          /.*?rv:([0-9]+)\.([0-9]+).*/,
        ],
        search (n) {
          return Rn(n, "msie") || Rn(n, "trident");
        },
      },
      {
        name: "Opera",
        versionRegexes: [Bn, /.*?opera\/([0-9]+)\.([0-9]+).*/],
        search: An("opera"),
      },
      {
        name: "Firefox",
        versionRegexes: [/.*?firefox\/\ ?([0-9]+)\.([0-9]+).*/],
        search: An("firefox"),
      },
      {
        name: "Safari",
        versionRegexes: [Bn, /.*?cpu os ([0-9]+)_([0-9]+).*/],
        search (n) {
          return (Rn(n, "safari") || Rn(n, "mobile/")) && Rn(n, "applewebkit");
        },
      },
    ];
    const Nn = [
      {
        name: "Windows",
        search: An("win"),
        versionRegexes: [/.*?windows\ nt\ ?([0-9]+)\.([0-9]+).*/],
      },
      {
        name: "iOS",
        search (n) {
          return Rn(n, "iphone") || Rn(n, "ipad");
        },
        versionRegexes: [
          /.*?version\/\ ?([0-9]+)\.([0-9]+).*/,
          /.*cpu os ([0-9]+)_([0-9]+).*/,
          /.*cpu iphone os ([0-9]+)_([0-9]+).*/,
        ],
      },
      {
        name: "Android",
        search: An("android"),
        versionRegexes: [/.*?android\ ?([0-9]+)\.([0-9]+).*/],
      },
      {
        name: "OSX",
        search: An("mac os x"),
        versionRegexes: [/.*?mac\ os\ x\ ?([0-9]+)_([0-9]+).*/],
      },
      { name: "Linux", search: An("linux"), versionRegexes: [] },
      { name: "Solaris", search: An("sunos"), versionRegexes: [] },
      { name: "FreeBSD", search: An("freebsd"), versionRegexes: [] },
      {
        name: "ChromeOS",
        search: An("cros"),
        versionRegexes: [/.*?chrome\/([0-9]+)\.([0-9]+).*/],
      },
    ];
    const Pn = { browsers: O(jn), oses: O(Nn) };
    const Hn = function (n, e) {
      let t;
        let r;
        let o;
        let i;
        let u;
        let c;
        let a;
        let f;
        let s;
        let l;
        let d;
        let m;
        const g = Pn.browsers();
        const p = Pn.oses();
        const h = _n(g, n).fold(U.unknown, U.nu);
        const v = In(p, n).fold(Z.unknown, Z.nu);
      return {
        browser: h,
        os: v,
        deviceType:
          ((r = h),
          (o = n),
          (i = e),
          (u = (t = v).isiOS() && !0 === /ipad/i.test(o)),
          (c = t.isiOS() && !u),
          (a = t.isiOS() || t.isAndroid()),
          (f = a || i("(pointer:coarse)")),
          (s = u || (!c && a && i("(min-device-width:768px)"))),
          (l = c || (a && !s)),
          (d = r.isSafari() && t.isiOS() && !1 === /safari/i.test(o)),
          (m = !l && !s && !d),
          {
            isiPad: O(u),
            isiPhone: O(c),
            isTablet: O(s),
            isPhone: O(l),
            isTouch: O(f),
            isAndroid: t.isAndroid,
            isiOS: t.isiOS,
            isWebView: O(d),
            isDesktop: O(m),
          }),
      };
    };
    const zn = function (n) {
      return x.window.matchMedia(n).matches;
    };
    const Ln = V(function () {
      return Hn(x.navigator.userAgent, zn);
    });
    const Gn = function () {
      return Ln();
    };
    const $n = O("touchstart");
    const Un = O("touchmove");
    const Wn = O("touchend");
    const Xn = O("mousedown");
    const qn = O("mousemove");
    const Yn = O("mouseup");
    const Kn = O("mouseover");
    const Jn = O("keydown");
    const Qn = O("keyup");
    const Zn = O("input");
    const ne = O("change");
    const ee = O("click");
    const te = O("transitionend");
    const re = O("selectstart");
    const oe = { tap: O("alloy.tap") };
    const ie = O("alloy.focus");
    const ue = O("alloy.blur.post");
    const ce = O("alloy.paste.post");
    const ae = O("alloy.receive");
    const fe = O("alloy.execute");
    const se = O("alloy.focus.item");
    const le = oe.tap;
    const de = O("alloy.longpress");
    const me = O("alloy.system.init");
    const ge = O("alloy.system.attached");
    const pe = O("alloy.system.detached");
    const he = O("alloy.focusmanager.shifted");
    const ve = O("alloy.highlight");
    const ye = O("alloy.dehighlight");
    const be = function (n, e) {
      Oe(n, n.element(), e, {});
    };
    const xe = function (n, e, t) {
      Oe(n, n.element(), e, t);
    };
    const we = function (n) {
      be(n, fe());
    };
    const Se = function (n, e, t) {
      Oe(n, e, t, {});
    };
    var Oe = function (n, e, t, r) {
      const o = {target: e, ...r};
      n.getSystem().triggerEvent(t, e, C(o, O));
    };
    const Te = function (n) {
      if (n === null || n === undefined)
        throw new Error("Node cannot be null or undefined");
      return { dom: O(n) };
    };
    const ke = {
      fromHtml (n, e) {
        const t = (e || x.document).createElement("div");
        if (((t.innerHTML = n), !t.hasChildNodes() || t.childNodes.length > 1))
          throw (
            (x.console.error("HTML does not have a single root node", n),
            new Error("HTML must have a single root node"))
          );
        return Te(t.childNodes[0]);
      },
      fromTag (n, e) {
        const t = (e || x.document).createElement(n);
        return Te(t);
      },
      fromText (n, e) {
        const t = (e || x.document).createTextNode(n);
        return Te(t);
      },
      fromDom: Te,
      fromPoint (n, e, t) {
        const r = n.dom();
        return T.from(r.elementFromPoint(e, t)).map(Te);
      },
    };
    const Ee =
      (typeof x.window !== "undefined" ? x.window : Function("return this;")(),
      function (n) {
        return n.dom().nodeName.toLowerCase();
      });
    const Ce = function (e) {
      return function (n) {
        return n.dom().nodeType === e;
      };
    };
    const De = Ce(1);
    const Me = Ce(3);
    const _e = Ce(9);
    const Ie = Ce(11);
    const Fe = function (n, e) {
      const t = n.dom();
      if (t.nodeType !== 1) return !1;
      const r = t;
      if (r.matches !== undefined) return r.matches(e);
      if (r.msMatchesSelector !== undefined) return r.msMatchesSelector(e);
      if (r.webkitMatchesSelector !== undefined)
        return r.webkitMatchesSelector(e);
      if (r.mozMatchesSelector !== undefined) return r.mozMatchesSelector(e);
      throw new Error("Browser lacks native selectors");
    };
    const Re = function (n) {
      return (
        (n.nodeType !== 1 && n.nodeType !== 9 && n.nodeType !== 11) ||
        n.childElementCount === 0
      );
    };
    const Ve = function (n, e) {
      const t = e === undefined ? x.document : e.dom();
      return Re(t) ? [] : pn(t.querySelectorAll(n), ke.fromDom);
    };
    const Be = function (n, e) {
      const t = e === undefined ? x.document : e.dom();
      return Re(t) ? T.none() : T.from(t.querySelector(n)).map(ke.fromDom);
    };
    const Ae = function (n, e) {
      return n.dom() === e.dom();
    };
    const je = function (n) {
      return ke.fromDom(n.dom().ownerDocument);
    };
    const Ne = function (n) {
      return T.from(n.dom().parentNode).map(ke.fromDom);
    };
    const Pe = function (n) {
      return pn(n.dom().childNodes, ke.fromDom);
    };
    const He = function (n, e) {
      const t = n.dom().childNodes;
      return T.from(t[e]).map(ke.fromDom);
    };
    const ze =
      an(x.Element.prototype.attachShadow) && an(x.Node.prototype.getRootNode);
    const Le = O(ze);
    const Ge = ze
      ? function (n) {
          return ke.fromDom(n.dom().getRootNode());
        }
      : function (n) {
          return _e(n) ? n : je(n);
        };
    const $e = function (n) {
      const e = Ge(n);
      return Ie(e) ? T.some(e) : T.none();
    };
    const Ue = function (n) {
      return ke.fromDom(n.dom().host);
    };
    const We = function (n) {
      if (Le() && cn(n.target)) {
        const e = ke.fromDom(n.target);
        if (De(e) && Xe(ke.fromDom(n.target))) {
          if (n.composed && n.composedPath) {
            const t = n.composedPath();
            if (t) return (r = t).length === 0 ? T.none() : T.some(r[0]);
          }
        }
      }
      let r;
      return T.from(n.target);
    };
    var Xe = function (n) {
      return cn(n.dom().shadowRoot);
    };
    var qe = function (n) {
      let e;
        let t;
        const r = Me(n) ? n.dom().parentNode : n.dom();
      return (
        r !== undefined &&
        r !== null &&
        r.ownerDocument !== null &&
        $e(ke.fromDom(r)).fold(
          function () {
            return r.ownerDocument.body.contains(r);
          },
          ((e = qe),
          (t = Ue),
          function (n) {
            return e(t(n));
          })
        )
      );
    };
    const Ye = function () {
      return Ke(ke.fromDom(x.document));
    };
    var Ke = function (n) {
      const e = n.dom().body;
      if (e === null || e === undefined)
        throw new Error("Body is not available yet");
      return ke.fromDom(e);
    };
    const Je = function (e, t) {
      Ne(e).each(function (n) {
        n.dom().insertBefore(t.dom(), e.dom());
      });
    };
    const Qe = function (n, e) {
      let t;
      ((t = n), T.from(t.dom().nextSibling).map(ke.fromDom)).fold(
        function () {
          Ne(n).each(function (n) {
            nt(n, e);
          });
        },
        function (n) {
          Je(n, e);
        }
      );
    };
    const Ze = function (e, t) {
      He(e, 0).fold(
        function () {
          nt(e, t);
        },
        function (n) {
          e.dom().insertBefore(t.dom(), n.dom());
        }
      );
    };
    var nt = function (n, e) {
      n.dom().appendChild(e.dom());
    };
    const et = function (e, n) {
      hn(n, function (n) {
        nt(e, n);
      });
    };
    const tt = function (n) {
      (n.dom().textContent = ""),
        hn(Pe(n), function (n) {
          rt(n);
        });
    };
    var rt = function (n) {
      const e = n.dom();
      e.parentNode !== null && e.parentNode.removeChild(e);
    };
    var ot = function (n) {
      be(n, pe());
      const e = n.components();
      hn(e, ot);
    };
    var it = function (n) {
      const e = n.components();
      hn(e, it), be(n, ge());
    };
    const ut = function (n, e) {
      nt(n.element(), e.element());
    };
    const ct = function (e, n) {
      let t;
        const r = e.components();
      hn((t = e).components(), function (n) {
        return rt(n.element());
      }),
        tt(t.element()),
        t.syncComponents();
      const o = En(r, n);
      hn(o, function (n) {
        ot(n), e.getSystem().removeFromWorld(n);
      }),
        hn(n, function (n) {
          n.getSystem().isConnected()
            ? ut(e, n)
            : (e.getSystem().addToWorld(n), ut(e, n), qe(e.element()) && it(n)),
            e.syncComponents();
        });
    };
    const at = function (n, e, t) {
      n.getSystem().addToWorld(e),
        t(n.element(), e.element()),
        qe(n.element()) && it(e),
        n.syncComponents();
    };
    const ft = function (e) {
      let n;
        const t = Ne(e.element()).bind(function (n) {
          return e.getSystem().getByDom(n).toOption();
        });
      ot((n = e)),
        rt(n.element()),
        n.getSystem().removeFromWorld(n),
        t.each(function (n) {
          n.syncComponents();
        });
    };
    const st = function (n, e, t) {
      t(n, e.element());
      const r = Pe(e.element());
      hn(r, function (n) {
        e.getByDom(n).each(it);
      });
    };
    var lt = function (t) {
      return {
        is (n) {
          return t === n;
        },
        isValue: l,
        isError: s,
        getOr: O(t),
        getOrThunk: O(t),
        getOrDie: O(t),
        or (n) {
          return lt(t);
        },
        orThunk (n) {
          return lt(t);
        },
        fold (n, e) {
          return e(t);
        },
        map (n) {
          return lt(n(t));
        },
        mapError (n) {
          return lt(t);
        },
        each (n) {
          n(t);
        },
        bind (n) {
          return n(t);
        },
        exists (n) {
          return n(t);
        },
        forall (n) {
          return n(t);
        },
        toOption () {
          return T.some(t);
        },
      };
    };
    var dt = function (t) {
      return {
        is: s,
        isValue: s,
        isError: l,
        getOr: y,
        getOrThunk (n) {
          return n();
        },
        getOrDie () {
          return a(String(t))();
        },
        or (n) {
          return n;
        },
        orThunk (n) {
          return n();
        },
        fold (n, e) {
          return n(t);
        },
        map (n) {
          return dt(t);
        },
        mapError (n) {
          return dt(n(t));
        },
        each: S,
        bind (n) {
          return dt(t);
        },
        exists: s,
        forall: l,
        toOption: T.none,
      };
    };
    const mt = {
      value: lt,
      error: dt,
      fromOption (n, e) {
        return n.fold(function () {
          return dt(e);
        }, lt);
      },
    };
  ((i = o = o || {})[(i.Error = 0)] = "Error"), (i[(i.Value = 1)] = "Value");
  let gt;
    let pt;
    let ht;
    let vt;
    let yt;
    const bt = function (n, e, t) {
      return n.stype === o.Error ? e(n.serror) : t(n.svalue);
    };
    const xt = function (n) {
      return { stype: o.Value, svalue: n };
    };
    const wt = function (n) {
      return { stype: o.Error, serror: n };
    };
    const St = function (n) {
      return n.fold(wt, xt);
    };
    const Ot = function (n) {
      return bt(n, mt.error, mt.value);
    };
    const Tt = xt;
    const kt = function (n) {
      const e = [];
        const t = [];
      return (
        hn(n, function (n) {
          bt(
            n,
            function (n) {
              return t.push(n);
            },
            function (n) {
              return e.push(n);
            }
          );
        }),
        { values: e, errors: t }
      );
    };
    const Et = wt;
    const Ct = function (n, e) {
      return n.stype === o.Value ? e(n.svalue) : n;
    };
    const Dt = function (n, e) {
      return n.stype === o.Error ? e(n.serror) : n;
    };
    const Mt = function (n, e) {
      return n.stype === o.Value ? { stype: o.Value, svalue: e(n.svalue) } : n;
    };
    const _t = function (n, e) {
      return n.stype === o.Error ? { stype: o.Error, serror: e(n.serror) } : n;
    };
    const It = function (u) {
      if (!on(u)) throw new Error("cases must be an array");
      if (u.length === 0) throw new Error("there must be at least one case");
      const c = [];
        const t = {};
      return (
        hn(u, function (n, r) {
          const e = k(n);
          if (e.length !== 1) throw new Error("one and only one name per case");
          const o = e[0];
            const i = n[o];
          if (t[o] !== undefined)
            throw new Error(`duplicate key detected:${  o}`);
          if (o === "cata")
            throw new Error("cannot have a case named cata (sorry)");
          if (!on(i)) throw new Error("case arguments must be an array");
          c.push(o),
            (t[o] = function () {
              const n = arguments.length;
              if (n !== i.length)
                throw new Error(
                  `Wrong number of arguments to case ${ 
                    o 
                    }. Expected ${ 
                    i.length 
                    } (${ 
                    i 
                    }), got ${ 
                    n}`
                );
              for (var t = new Array(n), e = 0; e < t.length; e++)
                t[e] = arguments[e];
              return {
                fold () {
                  if (arguments.length !== u.length)
                    throw new Error(
                      `Wrong number of arguments to fold. Expected ${ 
                        u.length 
                        }, got ${ 
                        arguments.length}`
                    );
                  return arguments[r].apply(null, t);
                },
                match (n) {
                  const e = k(n);
                  if (c.length !== e.length)
                    throw new Error(
                      `Wrong number of arguments to match. Expected: ${ 
                        c.join(",") 
                        }\nActual: ${ 
                        e.join(",")}`
                    );
                  if (
                    !Tn(c, function (n) {
                      return mn(e, n);
                    })
                  )
                    throw new Error(
                      `Not all branches were specified when using match. Specified: ${ 
                        e.join(", ") 
                        }\nRequired: ${ 
                        c.join(", ")}`
                    );
                  return n[o].apply(null, t);
                },
                log (n) {
                  x.console.log(n, {
                    constructors: c,
                    constructor: o,
                    params: t,
                  });
                },
              };
            });
        }),
        t
      );
    };
    const Ft = Object.prototype.hasOwnProperty;
    const Rt = function (u) {
      return function () {
        for (var n = new Array(arguments.length), e = 0; e < n.length; e++)
          n[e] = arguments[e];
        if (n.length === 0) throw new Error("Can't merge zero objects");
        for (var t = {}, r = 0; r < n.length; r++) {
          const o = n[r];
          for (const i in o) Ft.call(o, i) && (t[i] = u(t[i], o[i]));
        }
        return t;
      };
    };
    var Vt = Rt(function (n, e) {
      return rn(n) && rn(e) ? Vt(n, e) : e;
    });
    const Bt = Rt(function (n, e) {
      return e;
    });
    const At = It([
      { strict: [] },
      { defaultedThunk: ["fallbackThunk"] },
      { asOption: [] },
      { asDefaultedOptionThunk: ["fallbackThunk"] },
      { mergeWithThunk: ["baseThunk"] },
    ]);
    const jt = function (n) {
      return At.defaultedThunk(O(n));
    };
    const Nt = At.strict;
    const Pt = At.asOption;
    const Ht = At.defaultedThunk;
    const zt = (At.asDefaultedOptionThunk, At.mergeWithThunk);
    const Lt = function (n, e) {
      let t;
      return ((t = {})[n] = e), t;
    };
    const Gt =
      (It([
        { bothErrors: ["error1", "error2"] },
        { firstError: ["error1", "value2"] },
        { secondError: ["value1", "error2"] },
        { bothValues: ["value1", "value2"] },
      ]),
      function (n, e) {
        return (
          (t = e),
          (r = {}),
          E(n, function (n, e) {
            mn(t, e) || (r[e] = n);
          }),
          r
        );
        let t; let r;
      });
    const $t = function (n, e) {
      return Lt(n, e);
    };
    const Ut = function (n) {
      return (
        (e = {}),
        hn(n, function (n) {
          e[n.key] = n.value;
        }),
        e
      );
      let e;
    };
    const Wt = function (n, e) {
      let t;
        let r;
        let o;
        let i;
        let u;
        const c =
          ((t = []),
          (r = []),
          hn(n, function (n) {
            n.fold(
              function (n) {
                t.push(n);
              },
              function (n) {
                r.push(n);
              }
            );
          }),
          { errors: t, values: r });
      return c.errors.length > 0
        ? ((u = c.errors), mt.error(Sn(u)))
        : ((i = e),
          (o = c.values).length === 0
            ? mt.value(i)
            : mt.value(Vt(i, Bt.apply(undefined, o))));
    };
    const Xt = function (n) {
      return d(Et, Sn)(n);
    };
    const qt = function (n, e) {
      let t;
        let r;
        const o = kt(n);
      return o.errors.length > 0
        ? Xt(o.errors)
        : ((t = o.values),
          (r = e),
          t.length > 0 ? Tt(Vt(r, Bt.apply(undefined, t))) : Tt(r));
    };
    const Yt = function (n) {
      const e = kt(n);
      return e.errors.length > 0 ? Xt(e.errors) : Tt(e.values);
    };
    const Kt = function (n) {
      return rn(n) && k(n).length > 100
        ? " removed due to size"
        : JSON.stringify(n, null, 2);
    };
    const Jt = function (n, e) {
      return Et([{ path: n, getErrorInfo: e }]);
    };
    const Qt = It([
      { field: ["key", "okey", "presence", "prop"] },
      { state: ["okey", "instantiator"] },
    ]);
    const Zt = function (t, r, o) {
      return I(r, o).fold(function () {
        return (
          (n = o),
          (e = r),
          Jt(t, function () {
            return (
              `Could not find valid *strict* value for "${  n  }" in ${  Kt(e)}`
            );
          })
        );
        let n; let e;
      }, Tt);
    };
    const nr = function (n, e, t) {
      const r = I(n, e).fold(function () {
        return t(n);
      }, y);
      return Tt(r);
    };
    const er = function (c, a, n, f) {
      return n.fold(
        function (o, t, n, r) {
          const i = function (n) {
              const e = r.extract(c.concat([o]), f, n);
              return Mt(e, function (n) {
                return Lt(t, f(n));
              });
            };
            const u = function (n) {
              return n.fold(
                function () {
                  const n = Lt(t, f(T.none()));
                  return Tt(n);
                },
                function (n) {
                  const e = r.extract(c.concat([o]), f, n);
                  return Mt(e, function (n) {
                    return Lt(t, f(T.some(n)));
                  });
                }
              );
            };
          return n.fold(
            function () {
              return Ct(Zt(c, a, o), i);
            },
            function (n) {
              return Ct(nr(a, o, n), i);
            },
            function () {
              return Ct(Tt(I(a, o)), u);
            },
            function (n) {
              return Ct(
                ((t = n),
                (r = I((e = a), o).map(function (n) {
                  return !0 === n ? t(e) : n;
                })),
                Tt(r)),
                u
              );
              let e; let t; let r;
            },
            function (n) {
              const e = n(a);
                const t = Mt(nr(a, o, O({})), function (n) {
                  return Vt(e, n);
                });
              return Ct(t, i);
            }
          );
        },
        function (n, e) {
          const t = e(a);
          return Tt(Lt(n, f(t)));
        }
      );
    };
    const tr = function (r) {
      return {
        extract (t, n, e) {
          return Dt(r(e, n), function (n) {
            return (
              (e = n),
              Jt(t, function () {
                return e;
              })
            );
            let e;
          });
        },
        toString () {
          return "val";
        },
      };
    };
    const rr = function (n) {
      const u = or(n);
        const c = yn(
          n,
          function (e, n) {
            return n.fold(function (n) {
              return Vt(e, $t(n, !0));
            }, O(e));
          },
          {}
        );
      return {
        extract (n, e, t) {
          let r;
            const o = un(t)
              ? []
              : k(
                  M(t, function (n) {
                    return n !== undefined && n !== null;
                  })
                );
            const i = vn(o, function (n) {
              return !R(c, n);
            });
          return i.length === 0
            ? u.extract(n, e, t)
            : ((r = i),
              Jt(n, function () {
                return (
                  `There are unsupported fields: [${ 
                  r.join(", ") 
                  }] specified`
                );
              }));
        },
        toString: u.toString,
      };
    };
    var or = function (c) {
      return {
        extract (n, e, t) {
          return (
            (r = n),
            (o = t),
            (i = e),
            (u = pn(c, function (n) {
              return er(r, o, n, i);
            })),
            qt(u, {})
          );
          let r; let o; let i; let u;
        },
        toString () {
          return (
            `obj{\n${ 
            pn(c, function (n) {
              return n.fold(
                function (n, e, t, r) {
                  return `${n  } -> ${  r.toString()}`;
                },
                function (n, e) {
                  return `state(${  n  })`;
                }
              );
            }).join("\n") 
            }}`
          );
        },
      };
    };
    const ir = function (t, i) {
      const u = function (n, e) {
        return (
          (o = tr(t)),
          (function (t, r, n) {
            const e = pn(n, function (n, e) {
              return o.extract(t.concat([`[${  e  }]`]), r, n);
            });
            return Yt(e);
          })(n, y, e)
        );
        let o;
      };
      return {
        extract (t, r, o) {
          const n = k(o);
            const e = u(t, n);
          return Ct(e, function (n) {
            const e = pn(n, function (n) {
              return Qt.field(n, n, Nt(), i);
            });
            return or(e).extract(t, r, o);
          });
        },
        toString () {
          return `setOf(${  i.toString()  })`;
        },
      };
    };
    const ur = O(tr(Tt));
    const cr = Qt.state;
    const ar = Qt.field;
    const fr = function (t, e, r, o, i) {
      return I(o, i).fold(
        function () {
          return (
            (n = o),
            (e = i),
            Jt(t, function () {
              return (
                `The chosen schema: "${ 
                e 
                }" did not exist in branches: ${ 
                Kt(n)}`
              );
            })
          );
          let n; let e;
        },
        function (n) {
          return n.extract(t.concat([`branch: ${  i}`]), e, r);
        }
      );
    };
    const sr = function (o, i) {
      return {
        extract (e, t, r) {
          return I(r, o).fold(
            function () {
              return (
                (n = o),
                Jt(e, function () {
                  return (
                    `Choice schema did not contain choice key: "${  n  }"`
                  );
                })
              );
              let n;
            },
            function (n) {
              return fr(e, t, r, i, n);
            }
          );
        },
        toString () {
          return `chooseOn(${  o  }). Possible values: ${  k(i)}`;
        },
      };
    };
    const lr = tr(Tt);
    const dr = function (e) {
      return tr(function (n) {
        return e(n).fold(Et, Tt);
      });
    };
    const mr = function (e, n) {
      return ir(function (n) {
        return St(e(n));
      }, n);
    };
    const gr = function (n, e, t) {
      return Ot(
        ((r = n),
        (o = y),
        (i = t),
        (u = e.extract([r], o, i)),
        _t(u, function (n) {
          return { input: i, errors: n };
        }))
      );
      let r; let o; let i; let u;
    };
    const pr = function (n) {
      return n.fold(function (n) {
        throw new Error(vr(n));
      }, y);
    };
    const hr = function (n, e, t) {
      return pr(gr(n, e, t));
    };
    var vr = function (n) {
      return (
        `Errors: \n${ 
        (e = n.errors),
        (t =
          e.length > 10
            ? e.slice(0, 10).concat([
                {
                  path: [],
                  getErrorInfo () {
                    return "... (only showing first ten failures)";
                  },
                },
              ])
            : e),
        pn(t, function (n) {
          return (
            `Failed path: (${  n.path.join(" > ")  })\n${  n.getErrorInfo()}`
          );
        }).join("\n") 
        }\n\nInput object: ${ 
        Kt(n.input)}`
      );
      let e; let t;
    };
    const yr = function (n, e) {
      return sr(n, C(e, or));
    };
    const br = O(lr);
    const xr =
      ((gt = an),
      (pt = "function"),
      tr(function (n) {
        const e = typeof n;
        return gt(n) ? Tt(n) : Et(`Expected type: ${  pt  } but got: ${  e}`);
      }));
    const wr = function (n) {
      return ar(n, n, Nt(), ur());
    };
    const Sr = function (n, e) {
      return ar(n, n, Nt(), e);
    };
    const Or = function (n, e) {
      return ar(n, n, Nt(), or(e));
    };
    const Tr = function (n) {
      return ar(n, n, Pt(), ur());
    };
    const kr = function (n, e) {
      return ar(n, n, Pt(), e);
    };
    const Er = function (n, e) {
      return kr(n, or(e));
    };
    const Cr = function (n, e) {
      return kr(n, rr(e));
    };
    const Dr = function (n, e) {
      return ar(n, n, jt(e), ur());
    };
    const Mr = function (n, e, t) {
      return ar(n, n, jt(e), t);
    };
    const _r = function (n, e) {
      return cr(n, e);
    };
    const Ir = function (n) {
      return an(n) ? n : O(!1);
    };
    const Fr = function (n, e, t) {
      const r = e(n);
        const o = Ir(t);
      return r.orThunk(function () {
        return o(n)
          ? T.none()
          : (function (n, e, t) {
              for (let r = n.dom(), o = Ir(t); r.parentNode; ) {
                r = r.parentNode;
                const i = ke.fromDom(r);
                  const u = e(i);
                if (u.isSome()) return u;
                if (o(i)) break;
              }
              return T.none();
            })(n, e, o);
      });
    };
    const Rr = function (n, e) {
      return Ae(n.element(), e.event().target());
    };
    const Vr = function (n) {
      if (!R(n, "can") && !R(n, "abort") && !R(n, "run"))
        throw new Error(
          `EventHandler defined by: ${ 
            JSON.stringify(n, null, 2) 
            } does not have can, abort, or run!`
        );
      return hr(
        "Extracting event.handler",
        rr([Dr("can", O(!0)), Dr("abort", O(!1)), Dr("run", S)]),
        n
      );
    };
    const Br = function (t) {
      let e;
        let r;
        let o;
        let i;
        const n =
          ((r = function (n) {
            return n.can;
          }),
          function () {
            for (var t = [], n = 0; n < arguments.length; n++)
              t[n] = arguments[n];
            return bn(
              e,
              function (n, e) {
                return n && r(e).apply(undefined, t);
              },
              !0
            );
          });
        const u =
          ((o = e = t),
          (i = function (n) {
            return n.abort;
          }),
          function () {
            for (var t = [], n = 0; n < arguments.length; n++)
              t[n] = arguments[n];
            return bn(
              o,
              function (n, e) {
                return n || i(e).apply(undefined, t);
              },
              !1
            );
          });
      return Vr({
        can: n,
        abort: u,
        run () {
          for (var e = [], n = 0; n < arguments.length; n++)
            e[n] = arguments[n];
          hn(t, function (n) {
            n.run.apply(undefined, e);
          });
        },
      });
    };
    const Ar = function (n) {
      return Ut(n);
    };
    const jr = function (n, e) {
      return { key: n, value: Vr({ abort: e }) };
    };
    const Nr = function (n, e) {
      return { key: n, value: Vr({ run: e }) };
    };
    const Pr = function (n, t, r) {
      return {
        key: n,
        value: Vr({
          run (n, e) {
            t.apply(undefined, [n, e].concat(r));
          },
        }),
      };
    };
    const Hr = function (n) {
      return function (t) {
        return {
          key: n,
          value: Vr({
            run (n, e) {
              Rr(n, e) && t(n, e);
            },
          }),
        };
      };
    };
    const zr = function (u, e) {
      return Nr(u, function (n, i) {
        n.getSystem()
          .getByUid(e)
          .each(function (n) {
            let e; let t; let r; let o;
            (t = (e = n).element()),
              (r = u),
              (o = i),
              e.getSystem().triggerEvent(r, t, o.event());
          });
      });
    };
    const Lr = function (n, e, t) {
      const r = e.partUids[t];
      return zr(n, r);
    };
    const Gr = function (n) {
      return Nr(n, function (n, e) {
        e.cut();
      });
    };
    const $r = Hr(ge());
    const Ur = Hr(pe());
    const Wr = Hr(me());
    const Xr =
      ((ht = fe()),
      function (n) {
        return Nr(ht, n);
      });
    const qr = function (n) {
      return pn(n, function (n) {
        return (
          (r = e = "/*"),
          (o = (t = n).length - e.length),
          r === "" || (t.length >= r.length && t.substr(o, o + r.length) === r)
            ? n.substring(0, n.length - "/*".length)
            : n
        );
        let e; let t; let r; let o;
      });
    };
    const Yr = function (n, e) {
      const t = n.toString();
        const r = t.indexOf(")") + 1;
        const o = t.indexOf("(");
        const i = t.substring(o + 1, r - 1).split(/,\s*/);
      return (
        (n.toFunctionAnnotation = function () {
          return { name: e, parameters: qr(i) };
        }),
        n
      );
    };
    const Kr = function (n) {
      return {
        classes: n.classes !== undefined ? n.classes : [],
        attributes: n.attributes !== undefined ? n.attributes : {},
        styles: n.styles !== undefined ? n.styles : {},
      };
    };
    const Jr = function (t, r, o) {
      return Wr(function (n, e) {
        o(n, t, r);
      });
    };
    const Qr = function (o, i, u) {
      let n; let e; let t; let r; let c; let a;
      return (
        (n = function (t) {
          for (var n = [], e = 1; e < arguments.length; e++)
            n[e - 1] = arguments[e];
          const r = [t].concat(n);
          return t.config({ name: O(o) }).fold(
            function () {
              throw new Error(
                `We could not find any behaviour configuration for: ${ 
                  o 
                  }. Using API: ${ 
                  u}`
              );
            },
            function (n) {
              const e = Array.prototype.slice.call(r, 1);
              return i.apply(undefined, [t, n.config, n.state].concat(e));
            }
          );
        }),
        (e = u),
        (t = i.toString()),
        (r = t.indexOf(")") + 1),
        (c = t.indexOf("(")),
        (a = t.substring(c + 1, r - 1).split(/,\s*/)),
        (n.toFunctionAnnotation = function () {
          return { name: e, parameters: qr(a.slice(0, 1).concat(a.slice(3))) };
        }),
        n
      );
    };
    const Zr = function (n) {
      return { key: n, value: undefined };
    };
    const no = function (t, n, r, o, e, i, u) {
      const c = function (n) {
          return R(n, r) ? n[r]() : T.none();
        };
        const a = C(e, function (n, e) {
          return Qr(r, n, e);
        });
        const f = C(i, function (n, e) {
          return Yr(n, e);
        });
        var s = {...f, ...a, revoke: b(Zr, r),
          config (n) {
            const e = hr(`${r  }-config`, t, n);
            return {
              key: r,
              value: {
                config: e,
                me: s,
                configAsRaw: V(function () {
                  return hr(`${r  }-config`, t, n);
                }),
                initialConfig: n,
                state: u,
              },
            };
          },
          schema () {
            return n;
          },
          exhibit (n, t) {
            return c(n)
              .bind(function (e) {
                return I(o, "exhibit").map(function (n) {
                  return n(t, e.config, e.state);
                });
              })
              .getOr(Kr({}));
          },
          name () {
            return r;
          },
          handlers (n) {
            return c(n)
              .map(function (n) {
                return I(o, "events").getOr(function () {
                  return {};
                })(n.config, n.state);
              })
              .getOr({});
          },};
      return s;
    };
    const eo = {
      init () {
        return to({
          readState () {
            return "No State required";
          },
        });
      },
    };
    var to = function (n) {
      return n;
    };
    const ro = function (n) {
      return Ut(n);
    };
    const oo = rr([
      wr("fields"),
      wr("name"),
      Dr("active", {}),
      Dr("apis", {}),
      Dr("state", eo),
      Dr("extra", {}),
    ]);
    const io = function (n) {
      let e;
        let t;
        let r;
        let o;
        let i;
        let u;
        let c;
        let a;
        const f = hr(`Creating behaviour: ${  n.name}`, oo, n);
      return (
        (e = f.fields),
        (t = f.name),
        (r = f.active),
        (o = f.apis),
        (i = f.extra),
        (u = f.state),
        (c = rr(e)),
        (a = Er(t, [Cr("config", e)])),
        no(c, a, t, r, o, i, u)
      );
    };
    const uo = rr([
      wr("branchKey"),
      wr("branches"),
      wr("name"),
      Dr("active", {}),
      Dr("apis", {}),
      Dr("state", eo),
      Dr("extra", {}),
    ]);
    const co = O(undefined);
    const ao = function (n, e, t) {
      if (!(tn(t) || un(t) || fn(t)))
        throw (
          (x.console.error(
            "Invalid call to Attr.set. Key ",
            e,
            ":: Value ",
            t,
            ":: Element ",
            n
          ),
          new Error("Attribute value was not simple"))
        );
      n.setAttribute(e, `${t  }`);
    };
    const fo = function (n, e, t) {
      ao(n.dom(), e, t);
    };
    const so = function (n, e) {
      const t = n.dom();
      E(e, function (n, e) {
        ao(t, e, n);
      });
    };
    const lo = function (n, e) {
      const t = n.dom().getAttribute(e);
      return t === null ? undefined : t;
    };
    const mo = function (n, e) {
      return T.from(lo(n, e));
    };
    const go = function (n, e) {
      const t = n.dom();
      return !(!t || !t.hasAttribute) && t.hasAttribute(e);
    };
    const po = function (n, e) {
      n.dom().removeAttribute(e);
    };
    const ho = function (n, e) {
      const t = lo(n, e);
      return t === undefined || t === "" ? [] : t.split(" ");
    };
    const vo = function (n) {
      return n.dom().classList !== undefined;
    };
    const yo = function (n, e) {
      return (
        (o = e),
        (i = ho((t = n), (r = "class")).concat([o])),
        fo(t, r, i.join(" ")),
        !0
      );
      let t; let r; let o; let i;
    };
    const bo = function (n, e) {
      return (
        (o = e),
        (i = vn(ho((t = n), (r = "class")), function (n) {
          return n !== o;
        })).length >
        0
          ? fo(t, r, i.join(" "))
          : po(t, r),
        !1
      );
      let t; let r; let o; let i;
    };
    const xo = function (n, e) {
      vo(n) ? n.dom().classList.add(e) : yo(n, e);
    };
    const wo = function (n) {
      (vo(n) ? n.dom().classList : ho(n, "class")).length === 0 &&
        po(n, "class");
    };
    const So = function (n, e) {
      vo(n) ? n.dom().classList.remove(e) : bo(n, e);
      wo(n);
    };
    const Oo = function (n, e) {
      return vo(n) && n.dom().classList.contains(e);
    };
    const To = function (n, e, t) {
      So(n, t), xo(n, e);
    };
    const ko = /* */ Object.freeze({
      __proto__: null,
      toAlpha (n, e, t) {
        To(n.element(), e.alpha, e.omega);
      },
      toOmega (n, e, t) {
        To(n.element(), e.omega, e.alpha);
      },
      isAlpha (n, e, t) {
        return Oo(n.element(), e.alpha);
      },
      isOmega (n, e, t) {
        return Oo(n.element(), e.omega);
      },
      clear (n, e, t) {
        So(n.element(), e.alpha), So(n.element(), e.omega);
      },
    });
    const Eo = [wr("alpha"), wr("omega")];
    const Co = io({ fields: Eo, name: "swapping", apis: ko });
    const Do = function (n) {
      let e = n;
      return {
        get () {
          return e;
        },
        set (n) {
          e = n;
        },
      };
    };
    const Mo = function (n) {
      return n.dom().focus();
    };
    const _o = function (n) {
      return n.dom().blur();
    };
    const Io = function (n) {
      return (
        void 0 === n && (n = ke.fromDom(x.document)),
        T.from(n.dom().activeElement).map(ke.fromDom)
      );
    };
    const Fo = function (e) {
      return Io(Ge(e)).filter(function (n) {
        return e.dom().contains(n.dom());
      });
    };
    const Ro = tinymce.util.Tools.resolve("tinymce.dom.DOMUtils");
    const Vo = tinymce.util.Tools.resolve("tinymce.ThemeManager");
    const Bo = [
      {
        title: "Headings",
        items: [
          { title: "Heading 1", format: "h1" },
          { title: "Heading 2", format: "h2" },
          { title: "Heading 3", format: "h3" },
          { title: "Heading 4", format: "h4" },
          { title: "Heading 5", format: "h5" },
          { title: "Heading 6", format: "h6" },
        ],
      },
      {
        title: "Inline",
        items: [
          { title: "Bold", icon: "bold", format: "bold" },
          { title: "Italic", icon: "italic", format: "italic" },
          { title: "Underline", icon: "underline", format: "underline" },
          {
            title: "Strikethrough",
            icon: "strikethrough",
            format: "strikethrough",
          },
          { title: "Superscript", icon: "superscript", format: "superscript" },
          { title: "Subscript", icon: "subscript", format: "subscript" },
          { title: "Code", icon: "code", format: "code" },
        ],
      },
      {
        title: "Blocks",
        items: [
          { title: "Paragraph", format: "p" },
          { title: "Blockquote", format: "blockquote" },
          { title: "Div", format: "div" },
          { title: "Pre", format: "pre" },
        ],
      },
      {
        title: "Alignment",
        items: [
          { title: "Left", icon: "alignleft", format: "alignleft" },
          { title: "Center", icon: "aligncenter", format: "aligncenter" },
          { title: "Right", icon: "alignright", format: "alignright" },
          { title: "Justify", icon: "alignjustify", format: "alignjustify" },
        ],
      },
    ];
    const Ao = ["undo", "bold", "italic", "link", "image", "bullist", "styleselect"];
    const jo = "formatChanged";
    const No = "orientationChanged";
    const Po = "dropupDismissed";
    const Ho = function (n) {
      return n.dom().innerHTML;
    };
    const zo = function (n, e) {
      let t;
        let r;
        const o = je(n).dom();
        const i = ke.fromDom(o.createDocumentFragment());
        const u =
          ((t = e),
          ((r = (o || x.document).createElement("div")).innerHTML = t),
          Pe(ke.fromDom(r)));
      et(i, u), tt(n), nt(n, i);
    };
    const Lo = function (n) {
      return (e = n), (t = !1), ke.fromDom(e.dom().cloneNode(t));
      let e; let t;
    };
    const Go = function (n) {
      let e;
        let t;
        let r;
        const o = Lo(n);
      return (
        (e = o),
        (t = ke.fromTag("div")),
        (r = ke.fromDom(e.dom().cloneNode(!0))),
        nt(t, r),
        Ho(t)
      );
    };
    const $o = function (n) {
      return Go(n);
    };
    const Uo = /* */ Object.freeze({
      __proto__: null,
      events (a) {
        return Ar([
          Nr(ae(), function (o, n) {
            let e;
              let t;
              const i = a.channels;
              const r = k(i);
              const u = n;
              const c =
                ((e = r),
                (t = u).universal()
                  ? e
                  : vn(e, function (n) {
                      return mn(t.channels(), n);
                    }));
            hn(c, function (n) {
              const e = i[n];
                const t = e.schema;
                const r = hr(
                  `channel[${  n  }] data\nReceiver: ${  $o(o.element())}`,
                  t,
                  u.data()
                );
              e.onReceive(o, r);
            });
          }),
        ]);
      },
    });
    const Wo = "unknown";
  ((yt = vt = vt || {})[(yt.STOP = 0)] = "STOP"),
    (yt[(yt.NORMAL = 1)] = "NORMAL"),
    (yt[(yt.LOGGING = 2)] = "LOGGING");
  let Xo;
    const qo = Do({});
    const Yo = function (e, n, t) {
      let r; let o; let i; let u;
      switch (
        I(qo.get(), e)
          .orThunk(function () {
            const n = k(qo.get());
            return Dn(n, function (n) {
              return e.indexOf(n) > -1 ? T.some(qo.get()[n]) : T.none();
            });
          })
          .getOr(vt.NORMAL)
      ) {
        case vt.NORMAL:
          return t(Qo());
        case vt.LOGGING:
          var c =
              ((r = e),
              (o = n),
              (i = []),
              (u = new Date().getTime()),
              {
                logEventCut (n, e, t) {
                  i.push({ outcome: "cut", target: e, purpose: t });
                },
                logEventStopped (n, e, t) {
                  i.push({ outcome: "stopped", target: e, purpose: t });
                },
                logNoParent (n, e, t) {
                  i.push({ outcome: "no-parent", target: e, purpose: t });
                },
                logEventNoHandlers (n, e) {
                  i.push({ outcome: "no-handlers-left", target: e });
                },
                logEventResponse (n, e, t) {
                  i.push({ outcome: "response", purpose: t, target: e });
                },
                write () {
                  const n = new Date().getTime();
                  mn(["mousemove", "mouseover", "mouseout", me()], r) ||
                    x.console.log(r, {
                      event: r,
                      time: n - u,
                      target: o.dom(),
                      sequence: pn(i, function (n) {
                        return mn(["cut", "stopped", "response"], n.outcome)
                          ? `{${ 
                              n.purpose 
                              }} ${ 
                              n.outcome 
                              } at (${ 
                              $o(n.target) 
                              })`
                          : n.outcome;
                      }),
                    });
                },
              });
            var a = t(c);
          return c.write(), a;
        case vt.STOP:
          return !0;
      }
    };
    const Ko = ["alloy/data/Fields", "alloy/debugging/Debugging"];
    const Jo = function (n, e, t) {
      return Yo(n, e, t);
    };
    var Qo = O({
      logEventCut: S,
      logEventStopped: S,
      logNoParent: S,
      logEventNoHandlers: S,
      logEventResponse: S,
      write: S,
    });
    const Zo = O([wr("menu"), wr("selectedMenu")]);
    const ni = O([wr("item"), wr("selectedItem")]);
    const ei = (O(or(ni().concat(Zo()))), O(or(ni())));
    const ti = Or("initSize", [wr("numColumns"), wr("numRows")]);
    const ri = function (n, e, t) {
      !(function () {
        const n = new Error();
        if (n.stack === undefined) return;
        const e = n.stack.split("\n");
        xn(e, function (e) {
          return (
            e.indexOf("alloy") > 0 &&
            !gn(Ko, function (n) {
              return e.indexOf(n) > -1;
            })
          );
        }).getOr(Wo);
      })();
      return ar(
        e,
        e,
        t,
        dr(function (t) {
          return mt.value(function () {
            for (var n = [], e = 0; e < arguments.length; e++)
              n[e] = arguments[e];
            return t.apply(undefined, n);
          });
        })
      );
    };
    const oi = function (n) {
      return ri(0, n, jt(S));
    };
    const ii = function (n) {
      return ri(0, n, jt(T.none));
    };
    const ui = function (n) {
      return ri(0, n, Nt());
    };
    const ci = function (n) {
      return ri(0, n, Nt());
    };
    const ai = function (n, e) {
      return _r(n, O(e));
    };
    const fi = function (n) {
      return _r(n, y);
    };
    const si = O(ti);
    const li = [
      Sr("channels", mr(mt.value, rr([ui("onReceive"), Dr("schema", br())]))),
    ];
    const di = io({ fields: li, name: "receiving", active: Uo });
    const mi = function (n, e, t) {
      const r = e.aria;
      r.update(n, r, t.get());
    };
    const gi = function (e, n, t) {
      n.toggleClass.each(function (n) {
        (t.get() ? xo : So)(e.element(), n);
      });
    };
    const pi = function (n, e, t) {
      yi(n, e, t, !t.get());
    };
    const hi = function (n, e, t) {
      t.set(!0), gi(n, e, t), mi(n, e, t);
    };
    const vi = function (n, e, t) {
      t.set(!1), gi(n, e, t), mi(n, e, t);
    };
    var yi = function (n, e, t, r) {
      (r ? hi : vi)(n, e, t);
    };
    const bi = function (n, e, t) {
      yi(n, e, t, e.selected);
    };
    const xi = /* */ Object.freeze({
      __proto__: null,
      onLoad: bi,
      toggle: pi,
      isOn (n, e, t) {
        return t.get();
      },
      on: hi,
      off: vi,
      set: yi,
    });
    const wi = /* */ Object.freeze({
      __proto__: null,
      exhibit () {
        return Kr({});
      },
      events (n, e) {
        let t;
          let r;
          let o;
          const i =
            ((t = n),
            (r = e),
            (o = pi),
            Xr(function (n) {
              o(n, t, r);
            }));
          const u = Jr(n, e, bi);
        return Ar(Sn([n.toggleOnExecute ? [i] : [], [u]]));
      },
    });
    const Si = function (n, e, t) {
      fo(n.element(), "aria-expanded", t);
    };
    const Oi = [
      Dr("selected", !1),
      Tr("toggleClass"),
      Dr("toggleOnExecute", !0),
      Mr(
        "aria",
        { mode: "none" },
        yr("mode", {
          pressed: [
            Dr("syncWithExpanded", !1),
            ai("update", function (n, e, t) {
              fo(n.element(), "aria-pressed", t),
                e.syncWithExpanded && Si(n, e, t);
            }),
          ],
          checked: [
            ai("update", function (n, e, t) {
              fo(n.element(), "aria-checked", t);
            }),
          ],
          expanded: [ai("update", Si)],
          selected: [
            ai("update", function (n, e, t) {
              fo(n.element(), "aria-selected", t);
            }),
          ],
          none: [ai("update", S)],
        })
      ),
    ];
    const Ti = io({
      fields: Oi,
      name: "toggling",
      active: wi,
      apis: xi,
      state:
        ((Xo = !1),
        {
          init () {
            const e = Do(Xo);
            return {
              get () {
                return e.get();
              },
              set (n) {
                return e.set(n);
              },
              clear () {
                return e.set(Xo);
              },
              readState () {
                return e.get();
              },
            };
          },
        }),
    });
    const ki = function (t, r) {
      return di.config({
        channels: $t(jo, {
          onReceive (n, e) {
            e.command === t && r(n, e.state);
          },
        }),
      });
    };
    const Ei = function (n) {
      return di.config({ channels: $t(No, { onReceive: n }) });
    };
    const Ci = function (n, e) {
      return { key: n, value: { onReceive: e } };
    };
    const Di = "tinymce-mobile";
    const Mi = function (n) {
      return `${Di  }-${  n}`;
    };
    const _i = function () {
      const n = function (n, e) {
        e.stop(), we(n);
      };
      return [Nr(ee(), n), Nr(le(), n), Gr($n()), Gr(Xn())];
    };
    const Ii = function (n, e) {
      e.ignore || (Mo(n.element()), e.onFocus(n));
    };
    const Fi = /* */ Object.freeze({
      __proto__: null,
      focus: Ii,
      blur (n, e) {
        e.ignore || _o(n.element());
      },
      isFocused (n) {
        return (
          (e = n.element()), (t = Ge(e).dom()), e.dom() === t.activeElement
        );
        let e; let t;
      },
    });
    const Ri = /* */ Object.freeze({
      __proto__: null,
      exhibit (n, e) {
        const t = e.ignore ? {} : { attributes: { tabindex: "-1" } };
        return Kr(t);
      },
      events (t) {
        return Ar(
          [
            Nr(ie(), function (n, e) {
              Ii(n, t), e.stop();
            }),
          ].concat(
            t.stopMousedown
              ? [
                  Nr(Xn(), function (n, e) {
                    e.event().prevent();
                  }),
                ]
              : []
          )
        );
      },
    });
    const Vi = [oi("onFocus"), Dr("stopMousedown", !1), Dr("ignore", !1)];
    const Bi = io({ fields: Vi, name: "focusing", active: Ri, apis: Fi });
    const Ai = function (n) {
      return n.style !== undefined && an(n.style.getPropertyValue);
    };
    const ji = function (n, e, t) {
      if (!tn(t))
        throw (
          (x.console.error(
            "Invalid call to CSS.set. Property ",
            e,
            ":: Value ",
            t,
            ":: Element ",
            n
          ),
          new Error(`CSS value must be a string: ${  t}`))
        );
      Ai(n) && n.style.setProperty(e, t);
    };
    const Ni = function (n, e, t) {
      const r = n.dom();
      ji(r, e, t);
    };
    const Pi = function (n, e) {
      const t = n.dom();
      E(e, function (n, e) {
        ji(t, e, n);
      });
    };
    const Hi = function (n, e) {
      const t = n.dom();
        const r = x.window.getComputedStyle(t).getPropertyValue(e);
      return r !== "" || qe(n) ? r : zi(t, e);
    };
    var zi = function (n, e) {
      return Ai(n) ? n.style.getPropertyValue(e) : "";
    };
    const Li = function (n, e) {
      const t = n.dom();
        const r = zi(t, e);
      return T.from(r).filter(function (n) {
        return n.length > 0;
      });
    };
    const Gi = function (n, e) {
      let t;
        let r;
        const o = n.dom();
      (r = e),
        Ai((t = o)) && t.style.removeProperty(r),
        mo(n, "style").map(Vn).is("") && po(n, "style");
    };
    const $i = function (n) {
      return n.dom().offsetWidth;
    };
  function Ui(r, o) {
    const n = function (n) {
        const e = o(n);
        if (e <= 0 || e === null) {
          const t = Hi(n, r);
          return parseFloat(t) || 0;
        }
        return e;
      };
      const i = function (o, n) {
        return bn(
          n,
          function (n, e) {
            const t = Hi(o, e);
              const r = t === undefined ? 0 : parseInt(t, 10);
            return isNaN(r) ? n : n + r;
          },
          0
        );
      };
    return {
      set (n, e) {
        if (!fn(e) && !e.match(/^[0-9]+$/))
          throw new Error(
            `${r  }.set accepts only positive integer values. Value was ${  e}`
          );
        const t = n.dom();
        Ai(t) && (t.style[r] = `${e  }px`);
      },
      get: n,
      getOuter: n,
      aggregate: i,
      max (n, e, t) {
        const r = i(n, t);
        return r < e ? e - r : 0;
      },
    };
  }
  const Wi = Ui("height", function (n) {
      const e = n.dom();
      return qe(n) ? e.getBoundingClientRect().height : e.offsetHeight;
    });
    const Xi = function (n) {
      return Wi.get(n);
    };
    const qi = function (n, e, t) {
      return vn(
        (function (n, e) {
          for (
            var t = an(e) ? e : s, r = n.dom(), o = [];
            r.parentNode !== null && r.parentNode !== undefined;

          ) {
            const i = r.parentNode;
              const u = ke.fromDom(i);
            if ((o.push(u), !0 === t(u))) break;
            r = i;
          }
          return o;
        })(n, t),
        e
      );
    };
    const Yi = function (n, e) {
      return vn(
        Ne((t = n))
          .map(Pe)
          .map(function (n) {
            return vn(n, function (n) {
              return !Ae(t, n);
            });
          })
          .getOr([]),
        e
      );
      let t;
    };
    const Ki = function (n, e) {
      return Ve(e, n);
    };
  function Ji(n, e, t, r, o) {
    return n(t, r) ? T.some(t) : an(o) && o(t) ? T.none() : e(t, r, o);
  }
  let Qi;
    let Zi;
    const nu = function (n, e, t) {
      for (let r = n.dom(), o = an(t) ? t : O(!1); r.parentNode; ) {
        r = r.parentNode;
        const i = ke.fromDom(r);
        if (e(i)) return T.some(i);
        if (o(i)) break;
      }
      return T.none();
    };
    const eu = function (n) {
      return Be(n);
    };
    const tu = function (n, e, t) {
      return nu(
        n,
        function (n) {
          return Fe(n, e);
        },
        t
      );
    };
    const ru = function (n, e) {
      return Be(e, n);
    };
    const ou = function (n, e, t) {
      return Ji(
        function (n, e) {
          return Fe(n, e);
        },
        tu,
        n,
        e,
        t
      );
    };
    const iu = function () {
      return [13];
    };
    const uu = function () {
      return [27];
    };
    const cu = function () {
      return [32];
    };
    const au = function () {
      return [37];
    };
    const fu = function () {
      return [38];
    };
    const su = function () {
      return [39];
    };
    const lu = function () {
      return [40];
    };
    const du = function (n, e, t) {
      const r = kn(n.slice(0, e));
        const o = kn(n.slice(e + 1));
      return xn(r.concat(o), t);
    };
    const mu = function (n, e, t) {
      const r = kn(n.slice(0, e));
      return xn(r, t);
    };
    const gu = function (n, e, t) {
      const r = n.slice(0, e);
        const o = n.slice(e + 1);
      return xn(o.concat(r), t);
    };
    const pu = function (n, e, t) {
      const r = n.slice(e + 1);
      return xn(r, t);
    };
    const hu = function (t) {
      return function (n) {
        const e = n.raw();
        return mn(t, e.which);
      };
    };
    const vu = function (n) {
      return function (e) {
        return Tn(n, function (n) {
          return n(e);
        });
      };
    };
    const yu = function (n) {
      return !0 === n.raw().shiftKey;
    };
    const bu = function (n) {
      return !0 === n.raw().ctrlKey;
    };
    const xu = m(yu);
    const wu = function (n, e) {
      return { matches: n, classification: e };
    };
    const Su = function (n) {
      for (
        var e = [],
          t = function (n) {
            e.push(n);
          },
          r = 0;
        r < n.length;
        r++
      )
        n[r].each(t);
      return e;
    };
    const Ou = function (n, e, t, r) {
      const o = n + e;
      return r < o ? t : o < t ? r : o;
    };
    const Tu = function (n, e, t) {
      return Math.min(Math.max(n, e), t);
    };
    const ku = function (t, r, n, o) {
      const e = Ki(t.element(), `.${  r.highlightClass}`);
      hn(e, function (e) {
        gn(o, function (n) {
          return n.element() === e;
        }) ||
          (So(e, r.highlightClass),
          t
            .getSystem()
            .getByDom(e)
            .each(function (n) {
              r.onDehighlight(t, n), be(n, ye());
            }));
      });
    };
    const Eu = function (n, e, t, r) {
      ku(n, e, 0, [r]),
        Cu(n, e, t, r) ||
          (xo(r.element(), e.highlightClass), e.onHighlight(n, r), be(r, ve()));
    };
    var Cu = function (n, e, t, r) {
      return Oo(r.element(), e.highlightClass);
    };
    const Du = function (n, e, t, r) {
      const o = Ki(n.element(), `.${  e.itemClass}`);
      return T.from(o[r]).fold(function () {
        return mt.error(`No element found with index ${  r}`);
      }, n.getSystem().getByDom);
    };
    const Mu = function (e, n, t) {
      return ru(e.element(), `.${  n.itemClass}`).bind(function (n) {
        return e.getSystem().getByDom(n).toOption();
      });
    };
    const _u = function (e, n, t) {
      const r = Ki(e.element(), `.${  n.itemClass}`);
      return (r.length > 0 ? T.some(r[r.length - 1]) : T.none()).bind(function (
        n
      ) {
        return e.getSystem().getByDom(n).toOption();
      });
    };
    const Iu = function (t, e, n, r) {
      const o = Ki(t.element(), `.${  e.itemClass}`);
      return wn(o, function (n) {
        return Oo(n, e.highlightClass);
      }).bind(function (n) {
        const e = Ou(n, r, 0, o.length - 1);
        return t.getSystem().getByDom(o[e]).toOption();
      });
    };
    const Fu = function (e, n, t) {
      const r = Ki(e.element(), `.${  n.itemClass}`);
      return Su(
        pn(r, function (n) {
          return e.getSystem().getByDom(n).toOption();
        })
      );
    };
    const Ru = /* */ Object.freeze({
      __proto__: null,
      dehighlightAll (n, e, t) {
        return ku(n, e, 0, []);
      },
      dehighlight (n, e, t, r) {
        Cu(n, e, t, r) &&
          (So(r.element(), e.highlightClass),
          e.onDehighlight(n, r),
          be(r, ye()));
      },
      highlight: Eu,
      highlightFirst (e, t, r) {
        Mu(e, t).each(function (n) {
          Eu(e, t, r, n);
        });
      },
      highlightLast (e, t, r) {
        _u(e, t).each(function (n) {
          Eu(e, t, r, n);
        });
      },
      highlightAt (e, t, r, n) {
        Du(e, t, r, n).fold(
          function (n) {
            throw new Error(n);
          },
          function (n) {
            Eu(e, t, r, n);
          }
        );
      },
      highlightBy (e, t, r, n) {
        const o = Fu(e, t);
        xn(o, n).each(function (n) {
          Eu(e, t, r, n);
        });
      },
      isHighlighted: Cu,
      getHighlighted (e, n, t) {
        return ru(e.element(), `.${  n.highlightClass}`).bind(function (n) {
          return e.getSystem().getByDom(n).toOption();
        });
      },
      getFirst: Mu,
      getLast: _u,
      getPrevious (n, e, t) {
        return Iu(n, e, 0, -1);
      },
      getNext (n, e, t) {
        return Iu(n, e, 0, 1);
      },
      getCandidates: Fu,
    });
    const Vu = [
      wr("highlightClass"),
      wr("itemClass"),
      oi("onHighlight"),
      oi("onDehighlight"),
    ];
    const Bu = io({ fields: Vu, name: "highlighting", apis: Ru });
    const Au = function (n, e, t) {
      e.exists(function (e) {
        return t.exists(function (n) {
          return Ae(n, e);
        });
      }) || xe(n, he(), { prevFocus: e, newFocus: t });
    };
    const ju = function () {
      const o = function (n) {
        return Fo(n.element());
      };
      return {
        get: o,
        set (n, e) {
          const t = o(n);
          n.getSystem().triggerFocus(e, n.element());
          const r = o(n);
          Au(n, t, r);
        },
      };
    };
  ((Zi = Qi = Qi || {}).OnFocusMode = "onFocus"),
    (Zi.OnEnterOrSpaceMode = "onEnterOrSpace"),
    (Zi.OnApiMode = "onApi");
  let Nu;
    let Pu;
    let Hu;
    let zu;
    let Lu;
    let Gu;
    let $u;
    let Uu;
    let Wu;
    let Xu;
    const qu = function (n, e, t, r, c) {
      const a = function (e, t, n, r, o) {
          let i;
            let u;
            const c = n(e, t, r, o);
          return (
            (i = c),
            (u = t.event()),
            xn(i, function (n) {
              return n.matches(u);
            })
              .map(function (n) {
                return n.classification;
              })
              .bind(function (n) {
                return n(e, t, r, o);
              })
          );
        };
        var o = {
          schema () {
            return n.concat([
              Dr("focusManager", ju()),
              Mr(
                "focusInside",
                "onFocus",
                dr(function (n) {
                  return mn(["onFocus", "onEnterOrSpace", "onApi"], n)
                    ? mt.value(n)
                    : mt.error("Invalid value for focusInside");
                })
              ),
              ai("handler", o),
              ai("state", e),
              ai("sendFocusIn", c),
            ]);
          },
          processKey: a,
          toEvents (i, u) {
            const n =
                i.focusInside !== Qi.OnFocusMode
                  ? T.none()
                  : c(i).map(function (t) {
                      return Nr(ie(), function (n, e) {
                        t(n, i, u), e.stop();
                      });
                    });
              const e = [
                Nr(Jn(), function (r, o) {
                  a(r, o, t, i, u).fold(
                    function () {
                      let e; let t; let n;
                      (e = r),
                        (t = o),
                        (n = hu(cu().concat(iu()))(t.event())),
                        i.focusInside === Qi.OnEnterOrSpaceMode &&
                          n &&
                          Rr(e, t) &&
                          c(i).each(function (n) {
                            n(e, i, u), t.stop();
                          });
                    },
                    function (n) {
                      o.stop();
                    }
                  );
                }),
                Nr(Qn(), function (n, e) {
                  a(n, e, r, i, u).each(function (n) {
                    e.stop();
                  });
                }),
              ];
            return Ar(n.toArray().concat(e));
          },
        };
      return o;
    };
    const Yu = function (n) {
      const e = [
          Tr("onEscape"),
          Tr("onEnter"),
          Dr("selector", '[data-alloy-tabstop="true"]:not(:disabled)'),
          Dr("firstTabstop", 0),
          Dr("useTabstopAt", O(!0)),
          Tr("visibilitySelector"),
        ].concat([n]);
        const u = function (n, e) {
          const t = n.visibilitySelector
            .bind(function (n) {
              return ou(e, n);
            })
            .getOr(e);
          return Xi(t) > 0;
        };
        const t = function (e, t, n) {
          let r; let o; let i;
          (r = t),
            (o = Ki(e.element(), r.selector)),
            (i = vn(o, function (n) {
              return u(r, n);
            })),
            T.from(i[r.firstTabstop]).each(function (n) {
              t.focusManager.set(e, n);
            });
        };
        const c = function (e, n, t, r, o) {
          return o(n, t, function (n) {
            return u((e = r), (t = n)) && e.useTabstopAt(t);
            let e; let t;
          }).fold(
            function () {
              return r.cyclic ? T.some(!0) : T.none();
            },
            function (n) {
              return r.focusManager.set(e, n), T.some(!0);
            }
          );
        };
        const o = function (e, n, t, r) {
          let o;
            let i;
            const u = Ki(e.element(), t.selector);
          return (
            (o = e),
            (i = t).focusManager
              .get(o)
              .bind(function (n) {
                return ou(n, i.selector);
              })
              .bind(function (n) {
                return wn(u, b(Ae, n)).bind(function (n) {
                  return c(e, u, n, t, r);
                });
              })
          );
        };
        const r = O([
          wu(vu([yu, hu([9])]), function (n, e, t) {
            const r = t.cyclic ? du : mu;
            return o(n, 0, t, r);
          }),
          wu(hu([9]), function (n, e, t) {
            const r = t.cyclic ? gu : pu;
            return o(n, 0, t, r);
          }),
          wu(hu(uu()), function (e, t, n) {
            return n.onEscape.bind(function (n) {
              return n(e, t);
            });
          }),
          wu(vu([xu, hu(iu())]), function (e, t, n) {
            return n.onEnter.bind(function (n) {
              return n(e, t);
            });
          }),
        ]);
        const i = O([]);
      return qu(e, eo.init, r, i, function () {
        return T.some(t);
      });
    };
    const Ku = Yu(_r("cyclic", O(!1)));
    const Ju = Yu(_r("cyclic", O(!0)));
    const Qu = function (n) {
      return (
        (Ee(n) === "input" && lo(n, "type") !== "radio") || Ee(n) === "textarea"
      );
    };
    const Zu = function (n, e, t) {
      return Qu(t) && hu(cu())(e.event())
        ? T.none()
        : (Se(n, t, fe()), T.some(!0));
    };
    const nc = function (n, e) {
      return T.some(!0);
    };
    const ec = [
      Dr("execute", Zu),
      Dr("useSpace", !1),
      Dr("useEnter", !0),
      Dr("useControlEnter", !1),
      Dr("useDown", !1),
    ];
    const tc = function (n, e, t) {
      return t.execute(n, e, n.element());
    };
    const rc = qu(
      ec,
      eo.init,
      function (n, e, t, r) {
        const o = t.useSpace && !Qu(n.element()) ? cu() : [];
          const i = t.useEnter ? iu() : [];
          const u = t.useDown ? lu() : [];
          const c = o.concat(i).concat(u);
        return [wu(hu(c), tc)].concat(
          t.useControlEnter ? [wu(vu([bu, hu(iu())]), tc)] : []
        );
      },
      function (n, e, t, r) {
        return t.useSpace && !Qu(n.element()) ? [wu(hu(cu()), nc)] : [];
      },
      function () {
        return T.none();
      }
    );
    const oc = function () {
      const t = Do(T.none());
      return to({
        readState () {
          return t
            .get()
            .map(function (n) {
              return {
                numRows: String(n.numRows),
                numColumns: String(n.numColumns),
              };
            })
            .getOr({ numRows: "?", numColumns: "?" });
        },
        setGridSize (n, e) {
          t.set(T.some({ numRows: n, numColumns: e }));
        },
        getNumRows () {
          return t.get().map(function (n) {
            return n.numRows;
          });
        },
        getNumColumns () {
          return t.get().map(function (n) {
            return n.numColumns;
          });
        },
      });
    };
    const ic = /* */ Object.freeze({
      __proto__: null,
      flatgrid: oc,
      init (n) {
        return n.state(n);
      },
    });
    const uc = function (e, t) {
      return function (n) {
        return cc(n) === "rtl" ? t : e;
      };
    };
    var cc = function (n) {
      return Hi(n, "direction") === "rtl" ? "rtl" : "ltr";
    };
    const ac = function (i) {
      return function (n, e, t, r) {
        const o = i(n.element());
        return dc(o, n, e, t, r);
      };
    };
    const fc = function (n, e) {
      const t = uc(n, e);
      return ac(t);
    };
    const sc = function (n, e) {
      const t = uc(e, n);
      return ac(t);
    };
    const lc = function (o) {
      return function (n, e, t, r) {
        return dc(o, n, e, t, r);
      };
    };
    var dc = function (e, t, n, r, o) {
      return r.focusManager
        .get(t)
        .bind(function (n) {
          return e(t.element(), n, r, o);
        })
        .map(function (n) {
          return r.focusManager.set(t, n), !0;
        });
    };
    const mc = lc;
    const gc = lc;
    const pc = lc;
    const hc = function (n) {
      return !((e = n.dom()).offsetWidth <= 0 && e.offsetHeight <= 0);
      let e;
    };
    const vc = function (n, e, t) {
      let r;
        const o = Ki(n, t);
        const i = vn(o, hc);
      return wn((r = i), function (n) {
        return Ae(n, e);
      }).map(function (n) {
        return { index: O(n), candidates: O(r) };
      });
    };
    const yc = function (n, e) {
      return wn(n, function (n) {
        return Ae(e, n);
      });
    };
    const bc = function (t, n, r, e) {
      return e(Math.floor(n / r), n % r).bind(function (n) {
        const e = n.row() * r + n.column();
        return e >= 0 && e < t.length ? T.some(t[e]) : T.none();
      });
    };
    const xc = function (o, n, i, u, c) {
      return bc(o, n, u, function (n, e) {
        const t = n === i - 1 ? o.length - n * u : u;
          const r = Ou(e, c, 0, t - 1);
        return T.some({ row: O(n), column: O(r) });
      });
    };
    const wc = function (i, n, u, c, a) {
      return bc(i, n, c, function (n, e) {
        const t = Ou(n, a, 0, u - 1);
          const r = t === u - 1 ? i.length - t * c : c;
          const o = Tu(e, 0, r - 1);
        return T.some({ row: O(t), column: O(o) });
      });
    };
    const Sc = [
      wr("selector"),
      Dr("execute", Zu),
      ii("onEscape"),
      Dr("captureTab", !1),
      si(),
    ];
    const Oc = function (e, t, n) {
      ru(e.element(), t.selector).each(function (n) {
        t.focusManager.set(e, n);
      });
    };
    const Tc = function (o) {
      return function (n, e, t, r) {
        return vc(n, e, t.selector).bind(function (n) {
          return o(
            n.candidates(),
            n.index(),
            r.getNumRows().getOr(t.initSize.numRows),
            r.getNumColumns().getOr(t.initSize.numColumns)
          );
        });
      };
    };
    const kc = function (n, e, t) {
      return t.captureTab ? T.some(!0) : T.none();
    };
    const Ec = Tc(function (n, e, t, r) {
      return xc(n, e, t, r, -1);
    });
    const Cc = Tc(function (n, e, t, r) {
      return xc(n, e, t, r, 1);
    });
    const Dc = Tc(function (n, e, t, r) {
      return wc(n, e, t, r, -1);
    });
    const Mc = Tc(function (n, e, t, r) {
      return wc(n, e, t, r, 1);
    });
    const _c = O([
      wu(hu(au()), fc(Ec, Cc)),
      wu(hu(su()), sc(Ec, Cc)),
      wu(hu(fu()), mc(Dc)),
      wu(hu(lu()), gc(Mc)),
      wu(vu([yu, hu([9])]), kc),
      wu(vu([xu, hu([9])]), kc),
      wu(hu(uu()), function (n, e, t) {
        return t.onEscape(n, e);
      }),
      wu(hu(cu().concat(iu())), function (e, t, r, n) {
        return (
          (o = e),
          (i = r).focusManager
            .get(o)
            .bind(function (n) {
              return ou(n, i.selector);
            })
            .bind(function (n) {
              return r.execute(e, t, n);
            })
        );
        let o; let i;
      }),
    ]);
    const Ic = O([wu(hu(cu()), nc)]);
    const Fc = qu(Sc, oc, _c, Ic, function () {
      return T.some(Oc);
    });
    const Rc = function (n, e, t, i) {
      var u = function (n, e, t) {
        let r;
          const o = Ou(e, i, 0, t.length - 1);
        return o === n
          ? T.none()
          : ((r = t[o]),
            Ee(r) === "button" && lo(r, "disabled") === "disabled"
              ? u(n, o, t)
              : T.from(t[o]));
      };
      return vc(n, t, e).bind(function (n) {
        const e = n.index();
          const t = n.candidates();
        return u(e, e, t);
      });
    };
    const Vc = [
      wr("selector"),
      Dr("getInitial", T.none),
      Dr("execute", Zu),
      ii("onEscape"),
      Dr("executeOnMove", !1),
      Dr("allowVertical", !0),
    ];
    const Bc = function (e, t, r) {
      return (
        (n = e),
        (o = r).focusManager
          .get(n)
          .bind(function (n) {
            return ou(n, o.selector);
          })
          .bind(function (n) {
            return r.execute(e, t, n);
          })
      );
      let n; let o;
    };
    const Ac = function (e, t, n) {
      t.getInitial(e)
        .orThunk(function () {
          return ru(e.element(), t.selector);
        })
        .each(function (n) {
          t.focusManager.set(e, n);
        });
    };
    const jc = function (n, e, t) {
      return Rc(n, t.selector, e, -1);
    };
    const Nc = function (n, e, t) {
      return Rc(n, t.selector, e, 1);
    };
    const Pc = function (o) {
      return function (n, e, t, r) {
        return o(n, e, t, r).bind(function () {
          return t.executeOnMove ? Bc(n, e, t) : T.some(!0);
        });
      };
    };
    const Hc = function (n, e, t) {
      return t.onEscape(n, e);
    };
    const zc = O([wu(hu(cu()), nc)]);
    const Lc = qu(
      Vc,
      eo.init,
      function (n, e, t, r) {
        const o = au().concat(t.allowVertical ? fu() : []);
          const i = su().concat(t.allowVertical ? lu() : []);
        return [
          wu(hu(o), Pc(fc(jc, Nc))),
          wu(hu(i), Pc(sc(jc, Nc))),
          wu(hu(iu()), Bc),
          wu(hu(cu()), Bc),
          wu(hu(uu()), Hc),
        ];
      },
      zc,
      function () {
        return T.some(Ac);
      }
    );
    const Gc = function (n, e, t) {
      return T.from(n[e]).bind(function (n) {
        return T.from(n[t]).map(function (n) {
          return { rowIndex: e, columnIndex: t, cell: n };
        });
      });
    };
    const $c = function (n, e, t, r) {
      const o = n[e].length;
        const i = Ou(t, r, 0, o - 1);
      return Gc(n, e, i);
    };
    const Uc = function (n, e, t, r) {
      const o = Ou(t, r, 0, n.length - 1);
        const i = n[o].length;
        const u = Tu(e, 0, i - 1);
      return Gc(n, o, u);
    };
    const Wc = function (n, e, t, r) {
      const o = n[e].length;
        const i = Tu(t + r, 0, o - 1);
      return Gc(n, e, i);
    };
    const Xc = function (n, e, t, r) {
      const o = Tu(t + r, 0, n.length - 1);
        const i = n[o].length;
        const u = Tu(e, 0, i - 1);
      return Gc(n, o, u);
    };
    const qc = [
      Or("selectors", [wr("row"), wr("cell")]),
      Dr("cycles", !0),
      Dr("previousSelector", T.none),
      Dr("execute", Zu),
    ];
    const Yc = function (e, t, n) {
      t.previousSelector(e)
        .orThunk(function () {
          const n = t.selectors;
          return ru(e.element(), n.cell);
        })
        .each(function (n) {
          t.focusManager.set(e, n);
        });
    };
    const Kc = function (n, e) {
      return function (t, r, i) {
        const u = i.cycles ? n : e;
        return ou(r, i.selectors.row).bind(function (n) {
          const e = Ki(n, i.selectors.cell);
          return yc(e, r).bind(function (r) {
            const o = Ki(t, i.selectors.row);
            return yc(o, n).bind(function (n) {
              let e;
                const t =
                  ((e = i),
                  pn(o, function (n) {
                    return Ki(n, e.selectors.cell);
                  }));
              return u(t, n, r).map(function (n) {
                return n.cell;
              });
            });
          });
        });
      };
    };
    const Jc = Kc(
      function (n, e, t) {
        return $c(n, e, t, -1);
      },
      function (n, e, t) {
        return Wc(n, e, t, -1);
      }
    );
    const Qc = Kc(
      function (n, e, t) {
        return $c(n, e, t, 1);
      },
      function (n, e, t) {
        return Wc(n, e, t, 1);
      }
    );
    const Zc = Kc(
      function (n, e, t) {
        return Uc(n, t, e, -1);
      },
      function (n, e, t) {
        return Xc(n, t, e, -1);
      }
    );
    const na = Kc(
      function (n, e, t) {
        return Uc(n, t, e, 1);
      },
      function (n, e, t) {
        return Xc(n, t, e, 1);
      }
    );
    const ea = O([
      wu(hu(au()), fc(Jc, Qc)),
      wu(hu(su()), sc(Jc, Qc)),
      wu(hu(fu()), mc(Zc)),
      wu(hu(lu()), gc(na)),
      wu(hu(cu().concat(iu())), function (e, t, r) {
        return Fo(e.element()).bind(function (n) {
          return r.execute(e, t, n);
        });
      }),
    ]);
    const ta = O([wu(hu(cu()), nc)]);
    const ra = qu(qc, eo.init, ea, ta, function () {
      return T.some(Yc);
    });
    const oa = [wr("selector"), Dr("execute", Zu), Dr("moveOnTab", !1)];
    const ia = function (e, t, r) {
      return r.focusManager.get(e).bind(function (n) {
        return r.execute(e, t, n);
      });
    };
    const ua = function (e, t, n) {
      ru(e.element(), t.selector).each(function (n) {
        t.focusManager.set(e, n);
      });
    };
    const ca = function (n, e, t) {
      return Rc(n, t.selector, e, -1);
    };
    const aa = function (n, e, t) {
      return Rc(n, t.selector, e, 1);
    };
    const fa = O([
      wu(hu(fu()), pc(ca)),
      wu(hu(lu()), pc(aa)),
      wu(vu([yu, hu([9])]), function (n, e, t, r) {
        return t.moveOnTab ? pc(ca)(n, e, t, r) : T.none();
      }),
      wu(vu([xu, hu([9])]), function (n, e, t, r) {
        return t.moveOnTab ? pc(aa)(n, e, t, r) : T.none();
      }),
      wu(hu(iu()), ia),
      wu(hu(cu()), ia),
    ]);
    const sa = O([wu(hu(cu()), nc)]);
    const la = qu(oa, eo.init, fa, sa, function () {
      return T.some(ua);
    });
    const da = [
      ii("onSpace"),
      ii("onEnter"),
      ii("onShiftEnter"),
      ii("onLeft"),
      ii("onRight"),
      ii("onTab"),
      ii("onShiftTab"),
      ii("onUp"),
      ii("onDown"),
      ii("onEscape"),
      Dr("stopSpaceKeyup", !1),
      Tr("focusIn"),
    ];
    const ma = qu(
      da,
      eo.init,
      function (n, e, t) {
        return [
          wu(hu(cu()), t.onSpace),
          wu(vu([xu, hu(iu())]), t.onEnter),
          wu(vu([yu, hu(iu())]), t.onShiftEnter),
          wu(vu([yu, hu([9])]), t.onShiftTab),
          wu(vu([xu, hu([9])]), t.onTab),
          wu(hu(fu()), t.onUp),
          wu(hu(lu()), t.onDown),
          wu(hu(au()), t.onLeft),
          wu(hu(su()), t.onRight),
          wu(hu(cu()), t.onSpace),
          wu(hu(uu()), t.onEscape),
        ];
      },
      function (n, e, t) {
        return t.stopSpaceKeyup ? [wu(hu(cu()), nc)] : [];
      },
      function (n) {
        return n.focusIn;
      }
    );
    const ga = Ku.schema();
    const pa = Ju.schema();
    const ha = Lc.schema();
    const va = Fc.schema();
    const ya = ra.schema();
    const ba = rc.schema();
    const xa = la.schema();
    const wa = ma.schema();
    const Sa =
      ((Xu = hr(
        `Creating behaviour: ${ 
          (Nu = {
            branchKey: "mode",
            branches: /* */ Object.freeze({
              __proto__: null,
              acyclic: ga,
              cyclic: pa,
              flow: ha,
              flatgrid: va,
              matrix: ya,
              execution: ba,
              menu: xa,
              special: wa,
            }),
            name: "keying",
            active: {
              events (n, e) {
                return n.handler.toEvents(n, e);
              },
            },
            apis: {
              focusIn (e, t, r) {
                t.sendFocusIn(t).fold(
                  function () {
                    e.getSystem().triggerFocus(e.element(), e.element());
                  },
                  function (n) {
                    n(e, t, r);
                  }
                );
              },
              setGridSize (n, e, t, r, o) {
                R(t, "setGridSize")
                  ? t.setGridSize(r, o)
                  : x.console.error("Layout does not support setGridSize");
              },
            },
            state: ic,
          }).name}`,
        uo,
        Nu
      )),
      (Pu = yr(Xu.branchKey, Xu.branches)),
      (Hu = Xu.name),
      (zu = Xu.active),
      (Lu = Xu.apis),
      (Gu = Xu.extra),
      ($u = Xu.state),
      (Wu = Er(Hu, [kr("config", (Uu = Pu))])),
      no(Uu, Wu, Hu, zu, Lu, Gu, $u));
    const Oa = function (r, n) {
      return (
        (e = r),
        (t = {}),
        (o = pn(n, function (n) {
          return (
            (e = n.name()),
            (t = `Cannot configure ${  n.name()  } for ${  r}`),
            ar(
              e,
              e,
              Pt(),
              tr(function (n) {
                return Et(`The field: ${  e  } is forbidden. ${  t}`);
              })
            )
          );
          let e; let t;
        }).concat([_r("dump", y)])),
        Mr(e, t, or(o))
      );
      let e; let t; let o;
    };
    const Ta = function (n) {
      return n.dump;
    };
    const ka = function (n, e) {
      return {...n.dump, ...ro(e)};
    };
    const Ea = Oa;
    const Ca = ka;
    const Da = "placeholder";
    const Ma = It([
      { single: ["required", "valueThunk"] },
      { multiple: ["required", "valueThunks"] },
    ]);
    const _a = function (n) {
      return F(n, "uiType");
    };
    const Ia = function (n, e, t, r) {
      return _a(t) && t.uiType === Da
        ? ((i = t),
          (u = r),
          (o = n).exists(function (n) {
            return n !== i.owner;
          })
            ? Ma.single(!0, O(i))
            : I(u, i.name).fold(
                function () {
                  throw new Error(
                    `Unknown placeholder component: ${ 
                      i.name 
                      }\nKnown: [${ 
                      k(u) 
                      }]\nNamespace: ${ 
                      o.getOr("none") 
                      }\nSpec: ${ 
                      JSON.stringify(i, null, 2)}`
                  );
                },
                function (n) {
                  return n.replace();
                }
              ))
        : Ma.single(!1, O(t));
      let o; let i; let u;
    };
    var Fa = function (i, u, c, a) {
      return Ia(i, 0, c, a).fold(
        function (n, e) {
          const t = _a(c) ? e(u, c.config, c.validated) : e(u);
            const r = I(t, "components").getOr([]);
            const o = On(r, function (n) {
              return Fa(i, u, n, a);
            });
          return [{...t, components: o}];
        },
        function (n, e) {
          if (_a(c)) {
            const t = e(u, c.config, c.validated);
            return c.validated.preprocess.getOr(y)(t);
          }
          return e(u);
        }
      );
    };
    const Ra = function (e, t, n, r) {
      let o;
        let i;
        let u;
        const c = C(r, function (n, e) {
          return (
            (r = n),
            (o = !1),
            {
              name: O((t = e)),
              required () {
                return r.fold(
                  function (n, e) {
                    return n;
                  },
                  function (n, e) {
                    return n;
                  }
                );
              },
              used () {
                return o;
              },
              replace () {
                if (o)
                  throw new Error(
                    `Trying to use the same placeholder more than once: ${  t}`
                  );
                return (o = !0), r;
              },
            }
          );
          let t; let r; let o;
        });
        const a =
          ((o = e),
          (i = t),
          (u = c),
          On(n, function (n) {
            return Fa(o, i, n, u);
          }));
      return (
        E(c, function (n) {
          if (!1 === n.used() && n.required())
            throw new Error(
              `Placeholder: ${ 
                n.name() 
                } was not found in components list\nNamespace: ${ 
                e.getOr("none") 
                }\nComponents: ${ 
                JSON.stringify(t.components, null, 2)}`
            );
        }),
        a
      );
    };
    const Va = Ma.single;
    const Ba = Ma.multiple;
    const Aa = O(Da);
    let ja = 0;
    const Na = function (n) {
      const e = new Date().getTime();
      return `${n  }_${  Math.floor(1e9 * Math.random())  }${++ja  }${String(e)}`;
    };
    const Pa = It([
      { required: ["data"] },
      { external: ["data"] },
      { optional: ["data"] },
      { group: ["data"] },
    ]);
    const Ha = Dr("factory", { sketch: y });
    const za = Dr("schema", []);
    const La = wr("name");
    const Ga = ar(
      "pname",
      "pname",
      Ht(function (n) {
        return `<alloy.${  Na(n.name)  }>`;
      }),
      br()
    );
    const $a = _r("schema", function () {
      return [Tr("preprocess")];
    });
    const Ua = Dr("defaults", O({}));
    const Wa = Dr("overrides", O({}));
    const Xa = or([Ha, za, La, Ga, Ua, Wa]);
    const qa = or([Ha, za, La, Ua, Wa]);
    const Ya = or([Ha, za, La, Ga, Ua, Wa]);
    const Ka = or([Ha, $a, La, wr("unit"), Ga, Ua, Wa]);
    const Ja = function (n) {
      const e = function (n) {
        return n.name;
      };
      return n.fold(e, e, e, e);
    };
    const Qa = function (t, r) {
      return function (n) {
        const e = hr("Converting part type", r, n);
        return t(e);
      };
    };
    const Za = Qa(Pa.required, Xa);
    const nf = (Qa(Pa.external, qa), Qa(Pa.optional, Ya));
    const ef = Qa(Pa.group, Ka);
    const tf = O("entirety");
    const rf = function (n, e, t, r) {
      return Vt(
        e.defaults(n, t, r),
        t,
        { uid: n.partUids[e.name] },
        e.overrides(n, t, r)
      );
    };
    const of = function (o, n) {
      const e = {};
      return (
        hn(n, function (n) {
          n.fold(T.some, T.none, T.some, T.some).each(function (t) {
            const r = uf(o, t.pname);
            e[t.name] = function (n) {
              const e = hr(`Part: ${  t.name  } in ${  o}`, or(t.schema), n);
              return {...r, config: n, validated: e};
            };
          });
        }),
        e
      );
    };
    var uf = function (n, e) {
      return { uiType: Aa(), owner: n, name: e };
    };
    const cf = function (n, e, t) {
      return (
        (r = e),
        (i = {}),
        (o = {}),
        hn(t, function (n) {
          n.fold(
            function (r) {
              i[r.pname] = Va(!0, function (n, e, t) {
                return r.factory.sketch(rf(n, r, e, t));
              });
            },
            function (n) {
              const e = r.parts[n.name];
              o[n.name] = O(n.factory.sketch(rf(r, n, e[tf()]), e));
            },
            function (r) {
              i[r.pname] = Va(!1, function (n, e, t) {
                return r.factory.sketch(rf(n, r, e, t));
              });
            },
            function (o) {
              i[o.pname] = Ba(!0, function (e, n, t) {
                const r = e[o.name];
                return pn(r, function (n) {
                  return o.factory.sketch(
                    Vt(o.defaults(e, n, t), n, o.overrides(e, n))
                  );
                });
              });
            }
          );
        }),
        { internals: O(i), externals: O(o) }
      );
      let r; let i; let o;
    };
    const af = function (n, e, t) {
      return Ra(T.some(n), e, e.components, t);
    };
    const ff = function (n, e, t) {
      const r = e.partUids[t];
      return n.getSystem().getByUid(r).toOption();
    };
    const sf = function (n, e, t) {
      return ff(n, e, t).getOrDie(`Could not find part: ${  t}`);
    };
    const lf = function (e, n) {
      const t = pn(n, Ja);
      return Ut(
        pn(t, function (n) {
          return { key: n, value: `${e  }-${  n}` };
        })
      );
    };
    const df = function (e) {
      return ar(
        "partUids",
        "partUids",
        zt(function (n) {
          return lf(n.uid, e);
        }),
        br()
      );
    };
    const mf = Na("alloy-premade");
    const gf = function (n) {
      return $t(mf, n);
    };
    const pf = function (r) {
      return (
        (n = function (n) {
          for (var e = [], t = 1; t < arguments.length; t++)
            e[t - 1] = arguments[t];
          return r.apply(void 0, u([n.getApis(), n], e));
        }),
        (e = r.toString()),
        (t = e.indexOf(")") + 1),
        (o = e.indexOf("(")),
        (i = e.substring(o + 1, t - 1).split(/,\s*/)),
        (n.toFunctionAnnotation = function () {
          return { name: "OVERRIDE", parameters: qr(i.slice(1)) };
        }),
        n
      );
      let n; let e; let t; let o; let i;
    };
    const hf = O("alloy-id-");
    const vf = O("data-alloy-id");
    const yf = hf();
    const bf = vf();
    const xf = function (n, e) {
      Object.defineProperty(n.dom(), bf, { value: e, writable: !0 });
    };
    const wf = function (n) {
      const e = De(n) ? n.dom()[bf] : null;
      return T.from(e);
    };
    const Sf = function (n) {
      return Na(n);
    };
    const Of = function (n, e, t, r, o) {
      let i;
        let u;
        const c =
          ((u = o),
          ((i = r).length > 0 ? [Or("parts", i)] : [])
            .concat([
              wr("uid"),
              Dr("dom", {}),
              Dr("components", []),
              fi("originalSpec"),
              Dr("debug.sketcher", {}),
            ])
            .concat(u));
      return hr(`${n  } [SpecSchema]`, rr(c.concat(e)), t);
    };
    const Tf = function (n, e, t, r, o) {
      const i = kf(o);
        const u = On(t, function (n) {
          return n
            .fold(T.none, T.some, T.none, T.none)
            .map(function (n) {
              return Or(n.name, n.schema.concat([fi(tf())]));
            })
            .toArray();
        });
        const c = df(t);
        const a = Of(n, e, i, u, [c]);
        const f = cf(0, a, t);
      return r(a, af(n, a, f.internals()), i, f.externals());
    };
    var kf = function (n) {
      return F(n, "uid") ? n : ({...n, uid: Sf("uid")});
    };
  let Ef;
    let Cf;
    let Df;
    const Mf = rr([
      wr("name"),
      wr("factory"),
      wr("configFields"),
      Dr("apis", {}),
      Dr("extraApis", {}),
    ]);
    const _f = rr([
      wr("name"),
      wr("factory"),
      wr("configFields"),
      wr("partFields"),
      Dr("apis", {}),
      Dr("extraApis", {}),
    ]);
    const If = function (n) {
      const i = hr(`Sketcher for ${  n.name}`, Mf, n);
        const e = C(i.apis, pf);
        const t = C(i.extraApis, function (n, e) {
          return Yr(n, e);
        });
      return {
        name: O(i.name),
            configFields: O(i.configFields),
            sketch (n) {
              return (
                (e = i.name),
                (t = i.configFields),
                (r = i.factory),
                (o = kf(n)),
                r(Of(e, t, o, [], []), o)
              );
              let e; let t; let r; let o;
            },
          ...e,
        ...t
      };
    };
    const Ff = function (n) {
      const e = hr(`Sketcher for ${  n.name}`, _f, n);
        const t = of(e.name, e.partFields);
        const r = C(e.apis, pf);
        const o = C(e.extraApis, function (n, e) {
          return Yr(n, e);
        });
      return {
        name: O(e.name),
            partFields: O(e.partFields),
            configFields: O(e.configFields),
            sketch (n) {
              return Tf(e.name, e.configFields, e.partFields, e.factory, n);
            },
            parts: O(t),
          ...r,
        ...o
      };
    };
    const Rf = If({
      name: "Button",
      factory (n) {
        let e;
          const t =
            ((e = n.action),
            Ar(
              Sn([
                e
                  .map(function (t) {
                    return Xr(function (n, e) {
                      t(n), e.stop();
                    });
                  })
                  .toArray(),
                _i(),
              ])
            ));
          const r = n.dom.tag;
          const o = function (e) {
            return I(n.dom, "attributes").bind(function (n) {
              return I(n, e);
            });
          };
        return {
          uid: n.uid,
          dom: n.dom,
          components: n.components,
          events: t,
          behaviours: Ca(n.buttonBehaviours, [
            Bi.config({}),
            Sa.config({ mode: "execution", useSpace: !0, useEnter: !0 }),
          ]),
          domModification: {
            attributes: (function () {
              if (r !== "button") return { role: o("role").getOr("button") };
              const n = o("type").getOr("button");
                const e = o("role")
                  .map(function (n) {
                    return { role: n };
                  })
                  .getOr({});
              return {type: n, ...e};
            })(),
          },
          eventOrder: n.eventOrder,
        };
      },
      configFields: [
        Dr("uid", undefined),
        wr("dom"),
        Dr("components", []),
        Ea("buttonBehaviours", [Bi, Sa]),
        Tr("action"),
        Tr("role"),
        Dr("eventOrder", {}),
      ],
    });
    const Vf = io({
      fields: [],
      name: "unselecting",
      active: /* */ Object.freeze({
        __proto__: null,
        events () {
          return Ar([jr(re(), O(!0))]);
        },
        exhibit () {
          return Kr({
            styles: {
              "-webkit-user-select": "none",
              "user-select": "none",
              "-ms-user-select": "none",
              "-moz-user-select": "-moz-none",
            },
            attributes: { unselectable: "on" },
          });
        },
      }),
    });
    const Bf = function (n) {
      let e;
        let t;
        let r;
        const o = ke.fromHtml(n);
        const i = Pe(o);
        const u =
          ((t =
            (e = o).dom().attributes !== undefined ? e.dom().attributes : []),
          bn(
            t,
            function (n, e) {
              let t;
              return e.name === "class"
                ? n
                : ({...n, ...(((t = {})[e.name] = e.value), t)});
            },
            {}
          ));
        const c = ((r = o), Array.prototype.slice.call(r.dom().classList, 0));
        const a = i.length === 0 ? {} : { innerHtml: Ho(o) };
      return {tag: Ee(o), classes: c, attributes: u, ...a};
    };
    const Af = function (n) {
      const e = Fn(n, { prefix: Di });
      return Bf(e);
    };
    const jf = function (n) {
      return { dom: Af(n) };
    };
    const Nf = function (n) {
      return ro([
        Ti.config({
          toggleClass: Mi("toolbar-button-selected"),
          toggleOnExecute: !1,
          aria: { mode: "pressed" },
        }),
        ki(n, function (n, e) {
          (e ? Ti.on : Ti.off)(n);
        }),
      ]);
    };
    const Pf = function (n, e, t, r) {
      const o = Nf(t);
      return zf(e, r, o, n);
    };
    const Hf = function (n, e) {
      const t = e.ui.registry.getAll().icons;
      return T.from(t[n]).fold(
        function () {
          return Af(
            `<span class="\${prefix}-toolbar-button \${prefix}-toolbar-group-item \${prefix}-icon-${ 
              n 
              } \${prefix}-icon"></span>`
          );
        },
        function (n) {
          return Af(
            `<span class="\${prefix}-toolbar-button \${prefix}-toolbar-group-item">${ 
              n 
              }</span>`
          );
        }
      );
    };
    var zf = function (n, e, t, r) {
      return Rf.sketch({
        dom: Hf(n, r),
        action: e,
        buttonBehaviours: Vt(ro([Vf.config({})]), t),
      });
    };
    const Lf = nf({ schema: [wr("dom")], name: "label" });
    const Gf = function (e) {
      return nf({
        name: `${e  }-edge`,
        overrides (n) {
          return n.model.manager.edgeActions[e].fold(
            function () {
              return {};
            },
            function (r) {
              return {
                events: Ar([
                  Pr(
                    $n(),
                    function (n, e, t) {
                      return r(n, t);
                    },
                    [n]
                  ),
                  Pr(
                    Xn(),
                    function (n, e, t) {
                      return r(n, t);
                    },
                    [n]
                  ),
                  Pr(
                    qn(),
                    function (n, e, t) {
                      t.mouseIsDown.get() && r(n, t);
                    },
                    [n]
                  ),
                ]),
              };
            }
          );
        },
      });
    };
    const $f = Gf("top-left");
    const Uf = Gf("top");
    const Wf = Gf("top-right");
    const Xf = Gf("right");
    const qf = Gf("bottom-right");
    const Yf = Gf("bottom");
    const Kf = Gf("bottom-left");
    const Jf = [
      Lf,
      Gf("left"),
      Xf,
      Uf,
      Yf,
      $f,
      Wf,
      Kf,
      qf,
      Za({
        name: "thumb",
        defaults: O({ dom: { styles: { position: "absolute" } } }),
        overrides (n) {
          return {
            events: Ar([
              Lr($n(), n, "spectrum"),
              Lr(Un(), n, "spectrum"),
              Lr(Wn(), n, "spectrum"),
              Lr(Xn(), n, "spectrum"),
              Lr(qn(), n, "spectrum"),
              Lr(Yn(), n, "spectrum"),
            ]),
          };
        },
      }),
      Za({
        schema: [
          _r("mouseIsDown", function () {
            return Do(!1);
          }),
        ],
        name: "spectrum",
        overrides (t) {
          const r = t.model.manager;
            const o = function (e, n) {
              return r.getValueFromEvent(n).map(function (n) {
                return r.setValueFrom(e, t, n);
              });
            };
          return {
            behaviours: ro([
              Sa.config({
                mode: "special",
                onLeft (n) {
                  return r.onLeft(n, t);
                },
                onRight (n) {
                  return r.onRight(n, t);
                },
                onUp (n) {
                  return r.onUp(n, t);
                },
                onDown (n) {
                  return r.onDown(n, t);
                },
              }),
              Bi.config({}),
            ]),
            events: Ar([
              Nr($n(), o),
              Nr(Un(), o),
              Nr(Xn(), o),
              Nr(qn(), function (n, e) {
                t.mouseIsDown.get() && o(n, e);
              }),
            ]),
          };
        },
      }),
    ];
    const Qf = function (n, e, t) {
      e.store.manager.onLoad(n, e, t);
    };
    const Zf = function (n, e, t) {
      e.store.manager.onUnload(n, e, t);
    };
    const ns = /* */ Object.freeze({
      __proto__: null,
      onLoad: Qf,
      onUnload: Zf,
      setValue (n, e, t, r) {
        e.store.manager.setValue(n, e, t, r);
      },
      getValue (n, e, t) {
        return e.store.manager.getValue(n, e, t);
      },
      getState (n, e, t) {
        return t;
      },
    });
    const es = /* */ Object.freeze({
      __proto__: null,
      events (t, r) {
        const n = t.resetOnDom
          ? [
              $r(function (n, e) {
                Qf(n, t, r);
              }),
              Ur(function (n, e) {
                Zf(n, t, r);
              }),
            ]
          : [Jr(t, r, Qf)];
        return Ar(n);
      },
    });
    const ts = function () {
      const n = Do(null);
      return to({
        set: n.set,
        get: n.get,
        isNotSet () {
          return n.get() === null;
        },
        clear () {
          n.set(null);
        },
        readState () {
          return { mode: "memory", value: n.get() };
        },
      });
    };
    const rs = function () {
      const i = Do({});
        const u = Do({});
      return to({
        readState () {
          return { mode: "dataset", dataByValue: i.get(), dataByText: u.get() };
        },
        lookup (n) {
          return I(i.get(), n).orThunk(function () {
            return I(u.get(), n);
          });
        },
        update (n) {
          const e = i.get();
            const t = u.get();
            const r = {};
            const o = {};
          hn(n, function (e) {
            (r[e.value] = e),
              I(e, "meta").each(function (n) {
                I(n, "text").each(function (n) {
                  o[n] = e;
                });
              });
          }),
            i.set({...e, ...r}),
            u.set({...t, ...o});
        },
        clear () {
          i.set({}), u.set({});
        },
      });
    };
    const os = /* */ Object.freeze({
      __proto__: null,
      memory: ts,
      dataset: rs,
      manual () {
        return to({ readState () {} });
      },
      init (n) {
        return n.store.manager.state(n);
      },
    });
    const is = function (n, e, t, r) {
      const o = e.store;
      t.update([r]), o.setValue(n, r), e.onSetValue(n, r);
    };
    const us = [
      Tr("initialValue"),
      wr("getFallbackEntry"),
      wr("getDataKey"),
      wr("setValue"),
      ai("manager", {
        setValue: is,
        getValue (n, e, t) {
          const r = e.store;
            const o = r.getDataKey(n);
          return t.lookup(o).fold(
            function () {
              return r.getFallbackEntry(o);
            },
            function (n) {
              return n;
            }
          );
        },
        onLoad (e, t, r) {
          t.store.initialValue.each(function (n) {
            is(e, t, r, n);
          });
        },
        onUnload (n, e, t) {
          t.clear();
        },
        state: rs,
      }),
    ];
    const cs = [
      wr("getValue"),
      Dr("setValue", S),
      Tr("initialValue"),
      ai("manager", {
        setValue (n, e, t, r) {
          e.store.setValue(n, r), e.onSetValue(n, r);
        },
        getValue (n, e, t) {
          return e.store.getValue(n);
        },
        onLoad (e, t, n) {
          t.store.initialValue.each(function (n) {
            t.store.setValue(e, n);
          });
        },
        onUnload: S,
        state: eo.init,
      }),
    ];
    const as = [
      Tr("initialValue"),
      ai("manager", {
        setValue (n, e, t, r) {
          t.set(r), e.onSetValue(n, r);
        },
        getValue (n, e, t) {
          return t.get();
        },
        onLoad (n, e, t) {
          e.store.initialValue.each(function (n) {
            t.isNotSet() && t.set(n);
          });
        },
        onUnload (n, e, t) {
          t.clear();
        },
        state: ts,
      }),
    ];
    const fs = [
      Mr(
        "store",
        { mode: "memory" },
        yr("mode", { memory: as, manual: cs, dataset: us })
      ),
      oi("onSetValue"),
      Dr("resetOnDom", !1),
    ];
    var ss = io({
      fields: fs,
      name: "representing",
      active: es,
      apis: ns,
      extra: {
        setValueFrom (n, e) {
          const t = ss.getValue(e);
          ss.setValue(n, t);
        },
      },
      state: os,
    });
    const ls = Ui("width", function (n) {
      return n.dom().offsetWidth;
    });
    const ds = function (n, e) {
      return ls.set(n, e);
    };
    const ms = function (n) {
      return ls.get(n);
    };
    var gs = function (t, r) {
      return {
        left: O(t),
        top: O(r),
        translate (n, e) {
          return gs(t + n, r + e);
        },
      };
    };
    const ps = gs;
    const hs = O("slider.change.value");
    const vs = function (n) {
      const e = n.event().raw();
      if (e.type.indexOf("touch") !== -1) {
        return e.touches !== undefined && e.touches.length === 1
          ? T.some(e.touches[0]).map(function (n) {
              return ps(n.clientX, n.clientY);
            })
          : T.none();
      }
      return e.clientX !== undefined
        ? T.some(e).map(function (n) {
            return ps(n.clientX, n.clientY);
          })
        : T.none();
    };
    const ys = function (n) {
      return n.model.minX;
    };
    const bs = function (n) {
      return n.model.minY;
    };
    const xs = function (n) {
      return n.model.minX - 1;
    };
    const ws = function (n) {
      return n.model.minY - 1;
    };
    const Ss = function (n) {
      return n.model.maxX;
    };
    const Os = function (n) {
      return n.model.maxY;
    };
    const Ts = function (n) {
      return n.model.maxX + 1;
    };
    const ks = function (n) {
      return n.model.maxY + 1;
    };
    const Es = function (n, e, t) {
      return e(n) - t(n);
    };
    const Cs = function (n) {
      return Es(n, Ss, ys);
    };
    const Ds = function (n) {
      return Es(n, Os, bs);
    };
    const Ms = function (n) {
      return Cs(n) / 2;
    };
    const _s = function (n) {
      return Ds(n) / 2;
    };
    const Is = function (n) {
      return n.stepSize;
    };
    const Fs = function (n) {
      return n.snapToGrid;
    };
    const Rs = function (n) {
      return n.snapStart;
    };
    const Vs = function (n) {
      return n.rounded;
    };
    const Bs = function (n, e) {
      return n[`${e  }-edge`] !== undefined;
    };
    const As = function (n) {
      return Bs(n, "left");
    };
    const js = function (n) {
      return Bs(n, "right");
    };
    const Ns = function (n) {
      return Bs(n, "top");
    };
    const Ps = function (n) {
      return Bs(n, "bottom");
    };
    const Hs = function (n) {
      return n.model.value.get();
    };
    const zs = function (n) {
      return { x: O(n) };
    };
    const Ls = function (n) {
      return { y: O(n) };
    };
    const Gs = function (n, e) {
      return { x: O(n), y: O(e) };
    };
    const $s = function (n, e) {
      xe(n, hs(), { value: e });
    };
    const Us = function (n, e, t, r) {
      return n < e ? n : t < n ? t : n === e ? e - 1 : Math.max(e, n - r);
    };
    const Ws = function (n, e, t, r) {
      return t < n ? n : n < e ? e : n === t ? t + 1 : Math.min(t, n + r);
    };
    const Xs = function (n, e, t) {
      return Math.max(e, Math.min(t, n));
    };
    const qs = function (n) {
      const e = n.min;
        const t = n.max;
        const r = n.range;
        const o = n.value;
        const i = n.step;
        const u = n.snap;
        const c = n.snapStart;
        const a = n.rounded;
        const f = n.hasMinEdge;
        const s = n.hasMaxEdge;
        const l = n.minBound;
        const d = n.maxBound;
        const m = n.screenRange;
        const g = f ? e - 1 : e;
        const p = s ? t + 1 : t;
      if (o < l) return g;
      if (d < o) return p;
      let h;
        let v;
        let y;
        let b;
        let x;
        let w;
        let S;
        const O = ((x = o), (w = l), (S = d), Math.min(S, Math.max(x, w)) - w);
        const T = Xs((O / m) * r + e, g, p);
      return u && e <= T && T <= t
        ? ((h = T),
          (v = e),
          (y = t),
          (b = i),
          c.fold(
            function () {
              const n = h - v;
                const e = Math.round(n / b) * b;
              return Xs(v + e, v - 1, y + 1);
            },
            function (n) {
              const e = (h - n) % b;
                const t = Math.round(e / b);
                const r = Math.floor((h - n) / b);
                const o = Math.floor((y - n) / b);
                const i = n + Math.min(o, r + t) * b;
              return Math.max(n, i);
            }
          ))
        : a
        ? Math.round(T)
        : T;
    };
    const Ys = function (n) {
      const e = n.min;
        const t = n.max;
        const r = n.range;
        const o = n.value;
        const i = n.hasMinEdge;
        const u = n.hasMaxEdge;
        const c = n.maxBound;
        const a = n.maxOffset;
        const f = n.centerMinEdge;
        const s = n.centerMaxEdge;
      return o < e ? (i ? 0 : f) : t < o ? (u ? c : s) : ((o - e) / r) * a;
    };
    const Ks = "left";
    const Js = function (n) {
      return n.element().dom().getBoundingClientRect();
    };
    const Qs = function (n, e) {
      return n[e];
    };
    const Zs = function (n) {
      const e = Js(n);
      return Qs(e, Ks);
    };
    const nl = function (n) {
      const e = Js(n);
      return Qs(e, "right");
    };
    const el = function (n) {
      const e = Js(n);
      return Qs(e, "top");
    };
    const tl = function (n) {
      const e = Js(n);
      return Qs(e, "bottom");
    };
    const rl = function (n) {
      const e = Js(n);
      return Qs(e, "width");
    };
    const ol = function (n) {
      const e = Js(n);
      return Qs(e, "height");
    };
    const il = function (n, e, t) {
      return (n + e) / 2 - t;
    };
    const ul = function (n, e) {
      const t = Js(n);
        const r = Js(e);
        const o = Qs(t, Ks);
        const i = Qs(t, "right");
        const u = Qs(r, Ks);
      return il(o, i, u);
    };
    const cl = function (n, e) {
      const t = Js(n);
        const r = Js(e);
        const o = Qs(t, "top");
        const i = Qs(t, "bottom");
        const u = Qs(r, "top");
      return il(o, i, u);
    };
    const al = function (n, e) {
      xe(n, hs(), { value: e });
    };
    const fl = function (n) {
      return { x: O(n) };
    };
    const sl = function (n, e, t) {
      const r = {
        min: ys(e),
        max: Ss(e),
        range: Cs(e),
        value: t,
        step: Is(e),
        snap: Fs(e),
        snapStart: Rs(e),
        rounded: Vs(e),
        hasMinEdge: As(e),
        hasMaxEdge: js(e),
        minBound: Zs(n),
        maxBound: nl(n),
        screenRange: rl(n),
      };
      return qs(r);
    };
    const ll = function (i) {
      return function (n, e) {
        return (
          (t = n),
          (o = (i > 0 ? Ws : Us)(Hs((r = e)).x(), ys(r), Ss(r), Is(r))),
          al(t, fl(o)),
          T.some(o).map(function () {
            return !0;
          })
        );
        let t; let r; let o;
      };
    };
    const dl = function (n, e, t, r, o, i) {
      let u;
        let c;
        let a;
        let f;
        let s;
        let l;
        let d;
        let m;
        let g;
        const p =
          ((c = i),
          (a = t),
          (f = r),
          (s = o),
          (l = rl((u = e))),
          (d = f
            .bind(function (n) {
              return T.some(ul(n, u));
            })
            .getOr(0)),
          (m = s
            .bind(function (n) {
              return T.some(ul(n, u));
            })
            .getOr(l)),
          (g = {
            min: ys(c),
            max: Ss(c),
            range: Cs(c),
            value: a,
            hasMinEdge: As(c),
            hasMaxEdge: js(c),
            minBound: Zs(u),
            minOffset: 0,
            maxBound: nl(u),
            maxOffset: l,
            centerMinEdge: d,
            centerMaxEdge: m,
          }),
          Ys(g));
      return Zs(e) - Zs(n) + p;
    };
    const ml = ll(-1);
    const gl = ll(1);
    const pl = T.none;
    const hl = T.none;
    const vl = {
      "top-left": T.none(),
      top: T.none(),
      "top-right": T.none(),
      right: T.some(function (n, e) {
        $s(n, zs(Ts(e)));
      }),
      "bottom-right": T.none(),
      bottom: T.none(),
      "bottom-left": T.none(),
      left: T.some(function (n, e) {
        $s(n, zs(xs(e)));
      }),
    };
    const yl = /* */ Object.freeze({
      __proto__: null,
      setValueFrom (n, e, t) {
        const r = sl(n, e, t);
          const o = fl(r);
        return al(n, o), r;
      },
      setToMin (n, e) {
        const t = ys(e);
        al(n, fl(t));
      },
      setToMax (n, e) {
        const t = Ss(e);
        al(n, fl(t));
      },
      findValueOfOffset: sl,
      getValueFromEvent (n) {
        return vs(n).map(function (n) {
          return n.left();
        });
      },
      findPositionOfValue: dl,
      setPositionFromValue (n, e, t, r) {
        const o = Hs(t);
          const i = dl(
            n,
            r.getSpectrum(n),
            o.x(),
            r.getLeftEdge(n),
            r.getRightEdge(n),
            t
          );
          const u = ms(e.element()) / 2;
        Ni(e.element(), "left", `${i - u  }px`);
      },
      onLeft: ml,
      onRight: gl,
      onUp: pl,
      onDown: hl,
      edgeActions: vl,
    });
    const bl = function (n, e) {
      xe(n, hs(), { value: e });
    };
    const xl = function (n) {
      return { y: O(n) };
    };
    const wl = function (n, e, t) {
      const r = {
        min: bs(e),
        max: Os(e),
        range: Ds(e),
        value: t,
        step: Is(e),
        snap: Fs(e),
        snapStart: Rs(e),
        rounded: Vs(e),
        hasMinEdge: Ns(e),
        hasMaxEdge: Ps(e),
        minBound: el(n),
        maxBound: tl(n),
        screenRange: ol(n),
      };
      return qs(r);
    };
    const Sl = function (i) {
      return function (n, e) {
        return (
          (t = n),
          (o = (i > 0 ? Ws : Us)(Hs((r = e)).y(), bs(r), Os(r), Is(r))),
          bl(t, xl(o)),
          T.some(o).map(function () {
            return !0;
          })
        );
        let t; let r; let o;
      };
    };
    const Ol = function (n, e, t, r, o, i) {
      let u;
        let c;
        let a;
        let f;
        let s;
        let l;
        let d;
        let m;
        let g;
        const p =
          ((c = i),
          (a = t),
          (f = r),
          (s = o),
          (l = ol((u = e))),
          (d = f
            .bind(function (n) {
              return T.some(cl(n, u));
            })
            .getOr(0)),
          (m = s
            .bind(function (n) {
              return T.some(cl(n, u));
            })
            .getOr(l)),
          (g = {
            min: bs(c),
            max: Os(c),
            range: Ds(c),
            value: a,
            hasMinEdge: Ns(c),
            hasMaxEdge: Ps(c),
            minBound: el(u),
            minOffset: 0,
            maxBound: tl(u),
            maxOffset: l,
            centerMinEdge: d,
            centerMaxEdge: m,
          }),
          Ys(g));
      return el(e) - el(n) + p;
    };
    const Tl = T.none;
    const kl = T.none;
    const El = Sl(-1);
    const Cl = Sl(1);
    const Dl = {
      "top-left": T.none(),
      top: T.some(function (n, e) {
        $s(n, Ls(ws(e)));
      }),
      "top-right": T.none(),
      right: T.none(),
      "bottom-right": T.none(),
      bottom: T.some(function (n, e) {
        $s(n, Ls(ks(e)));
      }),
      "bottom-left": T.none(),
      left: T.none(),
    };
    const Ml = /* */ Object.freeze({
      __proto__: null,
      setValueFrom (n, e, t) {
        const r = wl(n, e, t);
          const o = xl(r);
        return bl(n, o), r;
      },
      setToMin (n, e) {
        const t = bs(e);
        bl(n, xl(t));
      },
      setToMax (n, e) {
        const t = Os(e);
        bl(n, xl(t));
      },
      findValueOfOffset: wl,
      getValueFromEvent (n) {
        return vs(n).map(function (n) {
          return n.top();
        });
      },
      findPositionOfValue: Ol,
      setPositionFromValue (n, e, t, r) {
        const o = Hs(t);
          const i = Ol(
            n,
            r.getSpectrum(n),
            o.y(),
            r.getTopEdge(n),
            r.getBottomEdge(n),
            t
          );
          const u = Xi(e.element()) / 2;
        Ni(e.element(), "top", `${i - u  }px`);
      },
      onLeft: Tl,
      onRight: kl,
      onUp: El,
      onDown: Cl,
      edgeActions: Dl,
    });
    const _l = function (n, e) {
      xe(n, hs(), { value: e });
    };
    const Il = function (n, e) {
      return { x: O(n), y: O(e) };
    };
    const Fl = function (a, f) {
      return function (n, e) {
        return (
          (r = n),
          (o = e),
          (i = a > 0 ? Ws : Us),
          (u = (t = f) ? Hs(o).x() : i(Hs(o).x(), ys(o), Ss(o), Is(o))),
          (c = t ? i(Hs(o).y(), bs(o), Os(o), Is(o)) : Hs(o).y()),
          _l(r, Il(u, c)),
          T.some(u).map(function () {
            return !0;
          })
        );
        let t; let r; let o; let i; let u; let c;
      };
    };
    const Rl = Fl(-1, !1);
    const Vl = Fl(1, !1);
    const Bl = Fl(-1, !0);
    const Al = Fl(1, !0);
    const jl = {
      "top-left": T.some(function (n, e) {
        $s(n, Gs(xs(e), ws(e)));
      }),
      top: T.some(function (n, e) {
        $s(n, Gs(Ms(e), ws(e)));
      }),
      "top-right": T.some(function (n, e) {
        $s(n, Gs(Ts(e), ws(e)));
      }),
      right: T.some(function (n, e) {
        $s(n, Gs(Ts(e), _s(e)));
      }),
      "bottom-right": T.some(function (n, e) {
        $s(n, Gs(Ts(e), ks(e)));
      }),
      bottom: T.some(function (n, e) {
        $s(n, Gs(Ms(e), ks(e)));
      }),
      "bottom-left": T.some(function (n, e) {
        $s(n, Gs(xs(e), ks(e)));
      }),
      left: T.some(function (n, e) {
        $s(n, Gs(xs(e), _s(e)));
      }),
    };
    const Nl = /* */ Object.freeze({
      __proto__: null,
      setValueFrom (n, e, t) {
        const r = sl(n, e, t.left());
          const o = wl(n, e, t.top());
          const i = Il(r, o);
        return _l(n, i), i;
      },
      setToMin (n, e) {
        const t = ys(e);
          const r = bs(e);
        _l(n, Il(t, r));
      },
      setToMax (n, e) {
        const t = Ss(e);
          const r = Os(e);
        _l(n, Il(t, r));
      },
      getValueFromEvent (n) {
        return vs(n);
      },
      setPositionFromValue (n, e, t, r) {
        const o = Hs(t);
          const i = dl(
            n,
            r.getSpectrum(n),
            o.x(),
            r.getLeftEdge(n),
            r.getRightEdge(n),
            t
          );
          const u = Ol(
            n,
            r.getSpectrum(n),
            o.y(),
            r.getTopEdge(n),
            r.getBottomEdge(n),
            t
          );
          const c = ms(e.element()) / 2;
          const a = Xi(e.element()) / 2;
        Ni(e.element(), "left", `${i - c  }px`),
          Ni(e.element(), "top", `${u - a  }px`);
      },
      onLeft: Rl,
      onRight: Vl,
      onUp: Bl,
      onDown: Al,
      edgeActions: jl,
    });
    const Pl = [
      Dr("stepSize", 1),
      Dr("onChange", S),
      Dr("onChoose", S),
      Dr("onInit", S),
      Dr("onDragStart", S),
      Dr("onDragEnd", S),
      Dr("snapToGrid", !1),
      Dr("rounded", !0),
      Tr("snapStart"),
      Sr(
        "model",
        yr("mode", {
          x: [
            Dr("minX", 0),
            Dr("maxX", 100),
            _r("value", function (n) {
              return Do(n.mode.minX);
            }),
            wr("getInitialValue"),
            ai("manager", yl),
          ],
          y: [
            Dr("minY", 0),
            Dr("maxY", 100),
            _r("value", function (n) {
              return Do(n.mode.minY);
            }),
            wr("getInitialValue"),
            ai("manager", Ml),
          ],
          xy: [
            Dr("minX", 0),
            Dr("maxX", 100),
            Dr("minY", 0),
            Dr("maxY", 100),
            _r("value", function (n) {
              return Do({ x: O(n.mode.minX), y: O(n.mode.minY) });
            }),
            wr("getInitialValue"),
            ai("manager", Nl),
          ],
        })
      ),
      Oa("sliderBehaviours", [Sa, ss]),
      _r("mouseIsDown", function () {
        return Do(!1);
      }),
    ];
    const Hl = O("mouse.released");
    const zl = Ff({
      name: "Slider",
      configFields: Pl,
      partFields: Jf,
      factory (i, n, e, t) {
        let r;
          const u = function (n) {
            return sf(n, i, "thumb");
          };
          const c = function (n) {
            return sf(n, i, "spectrum");
          };
          const o = function (n) {
            return ff(n, i, "left-edge");
          };
          const a = function (n) {
            return ff(n, i, "right-edge");
          };
          const f = function (n) {
            return ff(n, i, "top-edge");
          };
          const s = function (n) {
            return ff(n, i, "bottom-edge");
          };
          const l = i.model;
          const d = l.manager;
          const m = function (n, e) {
            d.setPositionFromValue(n, e, i, {
              getLeftEdge: o,
              getRightEdge: a,
              getTopEdge: f,
              getBottomEdge: s,
              getSpectrum: c,
            });
          };
          const g = function (n, e) {
            l.value.set(e);
            const t = u(n);
            return m(n, t), i.onChange(n, t, e), T.some(!0);
          };
          const p = function (t) {
            const n = i.mouseIsDown.get();
            i.mouseIsDown.set(!1),
              n &&
                ff(t, i, "thumb").each(function (n) {
                  const e = l.value.get();
                  i.onChoose(t, n, e);
                });
          };
          const h = function (n, e) {
            e.stop(), i.mouseIsDown.set(!0), i.onDragStart(n, u(n));
          };
          const v = function (n, e) {
            e.stop(), i.onDragEnd(n, u(n)), p(n);
          };
        return {
          uid: i.uid,
          dom: i.dom,
          components: n,
          behaviours: ka(i.sliderBehaviours, [
            Sa.config({
              mode: "special",
              focusIn (n) {
                return ff(n, i, "spectrum").map(Sa.focusIn).map(O(!0));
              },
            }),
            ss.config({
              store: {
                mode: "manual",
                getValue (n) {
                  return l.value.get();
                },
              },
            }),
            di.config({ channels: (((r = {})[Hl()] = { onReceive: p }), r) }),
          ]),
          events: Ar([
            Nr(hs(), function (n, e) {
              g(n, e.event().value());
            }),
            $r(function (n, e) {
              const t = l.getInitialValue();
              l.value.set(t);
              const r = u(n);
              m(n, r);
              const o = c(n);
              i.onInit(n, r, o, l.value.get());
            }),
            Nr($n(), h),
            Nr(Wn(), v),
            Nr(Xn(), h),
            Nr(Yn(), v),
          ]),
          apis: {
            resetToMin (n) {
              d.setToMin(n, i);
            },
            resetToMax (n) {
              d.setToMax(n, i);
            },
            changeValue: g,
            refresh: m,
          },
          domModification: { styles: { position: "relative" } },
        };
      },
      apis: {
        resetToMin (n, e) {
          n.resetToMin(e);
        },
        resetToMax (n, e) {
          n.resetToMax(e);
        },
        refresh (n, e) {
          n.refresh(e);
        },
      },
    });
    const Ll = function (e, t, r, n) {
      return zf(
        t,
        function () {
          const n = r();
          e.setContextToolbar([{ label: `${t  } group`, items: n }]);
        },
        {},
        n
      );
    };
    const Gl = function (n) {
      return [
        ((o = n),
        (i = function (n) {
          return n < 0
            ? "black"
            : n > 360
            ? "white"
            : `hsl(${  n  }, 100%, 50%)`;
        }),
        zl.sketch({
          dom: Af(
            '<div class="${prefix}-slider ${prefix}-hue-slider-container"></div>'
          ),
          components: [
            zl
              .parts()
              ["left-edge"](
                jf('<div class="${prefix}-hue-slider-black"></div>')
              ),
            zl
              .parts()
              .spectrum({
                dom: Af(
                  '<div class="${prefix}-slider-gradient-container"></div>'
                ),
                components: [
                  jf('<div class="${prefix}-slider-gradient"></div>'),
                ],
                behaviours: ro([
                  Ti.config({ toggleClass: Mi("thumb-active") }),
                ]),
              }),
            zl
              .parts()
              ["right-edge"](
                jf('<div class="${prefix}-hue-slider-white"></div>')
              ),
            zl
              .parts()
              .thumb({
                dom: Af('<div class="${prefix}-slider-thumb"></div>'),
                behaviours: ro([
                  Ti.config({ toggleClass: Mi("thumb-active") }),
                ]),
              }),
          ],
          onChange (n, e, t) {
            const r = i(t.x());
            Ni(e.element(), "background-color", r), o.onChange(n, e, r);
          },
          onDragStart (n, e) {
            Ti.on(e);
          },
          onDragEnd (n, e) {
            Ti.off(e);
          },
          onInit (n, e, t, r) {
            const o = i(r.x());
            Ni(e.element(), "background-color", o);
          },
          stepSize: 10,
          model: {
            mode: "x",
            minX: 0,
            maxX: 360,
            getInitialValue () {
              return {
                x () {
                  return o.getInitialValue();
                },
              };
            },
          },
          sliderBehaviours: ro([Ei(zl.refresh)]),
        })),
      ];
      let o; let i;
    };
    const $l = rr([
      wr("getInitialValue"),
      wr("onChange"),
      wr("category"),
      wr("sizes"),
    ]);
    const Ul = function (n) {
      const i = hr("SizeSlider", $l, n);
      return zl.sketch({
        dom: {
          tag: "div",
          classes: [
            Mi(`slider-${  i.category  }-size-container`),
            Mi("slider"),
            Mi("slider-size-container"),
          ],
        },
        onChange (n, e, t) {
          let r;
            const o = t.x();
          (r = o) >= 0 && r < i.sizes.length && i.onChange(o);
        },
        onDragStart (n, e) {
          Ti.on(e);
        },
        onDragEnd (n, e) {
          Ti.off(e);
        },
        model: {
          mode: "x",
          minX: 0,
          maxX: i.sizes.length - 1,
          getInitialValue () {
            return {
              x () {
                return i.getInitialValue();
              },
            };
          },
        },
        stepSize: 1,
        snapToGrid: !0,
        sliderBehaviours: ro([Ei(zl.refresh)]),
        components: [
          zl
            .parts()
            .spectrum({
              dom: Af('<div class="${prefix}-slider-size-container"></div>'),
              components: [
                jf('<div class="${prefix}-slider-size-line"></div>'),
              ],
            }),
          zl
            .parts()
            .thumb({
              dom: Af('<div class="${prefix}-slider-thumb"></div>'),
              behaviours: ro([Ti.config({ toggleClass: Mi("thumb-active") })]),
            }),
        ],
      });
    };
    const Wl = [
      "9px",
      "10px",
      "11px",
      "12px",
      "14px",
      "16px",
      "18px",
      "20px",
      "24px",
      "32px",
      "36px",
    ];
    const Xl = function (e, n) {
      return (De(n) ? T.some(n) : Ne(n).filter(De))
        .map(function (n) {
          return Ji(
            function (n, e) {
              return e(n);
            },
            nu,
            n,
            function (n) {
              return Li(n, "font-size").isSome();
            },
            e
          )
            .bind(function (n) {
              return Li(n, "font-size");
            })
            .getOrThunk(function () {
              return Hi(n, "font-size");
            });
        })
        .getOr("");
    };
    const ql = function (n) {
      const e = n.selection.getStart();
        const t = ke.fromDom(e);
        const r = ke.fromDom(n.getBody());
        const o = Xl(function (n) {
          return Ae(r, n);
        }, t);
      return xn(Wl, function (n) {
        return o === n;
      }).getOr("medium");
    };
    const Yl = function (n) {
      let e;
        const t = ql(n);
      return (
        (e = t),
        wn(Wl, function (n) {
          return n === e;
        }).getOr(2)
      );
    };
    const Kl = function (r, n) {
      let e;
      (e = n),
        T.from(Wl[e]).each(function (n) {
          let e; let t;
          (t = n), ql((e = r)) !== t && e.execCommand("fontSize", !1, t);
        });
    };
    const Jl = O(Wl)();
    const Ql = function (n) {
      return [
        jf(
          '<span class="${prefix}-toolbar-button ${prefix}-icon-small-font ${prefix}-icon"></span>'
        ),
        Ul({
          onChange: (e = n).onChange,
          sizes: Jl,
          category: "font",
          getInitialValue: e.getInitialValue,
        }),
        jf(
          '<span class="${prefix}-toolbar-button ${prefix}-icon-large-font ${prefix}-icon"></span>'
        ),
      ];
      let e;
    };
    const Zl = function (n) {
      const e =
        (function t(n) {
          return n.uid !== undefined;
        })(n) && R(n, "uid")
          ? n.uid
          : Sf("memento");
      return {
        get (n) {
          return n.getSystem().getByUid(e).getOrDie();
        },
        getOpt (n) {
          return n.getSystem().getByUid(e).toOption();
        },
        asSpec () {
          return {...n, uid: e};
        },
      };
    };
    const nd = window.Promise
      ? window.Promise
      : ((Cf =
          (Ef = function (n) {
            if (typeof this !== "object")
              throw new TypeError("Promises must be constructed via new");
            if (typeof n !== "function") throw new TypeError("not a function");
            (this._state = null),
              (this._value = null),
              (this._deferreds = []),
              cd(n, ed(rd, this), ed(od, this));
          }).immediateFn ||
          (typeof window.setImmediate === "function" && window.setImmediate) ||
          function (n) {
            x.setTimeout(n, 1);
          }),
        (Df =
          Array.isArray ||
          function (n) {
            return Object.prototype.toString.call(n) === "[object Array]";
          }),
        (Ef.prototype.catch = function (n) {
          return this.then(null, n);
        }),
        (Ef.prototype.then = function (t, r) {
          const o = this;
          return new Ef(function (n, e) {
            td.call(o, new ud(t, r, n, e));
          });
        }),
        (Ef.all = function () {
          for (var n = [], e = 0; e < arguments.length; e++)
            n[e] = arguments[e];
          const a = Array.prototype.slice.call(
            n.length === 1 && Df(n[0]) ? n[0] : n
          );
          return new Ef(function (o, i) {
            if (a.length === 0) return o([]);
            let u = a.length;
            function c(e, n) {
              try {
                if (n && (typeof n === "object" || typeof n === "function")) {
                  const t = n.then;
                  if (typeof t === "function")
                    return void t.call(
                      n,
                      function (n) {
                        c(e, n);
                      },
                      i
                    );
                }
                (a[e] = n), --u == 0 && o(a);
              } catch (r) {
                i(r);
              }
            }
            for (let n = 0; n < a.length; n++) c(n, a[n]);
          });
        }),
        (Ef.resolve = function (e) {
          return e && typeof e === "object" && e.constructor === Ef
            ? e
            : new Ef(function (n) {
                n(e);
              });
        }),
        (Ef.reject = function (t) {
          return new Ef(function (n, e) {
            e(t);
          });
        }),
        (Ef.race = function (o) {
          return new Ef(function (n, e) {
            for (let t = 0, r = o; t < r.length; t++) r[t].then(n, e);
          });
        }),
        Ef);
  function ed(n, e) {
    return function () {
      return n.apply(e, arguments);
    };
  }
  function td(r) {
    const o = this;
    this._state !== null
      ? Cf(function () {
          const n = o._state ? r.onFulfilled : r.onRejected;
          if (n !== null) {
            let e;
            try {
              e = n(o._value);
            } catch (t) {
              return void r.reject(t);
            }
            r.resolve(e);
          } else (o._state ? r.resolve : r.reject)(o._value);
        })
      : this._deferreds.push(r);
  }
  function rd(n) {
    try {
      if (n === this)
        throw new TypeError("A promise cannot be resolved with itself.");
      if (n && (typeof n === "object" || typeof n === "function")) {
        const e = n.then;
        if (typeof e === "function")
          return void cd(ed(e, n), ed(rd, this), ed(od, this));
      }
      (this._state = !0), (this._value = n), id.call(this);
    } catch (t) {
      od.call(this, t);
    }
  }
  function od(n) {
    (this._state = !1), (this._value = n), id.call(this);
  }
  function id() {
    for (let n = 0, e = this._deferreds; n < e.length; n++) {
      const t = e[n];
      td.call(this, t);
    }
    this._deferreds = [];
  }
  function ud(n, e, t, r) {
    (this.onFulfilled = typeof n === "function" ? n : null),
      (this.onRejected = typeof e === "function" ? e : null),
      (this.resolve = t),
      (this.reject = r);
  }
  function cd(n, e, t) {
    let r = !1;
    try {
      n(
        function (n) {
          r || ((r = !0), e(n));
        },
        function (n) {
          r || ((r = !0), t(n));
        }
      );
    } catch (o) {
      if (r) return;
      (r = !0), t(o);
    }
  }
  function ad(n) {
    return (function e(t) {
      return new nd(function (n) {
        const e = new x.FileReader();
        (e.onloadend = function () {
          n(e.result);
        }),
          e.readAsDataURL(t);
      });
    })(n).then(function (n) {
      return n.split(",")[1];
    });
  }
  const fd = function (o, i) {
      ad(i).then(function (r) {
        o.undoManager.transact(function () {
          const n = o.editorUpload.blobCache;
            const e = n.create(Na("mceu"), i, r);
          n.add(e);
          const t = o.dom.createHTML("img", { src: e.blobUri() });
          o.insertContent(t);
        });
      });
    };
    const sd = function (o) {
      const e = Zl({
        dom: {
          tag: "input",
          attributes: { accept: "image/*", type: "file", title: "" },
          styles: { visibility: "hidden", position: "absolute" },
        },
        events: Ar([
          Gr(ee()),
          Nr(ne(), function (n, e) {
            let t; let r;
            (t = e.event()),
              (r = t.raw().target.files || t.raw().dataTransfer.files),
              T.from(r[0]).each(function (n) {
                fd(o, n);
              });
          }),
        ]),
      });
      return Rf.sketch({
        dom: Hf("image", o),
        components: [e.asSpec()],
        action (n) {
          e.get(n).element().dom().click();
        },
      });
    };
    const ld = function (n) {
      return n.dom().textContent;
    };
    const dd = function (n) {
      return n.length > 0;
    };
    const md = function (n) {
      return n === undefined || n === null ? "" : n;
    };
    const gd = function (n) {
      return vd(n).fold(
        function () {
          return {
            url: "",
            text: n.selection.getContent({ format: "text" }),
            title: "",
            target: "",
            link: T.none(),
          };
        },
        function (n) {
          return (
            (t = ld((e = n))),
            (r = lo(e, "href")),
            (o = lo(e, "title")),
            (i = lo(e, "target")),
            {
              url: md(r),
              text: t !== r ? md(t) : "",
              title: md(o),
              target: md(i),
              link: T.some(e),
            }
          );
          let e; let t; let r; let o; let i;
        }
      );
    };
    const pd = function (e, t, n) {
      return n.text
        .toOption()
        .filter(dd)
        .fold(function () {
          return lo((n = e), "href") === ld(n) ? T.some(t) : T.none();
          let n;
        }, T.some);
    };
    const hd = function (o, i) {
      i.url
        .toOption()
        .filter(dd)
        .fold(
          function () {
            let e;
            (e = o),
              i.link.bind(y).each(function (n) {
                e.execCommand("unlink");
              });
          },
          function (e) {
            let n;
              let t;
              const r =
                ((n = i),
                ((t = {}).href = e),
                n.title
                  .toOption()
                  .filter(dd)
                  .each(function (n) {
                    t.title = n;
                  }),
                n.target
                  .toOption()
                  .filter(dd)
                  .each(function (n) {
                    t.target = n;
                  }),
                t);
            i.link.bind(y).fold(
              function () {
                const n = i.text.toOption().filter(dd).getOr(e);
                o.insertContent(o.dom.createHTML("a", r, o.dom.encode(n)));
              },
              function (t) {
                const n = pd(t, e, i);
                so(t, r),
                  n.each(function (n) {
                    let e;
                    (e = n), (t.dom().textContent = e);
                  });
              }
            );
          }
        );
    };
    var vd = function (n) {
      const e = ke.fromDom(n.selection.getStart());
      return ou(e, "a");
    };
    const yd = Gn();
    const bd = function (n, e) {
      const t = e.selection.getRng();
      n(), e.selection.setRng(t);
    };
    const xd = function (n, e) {
      let t; let r;
      return {
        key: n,
        value: {
          config: {},
          me:
            ((t = n),
            (r = Ar(e)),
            io({ fields: [wr("enabled")], name: t, active: { events: O(r) } })),
          configAsRaw: O({}),
          initialConfig: {},
          state: eo,
        },
      };
    };
    const wd = /* */ Object.freeze({
      __proto__: null,
      getCurrent (n, e, t) {
        return e.find(n);
      },
    });
    const Sd = [wr("find")];
    const Od = io({ fields: Sd, name: "composing", apis: wd });
    const Td = If({
      name: "Container",
      factory (n) {
        const e = n.dom;
          const t = e.attributes;
          const r = c(e, ["attributes"]);
        return {
          uid: n.uid,
          dom: {tag: "div", attributes: {role: "presentation", ...t}, ...r},
          components: n.components,
          behaviours: Ta(n.containerBehaviours),
          events: n.events,
          domModification: n.domModification,
          eventOrder: n.eventOrder,
        };
      },
      configFields: [
        Dr("components", []),
        Oa("containerBehaviours", []),
        Dr("events", {}),
        Dr("domModification", {}),
        Dr("eventOrder", {}),
      ],
    });
    const kd = If({
      name: "DataField",
      factory (t) {
        return {
          uid: t.uid,
          dom: t.dom,
          behaviours: Ca(t.dataBehaviours, [
            ss.config({
              store: { mode: "memory", initialValue: t.getInitialValue() },
            }),
            Od.config({ find: T.some }),
          ]),
          events: Ar([
            $r(function (n, e) {
              ss.setValue(n, t.getInitialValue());
            }),
          ]),
        };
      },
      configFields: [
        wr("uid"),
        wr("dom"),
        wr("getInitialValue"),
        Ea("dataBehaviours", [ss, Od]),
      ],
    });
    const Ed = function (n) {
      return n.dom().value;
    };
    const Cd = function (n, e) {
      if (e === undefined) throw new Error("Value.set was undefined");
      n.dom().value = e;
    };
    const Dd = O([
      Tr("data"),
      Dr("inputAttributes", {}),
      Dr("inputStyles", {}),
      Dr("tag", "input"),
      Dr("inputClasses", []),
      oi("onSetValue"),
      Dr("styles", {}),
      Dr("eventOrder", {}),
      Oa("inputBehaviours", [ss, Bi]),
      Dr("selectOnFocus", !0),
    ]);
    const Md = function (n) {
      return {
        ...((e = n),
          ro([
            Bi.config({
              onFocus: e.selectOnFocus
                ? function (n) {
                    const e = n.element();
                      const t = Ed(e);
                    e.dom().setSelectionRange(0, t.length);
                  }
                : S,
            }),
          ])),
        ...ka(n.inputBehaviours, [
          ss.config({
            store: {
              mode: "manual",
                ...n.data
                  .map(function (n) {
                    return { initialValue: n };
                  })
                  .getOr({}),
              getValue (n) {
                  return Ed(n.element());
                },
                setValue (n, e) {
                  Ed(n.element()) !== e && Cd(n.element(), e);
                },
            },
            onSetValue: n.onSetValue,
          }),
        ])
      };
      let e;
    };
    const _d = If({
      name: "Input",
      configFields: Dd(),
      factory (n, e) {
        return {
          uid: n.uid,
          dom: {
            tag: (t = n).tag,
            attributes: {type: "text", ...t.inputAttributes},
            styles: t.inputStyles,
            classes: t.inputClasses,
          },
          components: [],
          behaviours: Md(n),
          eventOrder: n.eventOrder,
        };
        let t;
      },
    });
    const Id = /* */ Object.freeze({
      __proto__: null,
      exhibit (n, e) {
        return Kr({ attributes: Ut([{ key: e.tabAttr, value: "true" }]) });
      },
    });
    const Fd = [Dr("tabAttr", "data-alloy-tabstop")];
    const Rd = io({ fields: Fd, name: "tabstopping", active: Id });
    const Vd = tinymce.util.Tools.resolve("tinymce.util.I18n");
    const Bd = function (n, e) {
      const t = Zl(
          _d.sketch({
            inputAttributes: { placeholder: Vd.translate(e) },
            onSetValue (n, e) {
              be(n, Zn());
            },
            inputBehaviours: ro([
              Od.config({ find: T.some }),
              Rd.config({}),
              Sa.config({ mode: "execution" }),
            ]),
            selectOnFocus: !1,
          })
        );
        const r = Zl(
          Rf.sketch({
            dom: Af(
              '<button class="${prefix}-input-container-x ${prefix}-icon-cancel-circle ${prefix}-icon"></button>'
            ),
            action (n) {
              const e = t.get(n);
              ss.setValue(e, "");
            },
          })
        );
      return {
        name: n,
        spec: Td.sketch({
          dom: Af('<div class="${prefix}-input-container"></div>'),
          components: [t.asSpec(), r.asSpec()],
          containerBehaviours: ro([
            Ti.config({ toggleClass: Mi("input-container-empty") }),
            Od.config({
              find (n) {
                return T.some(t.get(n));
              },
            }),
            xd("input-clearing", [
              Nr(Zn(), function (n) {
                const e = t.get(n);
                (ss.getValue(e).length > 0 ? Ti.off : Ti.on)(n);
              }),
            ]),
          ]),
        }),
      };
    };
    const Ad = ["input", "button", "textarea", "select"];
    const jd = function (n, e, t) {
      (e.disabled() ? Gd : $d)(n, e, t);
    };
    const Nd = function (n, e) {
      return !0 === e.useNative && mn(Ad, Ee(n.element()));
    };
    const Pd = function (n) {
      fo(n.element(), "disabled", "disabled");
    };
    const Hd = function (n) {
      po(n.element(), "disabled");
    };
    const zd = function (n) {
      fo(n.element(), "aria-disabled", "true");
    };
    const Ld = function (n) {
      fo(n.element(), "aria-disabled", "false");
    };
    var Gd = function (e, n, t) {
      n.disableClass.each(function (n) {
        xo(e.element(), n);
      }),
        (Nd(e, n) ? Pd : zd)(e),
        n.onDisabled(e);
    };
    var $d = function (e, n, t) {
      n.disableClass.each(function (n) {
        So(e.element(), n);
      }),
        (Nd(e, n) ? Hd : Ld)(e),
        n.onEnabled(e);
    };
    const Ud = function (n, e) {
      return Nd(n, e)
        ? go(n.element(), "disabled")
        : lo(n.element(), "aria-disabled") === "true";
    };
    const Wd = /* */ Object.freeze({
      __proto__: null,
      enable: $d,
      disable: Gd,
      isDisabled: Ud,
      onLoad: jd,
      set (n, e, t, r) {
        (r ? Gd : $d)(n, e, t);
      },
    });
    const Xd = /* */ Object.freeze({
      __proto__: null,
      exhibit (n, e) {
        return Kr({ classes: e.disabled() ? e.disableClass.toArray() : [] });
      },
      events (t, n) {
        return Ar([
          jr(fe(), function (n, e) {
            return Ud(n, t);
          }),
          Jr(t, n, jd),
        ]);
      },
    });
    const qd = [
      Mr("disabled", s, xr),
      Dr("useNative", !0),
      Tr("disableClass"),
      oi("onDisabled"),
      oi("onEnabled"),
    ];
    const Yd = io({ fields: qd, name: "disabling", active: Xd, apis: Wd });
    const Kd = [Oa("formBehaviours", [ss])];
    const Jd = function (n) {
      return `<alloy.field.${  n  }>`;
    };
    const Qd = function (o, n) {
      return {
        uid: o.uid,
        dom: o.dom,
        components: n,
        behaviours: ka(o.formBehaviours, [
          ss.config({
            store: {
              mode: "manual",
              getValue (n) {
                let e;
                  let t;
                  const r =
                    ((e = o),
                    (t = n.getSystem()),
                    C(e.partUids, function (n, e) {
                      return O(t.getByUid(n));
                    }));
                return C(r, function (n, o) {
                  return n()
                    .bind(function (n) {
                      let e;
                        let t;
                        const r = Od.getCurrent(n);
                      return (
                        (e = r),
                        (t = new Error(
                          `Cannot find a current component to extract the value from for form part '${ 
                            o 
                            }': ${ 
                            $o(n.element())}`
                        )),
                        e.fold(function () {
                          return mt.error(t);
                        }, mt.value)
                      );
                    })
                    .map(ss.getValue);
                });
              },
              setValue (t, n) {
                E(n, function (e, n) {
                  ff(t, o, n).each(function (n) {
                    Od.getCurrent(n).each(function (n) {
                      ss.setValue(n, e);
                    });
                  });
                });
              },
            },
          }),
        ]),
        apis: {
          getField (n, e) {
            return ff(n, o, e).bind(Od.getCurrent);
          },
        },
      };
    };
    const Zd =
      (pf(function (n, e, t) {
        return n.getField(e, t);
      }),
      function (n) {
        let i;
          const e =
            ((i = []),
            {
              field (n, e) {
                return (
                  i.push(n),
                  (t = "form"),
                  (r = Jd(n)),
                  (o = e),
                  { uiType: Aa(), owner: t, name: r, config: o, validated: {} }
                );
                let t; let r; let o;
              },
              record () {
                return i;
              },
            });
          const t = n(e);
          const r = e.record();
          const o = pn(r, function (n) {
            return Za({ name: n, pname: Jd(n) });
          });
        return Tf("form", Kd, o, Qd, t);
      });
    const nm = function () {
      const e = Do(T.none());
        const t = function () {
          e.get().each(function (n) {
            n.destroy();
          });
        };
      return {
        clear () {
          t(), e.set(T.none());
        },
        isSet () {
          return e.get().isSome();
        },
        set (n) {
          t(), e.set(T.some(n));
        },
        run (n) {
          e.get().each(n);
        },
      };
    };
    const em = function () {
      const e = Do(T.none());
      return {
        clear () {
          e.set(T.none());
        },
        set (n) {
          e.set(T.some(n));
        },
        isSet () {
          return e.get().isSome();
        },
        on (n) {
          e.get().each(n);
        },
      };
    };
    const tm = function (n) {
      const r = "navigateEvent";
        const e = or([
          wr("fields"),
          Dr("maxFieldIndex", n.fields.length - 1),
          wr("onExecute"),
          wr("getInitialValue"),
          _r("state", function () {
            return { dialogSwipeState: em(), currentScreen: Do(0) };
          }),
        ]);
        const u = hr("SerialisedDialog", e, n);
        const o = function (e, n, t) {
          return Rf.sketch({
            dom: Af(
              `<span class="\${prefix}-icon-${  n  } \${prefix}-icon"></span>`
            ),
            action (n) {
              xe(n, r, { direction: e });
            },
            buttonBehaviours: ro([
              Yd.config({
                disableClass: Mi("toolbar-navigation-disabled"),
                disabled () {
                  return !t;
                },
              }),
            ]),
          });
        };
        const i = function (n, o) {
          const i = Ki(n.element(), `.${  Mi("serialised-dialog-screen")}`);
          ru(n.element(), `.${  Mi("serialised-dialog-chain")}`).each(function (
            r
          ) {
            u.state.currentScreen.get() + o >= 0 &&
              u.state.currentScreen.get() + o < i.length &&
              (Li(r, "left").each(function (n) {
                const e = parseInt(n, 10);
                  const t = ms(i[0]);
                Ni(r, "left", `${e - o * t  }px`);
              }),
              u.state.currentScreen.set(u.state.currentScreen.get() + o));
          });
        };
        const c = function (r) {
          const n = Ki(r.element(), "input");
          T.from(n[u.state.currentScreen.get()]).each(function (n) {
            r.getSystem()
              .getByDom(n)
              .each(function (n) {
                let e; let t;
                (e = r),
                  (t = n.element()),
                  e.getSystem().triggerFocus(t, e.element());
              });
          });
          const e = f.get(r);
          Bu.highlightAt(e, u.state.currentScreen.get());
        };
        const a = Zl(
          Zd(function (t) {
            return {
              dom: Af('<div class="${prefix}-serialised-dialog"></div>'),
              components: [
                Td.sketch({
                  dom: Af(
                    '<div class="${prefix}-serialised-dialog-chain" style="left: 0px; position: absolute;"></div>'
                  ),
                  components: pn(u.fields, function (n, e) {
                    return e <= u.maxFieldIndex
                      ? Td.sketch({
                          dom: Af(
                            '<div class="${prefix}-serialised-dialog-screen"></div>'
                          ),
                          components: [
                            o(-1, "previous", e > 0),
                            t.field(n.name, n.spec),
                            o(1, "next", e < u.maxFieldIndex),
                          ],
                        })
                      : t.field(n.name, n.spec);
                  }),
                }),
              ],
              formBehaviours: ro([
                Ei(function (n, e) {
                  let t;
                  (t = e),
                    ru(n.element(), `.${  Mi("serialised-dialog-chain")}`).each(
                      function (n) {
                        Ni(
                          n,
                          "left",
                          `${-u.state.currentScreen.get() * t.width  }px`
                        );
                      }
                    );
                }),
                Sa.config({
                  mode: "special",
                  focusIn (n, e) {
                    c(n);
                  },
                  onTab (n, e) {
                    return i(n, 1), T.some(!0);
                  },
                  onShiftTab (n, e) {
                    return i(n, -1), T.some(!0);
                  },
                }),
                xd("form-events", [
                  $r(function (e, n) {
                    u.state.currentScreen.set(0),
                      u.state.dialogSwipeState.clear();
                    const t = f.get(e);
                    Bu.highlightFirst(t),
                      u.getInitialValue(e).each(function (n) {
                        ss.setValue(e, n);
                      });
                  }),
                  Xr(u.onExecute),
                  Nr(te(), function (n, e) {
                    e.event().raw().propertyName === "left" && c(n);
                  }),
                  Nr(r, function (n, e) {
                    const t = e.event().direction();
                    i(n, t);
                  }),
                ]),
              ]),
            };
          })
        );
        var f = Zl({
          dom: Af('<div class="${prefix}-dot-container"></div>'),
          behaviours: ro([
            Bu.config({
              highlightClass: Mi("dot-active"),
              itemClass: Mi("dot-item"),
            }),
          ]),
          components: On(u.fields, function (n, e) {
            return e <= u.maxFieldIndex
              ? [
                  jf(
                    '<div class="${prefix}-dot-item ${prefix}-icon-full-dot ${prefix}-icon"></div>'
                  ),
                ]
              : [];
          }),
        });
      return {
        dom: Af('<div class="${prefix}-serializer-wrapper"></div>'),
        components: [a.asSpec(), f.asSpec()],
        behaviours: ro([
          Sa.config({
            mode: "special",
            focusIn (n) {
              const e = a.get(n);
              Sa.focusIn(e);
            },
          }),
          xd("serializer-wrapper-events", [
            Nr($n(), function (n, e) {
              const t = e.event();
              u.state.dialogSwipeState.set({
                xValue: t.raw().touches[0].clientX,
                points: [],
              });
            }),
            Nr(Un(), function (n, e) {
              const t = e.event();
              u.state.dialogSwipeState.on(function (n) {
                e.event().prevent(),
                  u.state.dialogSwipeState.set(
                    (function (n, e) {
                      if (e === n.xValue) return n;
                      const t = e - n.xValue > 0 ? 1 : -1;
                        const r = { direction: t, xValue: e };
                      return {
                        xValue: e,
                        points: (n.points.length === 0
                          ? []
                          : n.points[n.points.length - 1].direction === t
                          ? n.points.slice(0, n.points.length - 1)
                          : n.points
                        ).concat([r]),
                      };
                    })(n, t.raw().touches[0].clientX)
                  );
              });
            }),
            Nr(Wn(), function (r, n) {
              u.state.dialogSwipeState.on(function (n) {
                const e = a.get(r);
                  const t =
                    -1 *
                    (function (n) {
                      if (n.points.length === 0) return 0;
                      const e = n.points[0].direction;
                        const t = n.points[n.points.length - 1].direction;
                      return e === -1 && t === -1
                        ? -1
                        : e === 1 && t === 1
                        ? 1
                        : 0;
                    })(n);
                i(e, t);
              });
            }),
          ]),
        ]),
      };
    };
    const rm = V(function (r, o) {
      return [
        {
          label: "the link group",
          items: [
            tm({
              fields: [
                Bd("url", "Type or paste URL"),
                Bd("text", "Link text"),
                Bd("title", "Link title"),
                Bd("target", "Link target"),
                {
                  name: "link",
                  spec: kd.sketch({
                    dom: { tag: "span", styles: { display: "none" } },
                    getInitialValue () {
                      return T.none();
                    },
                  }),
                },
              ],
              maxFieldIndex: ["url", "text", "title", "target"].length - 1,
              getInitialValue () {
                return T.some(gd(o));
              },
              onExecute (n, e) {
                const t = ss.getValue(n);
                hd(o, t), r.restoreToolbar(), o.focus();
              },
            }),
          ],
        },
      ];
    });
    const om = function (r, o) {
      return Pf(o, "link", "link", function () {
        let n;
          let e;
          const t = rm(r, o);
        r.setContextToolbar(t),
          (n = o),
          (e = function () {
            r.focusToolbar();
          }),
          (yd.os.isAndroid() ? bd : f)(e, n),
          vd(o).each(function (n) {
            o.selection.select(n.dom());
          });
      });
    };
    const im = Ar([
      {
        key: ie(),
        value: Vr({
          can (n, e) {
            let t;
              let r;
              const o = e.event().originator();
              const i = e.event().target();
            return (
              (r = i),
              !(Ae((t = o), n.element()) && !Ae(t, r)) ||
                (x.console.warn(
                  `${ie() 
                    } did not get interpreted by the desired target. \nOriginator: ${ 
                    $o(o) 
                    }\nTarget: ${ 
                    $o(i) 
                    }\nCheck the ${ 
                    ie() 
                    } event handlers`
                ),
                !1)
            );
          },
        }),
      },
    ]);
    const um = /* */ Object.freeze({ __proto__: null, events: im });
    const cm = y;
    const am = function (e) {
      const n = function (n) {
        return function () {
          throw new Error(
            `The component must be in a context to send: ${ 
              n 
              }${e ? `\n${  $o(e().element())  } is not in context.` : ""}`
          );
        };
      };
      return {
        debugInfo: O("fake"),
        triggerEvent: n("triggerEvent"),
        triggerFocus: n("triggerFocus"),
        triggerEscape: n("triggerEscape"),
        build: n("build"),
        addToWorld: n("addToWorld"),
        removeFromWorld: n("removeFromWorld"),
        addToGui: n("addToGui"),
        removeFromGui: n("removeFromGui"),
        getByUid: n("getByUid"),
        getByDom: n("getByDom"),
        broadcast: n("broadcast"),
        broadcastOn: n("broadcastOn"),
        broadcastEvent: n("broadcastEvent"),
        isConnected: O(!1),
      };
    };
    const fm = am();
    const sm = function (n, o) {
      const i = {};
      return (
        E(n, function (n, r) {
          E(n, function (n, e) {
            const t = I(i, e).getOr([]);
            i[e] = t.concat([o(r, n)]);
          });
        }),
        i
      );
    };
    const lm = function (u, c, n, a) {
      try {
        const e =
          ((t = n),
          (r = function (n, e) {
            const t = n[c]();
              const r = e[c]();
              const o = a.indexOf(t);
              const i = a.indexOf(r);
            if (o === -1)
              throw new Error(
                `The ordering for ${ 
                  u 
                  } does not have an entry for ${ 
                  t 
                  }.\nOrder specified: ${ 
                  JSON.stringify(a, null, 2)}`
              );
            if (i === -1)
              throw new Error(
                `The ordering for ${ 
                  u 
                  } does not have an entry for ${ 
                  r 
                  }.\nOrder specified: ${ 
                  JSON.stringify(a, null, 2)}`
              );
            return o < i ? -1 : i < o ? 1 : 0;
          }),
          (o = sn.call(t, 0)).sort(r),
          o);
        return mt.value(e);
      } catch (i) {
        return mt.error([i]);
      }
      let t; let r; let o;
    };
    const dm = function (n, e) {
      return (
        (t = b.apply(undefined, [n.handler].concat(e))),
        (r = n.purpose()),
        { cHandler: t, purpose: O(r) }
      );
      let t; let r;
    };
    const mm = function (n) {
      return n.cHandler;
    };
    const gm = function (n, e) {
      return { name: O(n), handler: O(e) };
    };
    const pm = function (n, e, t) {
      let r;
        let o;
        const i = {
          ...t,
          ...((r = n),
          (o = {}),
          hn(e, function (n) {
            o[n.name()] = n.handlers(r);
          }),
          o)
        };
      return sm(i, gm);
    };
    const hm = function (n) {
      let e;
        const i = an((e = n)) ? { can: O(!0), abort: O(!1), run: e } : e;
      return function (n, e) {
        for (var t = [], r = 2; r < arguments.length; r++)
          t[r - 2] = arguments[r];
        const o = [n, e].concat(t);
        i.abort.apply(undefined, o)
          ? e.stop()
          : i.can.apply(undefined, o) && i.run.apply(undefined, o);
      };
    };
    const vm = function (n, e, t) {
      let r;
        let o;
        const i = e[t];
      return i
        ? lm(`Event: ${  t}`, "name", n, i).map(function (n) {
            const e = pn(n, function (n) {
              return n.handler();
            });
            return Br(e);
          })
        : ((r = t),
          (o = n),
          mt.error([
            `The event (${ 
              r 
              }) has more than one behaviour that listens to it.\nWhen this occurs, you must specify an event ordering for the behaviours in your spec (e.g. [ "listing", "toggling" ]).\nThe behaviours that can trigger it are: ${ 
              JSON.stringify(
                pn(o, function (n) {
                  return n.name();
                }),
                null,
                2
              )}`,
          ]));
    };
    const ym = function (n, i) {
      const e = _(n, function (r, o) {
        return (r.length === 1 ? mt.value(r[0].handler()) : vm(r, i, o)).map(
          function (n) {
            const e = hm(n);
              const t =
                r.length > 1
                  ? vn(i[o], function (e) {
                      return gn(r, function (n) {
                        return n.name() === e;
                      });
                    }).join(" > ")
                  : r[0].name();
            return $t(o, { handler: e, purpose: O(t) });
          }
        );
      });
      return Wt(e, {});
    };
    const bm = function (n) {
      return gr(
        "custom.definition",
        or([
          ar(
            "dom",
            "dom",
            Nt(),
            or([
              wr("tag"),
              Dr("styles", {}),
              Dr("classes", []),
              Dr("attributes", {}),
              Tr("value"),
              Tr("innerHtml"),
            ])
          ),
          wr("components"),
          wr("uid"),
          Dr("events", {}),
          Dr("apis", {}),
          ar(
            "eventOrder",
            "eventOrder",
            At.mergeWithThunk(
              O({
                "alloy.execute": [
                  "disabling",
                  "alloy.base.behaviour",
                  "toggling",
                  "typeaheadevents",
                ],
                "alloy.focus": ["alloy.base.behaviour", "focusing", "keying"],
                "alloy.system.init": [
                  "alloy.base.behaviour",
                  "disabling",
                  "toggling",
                  "representing",
                ],
                input: [
                  "alloy.base.behaviour",
                  "representing",
                  "streaming",
                  "invalidating",
                ],
                "alloy.system.detached": [
                  "alloy.base.behaviour",
                  "representing",
                  "item-events",
                  "tooltipping",
                ],
                mousedown: [
                  "focusing",
                  "alloy.base.behaviour",
                  "item-type-events",
                ],
                touchstart: [
                  "focusing",
                  "alloy.base.behaviour",
                  "item-type-events",
                ],
                mouseover: ["item-type-events", "tooltipping"],
                "alloy.receive": ["receiving", "reflecting", "tooltipping"],
              })
            ),
            br()
          ),
          Tr("domModification"),
        ]),
        n
      );
    };
    const xm = function (e, n) {
      hn(n, function (n) {
        xo(e, n);
      });
    };
    const wm = function (e, n) {
      hn(n, function (n) {
        So(e, n);
      });
    };
    const Sm = function (n, e) {
      return (
        (t = n),
        (o = pn((r = e), function (n) {
          return Er(n.name(), [wr("config"), Dr("state", eo)]);
        })),
        (i = gr("component.behaviours", or(o), t.behaviours).fold(
          function (n) {
            throw new Error(
              `${vr(n)  }\nComplete spec:\n${  JSON.stringify(t, null, 2)}`
            );
          },
          function (n) {
            return n;
          }
        )),
        {
          list: r,
          data: C(i, function (n) {
            const e = n.map(function (n) {
              return { config: n.config, state: n.state.init(n.config) };
            });
            return function () {
              return e;
            };
          }),
        }
      );
      let t; let r; let o; let i;
    };
    const Om = function (n) {
      let e;
        let t;
        const r =
          ((e = I(n, "behaviours").getOr({})),
          (t = vn(k(e), function (n) {
            return e[n] !== undefined;
          })),
          pn(t, function (n) {
            return e[n].me;
          }));
      return Sm(n, r);
    };
    const Tm = function (n, e, t) {
      let r;
        let o;
        let i;
        const u = {...(r = n).dom, uid: r.uid,
          domChildren: pn(r.components, function (n) {
            return n.element();
          }),};
        const c = n.domModification.fold(function () {
          return Kr({});
        }, Kr);
        const a = { "alloy.base.modification": c };
        const f =
          e.length > 0
            ? (function (e, n, t, r) {
                const o = { ...n};
                hn(t, function (n) {
                  o[n.name()] = n.exhibit(e, r);
                });
                const i = sm(o, function (n, e) {
                    return { name: n, modification: e };
                  });
                  const u = function (n) {
                    return yn(
                      n,
                      function (n, e) {
                        return {...e.modification, ...n};
                      },
                      {}
                    );
                  };
                  const c = yn(
                    i.classes,
                    function (n, e) {
                      return e.modification.concat(n);
                    },
                    []
                  );
                  const a = u(i.attributes);
                  const f = u(i.styles);
                return Kr({ classes: c, attributes: a, styles: f });
              })(t, a, e, u)
            : c;
      return (
        (i = f),
        ({...(o = u), attributes: {...o.attributes, ...i.attributes},
          styles: {...o.styles, ...i.styles},
          classes: o.classes.concat(i.classes),})
      );
    };
    const km = function (n, e, t) {
      let r;
        let o;
        let i;
        const u = { "alloy.base.behaviour": n.events };
      return (
        (r = t), (o = n.eventOrder), (i = pm(r, e, u)), ym(i, o).getOrDie()
      );
    };
    const Em = function (t) {
      const n = function () {
          return s;
        };
        const r = Do(fm);
        const e = pr(bm(t));
        const o = Om(t);
        const i = o.list;
        const u = o.data;
        const c = (function (n) {
          const e = ke.fromTag(n.tag);
          so(e, n.attributes),
            xm(e, n.classes),
            Pi(e, n.styles),
            n.innerHtml.each(function (n) {
              return zo(e, n);
            });
          const t = n.domChildren;
          return (
            et(e, t),
            n.value.each(function (n) {
              Cd(e, n);
            }),
            n.uid,
            xf(e, n.uid),
            e
          );
        })(Tm(e, i, u));
        const a = km(e, i, u);
        const f = Do(e.components);
        var s = {
          getSystem: r.get,
          config (n) {
            const e = u;
            return (an(e[n.name()])
              ? e[n.name()]
              : function () {
                  throw new Error(
                    `Could not find ${ 
                      n.name() 
                      } in ${ 
                      JSON.stringify(t, null, 2)}`
                  );
                })();
          },
          hasConfigured (n) {
            return an(u[n.name()]);
          },
          spec: O(t),
          readState (n) {
            return u[n]()
              .map(function (n) {
                return n.state.readState();
              })
              .getOr("not enabled");
          },
          getApis () {
            return e.apis;
          },
          connect (n) {
            r.set(n);
          },
          disconnect () {
            r.set(am(n));
          },
          element: O(c),
          syncComponents () {
            const n = Pe(c);
              const e = On(n, function (n) {
                return r
                  .get()
                  .getByDom(n)
                  .fold(
                    function () {
                      return [];
                    },
                    function (n) {
                      return [n];
                    }
                  );
              });
            f.set(e);
          },
          components: f.get,
          events: O(a),
        };
      return s;
    };
    const Cm = function (n) {
      let e;
        const t = cm(n);
        const r = t.events;
        const o = c(t, ["events"]);
        const i = ((e = I(o, "components").getOr([])), pn(e, Im));
        const u = {...o, events: {...um, ...r}, components: i};
      return mt.value(Em(u));
    };
    const Dm = function (n) {
      const e = ke.fromText(n);
      return Mm({ element: e });
    };
    var Mm = function (n) {
      const e = hr("external.component", rr([wr("element"), Tr("uid")]), n);
        const t = Do(am());
      e.uid.each(function (n) {
        xf(e.element, n);
      });
      var r = {
        getSystem: t.get,
        config: T.none,
        hasConfigured: O(!1),
        connect (n) {
          t.set(n);
        },
        disconnect () {
          t.set(
            am(function () {
              return r;
            })
          );
        },
        getApis () {
          return {};
        },
        element: O(e.element),
        spec: O(n),
        readState: O("No state"),
        syncComponents: S,
        components: O([]),
        events: O({}),
      };
      return gf(r);
    };
    const _m = Sf;
    var Im = function (e) {
      return I(e, mf).fold(
        function () {
          const n = e.hasOwnProperty("uid") ? e : ({uid: _m(""), ...e});
          return Cm(n).getOrDie();
        },
        function (n) {
          return n;
        }
      );
    };
    const Fm = gf;
    const Rm = "alloy.item-hover";
    const Vm = "alloy.item-focus";
    const Bm = function (n) {
      (Fo(n.element()).isNone() || Bi.isFocused(n)) &&
        (Bi.isFocused(n) || Bi.focus(n), xe(n, Rm, { item: n }));
    };
    const Am = function (n) {
      xe(n, Vm, { item: n });
    };
    const jm = O(Rm);
    const Nm = O(Vm);
    const Pm = [
      wr("data"),
      wr("components"),
      wr("dom"),
      Dr("hasSubmenu", !1),
      Tr("toggling"),
      Ea("itemBehaviours", [Ti, Bi, Sa, ss]),
      Dr("ignoreFocus", !1),
      Dr("domModification", {}),
      ai("builder", function (n) {
        return {
          dom: n.dom,
          domModification: {...n.domModification, attributes: {
              role: n.toggling.isSome() ? "menuitemcheckbox" : "menuitem",
                  ...n.domModification.attributes,
                "aria-haspopup": n.hasSubmenu,
              ...(n.hasSubmenu ? { "aria-expanded": !1 } : {})
            },},
          behaviours: Ca(n.itemBehaviours, [
            n.toggling.fold(Ti.revoke, function (n) {
              return Ti.config({aria: { mode: "checked" }, ...n});
            }),
            Bi.config({
              ignore: n.ignoreFocus,
              stopMousedown: n.ignoreFocus,
              onFocus (n) {
                Am(n);
              },
            }),
            Sa.config({ mode: "execution" }),
            ss.config({ store: { mode: "memory", initialValue: n.data } }),
            xd("item-type-events", u(_i(), [Nr(Kn(), Bm), Nr(se(), Bi.focus)])),
          ]),
          components: n.components,
          eventOrder: n.eventOrder,
        };
      }),
      Dr("eventOrder", {}),
    ];
    const Hm = [
      wr("dom"),
      wr("components"),
      ai("builder", function (n) {
        return {
          dom: n.dom,
          components: n.components,
          events: Ar([
            ((e = se()),
            Nr(e, function (n, e) {
              e.stop();
            })),
          ]),
        };
        let e;
      }),
    ];
    const zm = function () {
      return "item-widget";
    };
    const Lm = O([
      Za({
        name: "widget",
        overrides (e) {
          return {
            behaviours: ro([
              ss.config({
                store: {
                  mode: "manual",
                  getValue (n) {
                    return e.data;
                  },
                  setValue () {},
                },
              }),
            ]),
          };
        },
      }),
    ]);
    const Gm = [
      wr("uid"),
      wr("data"),
      wr("components"),
      wr("dom"),
      Dr("autofocus", !1),
      Dr("ignoreFocus", !1),
      Ea("widgetBehaviours", [ss, Bi, Sa]),
      Dr("domModification", {}),
      df(Lm()),
      ai("builder", function (t) {
        const n = cf(zm(), t, Lm());
          const e = af(zm(), t, n.internals());
          const r = function (n) {
            return ff(n, t, "widget").map(function (n) {
              return Sa.focusIn(n), n;
            });
          };
          const o = function (n, e) {
            return (
              Qu(e.event().target()) ||
                (t.autofocus && e.setSource(n.element())),
              T.none()
            );
          };
        return {
          dom: t.dom,
          components: e,
          domModification: t.domModification,
          events: Ar([
            Xr(function (n, e) {
              r(n).each(function (n) {
                e.stop();
              });
            }),
            Nr(Kn(), Bm),
            Nr(se(), function (n, e) {
              t.autofocus ? r(n) : Bi.focus(n);
            }),
          ]),
          behaviours: Ca(t.widgetBehaviours, [
            ss.config({ store: { mode: "memory", initialValue: t.data } }),
            Bi.config({
              ignore: t.ignoreFocus,
              onFocus (n) {
                Am(n);
              },
            }),
            Sa.config({
              mode: "special",
              focusIn: t.autofocus
                ? function (n) {
                    r(n);
                  }
                : co(),
              onLeft: o,
              onRight: o,
              onEscape (n, e) {
                return Bi.isFocused(n) || t.autofocus
                  ? (t.autofocus && e.setSource(n.element()), T.none())
                  : (Bi.focus(n), T.some(!0));
              },
            }),
          ]),
        };
      }),
    ];
    const $m = yr("type", { widget: Gm, item: Pm, separator: Hm });
    const Um = O([
      ef({
        factory: {
          sketch (n) {
            const e = hr("menu.spec item", $m, n);
            return e.builder(e);
          },
        },
        name: "items",
        unit: "item",
        defaults (n, e) {
          return e.hasOwnProperty("uid") ? e : ({...e, uid: Sf("item")});
        },
        overrides (n, e) {
          return {
            type: e.type,
            ignoreFocus: n.fakeFocus,
            domModification: { classes: [n.markers.item] },
          };
        },
      }),
    ]);
    const Wm = O([
      wr("value"),
      wr("items"),
      wr("dom"),
      wr("components"),
      Dr("eventOrder", {}),
      Oa("menuBehaviours", [Bu, ss, Od, Sa]),
      Mr(
        "movement",
        { mode: "menu", moveOnTab: !0 },
        yr("mode", {
          grid: [
            si(),
            ai("config", function (n, e) {
              return {
                mode: "flatgrid",
                selector: `.${  n.markers.item}`,
                initSize: {
                  numColumns: e.initSize.numColumns,
                  numRows: e.initSize.numRows,
                },
                focusManager: n.focusManager,
              };
            }),
          ],
          matrix: [
            ai("config", function (n, e) {
              return {
                mode: "matrix",
                selectors: { row: e.rowSelector, cell: `.${  n.markers.item}` },
                focusManager: n.focusManager,
              };
            }),
            wr("rowSelector"),
          ],
          menu: [
            Dr("moveOnTab", !0),
            ai("config", function (n, e) {
              return {
                mode: "menu",
                selector: `.${  n.markers.item}`,
                moveOnTab: e.moveOnTab,
                focusManager: n.focusManager,
              };
            }),
          ],
        })
      ),
      Sr("markers", ei()),
      Dr("fakeFocus", !1),
      Dr("focusManager", ju()),
      oi("onHighlight"),
    ]);
    const Xm = O("alloy.menu-focus");
    const qm = Ff({
      name: "Menu",
      configFields: Wm(),
      partFields: Um(),
      factory (n, e, t, r) {
        return {
          uid: n.uid,
          dom: n.dom,
          markers: n.markers,
          behaviours: ka(n.menuBehaviours, [
            Bu.config({
              highlightClass: n.markers.selectedItem,
              itemClass: n.markers.item,
              onHighlight: n.onHighlight,
            }),
            ss.config({ store: { mode: "memory", initialValue: n.value } }),
            Od.config({ find: T.some }),
            Sa.config(n.movement.config(n, n.movement)),
          ]),
          events: Ar([
            Nr(Nm(), function (e, t) {
              const n = t.event();
              e.getSystem()
                .getByDom(n.target())
                .each(function (n) {
                  Bu.highlight(e, n),
                    t.stop(),
                    xe(e, Xm(), { menu: e, item: n });
                });
            }),
            Nr(jm(), function (n, e) {
              const t = e.event().item();
              Bu.highlight(n, t);
            }),
          ]),
          components: e,
          eventOrder: n.eventOrder,
          domModification: { attributes: { role: "menu" } },
        };
      },
    });
    const Ym = function (n, t) {
      const r = je(t);
        const e = Io(r).bind(function (e) {
          let o;
            let i;
            const n = function (n) {
              return Ae(e, n);
            };
          return n(t)
            ? T.some(t)
            : ((o = n),
              (i = function (n) {
                for (let e = 0; e < n.childNodes.length; e++) {
                  const t = ke.fromDom(n.childNodes[e]);
                  if (o(t)) return T.some(t);
                  const r = i(n.childNodes[e]);
                  if (r.isSome()) return r;
                }
                return T.none();
              })(t.dom()));
        });
        const o = n(t);
      return (
        e.each(function (e) {
          Io(r)
            .filter(function (n) {
              return Ae(n, e);
            })
            .fold(function () {
              Mo(e);
            }, S);
        }),
        o
      );
    };
    const Km = function (n, e, t, r) {
      const o = n.getSystem().build(r);
      at(n, o, t);
    };
    const Jm = function (n, e, t, r) {
      const o = Qm(n);
      xn(o, function (n) {
        return Ae(r.element(), n.element());
      }).each(ft);
    };
    var Qm = function (n, e) {
      return n.components();
    };
    const Zm = function (e, n, t, o, r) {
      const i = Qm(e);
      return T.from(i[o]).map(function (n) {
        return (
          Jm(e, 0, 0, n),
          r.each(function (n) {
            Km(
              e,
              0,
              function (n, e) {
                let t; let r;
                (r = e),
                  He((t = n), o).fold(
                    function () {
                      nt(t, r);
                    },
                    function (n) {
                      Je(n, r);
                    }
                  );
              },
              n
            );
          }),
          n
        );
      });
    };
    const ng = io({
      fields: [],
      name: "replacing",
      apis: /* */ Object.freeze({
        __proto__: null,
        append (n, e, t, r) {
          Km(n, 0, nt, r);
        },
        prepend (n, e, t, r) {
          Km(n, 0, Ze, r);
        },
        remove: Jm,
        replaceAt: Zm,
        replaceBy (e, n, t, r, o) {
          const i = Qm(e);
          return wn(i, r).bind(function (n) {
            return Zm(e, 0, 0, n, o);
          });
        },
        set (e, n, t, r) {
          Ym(function () {
            const n = pn(r, e.getSystem().build);
            ct(e, n);
          }, e.element());
        },
        contents: Qm,
      }),
    });
    var eg = function (t, r, o, n) {
      return I(o, n)
        .bind(function (n) {
          return I(t, n).bind(function (n) {
            const e = eg(t, r, o, n);
            return T.some([n].concat(e));
          });
        })
        .getOr([]);
    };
    const tg = function (n, e) {
      const t = {};
      E(n, function (n, e) {
        hn(n, function (n) {
          t[n] = e;
        });
      });
      const r = e;
        const o = D(e, function (n, e) {
          return { k: n, v: e };
        });
        const i = C(o, function (n, e) {
          return [e].concat(eg(t, r, o, e));
        });
      return C(t, function (n) {
        return I(i, n).getOr([n]);
      });
    };
    const rg = function (n) {
      return n.type === "prepared" ? T.some(n.menu) : T.none();
    };
    const og = {
      init () {
        const i = Do({});
          const u = Do({});
          const c = Do({});
          const a = Do(T.none());
          const f = Do({});
          const s = function (t) {
            return (function (n, e) {
              for (let t = k(n), r = 0, o = t.length; r < o; r++) {
                const i = t[r];
                  const u = n[i];
                if (e(u, i, n)) return T.some(u);
              }
              return T.none();
            })(i.get(), function (n, e) {
              return n === t;
            });
          };
          const l = function (n) {
            return e(n).bind(rg);
          };
          var e = function (n) {
            return I(u.get(), n);
          };
          const t = function (n) {
            return I(i.get(), n);
          };
        return {
          setMenuBuilt (n, e) {
            let t;
            u.set(
              {
                ...u.get(),
                ...(((t = {})[n] = { type: "prepared", menu: e }), t)
              }
            );
          },
          setContents (n, e, t, r) {
            a.set(T.some(n)), i.set(t), u.set(e), f.set(r);
            const o = tg(r, t);
            c.set(o);
          },
          expand (t) {
            return I(i.get(), t).map(function (n) {
              const e = I(c.get(), t).getOr([]);
              return [n].concat(e);
            });
          },
          refresh (n) {
            return I(c.get(), n);
          },
          collapse (n) {
            return I(c.get(), n).bind(function (n) {
              return n.length > 1 ? T.some(n.slice(1)) : T.none();
            });
          },
          lookupMenu: e,
          lookupItem: t,
          otherMenus (n) {
            const e = f.get();
            return En(k(e), n);
          },
          getPrimary () {
            return a.get().bind(l);
          },
          getMenus () {
            return u.get();
          },
          clear () {
            i.set({}), u.set({}), c.set({}), a.set(T.none());
          },
          isClear () {
            return a.get().isNone();
          },
          getTriggeringPath (n, u) {
            const e = vn(t(n).toArray(), function (n) {
              return l(n).isSome();
            });
            return I(c.get(), n).bind(function (n) {
              const i = kn(e.concat(n));
              return (function (n) {
                for (var e = [], t = 0; t < n.length; t++) {
                  const r = n[t];
                  if (!r.isSome()) return T.none();
                  e.push(r.getOrDie());
                }
                return T.some(e);
              })(
                On(i, function (n, e) {
                  return (
                    (t = n),
                    (r = u),
                    (o = i.slice(0, e + 1)),
                    l(t)
                      .bind(function (e) {
                        return s(t).bind(function (n) {
                          return r(n).map(function (n) {
                            return {
                              triggeredMenu: e,
                              triggeringItem: n,
                              triggeringPath: o,
                            };
                          });
                        });
                      })
                      .fold(
                        function () {
                          return a.get().is(n) ? [] : [T.none()];
                        },
                        function (n) {
                          return [T.some(n)];
                        }
                      )
                  );
                  let t; let r; let o;
                })
              );
            });
          },
        };
      },
      extractPreparedMenu: rg,
    };
    const ig = O("collapse-item");
    const ug = If({
      name: "TieredMenu",
      configFields: [
        ci("onExecute"),
        ci("onEscape"),
        ui("onOpenMenu"),
        ui("onOpenSubmenu"),
        oi("onRepositionMenu"),
        oi("onCollapseMenu"),
        Dr("highlightImmediately", !0),
        Or("data", [wr("primary"), wr("menus"), wr("expansions")]),
        Dr("fakeFocus", !1),
        oi("onHighlight"),
        oi("onHover"),
        Or("markers", [wr("backgroundMenu")].concat(Zo()).concat(ni())),
        wr("dom"),
        Dr("navigateOnHover", !0),
        Dr("stayInDom", !1),
        Oa("tmenuBehaviours", [Sa, Bu, Od, ng]),
        Dr("eventOrder", {}),
      ],
      apis: {
        collapseMenu (n, e) {
          n.collapseMenu(e);
        },
        highlightPrimary (n, e) {
          n.highlightPrimary(e);
        },
        repositionMenus (n, e) {
          n.repositionMenus(e);
        },
      },
      factory (c, n) {
        let a;
          let e;
          const i = Do(T.none());
          const o = function (r, o, n) {
            return C(n, function (n, e) {
              const t = function () {
                return qm.sketch(
                  {...n, value: e,
                    markers: c.markers,
                    fakeFocus: c.fakeFocus,
                    onHighlight: c.onHighlight,
                    focusManager: c.fakeFocus
                      ? {
                          get: (o = function (n) {
                            return Bu.getHighlighted(n).map(function (n) {
                              return n.element();
                            });
                          }),
                          set (e, n) {
                            const t = o(e);
                            e.getSystem()
                              .getByDom(n)
                              .fold(S, function (n) {
                                Bu.highlight(e, n);
                              });
                            const r = o(e);
                            Au(e, t, r);
                          },
                        }
                      : ju(),}
                );
                let o;
              };
              return e === o
                ? { type: "prepared", menu: r.getSystem().build(t()) }
                : { type: "notbuilt", nbMenu: t };
            });
          };
          const f = og.init();
          const s = function (n) {
            return ss.getValue(n).value;
          };
          const u = function (n) {
            return C(c.data.menus, function (n, e) {
              return On(n.items, function (n) {
                return n.type === "separator" ? [] : [n.data.value];
              });
            });
          };
          const l = function (e, n) {
            Bu.highlight(e, n),
              Bu.getHighlighted(n)
                .orThunk(function () {
                  return Bu.getFirst(n);
                })
                .each(function (n) {
                  Se(e, n.element(), se());
                });
          };
          const d = function (e, n) {
            return Su(
              pn(n, function (n) {
                return e.lookupMenu(n).bind(function (n) {
                  return n.type === "prepared" ? T.some(n.menu) : T.none();
                });
              })
            );
          };
          const m = function (e, n, t) {
            const r = d(n, n.otherMenus(t));
            hn(r, function (n) {
              wm(n.element(), [c.markers.backgroundMenu]),
                c.stayInDom || ng.remove(e, n);
            });
          };
          const g = function (n, r) {
            let o;
              const e =
                ((o = n),
                i.get().getOrThunk(function () {
                  const t = {};
                    const n = Ki(o.element(), `.${  c.markers.item}`);
                    const e = vn(n, function (n) {
                      return lo(n, "aria-haspopup") === "true";
                    });
                  return (
                    hn(e, function (n) {
                      o.getSystem()
                        .getByDom(n)
                        .each(function (n) {
                          const e = s(n);
                          t[e] = n;
                        });
                    }),
                    i.set(T.some(t)),
                    t
                  );
                }));
            E(e, function (n, e) {
              const t = mn(r, e);
              fo(n.element(), "aria-expanded", t);
            });
          };
          const p = function (r, o, i) {
            return T.from(i[0]).bind(function (n) {
              return o.lookupMenu(n).bind(function (n) {
                if (n.type === "notbuilt") return T.none();
                const e = n.menu;
                  const t = d(o, i.slice(1));
                return (
                  hn(t, function (n) {
                    xo(n.element(), c.markers.backgroundMenu);
                  }),
                  qe(e.element()) || ng.append(r, Fm(e)),
                  wm(e.element(), [c.markers.backgroundMenu]),
                  l(r, e),
                  m(r, o, i),
                  T.some(e)
                );
              });
            });
          };
        ((e = a = a || {})[(e.HighlightSubmenu = 0)] = "HighlightSubmenu"),
          (e[(e.HighlightParent = 1)] = "HighlightParent");
        const h = function (o, i, u) {
            void 0 === u && (u = a.HighlightSubmenu);
            const n = s(i);
            return f.expand(n).bind(function (r) {
              return (
                g(o, r),
                T.from(r[0]).bind(function (t) {
                  return f.lookupMenu(t).bind(function (n) {
                    const e = (function (n, e, t) {
                      if (t.type !== "notbuilt") return t.menu;
                      const r = n.getSystem().build(t.nbMenu());
                      return f.setMenuBuilt(e, r), r;
                    })(o, t, n);
                    return (
                      qe(e.element()) || ng.append(o, Fm(e)),
                      c.onOpenSubmenu(o, i, e, kn(r)),
                      u === a.HighlightSubmenu
                        ? (Bu.highlightFirst(e), p(o, f, r))
                        : (Bu.dehighlightAll(e), T.some(i))
                    );
                  });
                })
              );
            });
          };
          const r = function (e, t) {
            const n = s(t);
            return f.collapse(n).bind(function (n) {
              return (
                g(e, n),
                p(e, f, n).map(function (n) {
                  return c.onCollapseMenu(e, t, n), n;
                })
              );
            });
          };
          const t = function (t) {
            return function (e, n) {
              return ou(n.getSource(), `.${  c.markers.item}`).bind(function (n) {
                return e
                  .getSystem()
                  .getByDom(n)
                  .toOption()
                  .bind(function (n) {
                    return t(e, n).map(function () {
                      return !0;
                    });
                  });
              });
            };
          };
          const v = Ar(
            [
              Nr(Xm(), function (t, r) {
                const n = r.event().item();
                f.lookupItem(s(n)).each(function () {
                  const n = r.event().menu();
                  Bu.highlight(t, n);
                  const e = s(r.event().item());
                  f.refresh(e).each(function (n) {
                    return m(t, f, n);
                  });
                });
              }),
              Xr(function (e, n) {
                const t = n.event().target();
                e.getSystem()
                  .getByDom(t)
                  .each(function (n) {
                    s(n).indexOf("collapse-item") === 0 && r(e, n),
                      h(e, n, a.HighlightSubmenu).fold(
                        function () {
                          c.onExecute(e, n);
                        },
                        function () {}
                      );
                  });
              }),
              $r(function (e, n) {
                let t; let r;
                (t = o(e, c.data.primary, c.data.menus)),
                  (r = u()),
                  f.setContents(c.data.primary, t, c.data.expansions, r),
                  f.getPrimary().each(function (n) {
                    ng.append(e, Fm(n)),
                      c.onOpenMenu(e, n),
                      c.highlightImmediately && l(e, n);
                  });
              }),
            ].concat(
              c.navigateOnHover
                ? [
                    Nr(jm(), function (n, e) {
                      let t;
                        let r;
                        const o = e.event().item();
                      (t = n),
                        (r = s(o)),
                        f.refresh(r).bind(function (n) {
                          return g(t, n), p(t, f, n);
                        }),
                        h(n, o, a.HighlightParent),
                        c.onHover(n, o);
                    }),
                  ]
                : []
            )
          );
          const y = function (n) {
            return Bu.getHighlighted(n).bind(Bu.getHighlighted);
          };
          const b = {
            collapseMenu (e) {
              y(e).each(function (n) {
                r(e, n);
              });
            },
            highlightPrimary (e) {
              f.getPrimary().each(function (n) {
                l(e, n);
              });
            },
            repositionMenus (r) {
              f.getPrimary()
                .bind(function (e) {
                  return y(r)
                    .bind(function (n) {
                      let e;
                        const t = s(n);
                        const r =
                          ((e = f.getMenus()),
                          _(e, function (n) {
                            return n;
                          }));
                        const o = Su(pn(r, og.extractPreparedMenu));
                      return f.getTriggeringPath(t, function (n) {
                        return (
                          (t = n),
                          Dn(o, function (n) {
                            if (!n.getSystem().isConnected()) return T.none();
                            const e = Bu.getCandidates(n);
                            return xn(e, function (n) {
                              return s(n) === t;
                            });
                          })
                        );
                        let t;
                      });
                    })
                    .map(function (n) {
                      return { primary: e, triggeringPath: n };
                    });
                })
                .fold(
                  function () {
                    let n;
                    (n = r),
                      T.from(n.components()[0])
                        .filter(function (n) {
                          return lo(n.element(), "role") === "menu";
                        })
                        .each(function (n) {
                          c.onRepositionMenu(r, n, []);
                        });
                  },
                  function (n) {
                    const e = n.primary;
                      const t = n.triggeringPath;
                    c.onRepositionMenu(r, e, t);
                  }
                );
            },
          };
        return {
          uid: c.uid,
          dom: c.dom,
          markers: c.markers,
          behaviours: ka(c.tmenuBehaviours, [
            Sa.config({
              mode: "special",
              onRight: t(function (n, e) {
                return Qu(e.element()) ? T.none() : h(n, e, a.HighlightSubmenu);
              }),
              onLeft: t(function (n, e) {
                return Qu(e.element()) ? T.none() : r(n, e);
              }),
              onEscape: t(function (n, e) {
                return r(n, e).orThunk(function () {
                  return c.onEscape(n, e).map(function () {
                    return n;
                  });
                });
              }),
              focusIn (e, n) {
                f.getPrimary().each(function (n) {
                  Se(e, n.element(), se());
                });
              },
            }),
            Bu.config({
              highlightClass: c.markers.selectedMenu,
              itemClass: c.markers.menu,
            }),
            Od.config({
              find (n) {
                return Bu.getHighlighted(n);
              },
            }),
            ng.config({}),
          ]),
          eventOrder: c.eventOrder,
          apis: b,
          events: v,
        };
      },
      extraApis: {
        tieredData (n, e, t) {
          return { primary: n, menus: e, expansions: t };
        },
        singleData (n, e) {
          return { primary: n, menus: $t(n, e), expansions: {} };
        },
        collapseItem (n) {
          return { value: Na(ig()), meta: { text: n } };
        },
      },
    });
    const cg = function (n, e, t, r) {
      return I(e.routes, r.start).bind(function (n) {
        return I(n, r.destination);
      });
    };
    const ag = function (n, e, t, r) {
      return cg(0, e, 0, r).bind(function (e) {
        return e.transition.map(function (n) {
          return { transition: n, route: e };
        });
      });
    };
    const fg = function (t, r, n) {
      let e; let o; let i;
      (i = n),
        sg((e = t), (o = r))
          .bind(function (n) {
            return ag(e, o, i, n);
          })
          .each(function (n) {
            const e = n.transition;
            So(t.element(), e.transitionClass),
              po(t.element(), r.destinationAttr);
          });
    };
    var sg = function (e, t, n) {
      const r = e.element();
      return mo(r, t.destinationAttr).map(function (n) {
        return { start: lo(e.element(), t.stateAttr), destination: n };
      });
    };
    const lg = function (n, e, t, r) {
      fg(n, e, t),
        go(n.element(), e.stateAttr) &&
          lo(n.element(), e.stateAttr) !== r &&
          e.onFinish(n, r),
        fo(n.element(), e.stateAttr, r);
    };
    const dg = /* */ Object.freeze({
      __proto__: null,
      findRoute: cg,
      disableTransition: fg,
      getCurrentRoute: sg,
      jumpTo: lg,
      progressTo (t, r, o, i) {
        let e; let u;
        (u = r),
          go((e = t).element(), u.destinationAttr) &&
            (mo(e.element(), u.destinationAttr).each(function (n) {
              fo(e.element(), u.stateAttr, n);
            }),
            po(e.element(), u.destinationAttr));
        let n;
          let c;
          const a =
            ((n = r),
            (c = i),
            { start: lo(t.element(), n.stateAttr), destination: c });
        ag(t, r, o, a).fold(
          function () {
            lg(t, r, o, i);
          },
          function (n) {
            fg(t, r, o);
            const e = n.transition;
            xo(t.element(), e.transitionClass),
              fo(t.element(), r.destinationAttr, i);
          }
        );
      },
      getState (n, e, t) {
        return mo(n.element(), e.stateAttr);
      },
    });
    const mg = /* */ Object.freeze({
      __proto__: null,
      events (o, i) {
        return Ar([
          Nr(te(), function (t, n) {
            const r = n.event().raw();
            sg(t, o).each(function (e) {
              cg(0, o, 0, e).each(function (n) {
                n.transition.each(function (n) {
                  r.propertyName === n.property &&
                    (lg(t, o, i, e.destination), o.onTransition(t, e));
                });
              });
            });
          }),
          $r(function (n, e) {
            lg(n, o, i, o.initialState);
          }),
        ]);
      },
    });
    const gg = [
      Dr("destinationAttr", "data-transitioning-destination"),
      Dr("stateAttr", "data-transitioning-state"),
      wr("initialState"),
      oi("onTransition"),
      oi("onFinish"),
      Sr(
        "routes",
        mr(
          mt.value,
          mr(
            mt.value,
            rr([Cr("transition", [wr("property"), wr("transitionClass")])])
          )
        )
      ),
    ];
    const pg = io({
      fields: gg,
      name: "transitioning",
      active: mg,
      apis: dg,
      extra: {
        createRoutes (n) {
          const r = {};
          return (
            E(n, function (n, e) {
              const t = e.split("<->");
              (r[t[0]] = $t(t[1], n)), (r[t[1]] = $t(t[0], n));
            }),
            r
          );
        },
        createBistate (n, e, t) {
          return Ut([
            { key: n, value: $t(e, t) },
            { key: e, value: $t(n, t) },
          ]);
        },
        createTristate (n, e, t, r) {
          return Ut([
            {
              key: n,
              value: Ut([
                { key: e, value: r },
                { key: t, value: r },
              ]),
            },
            {
              key: e,
              value: Ut([
                { key: n, value: r },
                { key: t, value: r },
              ]),
            },
            {
              key: t,
              value: Ut([
                { key: n, value: r },
                { key: e, value: r },
              ]),
            },
          ]);
        },
      },
    });
    const hg = Mi("scrollable");
    const vg = function (n) {
      xo(n, hg);
    };
    const yg = function (n) {
      So(n, hg);
    };
    const bg = hg;
    const xg = function (n) {
      return I(n, "format").getOr(n.title);
    };
    const wg = function (n, e, t, r, o) {
      return {
        data: { value: n, text: e },
        type: "item",
        dom: { tag: "div", classes: o ? [Mi("styles-item-is-menu")] : [] },
        toggling: {
          toggleOnExecute: !1,
          toggleClass: Mi("format-matches"),
          selected: t,
        },
        itemBehaviours: ro(
          o
            ? []
            : [
                ki(n, function (n, e) {
                  (e ? Ti.on : Ti.off)(n);
                }),
              ]
        ),
        components: [
          { dom: { tag: "div", attributes: { style: r }, innerHtml: e } },
        ],
      };
    };
    const Sg = function (n, e, t, r) {
      return {
        value: n,
        dom: { tag: "div" },
        components: [
          Rf.sketch({
            dom: { tag: "div", classes: [Mi("styles-collapser")] },
            components: r
              ? [
                  {
                    dom: { tag: "span", classes: [Mi("styles-collapse-icon")] },
                  },
                  Dm(n),
                ]
              : [Dm(n)],
            action (n) {
              if (r) {
                const e = t().get(n);
                ug.collapseMenu(e);
              }
            },
          }),
          {
            dom: { tag: "div", classes: [Mi("styles-menu-items-container")] },
            components: [qm.parts().items({})],
            behaviours: ro([
              xd("adhoc-scrollable-menu", [
                $r(function (n, e) {
                  Ni(n.element(), "overflow-y", "auto"),
                    Ni(n.element(), "-webkit-overflow-scrolling", "touch"),
                    vg(n.element());
                }),
                Ur(function (n) {
                  Gi(n.element(), "overflow-y"),
                    Gi(n.element(), "-webkit-overflow-scrolling"),
                    yg(n.element());
                }),
              ]),
            ]),
          },
        ],
        items: e,
        menuBehaviours: ro([
          pg.config({
            initialState: "after",
            routes: pg.createTristate("before", "current", "after", {
              transition: {
                property: "transform",
                transitionClass: "transitioning",
              },
            }),
          }),
        ]),
      };
    };
    const Og = function (r) {
      let o;
        let i;
        let n;
        let e;
        let t;
        const u =
          ((o = r.formats),
          (i = function () {
            return c;
          }),
          (n = Sg(
            "Styles",
            [].concat(
              pn(o.items, function (n) {
                return wg(
                  xg(n),
                  n.title,
                  n.isSelected(),
                  n.getPreview(),
                  R(o.expansions, xg(n))
                );
              })
            ),
            i,
            !1
          )),
          (e = C(o.menus, function (n, e) {
            const t = pn(n, function (n) {
              return wg(
                xg(n),
                n.title,
                n.isSelected !== undefined && n.isSelected(),
                n.getPreview !== undefined ? n.getPreview() : "",
                R(o.expansions, xg(n))
              );
            });
            return Sg(e, t, i, !0);
          })),
          (t = Vt(e, $t("styles", n))),
          { tmenu: ug.tieredData("styles", t, o.expansions) });
        var c = Zl(
          ug.sketch({
            dom: { tag: "div", classes: [Mi("styles-menu")] },
            components: [],
            fakeFocus: !0,
            stayInDom: !0,
            onExecute (n, e) {
              const t = ss.getValue(e);
              return r.handle(e, t.value), T.none();
            },
            onEscape () {
              return T.none();
            },
            onOpenMenu (n, e) {
              const t = ms(n.element());
              ds(e.element(), t), pg.jumpTo(e, "current");
            },
            onOpenSubmenu (n, e, t) {
              const r = ms(n.element());
                const o = tu(e.element(), '[role="menu"]').getOrDie("hacky");
                const i = n.getSystem().getByDom(o).getOrDie();
              ds(t.element(), r),
                pg.progressTo(i, "before"),
                pg.jumpTo(t, "after"),
                pg.progressTo(t, "current");
            },
            onCollapseMenu (n, e, t) {
              const r = tu(e.element(), '[role="menu"]').getOrDie("hacky");
                const o = n.getSystem().getByDom(r).getOrDie();
              pg.progressTo(o, "after"), pg.progressTo(t, "current");
            },
            navigateOnHover: !1,
            highlightImmediately: !0,
            data: u.tmenu,
            markers: {
              backgroundMenu: Mi("styles-background-menu"),
              menu: Mi("styles-menu"),
              selectedMenu: Mi("styles-selected-menu"),
              item: Mi("styles-item"),
              selectedItem: Mi("styles-selected-item"),
            },
          })
        );
      return c.asSpec();
    };
    const Tg = function (n) {
      return R(n, "items")
        ? ((t = Vt(Gt((e = n), ["items"]), { menu: !0 })),
          (r = kg(e.items)),
          {
            item: t,
            menus: Vt(r.menus, $t(e.title, r.items)),
            expansions: Vt(r.expansions, $t(e.title, e.title)),
          })
        : { item: n, menus: {}, expansions: {} };
      let e; let t; let r;
    };
    var kg = function (n) {
      return yn(
        n,
        function (n, e) {
          const t = Tg(e);
          return {
            menus: Vt(n.menus, t.menus),
            items: [t.item].concat(n.items),
            expansions: Vt(n.expansions, t.expansions),
          };
        },
        { menus: {}, expansions: {}, items: [] }
      );
    };
    const Eg = function (u) {
      const c = function (n) {
          return function () {
            return u.formatter.match(n);
          };
        };
        const a = function (n) {
          return function () {
            return u.formatter.getCssText(n);
          };
        };
        var f = function (n) {
          return pn(n, function (n) {
            if (R(n, "items")) {
              const e = f(n.items);
              return Vt(Vt(n, { isSelected: O(!1), getPreview: O("") }), {
                items: e,
              });
            }
            return R(n, "format")
              ? Vt((i = n), {
                  isSelected: c(i.format),
                  getPreview: a(i.format),
                })
              : ((r = Na((t = n).title)),
                (o = Vt(t, { format: r, isSelected: c(r), getPreview: a(r) })),
                u.formatter.register(r, o),
                o);
            let t; let r; let o; let i;
          });
        };
      return f(u.getParam("style_formats", Bo, "array"));
    };
    const Cg = function (t, n, r) {
      let e;
        let o;
        let i;
        const u =
          ((e = t),
          (i = (o = function (n) {
            return On(n, function (n) {
              return n.items === undefined
                ? !R(n, "format") || e.formatter.canApply(n.format)
                  ? [n]
                  : []
                : o(n.items).length > 0
                ? [n]
                : [];
            });
          })(n)),
          kg(i));
      return Og({
        formats: u,
        handle (n, e) {
          t.undoManager.transact(function () {
            Ti.isOn(n) ? t.formatter.remove(e) : t.formatter.apply(e);
          }),
            r();
        },
      });
    };
    const Dg = function (n) {
      const e = n.replace(/\|/g, " ").trim();
      return e.length > 0 ? e.split(/\s+/) : [];
    };
    var Mg = function (n) {
      return On(n, function (n) {
        return (on(n) ? Mg : Dg)(n);
      });
    };
    const _g = function (n) {
      const e = n.getParam("toolbar", Ao, "array");
      return (on(e) ? Mg : Dg)(e);
    };
    const Ig = function (t, o) {
      const n = function (t) {
          return function () {
            return zf(
              (e = t),
              function () {
                n.execCommand(e);
              },
              {},
              (n = o)
            );
            let n; let e;
          };
        };
        const e = function (r) {
          return function () {
            return (
              (n = o),
              (t = Nf((e = r))),
              zf(
                e,
                function () {
                  n.execCommand(e);
                },
                t,
                n
              )
            );
            let n; let e; let t;
          };
        };
        const r = function (n, e, t) {
          return function () {
            return Pf(o, n, e, t);
          };
        };
        const i = n("undo");
        const u = n("redo");
        const c = e("bold");
        const a = e("italic");
        const f = e("underline");
        const s = n("removeformat");
        const l = r("unlink", "link", function () {
          o.execCommand("unlink", null, !1);
        });
        const d = r("unordered-list", "ul", function () {
          o.execCommand("InsertUnorderedList", null, !1);
        });
        const m = r("ordered-list", "ol", function () {
          o.execCommand("InsertOrderedList", null, !1);
        });
        const g = Eg(o);
        const p = function () {
          return Cg(o, g, function () {
            o.fire("scrollIntoView");
          });
        };
        const h = function (n, e) {
          return {
            isSupported () {
              const e = o.ui.registry.getAll().buttons;
              return n.forall(function (n) {
                return R(e, n);
              });
            },
            sketch: e,
          };
        };
      return {
        undo: h(T.none(), i),
        redo: h(T.none(), u),
        bold: h(T.none(), c),
        italic: h(T.none(), a),
        underline: h(T.none(), f),
        removeformat: h(T.none(), s),
        link: h(T.none(), function () {
          return om(t, o);
        }),
        unlink: h(T.none(), l),
        image: h(T.none(), function () {
          return sd(o);
        }),
        bullist: h(T.some("bullist"), d),
        numlist: h(T.some("numlist"), m),
        fontsizeselect: h(T.none(), function () {
          return (
            (n = {
              onChange (n) {
                Kl(e, n);
              },
              getInitialValue () {
                return Yl(e);
              },
            }),
            Ll(
              t,
              "font-size",
              function () {
                return Ql(n);
              },
              (e = o)
            )
          );
          let e; let n;
        }),
        forecolor: h(T.none(), function () {
          return (
            (n = {
              onChange (n, e, t) {
                r.undoManager.transact(function () {
                  r.formatter.apply("forecolor", { value: t }), r.nodeChanged();
                });
              },
              getInitialValue () {
                return -1;
              },
            }),
            Ll(
              t,
              "color-levels",
              function () {
                return Gl(n);
              },
              (r = o)
            )
          );
          let r; let n;
        }),
        styleselect: h(T.none(), function () {
          return zf(
            "style-formats",
            function (n) {
              o.fire("toReading"), t.dropup().appear(p, Ti.on, n);
            },
            ro([
              Ti.config({
                toggleClass: Mi("toolbar-button-selected"),
                toggleOnExecute: !1,
                aria: { mode: "pressed" },
              }),
              di.config({ channels: Ut([Ci(No, Ti.off), Ci(Po, Ti.off)]) }),
            ]),
            o
          );
        }),
      };
    };
    const Fg = function (n) {
      let e;
        let t;
        let r;
        let o;
        let i;
        let u;
        let c;
        const a = ke.fromDom(We(n).getOr(n.target));
        const f = function () {
          return n.stopPropagation();
        };
        const s = function () {
          return n.preventDefault();
        };
        const l = d(s, f);
      return (
        (e = a),
        (t = n.clientX),
        (r = n.clientY),
        (o = f),
        (i = s),
        (u = l),
        (c = n),
        {
          target: O(e),
          x: O(t),
          y: O(r),
          stop: o,
          prevent: i,
          kill: u,
          raw: O(c),
        }
      );
    };
    const Rg = function (n, e, t, r, o) {
      let i;
        let u;
        const c =
          ((i = t),
          (u = r),
          function (n) {
            i(n) && u(Fg(n));
          });
      return n.dom().addEventListener(e, c, o), { unbind: b(Vg, n, e, c, o) };
    };
    var Vg = function (n, e, t, r) {
      n.dom().removeEventListener(e, t, r);
    };
    const Bg = O(!0);
    const Ag = function (n, e, t) {
      return Rg(n, e, Bg, t, !1);
    };
    const jg = function (n, e, t) {
      return Rg(n, e, Bg, t, !0);
    };
    const Ng = tinymce.util.Tools.resolve("tinymce.util.Delay");
    const Pg = function (n) {
      const e = n.matchMedia("(orientation: portrait)").matches;
      return { isPortrait: O(e) };
    };
    const Hg = function (r, e) {
      const n = ke.fromDom(r);
        let o = null;
        const t = Ag(n, "orientationchange", function () {
          Ng.clearInterval(o);
          const n = Pg(r);
          e.onChange(n),
            i(function () {
              e.onReady(n);
            });
        });
        var i = function (n) {
          Ng.clearInterval(o);
          const e = r.innerHeight;
            let t = 0;
          o = Ng.setInterval(function () {
            e !== r.innerHeight
              ? (Ng.clearInterval(o), n(T.some(r.innerHeight)))
              : t > 20 && (Ng.clearInterval(o), n(T.none())),
              t++;
          }, 50);
        };
      return {
        onAdjustment: i,
        destroy () {
          t.unbind();
        },
      };
    };
  const zg = function (n) {
      const e = n.raw();
      return e.touches === undefined || e.touches.length !== 1
        ? T.none()
        : T.some(e.touches[0]);
    };
    const Lg = function (t) {
      const u = Do(T.none());
        const r = Do(!1);
        const o = (function n(t, r) {
          let o = null;
          return {
            cancel () {
              o !== null && (x.clearTimeout(o), (o = null));
            },
            schedule () {
              for (var n = [], e = 0; e < arguments.length; e++)
                n[e] = arguments[e];
              o = x.setTimeout(function () {
                t.apply(null, n), (o = null);
              }, r);
            },
          };
        })(function (n) {
          t.triggerEvent(de(), n), r.set(!0);
        }, 400);
        const i = Ut([
          {
            key: $n(),
            value (t) {
              return (
                zg(t).each(function (n) {
                  o.cancel();
                  const e = { x: n.clientX, y: n.clientY, target: t.target() };
                  o.schedule(t), r.set(!1), u.set(T.some(e));
                }),
                T.none()
              );
            },
          },
          {
            key: Un(),
            value (n) {
              return (
                o.cancel(),
                zg(n).each(function (i) {
                  u.get().each(function (n) {
                    let e; let t; let r; let o;
                    (e = i),
                      (t = n),
                      (r = Math.abs(e.clientX - t.x)),
                      (o = Math.abs(e.clientY - t.y)),
                      (r > 5 || o > 5) && u.set(T.none());
                  });
                }),
                T.none()
              );
            },
          },
          {
            key: Wn(),
            value (e) {
              o.cancel();
              return u
                .get()
                .filter(function (n) {
                  return Ae(n.target, e.target());
                })
                .map(function (n) {
                  return r.get() ? (e.prevent(), !1) : t.triggerEvent(le(), e);
                });
            },
          },
        ]);
      return {
        fireIfReady (e, n) {
          return I(i, n).bind(function (n) {
            return n(e);
          });
        },
      };
    };
    const Gg = function (t) {
      const e = Lg({
        triggerEvent (n, e) {
          t.onTapContent(e);
        },
      });
      return {
        fireTouchstart (n) {
          e.fireIfReady(n, "touchstart");
        },
        onTouchend () {
          return Ag(t.body(), "touchend", function (n) {
            e.fireIfReady(n, "touchend");
          });
        },
        onTouchmove () {
          return Ag(t.body(), "touchmove", function (n) {
            e.fireIfReady(n, "touchmove");
          });
        },
      };
    };
    const $g = Gn().os.version.major >= 6;
    const Ug = function (r, e, t) {
      const o = Gg(r);
        const i = je(e);
        const u = function (n) {
          return !Ae(n.start(), n.finish()) || n.soffset() !== n.foffset();
        };
        const n = function () {
          const n = r.doc().dom().hasFocus() && r.getSelection().exists(u);
          t.getByDom(e).each(
            !0 ===
              (n ||
                Io(i)
                  .filter(function (n) {
                    return Ee(n) === "input";
                  })
                  .exists(function (n) {
                    return n.dom().selectionStart !== n.dom().selectionEnd;
                  }))
              ? Ti.on
              : Ti.off
          );
        };
        const c = [
          Ag(r.body(), "touchstart", function (n) {
            r.onTouchContent(), o.fireTouchstart(n);
          }),
          o.onTouchmove(),
          o.onTouchend(),
          Ag(e, "touchstart", function (n) {
            r.onTouchToolstrip();
          }),
          r.onToReading(function () {
            _o(r.body());
          }),
          r.onToEditing(S),
          r.onScrollToCursor(function (n) {
            n.preventDefault(),
              r.getCursorBox().each(function (n) {
                const e = r.win();
                  const t =
                    n.top() > e.innerHeight || n.bottom() > e.innerHeight
                      ? n.bottom() - e.innerHeight + 50
                      : 0;
                t != 0 && e.scrollTo(e.pageXOffset, e.pageYOffset + t);
              });
          }),
        ].concat(
          !0 == $g
            ? []
            : [
                Ag(ke.fromDom(r.win()), "blur", function () {
                  t.getByDom(e).each(Ti.off);
                }),
                Ag(i, "select", n),
                Ag(r.doc(), "selectionchange", n),
              ]
        );
      return {
        destroy () {
          hn(c, function (n) {
            n.unbind();
          });
        },
      };
    };
    const Wg = function (n, e) {
      const t = parseInt(lo(n, e), 10);
      return isNaN(t) ? 0 : t;
    };
  let Xg;
    let qg;
    const Yg = (function Pv(t, r) {
      const e = function (n) {
        return t(n) ? T.from(n.dom().nodeValue) : T.none();
      };
      return {
        get (n) {
          if (!t(n))
            throw new Error(`Can only get ${  r  } value of a ${  r  } node`);
          return e(n).getOr("");
        },
        getOption: e,
        set (n, e) {
          if (!t(n))
            throw new Error(
              `Can only set raw ${  r  } value of a ${  r  } node`
            );
          n.dom().nodeValue = e;
        },
      };
    })(Me, "text");
    const Kg = function (n) {
      return Ee(n) === "img"
        ? 1
        : ((e = n),
          Yg.getOption(e).fold(
            function () {
              return Pe(n).length;
            },
            function (n) {
              return n.length;
            }
          ));
      let e;
    };
    const Jg = function (n, e, t, r) {
      return { start: O(n), soffset: O(e), finish: O(t), foffset: O(r) };
    };
    const Qg = It([
      { before: ["element"] },
      { on: ["element", "offset"] },
      { after: ["element"] },
    ]);
    const Zg = {
      before: Qg.before,
      on: Qg.on,
      after: Qg.after,
      cata (n, e, t, r) {
        return n.fold(e, t, r);
      },
      getStart (n) {
        return n.fold(y, y, y);
      },
    };
    const np = It([
      { domRange: ["rng"] },
      { relative: ["startSitu", "finishSitu"] },
      { exact: ["start", "soffset", "finish", "foffset"] },
    ]);
    const ep = {
      domRange: np.domRange,
      relative: np.relative,
      exact: np.exact,
      exactFromRange (n) {
        return np.exact(n.start(), n.soffset(), n.finish(), n.foffset());
      },
      getWin (n) {
        let e;
          const t = n.match({
            domRange (n) {
              return ke.fromDom(n.startContainer);
            },
            relative (n, e) {
              return Zg.getStart(n);
            },
            exact (n, e, t, r) {
              return n;
            },
          });
        return (e = t), ke.fromDom(e.dom().ownerDocument.defaultView);
      },
      range: Jg,
    };
    const tp = function (n, e, t) {
      let r;
        let o;
        const i = n.document.createRange();
      return (
        (r = i),
        e.fold(
          function (n) {
            r.setStartBefore(n.dom());
          },
          function (n, e) {
            r.setStart(n.dom(), e);
          },
          function (n) {
            r.setStartAfter(n.dom());
          }
        ),
        (o = i),
        t.fold(
          function (n) {
            o.setEndBefore(n.dom());
          },
          function (n, e) {
            o.setEnd(n.dom(), e);
          },
          function (n) {
            o.setEndAfter(n.dom());
          }
        ),
        i
      );
    };
    const rp = function (n, e, t, r, o) {
      const i = n.document.createRange();
      return i.setStart(e.dom(), t), i.setEnd(r.dom(), o), i;
    };
    const op = function (n) {
      return {
        left: O(n.left),
        top: O(n.top),
        right: O(n.right),
        bottom: O(n.bottom),
        width: O(n.width),
        height: O(n.height),
      };
    };
    const ip = It([
      { ltr: ["start", "soffset", "finish", "foffset"] },
      { rtl: ["start", "soffset", "finish", "foffset"] },
    ]);
    const up = function (n, e, t) {
      return e(
        ke.fromDom(t.startContainer),
        t.startOffset,
        ke.fromDom(t.endContainer),
        t.endOffset
      );
    };
    const cp = function (n, e) {
      let o;
        let t;
        let r;
        const i =
          ((o = n),
          e.match({
            domRange (n) {
              return { ltr: O(n), rtl: T.none };
            },
            relative (n, e) {
              return {
                ltr: V(function () {
                  return tp(o, n, e);
                }),
                rtl: V(function () {
                  return T.some(tp(o, e, n));
                }),
              };
            },
            exact (n, e, t, r) {
              return {
                ltr: V(function () {
                  return rp(o, n, e, t, r);
                }),
                rtl: V(function () {
                  return T.some(rp(o, t, r, n, e));
                }),
              };
            },
          }));
      return (r = (t = i).ltr()).collapsed
        ? t
            .rtl()
            .filter(function (n) {
              return !1 === n.collapsed;
            })
            .map(function (n) {
              return ip.rtl(
                ke.fromDom(n.endContainer),
                n.endOffset,
                ke.fromDom(n.startContainer),
                n.startOffset
              );
            })
            .getOrThunk(function () {
              return up(0, ip.ltr, r);
            })
        : up(0, ip.ltr, r);
    };
    const ap =
      (ip.ltr,
      ip.rtl,
      function (n, e) {
        const t = Ee(n);
        return t === "input"
          ? Zg.after(n)
          : mn(["br", "img"], t)
          ? e === 0
            ? Zg.before(n)
            : Zg.after(n)
          : Zg.on(n, e);
      });
    const fp = function (n, e, t, r) {
      let o;
        let i;
        let u;
        let c;
        let a;
        const f =
          ((i = e),
          (u = t),
          (c = r),
          (a = je((o = n))
            .dom()
            .createRange()).setStart(o.dom(), i),
          a.setEnd(u.dom(), c),
          a);
        const s = Ae(n, t) && e === r;
      return f.collapsed && !s;
    };
    const sp = function (n, e, t, r, o) {
      let i;
        let u;
        const c = rp(n, e, t, r, o);
      (i = n),
        (u = c),
        T.from(i.getSelection()).each(function (n) {
          n.removeAllRanges(), n.addRange(u);
        });
    };
    const lp = function (l, n) {
      return cp(l, n).match({
        ltr (n, e, t, r) {
          sp(l, n, e, t, r);
        },
        rtl (n, e, t, r) {
          let o;
            let i;
            let u;
            let c;
            let a;
            const f = l.getSelection();
          if (f.setBaseAndExtent) f.setBaseAndExtent(n.dom(), e, t.dom(), r);
          else if (f.extend)
            try {
              (i = n),
                (u = e),
                (c = t),
                (a = r),
                (o = f).collapse(i.dom(), u),
                o.extend(c.dom(), a);
            } catch (s) {
              sp(l, t, r, n, e);
            }
          else sp(l, t, r, n, e);
        },
      });
    };
    const dp = function (n, e, t, r, o) {
      let i;
        let u;
        let c;
        let a;
        const f =
          ((i = r), (u = o), (c = ap(e, t)), (a = ap(i, u)), ep.relative(c, a));
      lp(n, f);
    };
    const mp = function (n) {
      const e = ke.fromDom(n.anchorNode);
        const t = ke.fromDom(n.focusNode);
      return fp(e, n.anchorOffset, t, n.focusOffset)
        ? T.some(Jg(e, n.anchorOffset, t, n.focusOffset))
        : (function (n) {
            if (n.rangeCount > 0) {
              const e = n.getRangeAt(0);
                const t = n.getRangeAt(n.rangeCount - 1);
              return T.some(
                Jg(
                  ke.fromDom(e.startContainer),
                  e.startOffset,
                  ke.fromDom(t.endContainer),
                  t.endOffset
                )
              );
            }
            return T.none();
          })(n);
    };
    const gp = function (n) {
      return T.from(n.getSelection())
        .filter(function (n) {
          return n.rangeCount > 0;
        })
        .bind(mp);
    };
    const pp = function (n, e) {
      let i;
        let t;
        let r;
        let o;
        const u = cp((i = n), e).match({
          ltr (n, e, t, r) {
            const o = i.document.createRange();
            return o.setStart(n.dom(), e), o.setEnd(t.dom(), r), o;
          },
          rtl (n, e, t, r) {
            const o = i.document.createRange();
            return o.setStart(t.dom(), r), o.setEnd(n.dom(), e), o;
          },
        });
      return (
        (r = (t = u).getClientRects()),
        (o = r.length > 0 ? r[0] : t.getBoundingClientRect()).width > 0 ||
        o.height > 0
          ? T.some(o).map(op)
          : T.none()
      );
    };
    const hp = function (n) {
      return {
        left: n.left,
        top: n.top,
        right: n.right,
        bottom: n.bottom,
        width: O(2),
        height: n.height,
      };
    };
    const vp = function (n) {
      return {
        left: O(n.left),
        top: O(n.top),
        right: O(n.right),
        bottom: O(n.bottom),
        width: O(n.width),
        height: O(n.height),
      };
    };
    const yp = function (n) {
      const e = n.getSelection();
      return e !== undefined && e.rangeCount > 0
        ? (function (t) {
            if (t.collapsed) {
              const r = ke.fromDom(t.startContainer);
              return Ne(r)
                .bind(function (n) {
                  const e = ep.exact(r, t.startOffset, n, Kg(n));
                  return pp(t.startContainer.ownerDocument.defaultView, e)
                    .map(hp)
                    .map(Cn);
                })
                .getOr([]);
            }
            return pn(t.getClientRects(), vp);
          })(e.getRangeAt(0))
        : [];
    };
    const bp = function (n) {
      n.focus();
      const e = ke.fromDom(n.document.body);
      (Io().exists(function (n) {
        return mn(["input", "textarea"], Ee(n));
      })
        ? function (n) {
            Ng.setTimeout(function () {
              n();
            }, 0);
          }
        : f)(function () {
        Io().each(_o), Mo(e);
      });
    };
    const xp = `data-${  Mi("last-outer-height")}`;
    const wp = function (n, e) {
      fo(n, xp, e);
    };
    const Sp = function (n) {
      return { top: O(n.top()), bottom: O(n.top() + n.height()) };
    };
    const Op = function (n, e) {
      const t = Wg(e, xp);
        const r = n.innerHeight;
      return r < t ? T.some(t - r) : T.none();
    };
    const Tp = function (n, u) {
      const e = ke.fromDom(u.document.body);
        const t = Ag(ke.fromDom(n), "resize", function () {
          Op(n, e).each(function (i) {
            let n;
            ((n = yp(u)).length > 0 ? T.some(n[0]).map(Sp) : T.none()).each(
              function (n) {
                let e;
                  let t;
                  let r;
                  const o =
                    ((e = u),
                    (r = i),
                    (t = n).top() > e.innerHeight || t.bottom() > e.innerHeight
                      ? Math.min(r, t.bottom() - e.innerHeight + 50)
                      : 0);
                o !== 0 && u.scrollTo(u.pageXOffset, u.pageYOffset + o);
              }
            );
          }),
            wp(e, n.innerHeight);
        });
      wp(e, n.innerHeight);
      return {
        toEditing () {
          bp(u);
        },
        destroy () {
          t.unbind();
        },
      };
    };
    const kp = function (n) {
      return T.from(n.dom().contentWindow);
    };
    const Ep = function (n) {
      return kp(n).bind(gp);
    };
    const Cp = function (n) {
      return n.getFrame();
    };
    const Dp = function (n, e, t, r) {
      return n[t].getOrThunk(function () {
        return function (n) {
          return Ag(e, r, n);
        };
      });
    };
    const Mp = function (n) {
      return {
        left: O(n.left),
        top: O(n.top),
        right: O(n.right),
        bottom: O(n.bottom),
        width: O(n.width),
        height: O(n.height),
      };
    };
    const _p = function (c) {
      let n;
        const a = Cp(c);
      return (
        (n = a),
        T.some(ke.fromDom(n.dom().contentWindow.document.body)).bind(function (
          u
        ) {
          return (
            (n = a),
            T.some(ke.fromDom(n.dom().contentWindow.document)).bind(function (
              i
            ) {
              return kp(a).map(function (o) {
                const n = ke.fromDom(i.dom().documentElement);
                  const e = c.getCursorBox.getOrThunk(function () {
                    return function () {
                      return gp(o)
                        .map(function (n) {
                          return ep.exact(
                            n.start(),
                            n.soffset(),
                            n.finish(),
                            n.foffset()
                          );
                        })
                        .bind(function (n) {
                          return pp(o, n).orThunk(function () {
                            return gp(o)
                              .filter(function (n) {
                                return (
                                  Ae(n.start(), n.finish()) &&
                                  n.soffset() === n.foffset()
                                );
                              })
                              .bind(function (n) {
                                const e = n.start().dom().getBoundingClientRect();
                                return e.width > 0 || e.height > 0
                                  ? T.some(e).map(Mp)
                                  : T.none();
                              });
                          });
                        });
                    };
                  });
                  const t = c.setSelection.getOrThunk(function () {
                    return function (n, e, t, r) {
                      dp(o, n, e, t, r);
                    };
                  });
                  const r = c.clearSelection.getOrThunk(function () {
                    return function () {
                      o.getSelection().removeAllRanges();
                    };
                  });
                return {
                  body: O(u),
                  doc: O(i),
                  win: O(o),
                  html: O(n),
                  getSelection: b(Ep, a),
                  setSelection: t,
                  clearSelection: r,
                  frame: O(a),
                  onKeyup: Dp(c, i, "onKeyup", "keyup"),
                  onNodeChanged: Dp(c, i, "onNodeChanged", "SelectionChange"),
                  onDomChanged: c.onDomChanged,
                  onScrollToCursor: c.onScrollToCursor,
                  onScrollToElement: c.onScrollToElement,
                  onToReading: c.onToReading,
                  onToEditing: c.onToEditing,
                  onToolbarScrollStart: c.onToolbarScrollStart,
                  onTouchContent: c.onTouchContent,
                  onTapContent: c.onTapContent,
                  onTouchToolstrip: c.onTouchToolstrip,
                  getCursorBox: e,
                };
              });
            })
          );
          let n;
        })
      );
    };
    const Ip =
      ((Xg = "getWin"),
      (qg = kp),
      function (e) {
        return e[Xg].getOrThunk(function () {
          const n = Cp(e);
          return function () {
            return qg(n);
          };
        })();
      });
    const Fp = "data-ephox-mobile-fullscreen-style";
    const Rp = "position:absolute!important;";
    const Vp =
      "top:0!important;left:0!important;margin:0!important;padding:0!important;width:100%!important;height:100%!important;overflow:visible!important;";
    const Bp = Gn().os.isAndroid();
    const Ap = function (n, e) {
      let t;
        let r;
        let o;
        const i = function (r) {
          return function (n) {
            const e = lo(n, "style");
              const t = e === undefined ? "no-styles" : e.trim();
            t !== r && (fo(n, Fp, t), fo(n, "style", r));
          };
        };
        const u =
          ((t = "*"),
          qi(
            n,
            function (n) {
              return Fe(n, t);
            },
            r
          ));
        const c = On(u, function (n) {
          return (
            (e = "*"),
            Yi(n, function (n) {
              return Fe(n, e);
            })
          );
          let e;
        });
        const a =
          (o = Hi(e, "background-color")) !== undefined && o !== ""
            ? `background-color:${  o  }!important`
            : "background-color:rgb(255,255,255)!important;";
      hn(c, i("display:none!important;")),
        hn(u, i(Rp + Vp + a)),
        i((!0 === Bp ? "" : Rp) + Vp + a)(n);
    };
    const jp = function () {
      const n = Ve(`[${  Fp  }]`);
      hn(n, function (n) {
        const e = lo(n, Fp);
        e !== "no-styles" ? fo(n, "style", e) : po(n, "style"), po(n, Fp);
      });
    };
    const Np = function () {
      const e = eu("head").getOrDie();
        const n = eu('meta[name="viewport"]').getOrThunk(function () {
          const n = ke.fromTag("meta");
          return fo(n, "name", "viewport"), nt(e, n), n;
        });
        const t = lo(n, "content");
      return {
        maximize () {
          fo(
            n,
            "content",
            "width=device-width, initial-scale=1.0, user-scalable=no, maximum-scale=1.0"
          );
        },
        restore () {
          t !== undefined && t !== null && t.length > 0
            ? fo(n, "content", t)
            : fo(n, "content", "user-scalable=yes");
        },
      };
    };
    const Pp = function (t, r) {
      let o = null;
      return {
        cancel () {
          o !== null && (x.clearTimeout(o), (o = null));
        },
        throttle () {
          for (var n = [], e = 0; e < arguments.length; e++)
            n[e] = arguments[e];
          o !== null && x.clearTimeout(o),
            (o = x.setTimeout(function () {
              t.apply(null, n), (o = null);
            }, r));
        },
      };
    };
    const Hp = function (n, e) {
      let t;
        let r;
        let o;
        const i = Zl(
          Td.sketch({
            dom: Af(
              '<div aria-hidden="true" class="${prefix}-mask-tap-icon"></div>'
            ),
            containerBehaviours: ro([
              Ti.config({
                toggleClass: Mi("mask-tap-icon-selected"),
                toggleOnExecute: !1,
              }),
            ]),
          })
        );
        const u =
          ((t = n),
          (r = 200),
          (o = null),
          {
            cancel () {
              o !== null && (x.clearTimeout(o), (o = null));
            },
            throttle () {
              for (var n = [], e = 0; e < arguments.length; e++)
                n[e] = arguments[e];
              o === null &&
                (o = x.setTimeout(function () {
                  t.apply(null, n), (o = null);
                }, r));
            },
          });
      return Td.sketch({
        dom: Af('<div class="${prefix}-disabled-mask"></div>'),
        components: [
          Td.sketch({
            dom: Af('<div class="${prefix}-content-container"></div>'),
            components: [
              Rf.sketch({
                dom: Af('<div class="${prefix}-content-tap-section"></div>'),
                components: [i.asSpec()],
                action (n) {
                  u.throttle();
                },
                buttonBehaviours: ro([
                  Ti.config({ toggleClass: Mi("mask-tap-icon-selected") }),
                ]),
              }),
            ],
          }),
        ],
      });
    };
    const zp = or([
      Or("editor", [
        wr("getFrame"),
        Tr("getBody"),
        Tr("getDoc"),
        Tr("getWin"),
        Tr("getSelection"),
        Tr("setSelection"),
        Tr("clearSelection"),
        Tr("cursorSaver"),
        Tr("onKeyup"),
        Tr("onNodeChanged"),
        Tr("getCursorBox"),
        wr("onDomChanged"),
        Dr("onTouchContent", S),
        Dr("onTapContent", S),
        Dr("onTouchToolstrip", S),
        Dr("onScrollToCursor", O({ unbind: S })),
        Dr("onScrollToElement", O({ unbind: S })),
        Dr("onToEditing", O({ unbind: S })),
        Dr("onToReading", O({ unbind: S })),
        Dr("onToolbarScrollStart", y),
      ]),
      wr("socket"),
      wr("toolstrip"),
      wr("dropup"),
      wr("toolbar"),
      wr("container"),
      wr("alloy"),
      _r("win", function (n) {
        return je(n.socket).dom().defaultView;
      }),
      _r("body", function (n) {
        return ke.fromDom(n.socket.dom().ownerDocument.body);
      }),
      Dr("translate", y),
      Dr("setReadOnly", S),
      Dr("readOnlyOnInit", O(!0)),
    ]);
    const Lp = function (n) {
      const e = hr("Getting AndroidWebapp schema", zp, n);
      Ni(e.toolstrip, "width", "100%");
      const t = Im(
        Hp(function () {
          e.setReadOnly(e.readOnlyOnInit()), f.enter();
        }, e.translate)
      );
      e.alloy.add(t);
      const r = {
        show () {
          e.alloy.add(t);
        },
        hide () {
          e.alloy.remove(t);
        },
      };
      nt(e.container, t.element());
      let o;
        let i;
        let u;
        let c;
        let a;
        var f =
          ((o = e),
          (i = r),
          (u = Np()),
          (c = nm()),
          (a = nm()),
          {
            enter () {
              i.hide(),
                xo(o.container, Mi("fullscreen-maximized")),
                xo(o.container, Mi("android-maximized")),
                u.maximize(),
                xo(o.body, Mi("android-scroll-reload")),
                c.set(Tp(o.win, Ip(o.editor).getOrDie("no"))),
                _p(o.editor).each(function (n) {
                  Ap(o.container, n.body()), a.set(Ug(n, o.toolstrip, o.alloy));
                });
            },
            exit () {
              u.restore(),
                i.show(),
                So(o.container, Mi("fullscreen-maximized")),
                So(o.container, Mi("android-maximized")),
                jp(),
                So(o.body, Mi("android-scroll-reload")),
                a.clear(),
                c.clear();
            },
          });
      return {
        setReadOnly: e.setReadOnly,
        refreshStructure: S,
        enter: f.enter,
        exit: f.exit,
        destroy: S,
      };
    };
    const Gp = O([wr("dom"), Dr("shell", !0), Oa("toolbarBehaviours", [ng])]);
    const $p = O([
      nf({
        name: "groups",
        overrides () {
          return { behaviours: ro([ng.config({})]) };
        },
      }),
    ]);
    const Up = Ff({
      name: "Toolbar",
      configFields: Gp(),
      partFields: $p(),
      factory (e, n, t, r) {
        const o = function (n) {
            return e.shell ? T.some(n) : ff(n, e, "groups");
          };
          const i = e.shell
            ? { behaviours: [ng.config({})], components: [] }
            : { behaviours: [], components: n };
        return {
          uid: e.uid,
          dom: e.dom,
          components: i.components,
          behaviours: ka(e.toolbarBehaviours, i.behaviours),
          apis: {
            setGroups (n, e) {
              o(n).fold(
                function () {
                  throw (
                    (x.console.error(
                      "Toolbar was defined to not be a shell, but no groups container was specified in components"
                    ),
                    new Error(
                      "Toolbar was defined to not be a shell, but no groups container was specified in components"
                    ))
                  );
                },
                function (n) {
                  ng.set(n, e);
                }
              );
            },
          },
          domModification: { attributes: { role: "group" } },
        };
      },
      apis: {
        setGroups (n, e, t) {
          n.setGroups(e, t);
        },
      },
    });
    const Wp = O([
      wr("items"),
      Or("markers", pn(["itemSelector"], wr)),
      Oa("tgroupBehaviours", [Sa]),
    ]);
    const Xp = O([ef({ name: "items", unit: "item" })]);
    const qp = Ff({
      name: "ToolbarGroup",
      configFields: Wp(),
      partFields: Xp(),
      factory (n, e, t, r) {
        return {
          uid: n.uid,
          dom: n.dom,
          components: e,
          behaviours: ka(n.tgroupBehaviours, [
            Sa.config({ mode: "flow", selector: n.markers.itemSelector }),
          ]),
          domModification: { attributes: { role: "toolbar" } },
        };
      },
    });
    const Yp = `data-${  Mi("horizontal-scroll")}`;
    const Kp = function (n) {
      fo(n, Yp, "true");
    };
    const Jp = function (n) {
      return lo(n, Yp) === "true"
        ? (t = n).dom().scrollLeft > 0 ||
            (function (n) {
              n.dom().scrollLeft = 1;
              const e = n.dom().scrollLeft !== 0;
              return (n.dom().scrollLeft = 0), e;
            })(t)
        : (e = n).dom().scrollTop > 0 ||
            (function (n) {
              n.dom().scrollTop = 1;
              const e = n.dom().scrollTop !== 0;
              return (n.dom().scrollTop = 0), e;
            })(e);
      let e; let t;
    };
  function Qp() {
    const e = function (n) {
        const e = !0 === n.scrollable ? "${prefix}-toolbar-scrollable-group" : "";
        return {
          dom: Af(
            `<div aria-label="${ 
              n.label 
              }" class="\${prefix}-toolbar-group ${ 
              e 
              }"></div>`
          ),
          tgroupBehaviours: ro([
            xd(
              "adhoc-scrollable-toolbar",
              !0 === n.scrollable
                ? [
                    Wr(function (n, e) {
                      Ni(n.element(), "overflow-x", "auto"),
                        Kp(n.element()),
                        vg(n.element());
                    }),
                  ]
                : []
            ),
          ]),
          components: [Td.sketch({ components: [qp.parts().items({})] })],
          markers: { itemSelector: `.${  Mi("toolbar-group-item")}` },
          items: n.items,
        };
      };
      const t = Im(
        Up.sketch({
          dom: Af('<div class="${prefix}-toolbar"></div>'),
          components: [Up.parts().groups({})],
          toolbarBehaviours: ro([
            Ti.config({
              toggleClass: Mi("context-toolbar"),
              toggleOnExecute: !1,
              aria: { mode: "none" },
            }),
            Sa.config({ mode: "cyclic" }),
          ]),
          shell: !0,
        })
      );
      const n = Im(
        Td.sketch({
          dom: { classes: [Mi("toolstrip")] },
          components: [Fm(t)],
          containerBehaviours: ro([
            Ti.config({
              toggleClass: Mi("android-selection-context-toolbar"),
              toggleOnExecute: !1,
            }),
          ]),
        })
      );
      const r = function () {
        Up.setGroups(t, o.get()), Ti.off(t);
      };
      var o = Do([]);
    return {
      wrapper: O(n),
      toolbar: O(t),
      createGroups (n) {
        return pn(n, d(qp.sketch, e));
      },
      setGroups (n) {
        o.set(n), r();
      },
      setContextToolbar (n) {
        Ti.on(t), Up.setGroups(t, n);
      },
      restoreToolbar () {
        Ti.isOn(t) && r();
      },
      refresh () {},
      focus () {
        Sa.focusIn(t);
      },
    };
  }
  const Zp = function (n) {
      return Im(
        Rf.sketch({
          dom: Af(
            '<div class="${prefix}-mask-edit-icon ${prefix}-icon"></div>'
          ),
          action () {
            n.run(function (n) {
              n.setReadOnly(!1);
            });
          },
        })
      );
    };
    const nh = function () {
      return Im(
        Td.sketch({
          dom: Af('<div class="${prefix}-editor-socket"></div>'),
          components: [],
          containerBehaviours: ro([ng.config({})]),
        })
      );
    };
    const eh = function (n, e) {
      ng.append(n, Fm(e));
    };
    const th = function (n, e) {
      ng.remove(n, e);
    };
    const rh = function (n, e, t, r) {
      (!0 === t ? Co.toAlpha : Co.toOmega)(r), (t ? eh : th)(n, e);
    };
    const oh = function (e, n) {
      return n.getAnimationRoot.fold(
        function () {
          return e.element();
        },
        function (n) {
          return n(e);
        }
      );
    };
    const ih = function (n) {
      return n.dimension.property;
    };
    const uh = function (n, e) {
      return n.dimension.getDimension(e);
    };
    const ch = function (n, e) {
      const t = oh(n, e);
      wm(t, [e.shrinkingClass, e.growingClass]);
    };
    const ah = function (n, e) {
      So(n.element(), e.openClass),
        xo(n.element(), e.closedClass),
        Ni(n.element(), ih(e), "0px"),
        $i(n.element());
    };
    const fh = function (n, e) {
      So(n.element(), e.closedClass),
        xo(n.element(), e.openClass),
        Gi(n.element(), ih(e));
    };
    const sh = function (n, e, t, r) {
      t.setCollapsed(),
        Ni(n.element(), ih(e), uh(e, n.element())),
        $i(n.element()),
        ch(n, e),
        ah(n, e),
        e.onStartShrink(n),
        e.onShrunk(n);
    };
    const lh = function (n, e, t, r) {
      const o = r.getOrThunk(function () {
        return uh(e, n.element());
      });
      t.setCollapsed(), Ni(n.element(), ih(e), o), $i(n.element());
      const i = oh(n, e);
      So(i, e.growingClass),
        xo(i, e.shrinkingClass),
        ah(n, e),
        e.onStartShrink(n);
    };
    const dh = function (n, e, t) {
      const r = uh(e, n.element());
      (r === "0px" ? sh : lh)(n, e, t, T.some(r));
    };
    const mh = function (n, e, t) {
      const r = oh(n, e);
        const o = Oo(r, e.shrinkingClass);
        const i = uh(e, n.element());
      fh(n, e);
      const u = uh(e, n.element());
      (o
        ? function () {
            Ni(n.element(), ih(e), i), $i(n.element());
          }
        : function () {
            ah(n, e);
          })(),
        So(r, e.shrinkingClass),
        xo(r, e.growingClass),
        fh(n, e),
        Ni(n.element(), ih(e), u),
        t.setExpanded(),
        e.onStartGrow(n);
    };
    const gh = function (n, e, t) {
      const r = oh(n, e);
      return !0 === Oo(r, e.growingClass);
    };
    const ph = function (n, e, t) {
      const r = oh(n, e);
      return !0 === Oo(r, e.shrinkingClass);
    };
    const hh = /* */ Object.freeze({
      __proto__: null,
      refresh (n, e, t) {
        if (t.isExpanded()) {
          Gi(n.element(), ih(e));
          const r = uh(e, n.element());
          Ni(n.element(), ih(e), r);
        }
      },
      grow (n, e, t) {
        t.isExpanded() || mh(n, e, t);
      },
      shrink (n, e, t) {
        t.isExpanded() && dh(n, e, t);
      },
      immediateShrink (n, e, t) {
        t.isExpanded() && sh(n, e, t, T.none());
      },
      hasGrown (n, e, t) {
        return t.isExpanded();
      },
      hasShrunk (n, e, t) {
        return t.isCollapsed();
      },
      isGrowing: gh,
      isShrinking: ph,
      isTransitioning (n, e, t) {
        return !0 === gh(n, e) || !0 === ph(n, e);
      },
      toggleGrow (n, e, t) {
        (t.isExpanded() ? dh : mh)(n, e, t);
      },
      disableTransitions: ch,
    });
    const vh = /* */ Object.freeze({
      __proto__: null,
      exhibit (n, e, t) {
        const r = e.expanded;
        return Kr(
          r
            ? { classes: [e.openClass], styles: {} }
            : {
                classes: [e.closedClass],
                styles: $t(e.dimension.property, "0px"),
              }
        );
      },
      events (t, r) {
        return Ar([
          ((n = te()),
          Hr(n)(function (n, e) {
            e.event().raw().propertyName === t.dimension.property &&
              (ch(n, t),
              r.isExpanded() && Gi(n.element(), t.dimension.property),
              (r.isExpanded() ? t.onGrown : t.onShrunk)(n));
          })),
        ]);
        let n;
      },
    });
    const yh = [
      wr("closedClass"),
      wr("openClass"),
      wr("shrinkingClass"),
      wr("growingClass"),
      Tr("getAnimationRoot"),
      oi("onShrunk"),
      oi("onStartShrink"),
      oi("onGrown"),
      oi("onStartGrow"),
      Dr("expanded", !1),
      Sr(
        "dimension",
        yr("property", {
          width: [
            ai("property", "width"),
            ai("getDimension", function (n) {
              return `${ms(n)  }px`;
            }),
          ],
          height: [
            ai("property", "height"),
            ai("getDimension", function (n) {
              return `${Xi(n)  }px`;
            }),
          ],
        })
      ),
    ];
    const bh = io({
      fields: yh,
      name: "sliding",
      active: vh,
      apis: hh,
      state: /* */ Object.freeze({
        __proto__: null,
        init (n) {
          const e = Do(n.expanded);
          return to({
            isExpanded () {
              return !0 === e.get();
            },
            isCollapsed () {
              return !1 === e.get();
            },
            setCollapsed: b(e.set, !1),
            setExpanded: b(e.set, !0),
            readState () {
              return `expanded: ${  e.get()}`;
            },
          });
        },
      }),
    });
    const xh = function (e, t) {
      const r = Im(
          Td.sketch({
            dom: { tag: "div", classes: [Mi("dropup")] },
            components: [],
            containerBehaviours: ro([
              ng.config({}),
              bh.config({
                closedClass: Mi("dropup-closed"),
                openClass: Mi("dropup-open"),
                shrinkingClass: Mi("dropup-shrinking"),
                growingClass: Mi("dropup-growing"),
                dimension: { property: "height" },
                onShrunk (n) {
                  e(), t(), ng.set(n, []);
                },
                onGrown (n) {
                  e(), t();
                },
              }),
              Ei(function (n, e) {
                o(S);
              }),
            ]),
          })
        );
        var o = function (n) {
          x.window.requestAnimationFrame(function () {
            n(), bh.shrink(r);
          });
        };
      return {
        appear (n, e, t) {
          !0 === bh.hasShrunk(r) &&
            !1 === bh.isTransitioning(r) &&
            x.window.requestAnimationFrame(function () {
              e(t), ng.set(r, [n()]), bh.grow(r);
            });
        },
        disappear: o,
        component: O(r),
        element: r.element,
      };
    };
    const wh = function (n) {
      let e; let t;
      return (
        n.raw().which === 8 &&
        !mn(["input", "textarea"], Ee(n.target())) &&
        ((e = n.target()), !ou(e, '[contenteditable="true"]', t).isSome())
      );
    };
    const Sh = function () {
      return Gn().browser.isFirefox();
    };
    const Oh = rr([Sr("triggerEvent", xr), Dr("stopBackspace", !0)]);
    const Th = function (e, n) {
      let t;
        let r;
        let o;
        let i;
        const u = hr("Getting GUI events settings", Oh, n);
        const c = Lg(u);
        const a = pn(
          [
            "touchstart",
            "touchmove",
            "touchend",
            "touchcancel",
            "gesturestart",
            "mousedown",
            "mouseup",
            "mouseover",
            "mousemove",
            "mouseout",
            "click",
          ].concat([
            "selectstart",
            "input",
            "contextmenu",
            "change",
            "transitionend",
            "drag",
            "dragstart",
            "dragend",
            "dragenter",
            "dragleave",
            "dragover",
            "drop",
            "keyup",
          ]),
          function (n) {
            return Ag(e, n, function (e) {
              c.fireIfReady(e, n).each(function (n) {
                n && e.kill();
              }),
                u.triggerEvent(n, e) && e.kill();
            });
          }
        );
        const f = Do(T.none());
        const s = Ag(e, "paste", function (e) {
          c.fireIfReady(e, "paste").each(function (n) {
            n && e.kill();
          }),
            u.triggerEvent("paste", e) && e.kill(),
            f.set(
              T.some(
                x.setTimeout(function () {
                  u.triggerEvent(ce(), e);
                }, 0)
              )
            );
        });
        const l = Ag(e, "keydown", function (n) {
          u.triggerEvent("keydown", n)
            ? n.kill()
            : !0 === u.stopBackspace && wh(n) && n.prevent();
        });
        const d =
          ((t = e),
          (r = function (n) {
            u.triggerEvent("focusin", n) && n.kill();
          }),
          Sh() ? jg(t, "focus", r) : Ag(t, "focusin", r));
        const m = Do(T.none());
        const g =
          ((o = e),
          (i = function (n) {
            u.triggerEvent("focusout", n) && n.kill(),
              m.set(
                T.some(
                  x.setTimeout(function () {
                    u.triggerEvent(ue(), n);
                  }, 0)
                )
              );
          }),
          Sh() ? jg(o, "blur", i) : Ag(o, "focusout", i));
      return {
        unbind () {
          hn(a, function (n) {
            n.unbind();
          }),
            l.unbind(),
            d.unbind(),
            g.unbind(),
            s.unbind(),
            f.get().each(x.clearTimeout),
            m.get().each(x.clearTimeout);
        },
      };
    };
    const kh = function (n, e) {
      const t = I(n, "target")
        .map(function (n) {
          return n();
        })
        .getOr(e);
      return Do(t);
    };
    const Eh = It([{ stopped: [] }, { resume: ["element"] }, { complete: [] }]);
    const Ch = function (n, r, e, t, o, i) {
      let u;
        let c;
        let a;
        let f;
        const s = n(r, t);
        const l =
          ((u = e),
          (c = o),
          (a = Do(!1)),
          (f = Do(!1)),
          {
            stop () {
              a.set(!0);
            },
            cut () {
              f.set(!0);
            },
            isStopped: a.get,
            isCut: f.get,
            event: O(u),
            setSource: c.set,
            getSource: c.get,
          });
      return s.fold(
        function () {
          return i.logEventNoHandlers(r, t), Eh.complete();
        },
        function (e) {
          const t = e.descHandler;
          return (
            mm(t)(l),
            l.isStopped()
              ? (i.logEventStopped(r, e.element, t.purpose()), Eh.stopped())
              : l.isCut()
              ? (i.logEventCut(r, e.element, t.purpose()), Eh.complete())
              : Ne(e.element).fold(
                  function () {
                    return (
                      i.logNoParent(r, e.element, t.purpose()), Eh.complete()
                    );
                  },
                  function (n) {
                    return (
                      i.logEventResponse(r, e.element, t.purpose()),
                      Eh.resume(n)
                    );
                  }
                )
          );
        }
      );
    };
    var Dh = function (e, t, r, n, o, i) {
      return Ch(e, t, r, n, o, i).fold(
        function () {
          return !0;
        },
        function (n) {
          return Dh(e, t, r, n, o, i);
        },
        function () {
          return !1;
        }
      );
    };
    const Mh = function (n, e, t) {
      let r;
        let o;
        const i =
          ((r = e),
          (o = Do(!1)),
          {
            stop () {
              o.set(!0);
            },
            cut: S,
            isStopped: o.get,
            isCut: O(!1),
            event: O(r),
            setSource: a("Cannot set source of a broadcasted event"),
            getSource: a("Cannot get source of a broadcasted event"),
          });
      return (
        hn(n, function (n) {
          const e = n.descHandler();
          mm(e)(i);
        }),
        i.isStopped()
      );
    };
    const _h = function (n, e, t, r, o) {
      const i = kh(t, r);
      return Dh(n, e, t, r, i, o);
    };
    const Ih = function (n, e) {
      return { element: n, descHandler: e };
    };
    const Fh = function (n, e) {
      return { id: O(n), descHandler: O(e) };
    };
  function Rh() {
    const i = {};
    return {
      registerId (r, o, n) {
        E(n, function (n, e) {
          const t = i[e] !== undefined ? i[e] : {};
          (t[o] = dm(n, r)), (i[e] = t);
        });
      },
      unregisterId (t) {
        E(i, function (n, e) {
          n.hasOwnProperty(t) && delete n[t];
        });
      },
      filterByType (n) {
        return I(i, n)
          .map(function (n) {
            return _(n, function (n, e) {
              return Fh(e, n);
            });
          })
          .getOr([]);
      },
      find (n, e, t) {
        const o = I(i, e);
        return Fr(
          t,
          function (n) {
            return (
              (t = o),
              wf((r = n)).fold(
                function () {
                  return T.none();
                },
                function (e) {
                  return t
                    .bind(function (n) {
                      return I(n, e);
                    })
                    .map(function (n) {
                      return Ih(r, n);
                    });
                }
              )
            );
            let t; let r;
          },
          n
        );
      },
    };
  }
  function Vh() {
    const r = Rh();
      const o = {};
      const i = function (r) {
        const n = r.element();
        return wf(n).fold(
          function () {
            return (
              (n = "uid-"), (e = r.element()), (t = Na(yf + n)), xf(e, t), t
            );
            let n; let e; let t;
          },
          function (n) {
            return n;
          }
        );
      };
      const u = function (n) {
        wf(n.element()).each(function (n) {
          delete o[n], r.unregisterId(n);
        });
      };
    return {
      find (n, e, t) {
        return r.find(n, e, t);
      },
      filter (n) {
        return r.filterByType(n);
      },
      register (n) {
        const e = i(n);
        R(o, e) &&
          (function (n, e) {
            const t = o[e];
            if (t !== n)
              throw new Error(
                `The tagId "${ 
                  e 
                  }" is already used by: ${ 
                  $o(t.element()) 
                  }\nCannot use it for: ${ 
                  $o(n.element()) 
                  }\nThe conflicting element is${ 
                  qe(t.element()) ? " " : " not " 
                  }already in the DOM`
              );
            u(n);
          })(n, e);
        const t = [n];
        r.registerId(t, e, n.events()), (o[e] = n);
      },
      unregister: u,
      getById (n) {
        return I(o, n);
      },
    };
  }
  const Bh = function (t) {
      const r = function (e) {
          return Ne(t.element()).fold(
            function () {
              return !0;
            },
            function (n) {
              return Ae(e, n);
            }
          );
        };
        const o = Vh();
        const f = function (n, e) {
          return o.find(r, n, e);
        };
        const n = Th(t.element(), {
          triggerEvent (u, c) {
            return Jo(u, c.target(), function (n) {
              return (
                (e = f),
                (t = u),
                (o = n),
                (i = (r = c).target()),
                _h(e, t, r, i, o)
              );
              let e; let t; let r; let o; let i;
            });
          },
        });
        var i = {
          debugInfo: O("real"),
          triggerEvent (e, t, r) {
            Jo(e, t, function (n) {
              return _h(f, e, r, t, n);
            });
          },
          triggerFocus (c, a) {
            wf(c).fold(
              function () {
                Mo(c);
              },
              function (n) {
                Jo(ie(), c, function (n) {
                  let e; let t; let r; let o; let i; let u;
                  return (
                    (e = f),
                    (t = ie()),
                    (r = {
                      originator: O(a),
                      kill: S,
                      prevent: S,
                      target: O(c),
                    }),
                    (i = n),
                    (u = kh(r, (o = c))),
                    Ch(e, t, r, o, u, i),
                    !1
                  );
                });
              }
            );
          },
          triggerEscape (n, e) {
            i.triggerEvent("keydown", n.element(), e.event());
          },
          getByUid (n) {
            return g(n);
          },
          getByDom (n) {
            return p(n);
          },
          build: Im,
          addToGui (n) {
            c(n);
          },
          removeFromGui (n) {
            a(n);
          },
          addToWorld (n) {
            e(n);
          },
          removeFromWorld (n) {
            u(n);
          },
          broadcast (n) {
            l(n);
          },
          broadcastOn (n, e) {
            d(n, e);
          },
          broadcastEvent (n, e) {
            m(n, e);
          },
          isConnected: O(!0),
        };
        var e = function (n) {
          n.connect(i),
            Me(n.element()) ||
              (o.register(n),
              hn(n.components(), e),
              i.triggerEvent(me(), n.element(), { target: O(n.element()) }));
        };
        var u = function (n) {
          Me(n.element()) || (hn(n.components(), u), o.unregister(n)),
            n.disconnect();
        };
        var c = function (n) {
          at(t, n, nt);
        };
        var a = function (n) {
          ft(n);
        };
        const s = function (t) {
          const n = o.filter(ae());
          hn(n, function (n) {
            const e = n.descHandler();
            mm(e)(t);
          });
        };
        var l = function (n) {
          s({ universal: O(!0), data: O(n) });
        };
        var d = function (n, e) {
          s({ universal: O(!1), channels: O(n), data: O(e) });
        };
        var m = function (n, e) {
          const t = o.filter(n);
          return Mh(t, e);
        };
        var g = function (n) {
          return o.getById(n).fold(function () {
            return mt.error(
              new Error(
                `Could not find component with uid: "${  n  }" in system.`
              )
            );
          }, mt.value);
        };
        var p = function (n) {
          const e = wf(n).getOr("not found");
          return g(e);
        };
      return (
        e(t),
        {
          root: O(t),
          element: t.element,
          destroy () {
            n.unbind(), rt(t.element());
          },
          add: c,
          remove: a,
          getByUid: g,
          getByDom: p,
          addToWorld: e,
          removeFromWorld: u,
          broadcast: l,
          broadcastOn: d,
          broadcastEvent: m,
        }
      );
    };
    const Ah = Mi("readonly-mode");
    const jh = Mi("edit-mode");
  function Nh(n) {
    const e = Im(
      Td.sketch({
        dom: { classes: [Mi("outer-container")].concat(n.classes) },
        containerBehaviours: ro([Co.config({ alpha: Ah, omega: jh })]),
      })
    );
    return Bh(e);
  }
  const Ph = function (n, e) {
      const t = ke.fromTag("input");
      Pi(t, {
        opacity: "0",
        position: "absolute",
        top: "-1000px",
        left: "-1000px",
      }),
        nt(n, t),
        Mo(t),
        e(t),
        rt(t);
    };
    const Hh = function (n) {
      const e = n.getSelection();
      if (e.rangeCount > 0) {
        const t = e.getRangeAt(0);
          const r = n.document.createRange();
        r.setStart(t.startContainer, t.startOffset),
          r.setEnd(t.endContainer, t.endOffset),
          e.removeAllRanges(),
          e.addRange(r);
      }
    };
    const zh = function (n, e) {
      Io().each(function (n) {
        Ae(n, e) || _o(n);
      }),
        n.focus(),
        Mo(ke.fromDom(n.document.body)),
        Hh(n);
    };
    const Lh = function (n, e, t, r) {
      const o = function () {
          zh(e, r);
        };
        const i = Ag(t, "keydown", function (n) {
          mn(["input", "textarea"], Ee(n.target())) || o();
        });
      return {
        toReading () {
          Ph(n, _o);
        },
        toEditing: o,
        onToolbarTouch () {},
        destroy () {
          i.unbind();
        },
      };
    };
    const Gh = function (t, r, o, i, n) {
      const u = function () {
          r.run(function (n) {
            n.refreshSelection();
          });
        };
        const e = function (n, e) {
          const t = n - i.dom().scrollTop;
          r.run(function (n) {
            n.scrollIntoView(t, t + e);
          });
        };
        const c = function () {
          r.run(function (n) {
            n.clearSelection();
          });
        };
        const a = function () {
          t.getCursorBox().each(function (n) {
            e(n.top(), n.height());
          }),
            r.run(function (n) {
              n.syncHeight();
            });
        };
        const f = Gg(t);
        const s = Pp(a, 300);
        const l = [
          t.onKeyup(function () {
            c(), s.throttle();
          }),
          t.onNodeChanged(u),
          t.onDomChanged(s.throttle),
          t.onDomChanged(u),
          t.onScrollToCursor(function (n) {
            n.preventDefault(), s.throttle();
          }),
          t.onScrollToElement(function (n) {
            n.element(), e(r, i);
          }),
          t.onToEditing(function () {
            r.run(function (n) {
              n.toEditing();
            });
          }),
          t.onToReading(function () {
            r.run(function (n) {
              n.toReading();
            });
          }),
          Ag(t.doc(), "touchend", function (n) {
            Ae(t.html(), n.target()) || Ae(t.body(), n.target());
          }),
          Ag(o, "transitionend", function (n) {
            let e;
            n.raw().propertyName === "height" &&
              ((e = Xi(o)),
              r.run(function (n) {
                n.setViewportOffset(e);
              }),
              u(),
              a());
          }),
          jg(o, "touchstart", function (n) {
            let e;
            r.run(function (n) {
              n.highlightSelection();
            }),
              (e = n),
              r.run(function (n) {
                n.onToolbarTouch(e);
              }),
              t.onTouchToolstrip();
          }),
          Ag(t.body(), "touchstart", function (n) {
            c(), t.onTouchContent(), f.fireTouchstart(n);
          }),
          f.onTouchmove(),
          f.onTouchend(),
          Ag(t.body(), "click", function (n) {
            n.kill();
          }),
          Ag(o, "touchmove", function () {
            t.onToolbarScrollStart();
          }),
        ];
      return {
        destroy () {
          hn(l, function (n) {
            n.unbind();
          });
        },
      };
    };
  let $h;
    let Uh;
    let Wh;
    let Xh;
    const qh = {};
    const Yh = { exports: qh };
  ($h = undefined),
    (Uh = qh),
    (Wh = Yh),
    (Xh = undefined),
    (function (n) {
      if (typeof Uh === "object" && void 0 !== Wh) Wh.exports = n();
      else if (typeof $h === "function" && $h.amd) $h([], n);
      else {
        (typeof window !== "undefined"
          ? window
          : typeof global !== "undefined"
          ? global
          : typeof self !== "undefined"
          ? self
          : this
        ).EphoxContactWrapper = n();
      }
    })(function () {
      return (function s(i, u, c) {
        function a(e, n) {
          if (!u[e]) {
            if (!i[e]) {
              const t = typeof Xh === "function" && Xh;
              if (!n && t) return t(e, !0);
              if (f) return f(e, !0);
              const r = new Error(`Cannot find module '${  e  }'`);
              throw ((r.code = "MODULE_NOT_FOUND"), r);
            }
            const o = (u[e] = { exports: {} });
            i[e][0].call(
              o.exports,
              function (n) {
                return a(i[e][1][n] || n);
              },
              o,
              o.exports,
              s,
              i,
              u,
              c
            );
          }
          return u[e].exports;
        }
        for (var f = typeof Xh === "function" && Xh, n = 0; n < c.length; n++)
          a(c[n]);
        return a;
      })(
        {
          1: [
            function (n, e, t) {
              let r;
                let o;
                const i = (e.exports = {});
              function u() {
                throw new Error("setTimeout has not been defined");
              }
              function c() {
                throw new Error("clearTimeout has not been defined");
              }
              function a(n) {
                if (r === setTimeout) return setTimeout(n, 0);
                if ((r === u || !r) && setTimeout)
                  return (r = setTimeout), setTimeout(n, 0);
                try {
                  return r(n, 0);
                } catch (e) {
                  try {
                    return r.call(null, n, 0);
                  } catch (e) {
                    return r.call(this, n, 0);
                  }
                }
              }
              !(function () {
                try {
                  r = typeof setTimeout === "function" ? setTimeout : u;
                } catch (n) {
                  r = u;
                }
                try {
                  o = typeof clearTimeout === "function" ? clearTimeout : c;
                } catch (n) {
                  o = c;
                }
              })();
              let f;
                let s = [];
                let l = !1;
                let d = -1;
              function m() {
                l &&
                  f &&
                  ((l = !1),
                  f.length ? (s = f.concat(s)) : (d = -1),
                  s.length && g());
              }
              function g() {
                if (!l) {
                  const n = a(m);
                  l = !0;
                  for (let e = s.length; e; ) {
                    for (f = s, s = []; ++d < e; ) f && f[d].run();
                    (d = -1), (e = s.length);
                  }
                  (f = null),
                    (l = !1),
                    (function t(n) {
                      if (o === clearTimeout) return clearTimeout(n);
                      if ((o === c || !o) && clearTimeout)
                        return (o = clearTimeout), clearTimeout(n);
                      try {
                        return o(n);
                      } catch (e) {
                        try {
                          return o.call(null, n);
                        } catch (e) {
                          return o.call(this, n);
                        }
                      }
                    })(n);
                }
              }
              function p(n, e) {
                (this.fun = n), (this.array = e);
              }
              function h() {}
              (i.nextTick = function (n) {
                const e = new Array(arguments.length - 1);
                if (arguments.length > 1)
                  for (let t = 1; t < arguments.length; t++)
                    e[t - 1] = arguments[t];
                s.push(new p(n, e)), s.length !== 1 || l || a(g);
              }),
                (p.prototype.run = function () {
                  this.fun.apply(null, this.array);
                }),
                (i.title = "browser"),
                (i.browser = !0),
                (i.env = {}),
                (i.argv = []),
                (i.version = ""),
                (i.versions = {}),
                (i.on = h),
                (i.addListener = h),
                (i.once = h),
                (i.off = h),
                (i.removeListener = h),
                (i.removeAllListeners = h),
                (i.emit = h),
                (i.prependListener = h),
                (i.prependOnceListener = h),
                (i.listeners = function (n) {
                  return [];
                }),
                (i.binding = function (n) {
                  throw new Error("process.binding is not supported");
                }),
                (i.cwd = function () {
                  return "/";
                }),
                (i.chdir = function (n) {
                  throw new Error("process.chdir is not supported");
                }),
                (i.umask = function () {
                  return 0;
                });
            },
            {},
          ],
          2: [
            function (n, l, e) {
              (function (e) {
                function r() {}
                function i(n) {
                  if (typeof this !== "object")
                    throw new TypeError("Promises must be constructed via new");
                  if (typeof n !== "function")
                    throw new TypeError("not a function");
                  (this._state = 0),
                    (this._handled = !1),
                    (this._value = undefined),
                    (this._deferreds = []),
                    s(n, this);
                }
                function o(r, o) {
                  for (; r._state === 3; ) r = r._value;
                  r._state !== 0
                    ? ((r._handled = !0),
                      i._immediateFn(function () {
                        const n = r._state === 1 ? o.onFulfilled : o.onRejected;
                        if (n !== null) {
                          let e;
                          try {
                            e = n(r._value);
                          } catch (t) {
                            return void c(o.promise, t);
                          }
                          u(o.promise, e);
                        } else (r._state === 1 ? u : c)(o.promise, r._value);
                      }))
                    : r._deferreds.push(o);
                }
                function u(n, e) {
                  try {
                    if (e === n)
                      throw new TypeError(
                        "A promise cannot be resolved with itself."
                      );
                    if (e && (typeof e === "object" || typeof e === "function")) {
                      const t = e.then;
                      if (e instanceof i)
                        return (n._state = 3), (n._value = e), void a(n);
                      if (typeof t === "function")
                        return void s(
                          (function r(n, e) {
                            return function () {
                              n.apply(e, arguments);
                            };
                          })(t, e),
                          n
                        );
                    }
                    (n._state = 1), (n._value = e), a(n);
                  } catch (o) {
                    c(n, o);
                  }
                }
                function c(n, e) {
                  (n._state = 2), (n._value = e), a(n);
                }
                function a(n) {
                  n._state === 2 &&
                    n._deferreds.length === 0 &&
                    i._immediateFn(function () {
                      n._handled || i._unhandledRejectionFn(n._value);
                    });
                  for (let e = 0, t = n._deferreds.length; e < t; e++)
                    o(n, n._deferreds[e]);
                  n._deferreds = null;
                }
                function f(n, e, t) {
                  (this.onFulfilled = typeof n === "function" ? n : null),
                    (this.onRejected = typeof e === "function" ? e : null),
                    (this.promise = t);
                }
                function s(n, e) {
                  let t = !1;
                  try {
                    n(
                      function (n) {
                        t || ((t = !0), u(e, n));
                      },
                      function (n) {
                        t || ((t = !0), c(e, n));
                      }
                    );
                  } catch (r) {
                    if (t) return;
                    (t = !0), c(e, r);
                  }
                }
                let n; let t;
                (n = this),
                  (t = setTimeout),
                  (i.prototype.catch = function (n) {
                    return this.then(null, n);
                  }),
                  (i.prototype.then = function (n, e) {
                    const t = new this.constructor(r);
                    return o(this, new f(n, e, t)), t;
                  }),
                  (i.all = function (n) {
                    const a = Array.prototype.slice.call(n);
                    return new i(function (o, i) {
                      if (a.length === 0) return o([]);
                      let u = a.length;
                      function c(e, n) {
                        try {
                          if (
                            n &&
                            (typeof n === "object" || typeof n === "function")
                          ) {
                            const t = n.then;
                            if (typeof t === "function")
                              return void t.call(
                                n,
                                function (n) {
                                  c(e, n);
                                },
                                i
                              );
                          }
                          (a[e] = n), --u == 0 && o(a);
                        } catch (r) {
                          i(r);
                        }
                      }
                      for (let n = 0; n < a.length; n++) c(n, a[n]);
                    });
                  }),
                  (i.resolve = function (e) {
                    return e && typeof e === "object" && e.constructor === i
                      ? e
                      : new i(function (n) {
                          n(e);
                        });
                  }),
                  (i.reject = function (t) {
                    return new i(function (n, e) {
                      e(t);
                    });
                  }),
                  (i.race = function (o) {
                    return new i(function (n, e) {
                      for (let t = 0, r = o.length; t < r; t++) o[t].then(n, e);
                    });
                  }),
                  (i._immediateFn =
                    typeof e === "function"
                      ? function (n) {
                          e(n);
                        }
                      : function (n) {
                          t(n, 0);
                        }),
                  (i._unhandledRejectionFn = function (n) {
                    typeof console !== "undefined" &&
                      console &&
                      console.warn("Possible Unhandled Promise Rejection:", n);
                  }),
                  (i._setImmediateFn = function (n) {
                    i._immediateFn = n;
                  }),
                  (i._setUnhandledRejectionFn = function (n) {
                    i._unhandledRejectionFn = n;
                  }),
                  void 0 !== l && l.exports
                    ? (l.exports = i)
                    : n.Promise || (n.Promise = i);
              }.call(this, n("timers").setImmediate));
            },
            { timers: 3 },
          ],
          3: [
            function (a, n, f) {
              (function (n, e) {
                const r = a("process/browser.js").nextTick;
                  const t = Function.prototype.apply;
                  const o = Array.prototype.slice;
                  const i = {};
                  let u = 0;
                function c(n, e) {
                  (this._id = n), (this._clearFn = e);
                }
                (f.setTimeout = function () {
                  return new c(
                    t.call(setTimeout, window, arguments),
                    clearTimeout
                  );
                }),
                  (f.setInterval = function () {
                    return new c(
                      t.call(setInterval, window, arguments),
                      clearInterval
                    );
                  }),
                  (f.clearTimeout = f.clearInterval = function (n) {
                    n.close();
                  }),
                  (c.prototype.unref = c.prototype.ref = function () {}),
                  (c.prototype.close = function () {
                    this._clearFn.call(window, this._id);
                  }),
                  (f.enroll = function (n, e) {
                    clearTimeout(n._idleTimeoutId), (n._idleTimeout = e);
                  }),
                  (f.unenroll = function (n) {
                    clearTimeout(n._idleTimeoutId), (n._idleTimeout = -1);
                  }),
                  (f._unrefActive = f.active = function (n) {
                    clearTimeout(n._idleTimeoutId);
                    const e = n._idleTimeout;
                    e >= 0 &&
                      (n._idleTimeoutId = setTimeout(function () {
                        n._onTimeout && n._onTimeout();
                      }, e));
                  }),
                  (f.setImmediate =
                    typeof n === "function"
                      ? n
                      : function (n) {
                          const e = u++;
                            const t = !(arguments.length < 2) && o.call(arguments, 1);
                          return (
                            (i[e] = !0),
                            r(function () {
                              i[e] &&
                                (t ? n.apply(null, t) : n.call(null),
                                f.clearImmediate(e));
                            }),
                            e
                          );
                        }),
                  (f.clearImmediate =
                    typeof e === "function"
                      ? e
                      : function (n) {
                          delete i[n];
                        });
              }.call(
                this,
                a("timers").setImmediate,
                a("timers").clearImmediate
              ));
            },
            { "process/browser.js": 1, timers: 3 },
          ],
          4: [
            function (n, e, t) {
              const r = n("promise-polyfill");
                const o =
                  typeof window !== "undefined"
                    ? window
                    : Function("return this;")();
              e.exports = { boltExport: o.Promise || r };
            },
            { "promise-polyfill": 2 },
          ],
        },
        {},
        [4]
      )(4);
    });
  let Kh;
    const Jh = Yh.exports.boltExport;
    var Qh = function (n) {
      let t = T.none();
        let e = [];
        const r = function (n) {
          o() ? u(n) : e.push(n);
        };
        var o = function () {
          return t.isSome();
        };
        const i = function (n) {
          hn(n, u);
        };
        var u = function (e) {
          t.each(function (n) {
            x.setTimeout(function () {
              e(n);
            }, 0);
          });
        };
      return (
        n(function (n) {
          o() || ((t = T.some(n)), i(e), (e = []));
        }),
        {
          get: r,
          map (t) {
            return Qh(function (e) {
              r(function (n) {
                e(t(n));
              });
            });
          },
          isReady: o,
        }
      );
    };
    const Zh = {
      nu: Qh,
      pure (e) {
        return Qh(function (n) {
          n(e);
        });
      },
    };
    const nv = function (n) {
      x.setTimeout(function () {
        throw n;
      }, 0);
    };
    var ev = function (t) {
      const n = function (n) {
        t().then(n, nv);
      };
      return {
        map (n) {
          return ev(function () {
            return t().then(n);
          });
        },
        bind (e) {
          return ev(function () {
            return t().then(function (n) {
              return e(n).toPromise();
            });
          });
        },
        anonBind (n) {
          return ev(function () {
            return t().then(function () {
              return n.toPromise();
            });
          });
        },
        toLazy () {
          return Zh.nu(n);
        },
        toCached () {
          let n = null;
          return ev(function () {
            return n === null && (n = t()), n;
          });
        },
        toPromise: t,
        get: n,
      };
    };
    const tv = function (n) {
      return ev(function () {
        return new Jh(n);
      });
    };
    const rv = function (n) {
      return ev(function () {
        return Jh.resolve(n);
      });
    };
    const ov = function (r, o) {
      return Dn(
        [
          {
            width: 320,
            height: 480,
            keyboard: { portrait: 300, landscape: 240 },
          },
          {
            width: 320,
            height: 568,
            keyboard: { portrait: 300, landscape: 240 },
          },
          {
            width: 375,
            height: 667,
            keyboard: { portrait: 305, landscape: 240 },
          },
          {
            width: 414,
            height: 736,
            keyboard: { portrait: 320, landscape: 240 },
          },
          {
            width: 768,
            height: 1024,
            keyboard: { portrait: 320, landscape: 400 },
          },
          {
            width: 1024,
            height: 1366,
            keyboard: { portrait: 380, landscape: 460 },
          },
        ],
        function (n) {
          return (
            (e = r <= n.width && o <= n.height),
            (t = n.keyboard),
            e ? T.some(t) : T.none()
          );
          let e; let t;
        }
      ).getOr({ portrait: o / 5, landscape: r / 4 });
    };
    const iv = function (n) {
      let e;
        const t = Pg(n).isPortrait();
        const r = ov((e = n).screen.width, e.screen.height);
        const o = t ? r.portrait : r.landscape;
      return (t ? n.screen.height : n.screen.width) - n.innerHeight > o ? 0 : o;
    };
    const uv = function (n, e) {
      const t = je(n).dom().defaultView;
      return Xi(n) + Xi(e) - iv(t);
    };
    const cv = function (n, e, t) {
      const r = uv(e, t);
        const o = Xi(e) + Xi(t) - r;
      Ni(n, "padding-bottom", `${o  }px`);
    };
    const av = It([
      { fixed: ["element", "property", "offsetY"] },
      { scroller: ["element", "offsetY"] },
    ]);
    const fv = `data-${  Mi("position-y-fixed")}`;
    const sv = `data-${  Mi("y-property")}`;
    const lv = `data-${  Mi("scrolling")}`;
    const dv = `data-${  Mi("last-window-height")}`;
    const mv = function (n) {
      return Wg(n, fv);
    };
    const gv = function (n, e) {
      const t = lo(n, sv);
      return av.fixed(n, t, e);
    };
    const pv = function (n, e) {
      return av.scroller(n, e);
    };
    const hv = function (n) {
      const e = mv(n);
      return (lo(n, lv) === "true" ? pv : gv)(n, e);
    };
    const vv = function (n, e, t) {
      const r = je(n).dom().defaultView.innerHeight;
      return fo(n, dv, `${r  }px`), r - e - t;
    };
    const yv = function (r, o, i, u) {
      const e = je(r).dom().defaultView;
        const n = (function (n) {
          const e = lo(n, "style");
          Pi(n, { position: "absolute", top: "0px" }),
            fo(n, fv, "0px"),
            fo(n, sv, "top");
          return {
            restore () {
              fo(n, "style", e || ""), po(n, fv), po(n, sv);
            },
          };
        })(i);
        const t = Xi(i);
        const c = Xi(u);
        const a = (function (n, e, t) {
          const r = lo(t, "style");
          vg(t),
            Pi(t, {
              position: "absolute",
              height: `${e  }px`,
              width: "100%",
              top: `${n  }px`,
            }),
            fo(t, fv, `${n  }px`),
            fo(t, lv, "true"),
            fo(t, sv, "top");
          return {
            restore () {
              yg(t), fo(t, "style", r || ""), po(t, fv), po(t, lv), po(t, sv);
            },
          };
        })(t, vv(r, t, c), r);
        const f = (function (n) {
          const e = lo(n, "style");
          Pi(n, { position: "absolute", bottom: "0px" }),
            fo(n, fv, "0px"),
            fo(n, sv, "bottom");
          return {
            restore () {
              fo(n, "style", e || ""), po(n, fv), po(n, sv);
            },
          };
        })(u);
        let s = !0;
        const l = function () {
          const n = e.innerHeight;
          return Wg(r, dv) < n;
        };
        const d = function () {
          if (s) {
            const n = Xi(i);
              const e = Xi(u);
              const t = vv(r, n, e);
            fo(r, fv, `${n  }px`), Ni(r, "height", `${t  }px`), cv(o, r, u);
          }
        };
      return (
        cv(o, r, u),
        {
          setViewportOffset (n) {
            fo(r, fv, `${n  }px`), d();
          },
          isExpanding: l,
          isShrinking: m(l),
          refresh: d,
          restore () {
            (s = !1), n.restore(), a.restore(), f.restore();
          },
        }
      );
    };
    const bv =
      ((Kh = null),
      {
        animate (o, i, u, c, e, n) {
          let a = !1;
            const f = function (n) {
              (a = !0), e(n);
            };
          Ng.clearInterval(Kh);
          const s = function (n) {
            Ng.clearInterval(Kh), f(n);
          };
          Kh = Ng.setInterval(function () {
            let n;
              let e;
              let t;
              const r = o();
            (n = r),
              (e = i),
              (t = u),
              (Math.abs(n - e) <= t
                ? T.none()
                : n < e
                ? T.some(n + t)
                : T.some(n - t)
              ).fold(
                function () {
                  Ng.clearInterval(Kh), f(i);
                },
                function (n) {
                  if ((c(n, s), !a)) {
                    const e = o();
                    (e !== n || Math.abs(e - i) > Math.abs(r - i)) &&
                      (Ng.clearInterval(Kh), f(i));
                  }
                }
              );
          }, n);
        },
      });
    const xv = `data-${  Mi("last-scroll-top")}`;
    const wv = function (n) {
      const e = Li(n, "top").getOr("0");
      return parseInt(e, 10);
    };
    const Sv = function (n) {
      return parseInt(n.dom().scrollTop, 10);
    };
    const Ov = function (o, i) {
      return tv(function (n) {
        const e = b(Sv, o);
        fo(o, xv, e());
        const t = Math.abs(i - e());
          const r = Math.ceil(t / 10);
        bv.animate(
          e,
          i,
          r,
          function (n, e) {
            Wg(o, xv) !== o.dom().scrollTop
              ? e(o.dom().scrollTop)
              : ((o.dom().scrollTop = n), fo(o, xv, n));
          },
          function () {
            (o.dom().scrollTop = i), fo(o, xv, i), n(i);
          },
          10
        );
      });
    };
    const Tv = function (n, e) {
      const t = `${e + mv(n)  }px`;
      Ni(n, "top", t);
    };
  const kv = function (u, n) {
      return n(function (r) {
        const o = [];
          let i = 0;
        u.length === 0
          ? r([])
          : hn(u, function (n, e) {
              let t;
              n.get(
                ((t = e),
                function (n) {
                  (o[t] = n), ++i >= u.length && r(o);
                })
              );
            });
      });
    };
    const Ev = function (n, e, t) {
      let r;
        let o;
        let i;
        const u = e + t;
        const c = Li(n, "top").getOr(t);
        const a = u - parseInt(c, 10);
        const f = n.dom().scrollTop + a;
      return (
        (r = n),
        (o = f),
        (i = u),
        tv(function (n) {
          const e = b(Sv, r);
          bv.animate(
            e,
            o,
            15,
            function (n) {
              (r.dom().scrollTop = n), Ni(r, "top", `${wv(r) + 15  }px`);
            },
            function () {
              (r.dom().scrollTop = o), Ni(r, "top", `${i  }px`), n(o);
            },
            10
          );
        })
      );
    };
    const Cv = function (n, o) {
      return n.fold(
        function (n, e, t) {
          return Ni(n, e, `${o + (r = t)  }px`), rv(r);
          let r;
        },
        function (n, e) {
          return Ev(n, o, e);
        }
      );
    };
    const Dv = function (n, e) {
      let t;
        const r = ((t = Ki(n, `[${  fv  }]`)), pn(t, hv));
        const o = pn(r, function (n) {
          return Cv(n, e);
        });
      return kv(o, tv);
    };
    const Mv = function (i, u, n, t, e, r) {
      const o = (function f(t) {
          const r = Do(Zh.pure({}));
          return {
            start (e) {
              const n = Zh.nu(function (n) {
                return t(e).get(n);
              });
              r.set(n);
            },
            idle (n) {
              r.get().get(function () {
                n();
              });
            },
          };
        })(function (n) {
          return (
            (t = u),
            (r = n),
            (o = je((e = i)).dom().defaultView),
            tv(function (n) {
              Tv(e, r), Tv(t, r), o.scrollTo(0, r), n(r);
            })
          );
          let e; let t; let r; let o;
        });
        const c = Pp(function () {
          o.idle(function () {
            Dv(n, t.pageYOffset).get(function () {
              let n;
              ((n = yp(r)),
              T.from(n[0]).bind(function (n) {
                const e = n.top() - u.dom().scrollTop;
                return e > t.innerHeight + 5 || e < -5
                  ? T.some({ top: O(e), bottom: O(e + n.height()) })
                  : T.none();
              })).each(function (n) {
                u.dom().scrollTop = u.dom().scrollTop + n.top();
              }),
                o.start(0),
                e.refresh();
            });
          });
        }, 1e3);
        const a = Ag(ke.fromDom(t), "scroll", function () {
          t.pageYOffset < 0 || c.throttle();
        });
      return Dv(n, t.pageYOffset).get(y), { unbind: a.unbind };
    };
    const _v = function (n) {
      const a = n.cWin;
        const e = n.ceBody;
        const f = n.socket;
        const t = n.toolstrip;
        const r = n.contentElement;
        const o = n.keyboardType;
        const i = n.outerWindow;
        const s = n.dropup;
        const u = n.outerBody;
        const c = yv(f, e, t, s);
        const l = o(u, a, Ye(), r);
        const d = Hg(i, { onChange: S, onReady: c.refresh });
      d.onAdjustment(function () {
        c.refresh();
      });
      const m = Ag(ke.fromDom(i), "resize", function () {
          c.isExpanding() && c.refresh();
        });
        const g = Mv(t, f, u, i, c, a);
        const p = (function v(t, e) {
          const n = t.document;
            const r = ke.fromTag("div");
          xo(r, Mi("unfocused-selections")),
            nt(ke.fromDom(n.documentElement), r);
          const o = Ag(r, "touchstart", function (n) {
              n.prevent(), zh(t, e), u();
            });
            const i = function (n) {
              const e = ke.fromTag("span");
              return (
                xm(e, [Mi("layer-editor"), Mi("unfocused-selection")]),
                Pi(e, {
                  left: `${n.left()  }px`,
                  top: `${n.top()  }px`,
                  width: `${n.width()  }px`,
                  height: `${n.height()  }px`,
                }),
                e
              );
            };
            var u = function () {
              tt(r);
            };
          return {
            update () {
              u();
              const n = yp(t);
                const e = pn(n, i);
              et(r, e);
            },
            isActive () {
              return Pe(r).length > 0;
            },
            destroy () {
              o.unbind(), rt(r);
            },
            clear: u,
          };
        })(a, r);
        const h = function () {
          p.clear();
        };
      return {
        toEditing () {
          l.toEditing(), h();
        },
        toReading () {
          l.toReading();
        },
        onToolbarTouch (n) {
          l.onToolbarTouch();
        },
        refreshSelection () {
          p.isActive() && p.update();
        },
        clearSelection: h,
        highlightSelection () {
          p.update();
        },
        scrollIntoView (n, e) {
          let t; let r; let o; let i; let u; let c;
          (t = a),
            (o = n),
            (i = e),
            (u = uv((r = f), s)),
            (c = b(Hh, t)),
            u < o || u < i
              ? Ov(r, r.dom().scrollTop - u + i).get(c)
              : o < 0 && Ov(r, r.dom().scrollTop + o).get(c);
        },
        updateToolbarPadding: S,
        setViewportOffset (n) {
          let i; let u;
          c.setViewportOffset(n),
            (i = f),
            (u = n),
            tv(function (n) {
              const e = b(wv, i);
                const t = function (n) {
                  Ni(i, "top", `${n  }px`);
                };
                const r = Math.abs(u - e());
                const o = Math.ceil(r / 10);
              bv.animate(
                e,
                u,
                o,
                t,
                function () {
                  t(u), n(u);
                },
                10
              );
            }).get(y);
        },
        syncHeight () {
          Ni(
            r,
            "height",
            `${r.dom().contentWindow.document.body.scrollHeight  }px`
          );
        },
        refreshStructure: c.refresh,
        destroy () {
          c.restore(),
            d.destroy(),
            g.unbind(),
            m.unbind(),
            l.destroy(),
            p.destroy(),
            Ph(Ye(), _o);
        },
      };
    };
    const Iv = function (r, n) {
      const o = Np();
        const i = em();
        const u = em();
        const c = nm();
        const a = nm();
      return {
        enter () {
          n.hide();
          const t = ke.fromDom(x.document);
          _p(r.editor).each(function (n) {
            let e;
            i.set({
              socketHeight: Li(r.socket, "height"),
              iframeHeight: Li(n.frame(), "height"),
              outerScroll: x.document.body.scrollTop,
            }),
              u.set({
                exclusives:
                  ((e = `.${  bg}`),
                  Ag(t, "touchmove", function (n) {
                    ou(n.target(), e)
                      .filter(Jp)
                      .fold(function () {
                        n.raw().preventDefault();
                      }, S);
                  })),
              }),
              xo(r.container, Mi("fullscreen-maximized")),
              Ap(r.container, n.body()),
              o.maximize(),
              Ni(r.socket, "overflow", "scroll"),
              Ni(r.socket, "-webkit-overflow-scrolling", "touch"),
              Mo(n.body()),
              c.set(
                _v({
                  cWin: n.win(),
                  ceBody: n.body(),
                  socket: r.socket,
                  toolstrip: r.toolstrip,
                  dropup: r.dropup.element(),
                  contentElement: n.frame(),
                  outerBody: r.body,
                  outerWindow: r.win,
                  keyboardType: Lh,
                })
              ),
              c.run(function (n) {
                n.syncHeight();
              }),
              a.set(Gh(n, c, r.toolstrip, r.socket, r.dropup));
          });
        },
        refreshStructure () {
          c.run(function (n) {
            n.refreshStructure();
          });
        },
        exit () {
          o.restore(),
            a.clear(),
            c.clear(),
            n.show(),
            i.on(function (n) {
              n.socketHeight.each(function (n) {
                Ni(r.socket, "height", n);
              }),
                n.iframeHeight.each(function (n) {
                  Ni(r.editor.getFrame(), "height", n);
                }),
                (x.document.body.scrollTop = n.scrollTop);
            }),
            i.clear(),
            u.on(function (n) {
              n.exclusives.unbind();
            }),
            u.clear(),
            So(r.container, Mi("fullscreen-maximized")),
            jp(),
            yg(r.toolbar),
            Gi(r.socket, "overflow"),
            Gi(r.socket, "-webkit-overflow-scrolling"),
            _o(r.editor.getFrame()),
            _p(r.editor).each(function (n) {
              n.clearSelection();
            });
        },
      };
    };
  function Fv(n) {
    const e = Nh({ classes: [Mi("ios-container")] });
      const t = Qp();
      const r = nm();
      const o = Zp(r);
      const i = nh();
      const u = xh(function () {
        r.run(function (n) {
          n.refreshStructure();
        });
      }, n);
    e.add(t.wrapper()), e.add(i), e.add(u.component());
    return {
      system: O(e),
      element: e.element,
      init (n) {
        r.set(
          (function (n) {
            const e = hr("Getting IosWebapp schema", zp, n);
            Ni(e.toolstrip, "width", "100%"),
              Ni(e.container, "position", "relative");
            const t = Im(
              Hp(function () {
                e.setReadOnly(e.readOnlyOnInit()), o.enter();
              }, e.translate)
            );
            e.alloy.add(t);
            const r = {
                show () {
                  e.alloy.add(t);
                },
                hide () {
                  e.alloy.remove(t);
                },
              };
              var o = Iv(e, r);
            return {
              setReadOnly: e.setReadOnly,
              refreshStructure: o.refreshStructure,
              enter: o.enter,
              exit: o.exit,
              destroy: S,
            };
          })(n)
        );
      },
      exit () {
        r.run(function (n) {
          ng.remove(i, o), n.exit();
        });
      },
      setToolbarGroups (n) {
        const e = t.createGroups(n);
        t.setGroups(e);
      },
      setContextToolbar (n) {
        const e = t.createGroups(n);
        t.setContextToolbar(e);
      },
      focusToolbar () {
        t.focus();
      },
      restoreToolbar () {
        t.restoreToolbar();
      },
      updateMode (n) {
        rh(i, o, n, e.root());
      },
      socket: O(i),
      dropup: O(u),
    };
  }
  const Rv = tinymce.util.Tools.resolve("tinymce.EditorManager");
    const Vv = function (n, e, t) {
      n.system().broadcastOn([jo], { command: e, state: t });
    };
    const Bv = function (e) {
      return function () {
        const n = function () {
          (e._skinLoaded = !0), e.fire("SkinLoaded");
        };
        e.initialized ? n() : e.on("init", n);
      };
    };
    const Av = "toReading";
    const jv = "toEditing";
    const Nv = function (b) {
      return {
        getNotificationManagerImpl () {
          return {
            open: O({
              progressBar: { value: S },
              close: S,
              text: S,
              getEl: O(null),
              moveTo: S,
              moveRel: S,
              settings: {},
            }),
            close: S,
            reposition: S,
            getArgs: O({}),
          };
        },
        renderUI () {
          let n;
            let e;
            const t = b.getElement();
            const r =
              ((n = b),
              {
                content:
                  `${e = T.from(n.getParam("skin_url")).fold(
                    function () {
                      return `${Rv.baseURL  }/skins/ui/oxide`;
                    },
                    function (n) {
                      return n;
                    }
                  )  }/content.mobile.min.css`,
                ui: `${e  }/skin.mobile.min.css`,
              });
          !1 == (!1 === b.getParam("skin"))
            ? (b.contentCSS.push(r.content),
              Ro.DOM.styleSheetLoader.load(r.ui, Bv(b)))
            : Bv(b)();
          let o;
            let i;
            const u = function () {
              b.fire("ScrollIntoView");
            };
            const p = (Gn().os.isAndroid()
              ? function s(n) {
                  const e = Nh({ classes: [Mi("android-container")] });
                    const t = Qp();
                    const r = nm();
                    const o = Zp(r);
                    const i = nh();
                    const u = xh(S, n);
                  return (
                    e.add(t.wrapper()),
                    e.add(i),
                    e.add(u.component()),
                    {
                      system: O(e),
                      element: e.element,
                      init (n) {
                        r.set(Lp(n));
                      },
                      exit () {
                        r.run(function (n) {
                          n.exit(), ng.remove(i, o);
                        });
                      },
                      setToolbarGroups (n) {
                        const e = t.createGroups(n);
                        t.setGroups(e);
                      },
                      setContextToolbar (n) {
                        const e = t.createGroups(n);
                        t.setContextToolbar(e);
                      },
                      focusToolbar () {
                        t.focus();
                      },
                      restoreToolbar () {
                        t.restoreToolbar();
                      },
                      updateMode (n) {
                        rh(i, o, n, e.root());
                      },
                      socket: O(i),
                      dropup: O(u),
                    }
                  );
                }
              : Fv)(u);
            const c = ke.fromDom(t);
          (o = c), (i = p.system()), st(o, i, Qe);
          const a = t.ownerDocument.defaultView;
            const h = Hg(a, {
              onChange () {
                let n; let e; let t;
                p.system().broadcastOn([No], {
                  width:
                    ((n = a),
                    (e = Gn().os.isiOS()),
                    (t = Pg(n).isPortrait()),
                    e && !t ? n.screen.height : n.screen.width),
                });
              },
              onReady: S,
            });
            const v = function (n, e, t, r) {
              !1 === r && b.selection.collapse();
              const o = f(n, e, t);
              p.setToolbarGroups(!0 === r ? o.readOnly : o.main),
                b.setMode(!0 === r ? "readonly" : "design"),
                b.fire(!0 === r ? Av : jv),
                p.updateMode(r);
            };
            var f = function (n, e, t) {
              const r = n.get();
              return {
                readOnly: r.backToMask.concat(e.get()),
                main: r.backToMask.concat(t.get()),
              };
            };
            const y = function (n, e) {
              return (
                b.on(n, e),
                {
                  unbind () {
                    b.off(n);
                  },
                }
              );
            };
          return (
            b.on("init", function () {
              p.init({
                editor: {
                  getFrame () {
                    return ke.fromDom(
                      b.contentAreaContainer.querySelector("iframe")
                    );
                  },
                  onDomChanged () {
                    return { unbind: S };
                  },
                  onToReading (n) {
                    return y(Av, n);
                  },
                  onToEditing (n) {
                    return y(jv, n);
                  },
                  onScrollToCursor (e) {
                    b.on("ScrollIntoView", function (n) {
                      e(n);
                    });
                    return {
                      unbind () {
                        b.off("ScrollIntoView"), h.destroy();
                      },
                    };
                  },
                  onTouchToolstrip () {
                    u();
                  },
                  onTouchContent () {
                    const n = ke.fromDom(
                      b.editorContainer.querySelector(`.${  Mi("toolbar")}`)
                    );
                    Fo(n)
                      .bind(function (n) {
                        return p.system().getByDom(n).toOption();
                      })
                      .each(we),
                      p.restoreToolbar(),
                      u();
                  },
                  onTapContent (n) {
                    const e = n.target();
                    if (Ee(e) === "img") b.selection.select(e.dom()), n.kill();
                    else if (Ee(e) === "a") {
                      p.system()
                        .getByDom(ke.fromDom(b.editorContainer))
                        .each(function (n) {
                          Co.isAlpha(n) &&
                            (function (n) {
                              const e = x.document.createElement("a");
                              (e.target = "_blank"),
                                (e.href = n.href),
                                (e.rel = "noreferrer noopener");
                              const t = x.document.createEvent("MouseEvents");
                              t.initMouseEvent(
                                "click",
                                !0,
                                !0,
                                x.window,
                                0,
                                0,
                                0,
                                0,
                                0,
                                !1,
                                !1,
                                !1,
                                !1,
                                0,
                                null
                              ),
                                x.document.body.appendChild(e),
                                e.dispatchEvent(t),
                                x.document.body.removeChild(e);
                            })(e.dom());
                        });
                    }
                  },
                },
                container: ke.fromDom(b.editorContainer),
                socket: ke.fromDom(b.contentAreaContainer),
                toolstrip: ke.fromDom(
                  b.editorContainer.querySelector(`.${  Mi("toolstrip")}`)
                ),
                toolbar: ke.fromDom(
                  b.editorContainer.querySelector(`.${  Mi("toolbar")}`)
                ),
                dropup: p.dropup(),
                alloy: p.system(),
                translate: S,
                setReadOnly (n) {
                  v(g, m, d, n);
                },
                readOnlyOnInit () {
                  return !1;
                },
              });
              let t;
                let n;
                let r;
                let o;
                let i;
                let e;
                var u = function () {
                  p.dropup().disappear(function () {
                    p.system().broadcastOn([Po], {});
                  });
                };
                const c = {
                  label: "The first group",
                  scrollable: !1,
                  items: [
                    zf(
                      "back",
                      function () {
                        b.selection.collapse(), p.exit();
                      },
                      {},
                      b
                    ),
                  ],
                };
                const a = {
                  label: "Back to read only",
                  scrollable: !1,
                  items: [
                    zf(
                      "readonly-back",
                      function () {
                        v(g, m, d, !0);
                      },
                      {},
                      b
                    ),
                  ],
                };
                const f = Ig(p, b);
                const s =
                  ((t = f),
                  (n = _g(b)),
                  (r = {}),
                  On(n, function (n) {
                    const e =
                      !R(r, n) && R(t, n) && t[n].isSupported()
                        ? [t[n].sketch()]
                        : [];
                    return (r[n] = !0), e;
                  }));
                const l = { label: "The extra group", scrollable: !1, items: [] };
                var d = Do([
                  { label: "the action group", scrollable: !0, items: s },
                  l,
                ]);
                var m = Do([
                  {
                    label: "The read only mode group",
                    scrollable: !0,
                    items: [],
                  },
                  l,
                ]);
                var g = Do({ backToMask: [c], backToReadOnly: [a] });
              (o = p),
                (e = k((i = b).formatter.get())),
                hn(e, function (e) {
                  i.formatter.formatChanged(e, function (n) {
                    Vv(o, e, n);
                  });
                }),
                hn(["ul", "ol"], function (t) {
                  i.selection.selectorChanged(t, function (n, e) {
                    Vv(o, t, n);
                  });
                });
            }),
            b.on("remove", function () {
              p.exit();
            }),
            b.on("detach", function () {
              let e; let n;
              (e = p.system()),
                (n = Pe(e.element())),
                hn(n, function (n) {
                  e.getByDom(n).each(ot);
                }),
                rt(e.element()),
                p.system().destroy();
            }),
            {
              iframeContainer: p.socket().element().dom(),
              editorContainer: p.element().dom(),
            }
          );
        },
      };
    };
  !(function Hv() {
    Vo.add("mobile", Nv);
  })();
})(window);
