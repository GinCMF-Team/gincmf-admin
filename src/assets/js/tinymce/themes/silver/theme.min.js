/**
 * Copyright (c) Tiny Technologies, Inc. All rights reserved.
 * Licensed under the LGPL or a commercial license.
 * For LGPL see License.txt in the project root for license information.
 * For commercial licenses see https://www.tiny.cloud/
 *
 * Version: 5.4.1 (2020-07-08)
 */
!(function (nt) {
  
  const Z = function () {};
    const d = function (e, o) {
      return function () {
        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
        return e(o.apply(null, t));
      };
    };
    const at = function (t) {
      return function () {
        return t;
      };
    };
    const ct = function (t) {
      return t;
    };
  function g(o) {
    for (var r = [], t = 1; t < arguments.length; t++) r[t - 1] = arguments[t];
    return function () {
      for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
      const e = r.concat(t);
      return o.apply(null, e);
    };
  }
  const x = function (n) {
      return function (t) {
        return !n(t);
      };
    };
    const u = function (t) {
      return function () {
        throw new Error(t);
      };
    };
    const c = at(!1);
    const i = at(!0);
    const t = tinymce.util.Tools.resolve("tinymce.ThemeManager");
    var et = function () {
      return (et =
        Object.assign ||
        function (t) {
          for (var n, e = 1, o = arguments.length; e < o; e++)
            for (const r in (n = arguments[e]))
              Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
          return t;
        }).apply(this, arguments);
    };
  function y(t, n) {
    const e = {};
    for (var o in t)
      Object.prototype.hasOwnProperty.call(t, o) &&
        n.indexOf(o) < 0 &&
        (e[o] = t[o]);
    if (t != null && typeof Object.getOwnPropertySymbols === "function") {
      let r = 0;
      for (o = Object.getOwnPropertySymbols(t); r < o.length; r++)
        n.indexOf(o[r]) < 0 &&
          Object.prototype.propertyIsEnumerable.call(t, o[r]) &&
          (e[o[r]] = t[o[r]]);
    }
    return e;
  }
  function b() {
    for (var t = 0, n = 0, e = arguments.length; n < e; n++)
      t += arguments[n].length;
    const o = Array(t);
      let r = 0;
    for (n = 0; n < e; n++)
      for (let i = arguments[n], u = 0, a = i.length; u < a; u++, r++)
        o[r] = i[u];
    return o;
  }
  let n;
    let e;
    let o;
    let r;
    let a;
    let s;
    const l = function () {
      return f;
    };
    var f =
      ((n = function (t) {
        return t.isNone();
      }),
      {
        fold (t, n) {
          return t();
        },
        is: c,
        isSome: c,
        isNone: i,
        getOr: (o = function (t) {
          return t;
        }),
        getOrThunk: (e = function (t) {
          return t();
        }),
        getOrDie (t) {
          throw new Error(t || "error: getOrDie called on none.");
        },
        getOrNull: at(null),
        getOrUndefined: at(undefined),
        or: o,
        orThunk: e,
        map: l,
        each: Z,
        bind: l,
        exists: c,
        forall: i,
        filter: l,
        equals: n,
        equals_: n,
        toArray () {
          return [];
        },
        toString: at("none()"),
      });
    var m = function (e) {
      const t = at(e);
        const n = function () {
          return r;
        };
        const o = function (t) {
          return t(e);
        };
        var r = {
          fold (t, n) {
            return n(e);
          },
          is (t) {
            return e === t;
          },
          isSome: i,
          isNone: c,
          getOr: t,
          getOrThunk: t,
          getOrDie: t,
          getOrNull: t,
          getOrUndefined: t,
          or: n,
          orThunk: n,
          map (t) {
            return m(t(e));
          },
          each (t) {
            t(e);
          },
          bind: o,
          exists: o,
          forall: o,
          filter (t) {
            return t(e) ? r : f;
          },
          toArray () {
            return [e];
          },
          toString () {
            return `some(${  e  })`;
          },
          equals (t) {
            return t.is(e);
          },
          equals_ (t, n) {
            return t.fold(c, function (t) {
              return n(e, t);
            });
          },
        };
      return r;
    };
    const st = {
      some: m,
      none: l,
      from (t) {
        return t === null || t === undefined ? f : m(t);
      },
    };
    const p = function (o) {
      return function (t) {
        return (
          (e = typeof (n = t)),
          (n === null
            ? "null"
            : e == "object" &&
              (Array.prototype.isPrototypeOf(n) ||
                (n.constructor && n.constructor.name === "Array"))
            ? "array"
            : e == "object" &&
              (String.prototype.isPrototypeOf(n) ||
                (n.constructor && n.constructor.name === "String"))
            ? "string"
            : e) === o
        );
        let n; let e;
      };
    };
    const h = function (n) {
      return function (t) {
        return typeof t === n;
      };
    };
    const w = p("string");
    const S = p("object");
    const v = p("array");
    const k = h("boolean");
    const C =
      ((r = undefined),
      function (t) {
        return r === t;
      });
    const O = function (t) {
      return !((n = t) === null || n === undefined);
      let n;
    };
    const _ = h("function");
    const ot = h("number");
    const T = function (t, n) {
      if (v(t)) {
        for (let e = 0, o = t.length; e < o; ++e) if (!n(t[e])) return !1;
        return !0;
      }
      return !1;
    };
    const E = Array.prototype.slice;
    const B = Array.prototype.indexOf;
    const D = Array.prototype.push;
    const A = function (t, n) {
      return B.call(t, n);
    };
    const M = function (t, n) {
      return A(t, n) > -1;
    };
    const F = function (t, n) {
      for (let e = 0, o = t.length; e < o; e++) {
        if (n(t[e], e)) return !0;
      }
      return !1;
    };
    const I = function (t, n) {
      for (var e = [], o = 0; o < t; o++) e.push(n(o));
      return e;
    };
    const R = function (t, n) {
      for (var e = [], o = 0; o < t.length; o += n) {
        const r = E.call(t, o, o + n);
        e.push(r);
      }
      return e;
    };
    const V = function (t, n) {
      for (var e = t.length, o = new Array(e), r = 0; r < e; r++) {
        const i = t[r];
        o[r] = n(i, r);
      }
      return o;
    };
    const rt = function (t, n) {
      for (let e = 0, o = t.length; e < o; e++) {
        n(t[e], e);
      }
    };
    const P = function (t, n) {
      for (var e = [], o = [], r = 0, i = t.length; r < i; r++) {
        const u = t[r];
        (n(u, r) ? e : o).push(u);
      }
      return { pass: e, fail: o };
    };
    const H = function (t, n) {
      for (var e = [], o = 0, r = t.length; o < r; o++) {
        const i = t[o];
        n(i, o) && e.push(i);
      }
      return e;
    };
    const z = function (t, n, e) {
      return (
        (function (t, n) {
          for (let e = t.length - 1; e >= 0; e--) {
            n(t[e], e);
          }
        })(t, function (t) {
          e = n(e, t);
        }),
        e
      );
    };
    const N = function (t, n, e) {
      return (
        rt(t, function (t) {
          e = n(e, t);
        }),
        e
      );
    };
    const L = function (t, n) {
      return (function (t, n, e) {
        for (let o = 0, r = t.length; o < r; o++) {
          const i = t[o];
          if (n(i, o)) return st.some(i);
          if (e(i, o)) break;
        }
        return st.none();
      })(t, n, c);
    };
    const j = function (t, n) {
      for (let e = 0, o = t.length; e < o; e++) {
        if (n(t[e], e)) return st.some(e);
      }
      return st.none();
    };
    const it = function (t) {
      for (var n = [], e = 0, o = t.length; e < o; ++e) {
        if (!v(t[e]))
          throw new Error(
            `Arr.flatten item ${  e  } was not an array, input: ${  t}`
          );
        D.apply(n, t[e]);
      }
      return n;
    };
    const U = function (t, n) {
      return it(V(t, n));
    };
    const W = function (t, n) {
      for (let e = 0, o = t.length; e < o; ++e) {
        if (!0 !== n(t[e], e)) return !1;
      }
      return !0;
    };
    const G = function (t) {
      const n = E.call(t, 0);
      return n.reverse(), n;
    };
    const X = function (t, n) {
      return H(t, function (t) {
        return !M(n, t);
      });
    };
    const Y = function (t, n) {
      const e = E.call(t, 0);
      return e.sort(n), e;
    };
    const q = function (t) {
      return t.length === 0 ? st.none() : st.some(t[0]);
    };
    const K = function (t) {
      return t.length === 0 ? st.none() : st.some(t[t.length - 1]);
    };
    const J = _(Array.from)
      ? Array.from
      : function (t) {
          return E.call(t);
        };
    const $ = function (t, n) {
      for (let e = 0; e < t.length; e++) {
        const o = n(t[e], e);
        if (o.isSome()) return o;
      }
      return st.none();
    };
    var Q = function (e) {
      return {
        is (t) {
          return e === t;
        },
        isValue: i,
        isError: c,
        getOr: at(e),
        getOrThunk: at(e),
        getOrDie: at(e),
        or (t) {
          return Q(e);
        },
        orThunk (t) {
          return Q(e);
        },
        fold (t, n) {
          return n(e);
        },
        map (t) {
          return Q(t(e));
        },
        mapError (t) {
          return Q(e);
        },
        each (t) {
          t(e);
        },
        bind (t) {
          return t(e);
        },
        exists (t) {
          return t(e);
        },
        forall (t) {
          return t(e);
        },
        toOption () {
          return st.some(e);
        },
      };
    };
    var tt = function (e) {
      return {
        is: c,
        isValue: c,
        isError: i,
        getOr: ct,
        getOrThunk (t) {
          return t();
        },
        getOrDie () {
          return u(String(e))();
        },
        or (t) {
          return t;
        },
        orThunk (t) {
          return t();
        },
        fold (t, n) {
          return t(e);
        },
        map (t) {
          return tt(e);
        },
        mapError (t) {
          return tt(t(e));
        },
        each: Z,
        bind (t) {
          return tt(e);
        },
        exists: c,
        forall: i,
        toOption: st.none,
      };
    };
    const ut = {
      value: Q,
      error: tt,
      fromOption (t, n) {
        return t.fold(function () {
          return tt(n);
        }, Q);
      },
    };
  ((s = a = a || {})[(s.Error = 0)] = "Error"), (s[(s.Value = 1)] = "Value");
  let lt;
    let ft;
    const dt = function (t, n, e) {
      return t.stype === a.Error ? n(t.serror) : e(t.svalue);
    };
    const mt = function (t) {
      return { stype: a.Value, svalue: t };
    };
    const gt = function (t) {
      return { stype: a.Error, serror: t };
    };
    const pt = function (t) {
      return t.fold(gt, mt);
    };
    const ht = function (t) {
      return dt(t, ut.error, ut.value);
    };
    const vt = mt;
    const bt = function (t) {
      const n = [];
        const e = [];
      return (
        rt(t, function (t) {
          dt(
            t,
            function (t) {
              return e.push(t);
            },
            function (t) {
              return n.push(t);
            }
          );
        }),
        { values: n, errors: e }
      );
    };
    const yt = gt;
    const xt = function (t, n) {
      return t.stype === a.Value ? n(t.svalue) : t;
    };
    const wt = function (t, n) {
      return t.stype === a.Error ? n(t.serror) : t;
    };
    const St = function (t, n) {
      return t.stype === a.Value ? { stype: a.Value, svalue: n(t.svalue) } : t;
    };
    const kt = function (t, n) {
      return t.stype === a.Error ? { stype: a.Error, serror: n(t.serror) } : t;
    };
    const Ct = Object.keys;
    const Ot = Object.hasOwnProperty;
    const _t = function (t, n) {
      for (let e = Ct(t), o = 0, r = e.length; o < r; o++) {
        const i = e[o];
        n(t[i], i);
      }
    };
    const Tt = function (t, e) {
      return Et(t, function (t, n) {
        return { k: n, v: e(t, n) };
      });
    };
    var Et = function (t, o) {
      const r = {};
      return (
        _t(t, function (t, n) {
          const e = o(t, n);
          r[e.k] = e.v;
        }),
        r
      );
    };
    const Bt = function (t, n) {
      let e;
        let o;
        let r;
        let i;
        const u = {};
      return (
        (e = n),
        (i = u),
        (o = function (t, n) {
          i[n] = t;
        }),
        (r = Z),
        _t(t, function (t, n) {
          (e(t, n) ? o : r)(t, n);
        }),
        u
      );
    };
    const Dt = function (t, e) {
      const o = [];
      return (
        _t(t, function (t, n) {
          o.push(e(t, n));
        }),
        o
      );
    };
    const At = function (t, n) {
      for (let e = Ct(t), o = 0, r = e.length; o < r; o++) {
        const i = e[o];
          const u = t[i];
        if (n(u, i, t)) return st.some(u);
      }
      return st.none();
    };
    const Mt = function (t) {
      return Dt(t, function (t) {
        return t;
      });
    };
    const Ft = function (t, n) {
      return It(t, n) ? st.from(t[n]) : st.none();
    };
    var It = function (t, n) {
      return Ot.call(t, n);
    };
    const Rt = function (t, n) {
      return It(t, n) && t[n] !== undefined && t[n] !== null;
    };
    const Vt = function (u) {
      if (!v(u)) throw new Error("cases must be an array");
      if (u.length === 0) throw new Error("there must be at least one case");
      const a = [];
        const e = {};
      return (
        rt(u, function (t, o) {
          const n = Ct(t);
          if (n.length !== 1) throw new Error("one and only one name per case");
          const r = n[0];
            const i = t[r];
          if (e[r] !== undefined)
            throw new Error(`duplicate key detected:${  r}`);
          if (r === "cata")
            throw new Error("cannot have a case named cata (sorry)");
          if (!v(i)) throw new Error("case arguments must be an array");
          a.push(r),
            (e[r] = function () {
              const t = arguments.length;
              if (t !== i.length)
                throw new Error(
                  `Wrong number of arguments to case ${ 
                    r 
                    }. Expected ${ 
                    i.length 
                    } (${ 
                    i 
                    }), got ${ 
                    t}`
                );
              for (var e = new Array(t), n = 0; n < e.length; n++)
                e[n] = arguments[n];
              return {
                fold () {
                  if (arguments.length !== u.length)
                    throw new Error(
                      `Wrong number of arguments to fold. Expected ${ 
                        u.length 
                        }, got ${ 
                        arguments.length}`
                    );
                  return arguments[o].apply(null, e);
                },
                match (t) {
                  const n = Ct(t);
                  if (a.length !== n.length)
                    throw new Error(
                      `Wrong number of arguments to match. Expected: ${ 
                        a.join(",") 
                        }\nActual: ${ 
                        n.join(",")}`
                    );
                  if (
                    !W(a, function (t) {
                      return M(n, t);
                    })
                  )
                    throw new Error(
                      `Not all branches were specified when using match. Specified: ${ 
                        n.join(", ") 
                        }\nRequired: ${ 
                        a.join(", ")}`
                    );
                  return t[r].apply(null, e);
                },
                log (t) {
                  nt.console.log(t, {
                    constructors: a,
                    constructor: r,
                    params: e,
                  });
                },
              };
            });
        }),
        e
      );
    };
    const Pt = Object.prototype.hasOwnProperty;
    const Ht = function (u) {
      return function () {
        for (var t = new Array(arguments.length), n = 0; n < t.length; n++)
          t[n] = arguments[n];
        if (t.length === 0) throw new Error("Can't merge zero objects");
        for (var e = {}, o = 0; o < t.length; o++) {
          const r = t[o];
          for (const i in r) Pt.call(r, i) && (e[i] = u(e[i], r[i]));
        }
        return e;
      };
    };
    var zt = Ht(function (t, n) {
      return S(t) && S(n) ? zt(t, n) : n;
    });
    const Nt = Ht(function (t, n) {
      return n;
    });
    const Lt = function (e) {
      let o;
        let r = !1;
      return function () {
        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
        return r || ((r = !0), (o = e.apply(null, t))), o;
      };
    };
    const jt = Vt([
      { strict: [] },
      { defaultedThunk: ["fallbackThunk"] },
      { asOption: [] },
      { asDefaultedOptionThunk: ["fallbackThunk"] },
      { mergeWithThunk: ["baseThunk"] },
    ]);
    const Ut = function (t) {
      return jt.defaultedThunk(at(t));
    };
    const Wt = jt.strict;
    const Gt = jt.asOption;
    const Xt = jt.defaultedThunk;
    const Yt = (jt.asDefaultedOptionThunk, jt.mergeWithThunk);
    const qt = function (t, n) {
      let e;
      return ((e = {})[t] = n), e;
    };
    const Kt =
      (Vt([
        { bothErrors: ["error1", "error2"] },
        { firstError: ["error1", "value2"] },
        { secondError: ["value1", "error2"] },
        { bothValues: ["value1", "value2"] },
      ]),
      function (t, n) {
        return (
          (e = n),
          (o = {}),
          _t(t, function (t, n) {
            M(e, n) || (o[n] = t);
          }),
          o
        );
        let e; let o;
      });
    const Jt = function (t, n) {
      return qt(t, n);
    };
    const $t = function (t) {
      return (
        (n = {}),
        rt(t, function (t) {
          n[t.key] = t.value;
        }),
        n
      );
      let n;
    };
    const Qt = function (t, n) {
      let e;
        let o;
        let r;
        let i;
        let u;
        const a =
          ((e = []),
          (o = []),
          rt(t, function (t) {
            t.fold(
              function (t) {
                e.push(t);
              },
              function (t) {
                o.push(t);
              }
            );
          }),
          { errors: e, values: o });
      return a.errors.length > 0
        ? ((u = a.errors), ut.error(it(u)))
        : ((i = n),
          (r = a.values).length === 0
            ? ut.value(i)
            : ut.value(zt(i, Nt.apply(undefined, r))));
    };
    const Zt = function (t) {
      return d(yt, it)(t);
    };
    const tn = function (t, n) {
      let e;
        let o;
        const r = bt(t);
      return r.errors.length > 0
        ? Zt(r.errors)
        : ((e = r.values),
          (o = n),
          e.length > 0 ? vt(zt(o, Nt.apply(undefined, e))) : vt(o));
    };
    const nn = function (t) {
      const n = bt(t);
      return n.errors.length > 0 ? Zt(n.errors) : vt(n.values);
    };
    const en = function (t) {
      return S(t) && Ct(t).length > 100
        ? " removed due to size"
        : JSON.stringify(t, null, 2);
    };
    const on = function (t, n) {
      return yt([{ path: t, getErrorInfo: n }]);
    };
    const rn = Vt([
      { field: ["key", "okey", "presence", "prop"] },
      { state: ["okey", "instantiator"] },
    ]);
    const un = function (e, o, r) {
      return Ft(o, r).fold(function () {
        return (
          (t = r),
          (n = o),
          on(e, function () {
            return (
              `Could not find valid *strict* value for "${  t  }" in ${  en(n)}`
            );
          })
        );
        let t; let n;
      }, vt);
    };
    const an = function (t, n, e) {
      const o = Ft(t, n).fold(function () {
        return e(t);
      }, ct);
      return vt(o);
    };
    const cn = function (a, c, t, s) {
      return t.fold(
        function (r, e, t, o) {
          const i = function (t) {
              const n = o.extract(a.concat([r]), s, t);
              return St(n, function (t) {
                return qt(e, s(t));
              });
            };
            const u = function (t) {
              return t.fold(
                function () {
                  const t = qt(e, s(st.none()));
                  return vt(t);
                },
                function (t) {
                  const n = o.extract(a.concat([r]), s, t);
                  return St(n, function (t) {
                    return qt(e, s(st.some(t)));
                  });
                }
              );
            };
          return t.fold(
            function () {
              return xt(un(a, c, r), i);
            },
            function (t) {
              return xt(an(c, r, t), i);
            },
            function () {
              return xt(vt(Ft(c, r)), u);
            },
            function (t) {
              return xt(
                ((e = t),
                (o = Ft((n = c), r).map(function (t) {
                  return !0 === t ? e(n) : t;
                })),
                vt(o)),
                u
              );
              let n; let e; let o;
            },
            function (t) {
              const n = t(c);
                const e = St(an(c, r, at({})), function (t) {
                  return zt(n, t);
                });
              return xt(e, i);
            }
          );
        },
        function (t, n) {
          const e = n(c);
          return vt(qt(t, s(e)));
        }
      );
    };
    const sn = function (o) {
      return {
        extract (e, t, n) {
          return wt(o(n, t), function (t) {
            return (
              (n = t),
              on(e, function () {
                return n;
              })
            );
            let n;
          });
        },
        toString () {
          return "val";
        },
      };
    };
    const ln = function (t) {
      const u = fn(t);
        const a = z(
          t,
          function (n, t) {
            return t.fold(function (t) {
              return zt(n, Jt(t, !0));
            }, at(n));
          },
          {}
        );
      return {
        extract (t, n, e) {
          let o;
            const r = k(e)
              ? []
              : Ct(
                  Bt(e, function (t) {
                    return t !== undefined && t !== null;
                  })
                );
            const i = H(r, function (t) {
              return !Rt(a, t);
            });
          return i.length === 0
            ? u.extract(t, n, e)
            : ((o = i),
              on(t, function () {
                return (
                  `There are unsupported fields: [${ 
                  o.join(", ") 
                  }] specified`
                );
              }));
        },
        toString: u.toString,
      };
    };
    var fn = function (a) {
      return {
        extract (t, n, e) {
          return (
            (o = t),
            (r = e),
            (i = n),
            (u = V(a, function (t) {
              return cn(o, r, t, i);
            })),
            tn(u, {})
          );
          let o; let r; let i; let u;
        },
        toString () {
          return (
            `obj{\n${ 
            V(a, function (t) {
              return t.fold(
                function (t, n, e, o) {
                  return `${t  } -> ${  o.toString()}`;
                },
                function (t, n) {
                  return `state(${  t  })`;
                }
              );
            }).join("\n") 
            }}`
          );
        },
      };
    };
    const dn = function (r) {
      return {
        extract (e, o, t) {
          const n = V(t, function (t, n) {
            return r.extract(e.concat([`[${  n  }]`]), o, t);
          });
          return nn(n);
        },
        toString () {
          return `array(${  r.toString()  })`;
        },
      };
    };
    const mn = function (a, c) {
      return {
        extract (e, o, r) {
          let t;
            let n;
            const i = Ct(r);
            const u = ((t = e), (n = i), dn(sn(a)).extract(t, ct, n));
          return xt(u, function (t) {
            const n = V(t, function (t) {
              return rn.field(t, t, Wt(), c);
            });
            return fn(n).extract(e, o, r);
          });
        },
        toString () {
          return `setOf(${  c.toString()  })`;
        },
      };
    };
    const gn = at(sn(vt));
    const pn = d(dn, fn);
    const hn = rn.state;
    const vn = rn.field;
    const bn = function (e, n, o, r, i) {
      return Ft(r, i).fold(
        function () {
          return (
            (t = r),
            (n = i),
            on(e, function () {
              return (
                `The chosen schema: "${ 
                n 
                }" did not exist in branches: ${ 
                en(t)}`
              );
            })
          );
          let t; let n;
        },
        function (t) {
          return t.extract(e.concat([`branch: ${  i}`]), n, o);
        }
      );
    };
    const yn = function (r, i) {
      return {
        extract (n, e, o) {
          return Ft(o, r).fold(
            function () {
              return (
                (t = r),
                on(n, function () {
                  return (
                    `Choice schema did not contain choice key: "${  t  }"`
                  );
                })
              );
              let t;
            },
            function (t) {
              return bn(n, e, o, i, t);
            }
          );
        },
        toString () {
          return `chooseOn(${  r  }). Possible values: ${  Ct(i)}`;
        },
      };
    };
    const xn = sn(vt);
    const wn = function (t) {
      return pn(t);
    };
    const Sn = function (o) {
      return {
        extract (t, n, e) {
          return o().extract(t, n, e);
        },
        toString () {
          return o().toString();
        },
      };
    };
    const kn = function (n) {
      return sn(function (t) {
        return n(t).fold(yt, vt);
      });
    };
    const Cn = function (n, t) {
      return mn(function (t) {
        return pt(n(t));
      }, t);
    };
    const On = function (t, n, e) {
      return ht(
        ((o = t),
        (r = ct),
        (i = e),
        (u = n.extract([o], r, i)),
        kt(u, function (t) {
          return { input: i, errors: t };
        }))
      );
      let o; let r; let i; let u;
    };
    const _n = function (t) {
      return t.fold(function (t) {
        throw new Error(En(t));
      }, ct);
    };
    const Tn = function (t, n, e) {
      return _n(On(t, n, e));
    };
    var En = function (t) {
      return (
        `Errors: \n${ 
        (n = t.errors),
        (e =
          n.length > 10
            ? n.slice(0, 10).concat([
                {
                  path: [],
                  getErrorInfo () {
                    return "... (only showing first ten failures)";
                  },
                },
              ])
            : n),
        V(e, function (t) {
          return (
            `Failed path: (${  t.path.join(" > ")  })\n${  t.getErrorInfo()}`
          );
        }).join("\n") 
        }\n\nInput object: ${ 
        en(t.input)}`
      );
      let n; let e;
    };
    const Bn = function (t, n) {
      return yn(t, n);
    };
    const Dn = function (t, n) {
      return yn(t, Tt(n, fn));
    };
    const An = at(xn);
    const Mn = function (e, o) {
      return sn(function (t) {
        const n = typeof t;
        return e(t) ? vt(t) : yt(`Expected type: ${  o  } but got: ${  n}`);
      });
    };
    const Fn = Mn(ot, "number");
    const In = Mn(w, "string");
    const Rn = Mn(k, "boolean");
    const Vn = Mn(_, "function");
    var Pn = function (n) {
      const t = function (t, n) {
        for (let e = t.next(); !e.done; ) {
          if (!n(e.value)) return !1;
          e = t.next();
        }
        return !0;
      };
      if (Object(n) !== n) return !0;
      switch ({}.toString.call(n).slice(8, -1)) {
        case "Boolean":
        case "Number":
        case "String":
        case "Date":
        case "RegExp":
        case "Blob":
        case "FileList":
        case "ImageData":
        case "ImageBitmap":
        case "ArrayBuffer":
          return !0;
        case "Array":
        case "Object":
          return Object.keys(n).every(function (t) {
            return Pn(n[t]);
          });
        case "Map":
          return t(n.keys(), Pn) && t(n.values(), Pn);
        case "Set":
          return t(n.keys(), Pn);
        default:
          return !1;
      }
    };
    const Hn = sn(function (t) {
      return Pn(t)
        ? vt(t)
        : yt("Expected value to be acceptable for sending via postMessage");
    });
    const zn = function (n) {
      return kn(function (t) {
        return M(n, t)
          ? ut.value(t)
          : ut.error(
              `Unsupported value: "${ 
                t 
                }", choose one of "${ 
                n.join(", ") 
                }".`
            );
      });
    };
    const Nn = function (t) {
      return vn(t, t, Wt(), gn());
    };
    const Ln = function (t, n) {
      return vn(t, t, Wt(), n);
    };
    const jn = function (t) {
      return Ln(t, In);
    };
    const Un = function (t, n) {
      return vn(t, t, Wt(), zn(n));
    };
    const Wn = function (t) {
      return Ln(t, Vn);
    };
    const Gn = function (t, n) {
      return vn(t, t, Wt(), fn(n));
    };
    const Xn = function (t, n) {
      return vn(t, t, Wt(), pn(n));
    };
    const Yn = function (t, n) {
      return vn(t, t, Wt(), dn(n));
    };
    const qn = function (t) {
      return vn(t, t, Gt(), gn());
    };
    const Kn = function (t, n) {
      return vn(t, t, Gt(), n);
    };
    const Jn = function (t) {
      return Kn(t, Fn);
    };
    const $n = function (t) {
      return Kn(t, In);
    };
    const Qn = function (t) {
      return Kn(t, Vn);
    };
    const Zn = function (t, n) {
      return Kn(t, fn(n));
    };
    const te = function (t, n) {
      return vn(t, t, Ut(n), gn());
    };
    const ne = function (t, n, e) {
      return vn(t, t, Ut(n), e);
    };
    const ee = function (t, n) {
      return ne(t, n, Fn);
    };
    const oe = function (t, n) {
      return ne(t, n, In);
    };
    const re = function (t, n, e) {
      return ne(t, n, zn(e));
    };
    const ie = function (t, n) {
      return ne(t, n, Rn);
    };
    const ue = function (t, n) {
      return ne(t, n, Vn);
    };
    const ae = function (t, n, e) {
      return ne(t, n, fn(e));
    };
    const ce = function (t, n) {
      return hn(t, n);
    };
    const se = function (t) {
      let n = t;
      return {
        get () {
          return n;
        },
        set (t) {
          n = t;
        },
      };
    };
    const le = function (t) {
      if (t === null || t === undefined)
        throw new Error("Node cannot be null or undefined");
      return { dom: at(t) };
    };
    const fe = {
      fromHtml (t, n) {
        const e = (n || nt.document).createElement("div");
        if (((e.innerHTML = t), !e.hasChildNodes() || e.childNodes.length > 1))
          throw (
            (nt.console.error("HTML does not have a single root node", t),
            new Error("HTML must have a single root node"))
          );
        return le(e.childNodes[0]);
      },
      fromTag (t, n) {
        const e = (n || nt.document).createElement(t);
        return le(e);
      },
      fromText (t, n) {
        const e = (n || nt.document).createTextNode(t);
        return le(e);
      },
      fromDom: le,
      fromPoint (t, n, e) {
        const o = t.dom();
        return st.from(o.elementFromPoint(n, e)).map(le);
      },
    };
    const de = function (t, n) {
      const e = (function (t, n) {
        for (let e = 0; e < t.length; e++) {
          const o = t[e];
          if (o.test(n)) return o;
        }
        return undefined;
      })(t, n);
      if (!e) return { major: 0, minor: 0 };
      const o = function (t) {
        return Number(n.replace(e, `$${  t}`));
      };
      return ge(o(1), o(2));
    };
    const me = function () {
      return ge(0, 0);
    };
    var ge = function (t, n) {
      return { major: t, minor: n };
    };
    const pe = {
      nu: ge,
      detect (t, n) {
        const e = String(n).toLowerCase();
        return t.length === 0 ? me() : de(t, e);
      },
      unknown: me,
    };
    const he = "Firefox";
    const ve = function (t) {
      const n = t.current;
        const e = t.version;
        const o = function (t) {
          return function () {
            return n === t;
          };
        };
      return {
        current: n,
        version: e,
        isEdge: o("Edge"),
        isChrome: o("Chrome"),
        isIE: o("IE"),
        isOpera: o("Opera"),
        isFirefox: o(he),
        isSafari: o("Safari"),
      };
    };
    const be = {
      unknown () {
        return ve({ current: undefined, version: pe.unknown() });
      },
      nu: ve,
      edge: at("Edge"),
      chrome: at("Chrome"),
      ie: at("IE"),
      opera: at("Opera"),
      firefox: at(he),
      safari: at("Safari"),
    };
    const ye = "Windows";
    const xe = "Android";
    const we = "Solaris";
    const Se = "FreeBSD";
    const ke = "ChromeOS";
    const Ce = function (t) {
      const n = t.current;
        const e = t.version;
        const o = function (t) {
          return function () {
            return n === t;
          };
        };
      return {
        current: n,
        version: e,
        isWindows: o(ye),
        isiOS: o("iOS"),
        isAndroid: o(xe),
        isOSX: o("OSX"),
        isLinux: o("Linux"),
        isSolaris: o(we),
        isFreeBSD: o(Se),
        isChromeOS: o(ke),
      };
    };
    const Oe = {
      unknown () {
        return Ce({ current: undefined, version: pe.unknown() });
      },
      nu: Ce,
      windows: at(ye),
      ios: at("iOS"),
      android: at(xe),
      linux: at("Linux"),
      osx: at("OSX"),
      solaris: at(we),
      freebsd: at(Se),
      chromeos: at(ke),
    };
    const _e = function (t, n) {
      const e = String(n).toLowerCase();
      return L(t, function (t) {
        return t.search(e);
      });
    };
    const Te = function (t, e) {
      return _e(t, e).map(function (t) {
        const n = pe.detect(t.versionRegexes, e);
        return { current: t.name, version: n };
      });
    };
    const Ee = function (t, e) {
      return _e(t, e).map(function (t) {
        const n = pe.detect(t.versionRegexes, e);
        return { current: t.name, version: n };
      });
    };
    const Be = function (t, n) {
      return t.indexOf(n) !== -1;
    };
    const De =
      ((lt = /^\s+|\s+$/g),
      function (t) {
        return t.replace(lt, "");
      });
    const Ae = /.*?version\/\ ?([0-9]+)\.([0-9]+).*/;
    const Me = function (n) {
      return function (t) {
        return Be(t, n);
      };
    };
    const Fe = [
      {
        name: "Edge",
        versionRegexes: [/.*?edge\/ ?([0-9]+)\.([0-9]+)$/],
        search (t) {
          return (
            Be(t, "edge/") &&
            Be(t, "chrome") &&
            Be(t, "safari") &&
            Be(t, "applewebkit")
          );
        },
      },
      {
        name: "Chrome",
        versionRegexes: [/.*?chrome\/([0-9]+)\.([0-9]+).*/, Ae],
        search (t) {
          return Be(t, "chrome") && !Be(t, "chromeframe");
        },
      },
      {
        name: "IE",
        versionRegexes: [
          /.*?msie\ ?([0-9]+)\.([0-9]+).*/,
          /.*?rv:([0-9]+)\.([0-9]+).*/,
        ],
        search (t) {
          return Be(t, "msie") || Be(t, "trident");
        },
      },
      {
        name: "Opera",
        versionRegexes: [Ae, /.*?opera\/([0-9]+)\.([0-9]+).*/],
        search: Me("opera"),
      },
      {
        name: "Firefox",
        versionRegexes: [/.*?firefox\/\ ?([0-9]+)\.([0-9]+).*/],
        search: Me("firefox"),
      },
      {
        name: "Safari",
        versionRegexes: [Ae, /.*?cpu os ([0-9]+)_([0-9]+).*/],
        search (t) {
          return (Be(t, "safari") || Be(t, "mobile/")) && Be(t, "applewebkit");
        },
      },
    ];
    const Ie = [
      {
        name: "Windows",
        search: Me("win"),
        versionRegexes: [/.*?windows\ nt\ ?([0-9]+)\.([0-9]+).*/],
      },
      {
        name: "iOS",
        search (t) {
          return Be(t, "iphone") || Be(t, "ipad");
        },
        versionRegexes: [
          /.*?version\/\ ?([0-9]+)\.([0-9]+).*/,
          /.*cpu os ([0-9]+)_([0-9]+).*/,
          /.*cpu iphone os ([0-9]+)_([0-9]+).*/,
        ],
      },
      {
        name: "Android",
        search: Me("android"),
        versionRegexes: [/.*?android\ ?([0-9]+)\.([0-9]+).*/],
      },
      {
        name: "OSX",
        search: Me("mac os x"),
        versionRegexes: [/.*?mac\ os\ x\ ?([0-9]+)_([0-9]+).*/],
      },
      { name: "Linux", search: Me("linux"), versionRegexes: [] },
      { name: "Solaris", search: Me("sunos"), versionRegexes: [] },
      { name: "FreeBSD", search: Me("freebsd"), versionRegexes: [] },
      {
        name: "ChromeOS",
        search: Me("cros"),
        versionRegexes: [/.*?chrome\/([0-9]+)\.([0-9]+).*/],
      },
    ];
    const Re = { browsers: at(Fe), oses: at(Ie) };
    const Ve = function (t, n) {
      let e;
        let o;
        let r;
        let i;
        let u;
        let a;
        let c;
        let s;
        let l;
        let f;
        let d;
        let m;
        const g = Re.browsers();
        const p = Re.oses();
        const h = Te(g, t).fold(be.unknown, be.nu);
        const v = Ee(p, t).fold(Oe.unknown, Oe.nu);
      return {
        browser: h,
        os: v,
        deviceType:
          ((o = h),
          (r = t),
          (i = n),
          (u = (e = v).isiOS() && !0 === /ipad/i.test(r)),
          (a = e.isiOS() && !u),
          (c = e.isiOS() || e.isAndroid()),
          (s = c || i("(pointer:coarse)")),
          (l = u || (!a && c && i("(min-device-width:768px)"))),
          (f = a || (c && !l)),
          (d = o.isSafari() && e.isiOS() && !1 === /safari/i.test(r)),
          (m = !f && !l && !d),
          {
            isiPad: at(u),
            isiPhone: at(a),
            isTablet: at(l),
            isPhone: at(f),
            isTouch: at(s),
            isAndroid: e.isAndroid,
            isiOS: e.isiOS,
            isWebView: at(d),
            isDesktop: at(m),
          }),
      };
    };
    const Pe = function (t) {
      return nt.window.matchMedia(t).matches;
    };
    const He = Lt(function () {
      return Ve(nt.navigator.userAgent, Pe);
    });
    const ze = function () {
      return He();
    };
    const Ne = function (t, n) {
      const e = t.dom();
      if (e.nodeType !== 1) return !1;
      const o = e;
      if (o.matches !== undefined) return o.matches(n);
      if (o.msMatchesSelector !== undefined) return o.msMatchesSelector(n);
      if (o.webkitMatchesSelector !== undefined)
        return o.webkitMatchesSelector(n);
      if (o.mozMatchesSelector !== undefined) return o.mozMatchesSelector(n);
      throw new Error("Browser lacks native selectors");
    };
    const Le = function (t) {
      return (
        (t.nodeType !== 1 && t.nodeType !== 9 && t.nodeType !== 11) ||
        t.childElementCount === 0
      );
    };
    const je = function (t, n) {
      return t.dom() === n.dom();
    };
    const Ue = function (t, n) {
      return (
        (e = t.dom()),
        (o = n.dom()),
        (r = e),
        (i = o),
        (u = nt.Node.DOCUMENT_POSITION_CONTAINED_BY),
        (r.compareDocumentPosition(i) & u) != 0
      );
      let e; let o; let r; let i; let u;
    };
    const We = function (t, n) {
      return ze().browser.isIE()
        ? Ue(t, n)
        : ((e = n), (o = t.dom()), (r = e.dom()), o !== r && o.contains(r));
      let e; let o; let r;
    };
    const Ge = function (t) {
      return _(t) ? t : at(!1);
    };
    const Xe = function (t, n, e) {
      for (let o = t.dom(), r = Ge(e); o.parentNode; ) {
        o = o.parentNode;
        const i = fe.fromDom(o);
          const u = n(i);
        if (u.isSome()) return u;
        if (r(i)) break;
      }
      return st.none();
    };
    const Ye = function (t, n, e) {
      const o = n(t);
        const r = Ge(e);
      return o.orThunk(function () {
        return r(t) ? st.none() : Xe(t, n, r);
      });
    };
    const qe = function (t, n) {
      return je(t.element(), n.event().target());
    };
    const Ke = function (t) {
      if (!Rt(t, "can") && !Rt(t, "abort") && !Rt(t, "run"))
        throw new Error(
          `EventHandler defined by: ${ 
            JSON.stringify(t, null, 2) 
            } does not have can, abort, or run!`
        );
      return Tn(
        "Extracting event.handler",
        ln([te("can", at(!0)), te("abort", at(!1)), te("run", Z)]),
        t
      );
    };
    const Je = function (e) {
      let n;
        let o;
        let r;
        let i;
        const t =
          ((o = function (t) {
            return t.can;
          }),
          function () {
            for (var e = [], t = 0; t < arguments.length; t++)
              e[t] = arguments[t];
            return N(
              n,
              function (t, n) {
                return t && o(n).apply(undefined, e);
              },
              !0
            );
          });
        const u =
          ((r = n = e),
          (i = function (t) {
            return t.abort;
          }),
          function () {
            for (var e = [], t = 0; t < arguments.length; t++)
              e[t] = arguments[t];
            return N(
              r,
              function (t, n) {
                return t || i(n).apply(undefined, e);
              },
              !1
            );
          });
      return Ke({
        can: t,
        abort: u,
        run () {
          for (var n = [], t = 0; t < arguments.length; t++)
            n[t] = arguments[t];
          rt(e, function (t) {
            t.run.apply(undefined, n);
          });
        },
      });
    };
    const $e = at("touchstart");
    const Qe = at("touchmove");
    const Ze = at("touchend");
    const to = at("touchcancel");
    const no = at("mousedown");
    const eo = at("mousemove");
    const oo = at("mouseout");
    const ro = at("mouseup");
    const io = at("mouseover");
    const uo = at("focusin");
    const ao = at("focusout");
    const co = at("keydown");
    const so = at("keyup");
    const lo = at("input");
    const fo = at("change");
    const mo = at("click");
    const go = at("transitionend");
    const po = at("selectstart");
    const ho = { tap: at("alloy.tap") };
    const vo = at("alloy.focus");
    const bo = at("alloy.blur.post");
    const yo = at("alloy.paste.post");
    const xo = at("alloy.receive");
    const wo = at("alloy.execute");
    const So = at("alloy.focus.item");
    const ko = ho.tap;
    const Co = at("alloy.longpress");
    const Oo = at("alloy.sandbox.close");
    const _o = at("alloy.typeahead.cancel");
    const To = at("alloy.system.init");
    const Eo = at("alloy.system.touchmove");
    const Bo = at("alloy.system.touchend");
    const Do = at("alloy.system.scroll");
    const Ao = at("alloy.system.resize");
    const Mo = at("alloy.system.attached");
    const Fo = at("alloy.system.detached");
    const Io = at("alloy.system.dismissRequested");
    const Ro = at("alloy.system.repositionRequested");
    const Vo = at("alloy.focusmanager.shifted");
    const Po = at("alloy.slotcontainer.visibility");
    const Ho = at("alloy.change.tab");
    const zo = at("alloy.dismiss.tab");
    const No = at("alloy.highlight");
    const Lo = at("alloy.dehighlight");
    const jo = function (t, n) {
      Xo(t, t.element(), n, {});
    };
    const Uo = function (t, n, e) {
      Xo(t, t.element(), n, e);
    };
    const Wo = function (t) {
      jo(t, wo());
    };
    const Go = function (t, n, e) {
      Xo(t, n, e, {});
    };
    var Xo = function (t, n, e, o) {
      const r = {target: n, ...o};
      t.getSystem().triggerEvent(e, n, Tt(r, at));
    };
    const Yo = function (t, n, e, o) {
      t.getSystem().triggerEvent(e, n, o.event());
    };
    const qo = function (t) {
      return $t(t);
    };
    const Ko = function (t, n) {
      return { key: t, value: Ke({ abort: n }) };
    };
    const Jo = function (t) {
      return {
        key: t,
        value: Ke({
          run (t, n) {
            n.event().prevent();
          },
        }),
      };
    };
    const $o = function (t, n) {
      return { key: t, value: Ke({ run: n }) };
    };
    const Qo = function (t, e, o) {
      return {
        key: t,
        value: Ke({
          run (t, n) {
            e.apply(undefined, [t, n].concat(o));
          },
        }),
      };
    };
    const Zo = function (t) {
      return function (e) {
        return {
          key: t,
          value: Ke({
            run (t, n) {
              qe(t, n) && e(t, n);
            },
          }),
        };
      };
    };
    const tr = function (t, n, e) {
      let o;
        let r;
        const i = n.partUids[e];
      return (
        (r = i),
        $o((o = t), function (t, n) {
          t.getSystem()
            .getByUid(r)
            .each(function (t) {
              Yo(t, t.element(), o, n);
            });
        })
      );
    };
    const nr = function (t, r) {
      return $o(t, function (n, t) {
        const e = t.event();
          const o = n
            .getSystem()
            .getByDom(e.target())
            .fold(
              function () {
                return Ye(
                  e.target(),
                  function (t) {
                    return n.getSystem().getByDom(t).toOption();
                  },
                  at(!1)
                ).getOr(n);
              },
              function (t) {
                return t;
              }
            );
        r(n, o, t);
      });
    };
    const er = function (t) {
      return $o(t, function (t, n) {
        n.cut();
      });
    };
    const or = function (t, n) {
      return Zo(t)(n);
    };
    const rr = Zo(Mo());
    const ir = Zo(Fo());
    const ur = Zo(To());
    const ar =
      ((ft = wo()),
      function (t) {
        return $o(ft, t);
      });
    const cr =
      (typeof nt.window !== "undefined" ? nt.window : Function("return this;")(),
      function (t) {
        return t.dom().nodeName.toLowerCase();
      });
    const sr = function (n) {
      return function (t) {
        return t.dom().nodeType === n;
      };
    };
    const lr = sr(1);
    const fr = sr(3);
    const dr = sr(9);
    const mr = sr(11);
    const gr = function (t) {
      return fe.fromDom(t.dom().ownerDocument);
    };
    const pr = function (t) {
      return dr(t) ? t : gr(t);
    };
    const hr = function (t) {
      return fe.fromDom(t.dom().ownerDocument.documentElement);
    };
    const vr = function (t) {
      return fe.fromDom(t.dom().ownerDocument.defaultView);
    };
    const br = function (t) {
      return st.from(t.dom().parentNode).map(fe.fromDom);
    };
    const yr = function (t) {
      return st.from(t.dom().offsetParent).map(fe.fromDom);
    };
    const xr = function (t) {
      return V(t.dom().childNodes, fe.fromDom);
    };
    const wr = function (t, n) {
      const e = t.dom().childNodes;
      return st.from(e[n]).map(fe.fromDom);
    };
    const Sr = function (n, e) {
      br(n).each(function (t) {
        t.dom().insertBefore(e.dom(), n.dom());
      });
    };
    const kr = function (t, n) {
      let e;
      ((e = t), st.from(e.dom().nextSibling).map(fe.fromDom)).fold(
        function () {
          br(t).each(function (t) {
            Or(t, n);
          });
        },
        function (t) {
          Sr(t, n);
        }
      );
    };
    const Cr = function (n, e) {
      wr(n, 0).fold(
        function () {
          Or(n, e);
        },
        function (t) {
          n.dom().insertBefore(e.dom(), t.dom());
        }
      );
    };
    var Or = function (t, n) {
      t.dom().appendChild(n.dom());
    };
    const _r = function (n, t) {
      rt(t, function (t) {
        Or(n, t);
      });
    };
    const Tr = function (t) {
      (t.dom().textContent = ""),
        rt(xr(t), function (t) {
          Er(t);
        });
    };
    var Er = function (t) {
      const n = t.dom();
      n.parentNode !== null && n.parentNode.removeChild(n);
    };
    const Br = function (t) {
      let n;
        const e = xr(t);
      e.length > 0 &&
        ((n = t),
        rt(e, function (t) {
          Sr(n, t);
        })),
        Er(t);
    };
    const Dr = function (t) {
      return t.dom().innerHTML;
    };
    const Ar = function (t, n) {
      let e;
        let o;
        const r = gr(t).dom();
        const i = fe.fromDom(r.createDocumentFragment());
        const u =
          ((e = n),
          ((o = (r || nt.document).createElement("div")).innerHTML = e),
          xr(fe.fromDom(o)));
      _r(i, u), Tr(t), Or(t, i);
    };
    const Mr = function (t, n, e) {
      if (!(w(e) || k(e) || ot(e)))
        throw (
          (nt.console.error(
            "Invalid call to Attr.set. Key ",
            n,
            ":: Value ",
            e,
            ":: Element ",
            t
          ),
          new Error("Attribute value was not simple"))
        );
      t.setAttribute(n, `${e  }`);
    };
    const Fr = function (t, n, e) {
      Mr(t.dom(), n, e);
    };
    const Ir = function (t, n) {
      const e = t.dom().getAttribute(n);
      return e === null ? undefined : e;
    };
    const Rr = function (t, n) {
      return st.from(Ir(t, n));
    };
    const Vr = function (t, n) {
      const e = t.dom();
      return !(!e || !e.hasAttribute) && e.hasAttribute(n);
    };
    const Pr = function (t, n) {
      t.dom().removeAttribute(n);
    };
    const Hr = function (t) {
      return (n = t), (e = !1), fe.fromDom(n.dom().cloneNode(e));
      let n; let e;
    };
    const zr = function (t) {
      let n;
        let e;
        let o;
        const r = Hr(t);
      return (
        (n = r),
        (e = fe.fromTag("div")),
        (o = fe.fromDom(n.dom().cloneNode(!0))),
        Or(e, o),
        Dr(e)
      );
    };
    const Nr = function (t) {
      return zr(t);
    };
    const Lr = qo([
      {
        key: vo(),
        value: Ke({
          can (t, n) {
            let e;
              let o;
              const r = n.event().originator();
              const i = n.event().target();
            return (
              (o = i),
              !(je((e = r), t.element()) && !je(e, o)) ||
                (nt.console.warn(
                  `${vo() 
                    } did not get interpreted by the desired target. \nOriginator: ${ 
                    Nr(r) 
                    }\nTarget: ${ 
                    Nr(i) 
                    }\nCheck the ${ 
                    vo() 
                    } event handlers`
                ),
                !1)
            );
          },
        }),
      },
    ]);
    const jr = /* */ Object.freeze({ __proto__: null, events: Lr });
    let Ur = 0;
    const Wr = function (t) {
      const n = new Date().getTime();
      return `${t  }_${  Math.floor(1e9 * Math.random())  }${++Ur  }${String(n)}`;
    };
    const Gr = at("alloy-id-");
    const Xr = at("data-alloy-id");
    const Yr = Gr();
    const qr = Xr();
    const Kr = function (t, n) {
      Object.defineProperty(t.dom(), qr, { value: n, writable: !0 });
    };
    const Jr = function (t) {
      const n = lr(t) ? t.dom()[qr] : null;
      return st.from(n);
    };
    const $r = function (t) {
      return Wr(t);
    };
    const Qr = ct;
    const Zr = function (n) {
      const t = function (t) {
        return function () {
          throw new Error(
            `The component must be in a context to send: ${ 
              t 
              }${n ? `\n${  Nr(n().element())  } is not in context.` : ""}`
          );
        };
      };
      return {
        debugInfo: at("fake"),
        triggerEvent: t("triggerEvent"),
        triggerFocus: t("triggerFocus"),
        triggerEscape: t("triggerEscape"),
        build: t("build"),
        addToWorld: t("addToWorld"),
        removeFromWorld: t("removeFromWorld"),
        addToGui: t("addToGui"),
        removeFromGui: t("removeFromGui"),
        getByUid: t("getByUid"),
        getByDom: t("getByDom"),
        broadcast: t("broadcast"),
        broadcastOn: t("broadcastOn"),
        broadcastEvent: t("broadcastEvent"),
        isConnected: at(!1),
      };
    };
    const ti = Zr();
    const ni = function (t) {
      return V(t, function (t) {
        return (
          (o = n = "/*"),
          (r = (e = t).length - n.length),
          o === "" || (e.length >= o.length && e.substr(r, r + o.length) === o)
            ? t.substring(0, t.length - "/*".length)
            : t
        );
        let n; let e; let o; let r;
      });
    };
    const ei = function (t, n) {
      const e = t.toString();
        const o = e.indexOf(")") + 1;
        const r = e.indexOf("(");
        const i = e.substring(r + 1, o - 1).split(/,\s*/);
      return (
        (t.toFunctionAnnotation = function () {
          return { name: n, parameters: ni(i) };
        }),
        t
      );
    };
    const oi = Wr("alloy-premade");
    const ri = function (t) {
      return Jt(oi, t);
    };
    const ii = function (o) {
      return (
        (t = function (t) {
          for (var n = [], e = 1; e < arguments.length; e++)
            n[e - 1] = arguments[e];
          return o.apply(void 0, b([t.getApis(), t], n));
        }),
        (n = o.toString()),
        (e = n.indexOf(")") + 1),
        (r = n.indexOf("(")),
        (i = n.substring(r + 1, e - 1).split(/,\s*/)),
        (t.toFunctionAnnotation = function () {
          return { name: "OVERRIDE", parameters: ni(i.slice(1)) };
        }),
        t
      );
      let t; let n; let e; let r; let i;
    };
    const ui = {
      init () {
        return ai({
          readState () {
            return "No State required";
          },
        });
      },
    };
    var ai = function (t) {
      return t;
    };
    const ci = function (t, r) {
      const i = {};
      return (
        _t(t, function (t, o) {
          _t(t, function (t, n) {
            const e = Ft(i, n).getOr([]);
            i[n] = e.concat([r(o, t)]);
          });
        }),
        i
      );
    };
    const si = function (t) {
      return {
        classes: t.classes !== undefined ? t.classes : [],
        attributes: t.attributes !== undefined ? t.attributes : {},
        styles: t.styles !== undefined ? t.styles : {},
      };
    };
    const li = function (t, n) {
      return (
        (e = g.apply(undefined, [t.handler].concat(n))),
        (o = t.purpose()),
        { cHandler: e, purpose: at(o) }
      );
      let e; let o;
    };
    const fi = function (t) {
      return t.cHandler;
    };
    const di = function (t, n) {
      return { name: at(t), handler: at(n) };
    };
    const mi = function (t, n, e) {
      let o;
        let r;
        const i = {
          ...e,
          ...((o = t),
          (r = {}),
          rt(n, function (t) {
            r[t.name()] = t.handlers(o);
          }),
          r)
        };
      return ci(i, di);
    };
    const gi = function (t) {
      let n;
        const i = _((n = t)) ? { can: at(!0), abort: at(!1), run: n } : n;
      return function (t, n) {
        for (var e = [], o = 2; o < arguments.length; o++)
          e[o - 2] = arguments[o];
        const r = [t, n].concat(e);
        i.abort.apply(undefined, r)
          ? n.stop()
          : i.can.apply(undefined, r) && i.run.apply(undefined, r);
      };
    };
    const pi = function (t, n, e) {
      let o;
        let r;
        const i = n[e];
      return i
        ? (function (u, a, t, c) {
            try {
              const n = Y(t, function (t, n) {
                const e = t[a]();
                  const o = n[a]();
                  const r = c.indexOf(e);
                  const i = c.indexOf(o);
                if (r === -1)
                  throw new Error(
                    `The ordering for ${ 
                      u 
                      } does not have an entry for ${ 
                      e 
                      }.\nOrder specified: ${ 
                      JSON.stringify(c, null, 2)}`
                  );
                if (i === -1)
                  throw new Error(
                    `The ordering for ${ 
                      u 
                      } does not have an entry for ${ 
                      o 
                      }.\nOrder specified: ${ 
                      JSON.stringify(c, null, 2)}`
                  );
                return r < i ? -1 : i < r ? 1 : 0;
              });
              return ut.value(n);
            } catch (e) {
              return ut.error([e]);
            }
          })(`Event: ${  e}`, "name", t, i).map(function (t) {
            const n = V(t, function (t) {
              return t.handler();
            });
            return Je(n);
          })
        : ((o = e),
          (r = t),
          ut.error([
            `The event (${ 
              o 
              }) has more than one behaviour that listens to it.\nWhen this occurs, you must specify an event ordering for the behaviours in your spec (e.g. [ "listing", "toggling" ]).\nThe behaviours that can trigger it are: ${ 
              JSON.stringify(
                V(r, function (t) {
                  return t.name();
                }),
                null,
                2
              )}`,
          ]));
    };
    const hi = function (t, i) {
      const n = Dt(t, function (o, r) {
        return (o.length === 1 ? ut.value(o[0].handler()) : pi(o, i, r)).map(
          function (t) {
            const n = gi(t);
              const e =
                o.length > 1
                  ? H(i[r], function (n) {
                      return F(o, function (t) {
                        return t.name() === n;
                      });
                    }).join(" > ")
                  : o[0].name();
            return Jt(r, { handler: n, purpose: at(e) });
          }
        );
      });
      return Qt(n, {});
    };
    const vi = function (t) {
      return On(
        "custom.definition",
        fn([
          vn(
            "dom",
            "dom",
            Wt(),
            fn([
              Nn("tag"),
              te("styles", {}),
              te("classes", []),
              te("attributes", {}),
              qn("value"),
              qn("innerHtml"),
            ])
          ),
          Nn("components"),
          Nn("uid"),
          te("events", {}),
          te("apis", {}),
          vn(
            "eventOrder",
            "eventOrder",
            jt.mergeWithThunk(
              at({
                "alloy.execute": [
                  "disabling",
                  "alloy.base.behaviour",
                  "toggling",
                  "typeaheadevents",
                ],
                "alloy.focus": ["alloy.base.behaviour", "focusing", "keying"],
                "alloy.system.init": [
                  "alloy.base.behaviour",
                  "disabling",
                  "toggling",
                  "representing",
                ],
                input: [
                  "alloy.base.behaviour",
                  "representing",
                  "streaming",
                  "invalidating",
                ],
                "alloy.system.detached": [
                  "alloy.base.behaviour",
                  "representing",
                  "item-events",
                  "tooltipping",
                ],
                mousedown: [
                  "focusing",
                  "alloy.base.behaviour",
                  "item-type-events",
                ],
                touchstart: [
                  "focusing",
                  "alloy.base.behaviour",
                  "item-type-events",
                ],
                mouseover: ["item-type-events", "tooltipping"],
                "alloy.receive": ["receiving", "reflecting", "tooltipping"],
              })
            ),
            An()
          ),
          qn("domModification"),
        ]),
        t
      );
    };
    const bi = function (t, n) {
      const e = Ir(t, n);
      return e === undefined || e === "" ? [] : e.split(" ");
    };
    const yi = function (t) {
      return t.dom().classList !== undefined;
    };
    const xi = function (t, n) {
      return (
        (r = n),
        (i = bi((e = t), (o = "class")).concat([r])),
        Fr(e, o, i.join(" ")),
        !0
      );
      let e; let o; let r; let i;
    };
    const wi = function (t, n) {
      return (
        (r = n),
        (i = H(bi((e = t), (o = "class")), function (t) {
          return t !== r;
        })).length >
        0
          ? Fr(e, o, i.join(" "))
          : Pr(e, o),
        !1
      );
      let e; let o; let r; let i;
    };
    const Si = function (t, n) {
      yi(t) ? t.dom().classList.add(n) : xi(t, n);
    };
    const ki = function (t) {
      (yi(t) ? t.dom().classList : bi(t, "class")).length === 0 &&
        Pr(t, "class");
    };
    const Ci = function (t, n) {
      yi(t) ? t.dom().classList.remove(n) : wi(t, n);
      ki(t);
    };
    const Oi = function (t, n) {
      return yi(t) && t.dom().classList.contains(n);
    };
    const _i = function (n, t) {
      rt(t, function (t) {
        Si(n, t);
      });
    };
    const Ti = function (n, t) {
      rt(t, function (t) {
        Ci(n, t);
      });
    };
    const Ei = function (t) {
      return t.style !== undefined && _(t.style.getPropertyValue);
    };
    const Bi = function (t) {
      return mr(t);
    };
    const Di =
      _(nt.Element.prototype.attachShadow) && _(nt.Node.prototype.getRootNode);
    const Ai = at(Di);
    const Mi = Di
      ? function (t) {
          return fe.fromDom(t.dom().getRootNode());
        }
      : pr;
    const Fi = function (t) {
      return fe.fromDom(t.dom().host);
    };
    const Ii = function (t) {
      return O(t.dom().shadowRoot);
    };
    var Ri = function (t) {
      let n;
        let e;
        let o;
        let r;
        const i = fr(t) ? t.dom().parentNode : t.dom();
      return (
        i !== undefined &&
        i !== null &&
        i.ownerDocument !== null &&
        ((o = fe.fromDom(i)),
        (r = Mi(o)),
        (Bi(r) ? st.some(r) : st.none()).fold(
          function () {
            return i.ownerDocument.body.contains(i);
          },
          ((n = Ri),
          (e = Fi),
          function (t) {
            return n(e(t));
          })
        ))
      );
    };
    const Vi = function () {
      return Pi(fe.fromDom(nt.document));
    };
    var Pi = function (t) {
      const n = t.dom().body;
      if (n === null || n === undefined)
        throw new Error("Body is not available yet");
      return fe.fromDom(n);
    };
    const Hi = function (t, n, e) {
      if (!w(e))
        throw (
          (nt.console.error(
            "Invalid call to CSS.set. Property ",
            n,
            ":: Value ",
            e,
            ":: Element ",
            t
          ),
          new Error(`CSS value must be a string: ${  e}`))
        );
      Ei(t) && t.style.setProperty(n, e);
    };
    const zi = function (t, n) {
      Ei(t) && t.style.removeProperty(n);
    };
    const Ni = function (t, n, e) {
      const o = t.dom();
      Hi(o, n, e);
    };
    const Li = function (t, n) {
      const e = t.dom();
      _t(n, function (t, n) {
        Hi(e, n, t);
      });
    };
    const ji = function (t, n) {
      const e = t.dom();
      _t(n, function (t, n) {
        t.fold(
          function () {
            zi(e, n);
          },
          function (t) {
            Hi(e, n, t);
          }
        );
      });
    };
    const Ui = function (t, n) {
      const e = t.dom();
        const o = nt.window.getComputedStyle(e).getPropertyValue(n);
      return o !== "" || Ri(t) ? o : Wi(e, n);
    };
    var Wi = function (t, n) {
      return Ei(t) ? t.style.getPropertyValue(n) : "";
    };
    const Gi = function (t, n) {
      const e = t.dom();
        const o = Wi(e, n);
      return st.from(o).filter(function (t) {
        return t.length > 0;
      });
    };
    const Xi = function (t, n, e) {
      const o = fe.fromTag(t);
      return Ni(o, n, e), Gi(o, n).isSome();
    };
    const Yi = function (t, n) {
      const e = t.dom();
      zi(e, n), Rr(t, "style").map(De).is("") && Pr(t, "style");
    };
    const qi = function (t) {
      return t.dom().offsetWidth;
    };
    const Ki = function (t) {
      return t.dom().value;
    };
    const Ji = function (t, n) {
      if (n === undefined) throw new Error("Value.set was undefined");
      t.dom().value = n;
    };
    const $i = function (t) {
      let n;
        let e;
        let o;
        const r = fe.fromTag(t.tag);
      (n = r),
        (e = t.attributes),
        (o = n.dom()),
        _t(e, function (t, n) {
          Mr(o, n, t);
        }),
        _i(r, t.classes),
        Li(r, t.styles),
        t.innerHtml.each(function (t) {
          return Ar(r, t);
        });
      const i = t.domChildren;
      return (
        _r(r, i),
        t.value.each(function (t) {
          Ji(r, t);
        }),
        t.uid,
        Kr(r, t.uid),
        r
      );
    };
    const Qi = function (t, n) {
      return (
        (e = t),
        (r = V((o = n), function (t) {
          return Zn(t.name(), [Nn("config"), te("state", ui)]);
        })),
        (i = On("component.behaviours", fn(r), e.behaviours).fold(
          function (t) {
            throw new Error(
              `${En(t)  }\nComplete spec:\n${  JSON.stringify(e, null, 2)}`
            );
          },
          function (t) {
            return t;
          }
        )),
        {
          list: o,
          data: Tt(i, function (t) {
            const n = t.map(function (t) {
              return { config: t.config, state: t.state.init(t.config) };
            });
            return function () {
              return n;
            };
          }),
        }
      );
      let e; let o; let r; let i;
    };
    const Zi = function (t) {
      let n;
        let e;
        const o =
          ((n = Ft(t, "behaviours").getOr({})),
          (e = H(Ct(n), function (t) {
            return n[t] !== undefined;
          })),
          V(e, function (t) {
            return n[t].me;
          }));
      return Qi(t, o);
    };
    const tu = function (t, n, e) {
      let o;
        let r;
        let i;
        const u = {...(o = t).dom, uid: o.uid,
          domChildren: V(o.components, function (t) {
            return t.element();
          }),};
        const a = t.domModification.fold(function () {
          return si({});
        }, si);
        const c = { "alloy.base.modification": a };
        const s =
          n.length > 0
            ? (function (n, t, e, o) {
                const r = { ...t};
                rt(e, function (t) {
                  r[t.name()] = t.exhibit(n, o);
                });
                const i = ci(r, function (t, n) {
                    return { name: t, modification: n };
                  });
                  const u = function (t) {
                    return z(
                      t,
                      function (t, n) {
                        return {...n.modification, ...t};
                      },
                      {}
                    );
                  };
                  const a = z(
                    i.classes,
                    function (t, n) {
                      return n.modification.concat(t);
                    },
                    []
                  );
                  const c = u(i.attributes);
                  const s = u(i.styles);
                return si({ classes: a, attributes: c, styles: s });
              })(e, c, n, u)
            : a;
      return (
        (i = s),
        ({...(r = u), attributes: {...r.attributes, ...i.attributes},
          styles: {...r.styles, ...i.styles},
          classes: r.classes.concat(i.classes),})
      );
    };
    const nu = function (t, n, e) {
      let o;
        let r;
        let i;
        const u = { "alloy.base.behaviour": t.events };
      return (
        (o = e), (r = t.eventOrder), (i = mi(o, n, u)), hi(i, r).getOrDie()
      );
    };
    const eu = function (t) {
      let n;
        let e;
        let o;
        let r;
        let i;
        let u;
        let a;
        let c;
        let s;
        let l;
        let f;
        let d;
        let m;
        const g = Qr(t);
        const p = g.events;
        const h = y(g, ["events"]);
        const v = ((n = Ft(h, "components").getOr([])), V(n, uu));
        const b = {...h, events: {...jr, ...p}, components: v};
      return ut.value(
        ((o = function () {
          return m;
        }),
        (r = se(ti)),
        (i = _n(vi((e = b)))),
        (u = Zi(e)),
        (a = u.list),
        (c = u.data),
        (s = tu(i, a, c)),
        (l = $i(s)),
        (f = nu(i, a, c)),
        (d = se(i.components)),
        (m = {
          getSystem: r.get,
          config (t) {
            const n = c;
            return (_(n[t.name()])
              ? n[t.name()]
              : function () {
                  throw new Error(
                    `Could not find ${ 
                      t.name() 
                      } in ${ 
                      JSON.stringify(e, null, 2)}`
                  );
                })();
          },
          hasConfigured (t) {
            return _(c[t.name()]);
          },
          spec: at(e),
          readState (t) {
            return c[t]()
              .map(function (t) {
                return t.state.readState();
              })
              .getOr("not enabled");
          },
          getApis () {
            return i.apis;
          },
          connect (t) {
            r.set(t);
          },
          disconnect () {
            r.set(Zr(o));
          },
          element: at(l),
          syncComponents () {
            const t = xr(l);
              const n = U(t, function (t) {
                return r
                  .get()
                  .getByDom(t)
                  .fold(
                    function () {
                      return [];
                    },
                    function (t) {
                      return [t];
                    }
                  );
              });
            d.set(n);
          },
          components: d.get,
          events: at(f),
        }))
      );
    };
    const ou = function (t) {
      const n = fe.fromText(t);
      return ru({ element: n });
    };
    var ru = function (t) {
      const n = Tn("external.component", ln([Nn("element"), qn("uid")]), t);
        const e = se(Zr());
      n.uid.each(function (t) {
        Kr(n.element, t);
      });
      var o = {
        getSystem: e.get,
        config: st.none,
        hasConfigured: at(!1),
        connect (t) {
          e.set(t);
        },
        disconnect () {
          e.set(
            Zr(function () {
              return o;
            })
          );
        },
        getApis () {
          return {};
        },
        element: at(n.element),
        spec: at(t),
        readState: at("No state"),
        syncComponents: Z,
        components: at([]),
        events: at({}),
      };
      return ri(o);
    };
    const iu = $r;
    var uu = function (n) {
      return Ft(n, oi).fold(
        function () {
          const t = n.hasOwnProperty("uid") ? n : ({uid: iu(""), ...n});
          return eu(t).getOrDie();
        },
        function (t) {
          return t;
        }
      );
    };
    const au = ri;
  function cu(o, r) {
    const t = function (t) {
        const n = r(t);
        if (n <= 0 || n === null) {
          const e = Ui(t, o);
          return parseFloat(e) || 0;
        }
        return n;
      };
      const i = function (r, t) {
        return N(
          t,
          function (t, n) {
            const e = Ui(r, n);
              const o = e === undefined ? 0 : parseInt(e, 10);
            return isNaN(o) ? t : t + o;
          },
          0
        );
      };
    return {
      set (t, n) {
        if (!ot(n) && !n.match(/^[0-9]+$/))
          throw new Error(
            `${o  }.set accepts only positive integer values. Value was ${  n}`
          );
        const e = t.dom();
        Ei(e) && (e.style[o] = `${n  }px`);
      },
      get: t,
      getOuter: t,
      aggregate: i,
      max (t, n, e) {
        const o = i(t, e);
        return o < n ? n - o : 0;
      },
    };
  }
  const su = cu("height", function (t) {
      const n = t.dom();
      return Ri(t) ? n.getBoundingClientRect().height : n.offsetHeight;
    });
    const lu = function (t) {
      return su.get(t);
    };
    const fu = function (t) {
      return su.getOuter(t);
    };
    var du = function (e, o) {
      return {
        left: at(e),
        top: at(o),
        translate (t, n) {
          return du(e + t, o + n);
        },
      };
    };
    const mu = du;
    const gu = function (t, n) {
      return t !== undefined ? t : n !== undefined ? n : 0;
    };
    const pu = function (t) {
      const n = t.dom().ownerDocument;
        const e = n.body;
        const o = n.defaultView;
        const r = n.documentElement;
      if (e === t.dom()) return mu(e.offsetLeft, e.offsetTop);
      const i = gu(o.pageYOffset, r.scrollTop);
        const u = gu(o.pageXOffset, r.scrollLeft);
        const a = gu(r.clientTop, e.clientTop);
        const c = gu(r.clientLeft, e.clientLeft);
      return hu(t).translate(u - c, i - a);
    };
    var hu = function (t) {
      let n;
        const e = t.dom();
        const o = e.ownerDocument.body;
      return o === e
        ? mu(o.offsetLeft, o.offsetTop)
        : Ri(t)
        ? ((n = e.getBoundingClientRect()), mu(n.left, n.top))
        : mu(0, 0);
    };
    const vu = cu("width", function (t) {
      return t.dom().offsetWidth;
    });
    const bu = function (t) {
      return vu.get(t);
    };
    const yu = function (t) {
      return vu.getOuter(t);
    };
    const xu = function (t) {
      let n;
        let e;
        let o;
        let r;
        let i;
        let u;
        let a;
        const c = fe.fromDom(
          (function (t) {
            if (Ai() && O(t.target)) {
              const n = fe.fromDom(t.target);
              if (lr(n) && Ii(fe.fromDom(t.target))) {
                if (t.composed && t.composedPath) {
                  const e = t.composedPath();
                  if (e) return q(e);
                }
              }
            }
            return st.from(t.target);
          })(t).getOr(t.target)
        );
        const s = function () {
          return t.stopPropagation();
        };
        const l = function () {
          return t.preventDefault();
        };
        const f = d(l, s);
      return (
        (n = c),
        (e = t.clientX),
        (o = t.clientY),
        (r = s),
        (i = l),
        (u = f),
        (a = t),
        {
          target: at(n),
          x: at(e),
          y: at(o),
          stop: r,
          prevent: i,
          kill: u,
          raw: at(a),
        }
      );
    };
    const wu = function (t, n, e, o, r) {
      let i;
        let u;
        const a =
          ((i = e),
          (u = o),
          function (t) {
            i(t) && u(xu(t));
          });
      return t.dom().addEventListener(n, a, r), { unbind: g(Su, t, n, a, r) };
    };
    var Su = function (t, n, e, o) {
      t.dom().removeEventListener(n, e, o);
    };
    const ku = function (t) {
      const n = t !== undefined ? t.dom() : nt.document;
        const e = n.body.scrollLeft || n.documentElement.scrollLeft;
        const o = n.body.scrollTop || n.documentElement.scrollTop;
      return mu(e, o);
    };
    const Cu = function (t, n, e) {
      (e !== undefined ? e.dom() : nt.document).defaultView.scrollTo(t, n);
    };
    const Ou = function (t, n, e, o) {
      return { x: t, y: n, width: e, height: o, right: t + e, bottom: n + o };
    };
    const _u = function (t) {
      let n;
        let e;
        const o = t === undefined ? nt.window : t;
        const r = o.document;
        const i = ku(fe.fromDom(r));
      return (
        (e = (n = o) === undefined ? nt.window : n),
        st.from(e.visualViewport).fold(
          function () {
            const t = o.document.documentElement;
              const n = t.clientWidth;
              const e = t.clientHeight;
            return Ou(i.left(), i.top(), n, e);
          },
          function (t) {
            return Ou(
              Math.max(t.pageLeft, i.left()),
              Math.max(t.pageTop, i.top()),
              t.width,
              t.height
            );
          }
        )
      );
    };
    var Tu = function (o, t) {
      return o.view(t).fold(at([]), function (t) {
        const n = o.owner(t);
          const e = Tu(o, n);
        return [t].concat(e);
      });
    };
    const Eu = /* */ Object.freeze({
      __proto__: null,
      view (t) {
        return (t.dom() === nt.document
          ? st.none()
          : st.from(t.dom().defaultView.frameElement)
        ).map(fe.fromDom);
      },
      owner (t) {
        return gr(t);
      },
    });
    const Bu = function (o) {
      let t;
        let n;
        let e;
        let r;
        const i = fe.fromDom(nt.document);
        const u = ku(i);
      return ((t = o),
      (e = (n = Eu).owner(t)),
      (r = Tu(n, e)),
      st.some(r)).fold(g(pu, o), function (t) {
        const n = hu(o);
          const e = z(
            t,
            function (t, n) {
              const e = hu(n);
              return { left: t.left + e.left(), top: t.top + e.top() };
            },
            { left: 0, top: 0 }
          );
        return mu(e.left + n.left() + u.left(), e.top + n.top() + u.top());
      });
    };
    const Du = function (t, n, e, o) {
      return { x: t, y: n, width: e, height: o, right: t + e, bottom: n + o };
    };
    const Au = function (t) {
      const n = pu(t);
        const e = yu(t);
        const o = fu(t);
      return Du(n.left(), n.top(), e, o);
    };
    const Mu = function (t) {
      const n = Bu(t);
        const e = yu(t);
        const o = fu(t);
      return Du(n.left(), n.top(), e, o);
    };
    const Fu = function () {
      return _u(nt.window);
    };
  function Iu(t, n, e, o, r) {
    return t(e, o) ? st.some(e) : _(r) && r(e) ? st.none() : n(e, o, r);
  }
  let Ru;
    let Vu;
    const Pu = function (t, n, e) {
      for (let o = t.dom(), r = _(e) ? e : at(!1); o.parentNode; ) {
        o = o.parentNode;
        const i = fe.fromDom(o);
        if (n(i)) return st.some(i);
        if (r(i)) break;
      }
      return st.none();
    };
    const Hu = function (t, n, e) {
      return Iu(
        function (t, n) {
          return n(t);
        },
        Pu,
        t,
        n,
        e
      );
    };
    const zu = function (t, n, e) {
      return Hu(t, n, e).isSome();
    };
    const Nu = function (t, n, e) {
      return Pu(
        t,
        function (t) {
          return Ne(t, n);
        },
        e
      );
    };
    const Lu = function (t, n) {
      return (
        (e = n),
        (r = (o = t) === undefined ? nt.document : o.dom()),
        Le(r) ? st.none() : st.from(r.querySelector(e)).map(fe.fromDom)
      );
      let e; let o; let r;
    };
    const ju = function (t, n, e) {
      return Iu(
        function (t, n) {
          return Ne(t, n);
        },
        Nu,
        t,
        n,
        e
      );
    };
    const Uu = function () {
      const n = Wr("aria-owns");
      return {
        id: n,
        link (t) {
          Fr(t, "aria-owns", n);
        },
        unlink (t) {
          Pr(t, "aria-owns");
        },
      };
    };
    const Wu = function (n, t) {
      return Hu(t, function (t) {
        if (!lr(t)) return !1;
        const n = Ir(t, "id");
        return n !== undefined && n.indexOf("aria-owns") > -1;
      })
        .bind(function (t) {
          const n = Ir(t, "id");
            const e = gr(t);
          return Lu(e, `[aria-owns="${  n  }"]`);
        })
        .exists(function (t) {
          return Gu(n, t);
        });
    };
    var Gu = function (n, t) {
      return (
        zu(
          t,
          function (t) {
            return je(t, n.element());
          },
          at(!1)
        ) || Wu(n, t)
      );
    };
    const Xu = "unknown";
  ((Vu = Ru = Ru || {})[(Vu.STOP = 0)] = "STOP"),
    (Vu[(Vu.NORMAL = 1)] = "NORMAL"),
    (Vu[(Vu.LOGGING = 2)] = "LOGGING");
  let Yu;
    let qu;
    const Ku = se({});
    const Ju = function (n, t, e) {
      let o; let r; let i; let u;
      switch (
        Ft(Ku.get(), n)
          .orThunk(function () {
            const t = Ct(Ku.get());
            return $(t, function (t) {
              return n.indexOf(t) > -1 ? st.some(Ku.get()[t]) : st.none();
            });
          })
          .getOr(Ru.NORMAL)
      ) {
        case Ru.NORMAL:
          return e(Zu());
        case Ru.LOGGING:
          var a =
              ((o = n),
              (r = t),
              (i = []),
              (u = new Date().getTime()),
              {
                logEventCut (t, n, e) {
                  i.push({ outcome: "cut", target: n, purpose: e });
                },
                logEventStopped (t, n, e) {
                  i.push({ outcome: "stopped", target: n, purpose: e });
                },
                logNoParent (t, n, e) {
                  i.push({ outcome: "no-parent", target: n, purpose: e });
                },
                logEventNoHandlers (t, n) {
                  i.push({ outcome: "no-handlers-left", target: n });
                },
                logEventResponse (t, n, e) {
                  i.push({ outcome: "response", purpose: e, target: n });
                },
                write () {
                  const t = new Date().getTime();
                  M(["mousemove", "mouseover", "mouseout", To()], o) ||
                    nt.console.log(o, {
                      event: o,
                      time: t - u,
                      target: r.dom(),
                      sequence: V(i, function (t) {
                        return M(["cut", "stopped", "response"], t.outcome)
                          ? `{${ 
                              t.purpose 
                              }} ${ 
                              t.outcome 
                              } at (${ 
                              Nr(t.target) 
                              })`
                          : t.outcome;
                      }),
                    });
                },
              });
            var c = e(a);
          return a.write(), c;
        case Ru.STOP:
          return !0;
      }
    };
    const $u = ["alloy/data/Fields", "alloy/debugging/Debugging"];
    const Qu = function (t, n, e) {
      return Ju(t, n, e);
    };
    var Zu = at({
      logEventCut: Z,
      logEventStopped: Z,
      logNoParent: Z,
      logEventNoHandlers: Z,
      logEventResponse: Z,
      write: Z,
    });
    const ta = at([Nn("menu"), Nn("selectedMenu")]);
    const na = at([Nn("item"), Nn("selectedItem")]);
    const ea = (at(fn(na().concat(ta()))), at(fn(na())));
    const oa = Gn("initSize", [Nn("numColumns"), Nn("numRows")]);
    const ra = function () {
      return Gn("markers", [Nn("backgroundMenu")].concat(ta()).concat(na()));
    };
    const ia = function (t) {
      return Gn("markers", V(t, Nn));
    };
    const ua = function (t, n, e) {
      !(function () {
        const t = new Error();
        if (t.stack === undefined) return;
        const n = t.stack.split("\n");
        L(n, function (n) {
          return (
            n.indexOf("alloy") > 0 &&
            !F($u, function (t) {
              return n.indexOf(t) > -1;
            })
          );
        }).getOr(Xu);
      })();
      return vn(
        n,
        n,
        e,
        kn(function (e) {
          return ut.value(function () {
            for (var t = [], n = 0; n < arguments.length; n++)
              t[n] = arguments[n];
            return e.apply(undefined, t);
          });
        })
      );
    };
    const aa = function (t) {
      return ua(0, t, Ut(Z));
    };
    const ca = function (t) {
      return ua(0, t, Ut(st.none));
    };
    const sa = function (t) {
      return ua(0, t, Wt());
    };
    const la = function (t) {
      return ua(0, t, Wt());
    };
    const fa = function (t, n) {
      return ce(t, at(n));
    };
    const da = function (t) {
      return ce(t, ct);
    };
    const ma = at(oa);
    const ga = function (t, n, e, o, r, i) {
      return {
        x: at(t),
        y: at(n),
        bubble: at(e),
        direction: at(o),
        boundsRestriction: at(r),
        label: at(i),
      };
    };
    const pa = Vt([
      { southeast: [] },
      { southwest: [] },
      { northeast: [] },
      { northwest: [] },
      { south: [] },
      { north: [] },
      { east: [] },
      { west: [] },
    ]);
    const ha = pa.southeast;
    const va = pa.southwest;
    const ba = pa.northeast;
    const ya = pa.northwest;
    const xa = pa.south;
    const wa = pa.north;
    const Sa = pa.east;
    const ka = pa.west;
    const Ca = function (n, e) {
      return (function (t, n) {
        for (var e = {}, o = 0, r = t.length; o < r; o++) {
          const i = t[o];
          e[String(i)] = n(i, o);
        }
        return e;
      })(["left", "right", "top", "bottom"], function (t) {
        return Ft(e, t).map(function (t) {
          return (function (t, n) {
            switch (n) {
              case 1:
                return t.x;
              case 0:
                return t.x + t.width;
              case 2:
                return t.y;
              case 3:
                return t.y + t.height;
            }
          })(n, t);
        });
      });
    };
    const Oa = function (t) {
      return t.x;
    };
    const _a = function (t, n) {
      return t.x + t.width / 2 - n.width / 2;
    };
    const Ta = function (t, n) {
      return t.x + t.width - n.width;
    };
    const Ea = function (t, n) {
      return t.y - n.height;
    };
    const Ba = function (t) {
      return t.y + t.height;
    };
    const Da = function (t, n) {
      return t.y + t.height / 2 - n.height / 2;
    };
    const Aa = function (t, n, e) {
      return ga(
        Oa(t),
        Ba(t),
        e.southeast(),
        ha(),
        Ca(t, { left: 1, top: 3 }),
        "layout-se"
      );
    };
    const Ma = function (t, n, e) {
      return ga(
        Ta(t, n),
        Ba(t),
        e.southwest(),
        va(),
        Ca(t, { right: 0, top: 3 }),
        "layout-sw"
      );
    };
    const Fa = function (t, n, e) {
      return ga(
        Oa(t),
        Ea(t, n),
        e.northeast(),
        ba(),
        Ca(t, { left: 1, bottom: 2 }),
        "layout-ne"
      );
    };
    const Ia = function (t, n, e) {
      return ga(
        Ta(t, n),
        Ea(t, n),
        e.northwest(),
        ya(),
        Ca(t, { right: 0, bottom: 2 }),
        "layout-nw"
      );
    };
    const Ra = function (t, n, e) {
      return ga(
        _a(t, n),
        Ea(t, n),
        e.north(),
        wa(),
        Ca(t, { bottom: 2 }),
        "layout-n"
      );
    };
    const Va = function (t, n, e) {
      return ga(
        _a(t, n),
        Ba(t),
        e.south(),
        xa(),
        Ca(t, { top: 3 }),
        "layout-s"
      );
    };
    const Pa = function (t, n, e) {
      return ga(
        (o = t).x + o.width,
        Da(t, n),
        e.east(),
        Sa(),
        Ca(t, { left: 0 }),
        "layout-e"
      );
      let o;
    };
    const Ha = function (t, n, e) {
      return ga(
        ((o = n), t.x - o.width),
        Da(t, n),
        e.west(),
        ka(),
        Ca(t, { right: 1 }),
        "layout-w"
      );
      let o;
    };
    const za = function () {
      return [Aa, Ma, Fa, Ia, Va, Ra, Pa, Ha];
    };
    const Na = function () {
      return [Ma, Aa, Ia, Fa, Va, Ra, Pa, Ha];
    };
    const La = function () {
      return [Fa, Ia, Aa, Ma, Ra, Va];
    };
    const ja = function () {
      return [Aa, Ma, Fa, Ia, Va, Ra];
    };
    const Ua = function () {
      return [Ma, Aa, Ia, Fa, Va, Ra];
    };
    const Wa = function (e, o, r) {
      return ur(function (t, n) {
        r(t, e, o);
      });
    };
    const Ga = function (t, n, e, o, r, i) {
      const u = ln(t);
        const a = Zn(n, [Kn("config", ln(t))]);
      return qa(u, a, n, e, o, r, i);
    };
    const Xa = function (r, i, u) {
      let t; let n; let e; let o; let a; let c;
      return (
        (t = function (e) {
          for (var t = [], n = 1; n < arguments.length; n++)
            t[n - 1] = arguments[n];
          const o = [e].concat(t);
          return e.config({ name: at(r) }).fold(
            function () {
              throw new Error(
                `We could not find any behaviour configuration for: ${ 
                  r 
                  }. Using API: ${ 
                  u}`
              );
            },
            function (t) {
              const n = Array.prototype.slice.call(o, 1);
              return i.apply(undefined, [e, t.config, t.state].concat(n));
            }
          );
        }),
        (n = u),
        (e = i.toString()),
        (o = e.indexOf(")") + 1),
        (a = e.indexOf("(")),
        (c = e.substring(a + 1, o - 1).split(/,\s*/)),
        (t.toFunctionAnnotation = function () {
          return { name: n, parameters: ni(c.slice(0, 1).concat(c.slice(3))) };
        }),
        t
      );
    };
    const Ya = function (t) {
      return { key: t, value: undefined };
    };
    var qa = function (e, t, o, r, n, i, u) {
      const a = function (t) {
          return Rt(t, o) ? t[o]() : st.none();
        };
        const c = Tt(n, function (t, n) {
          return Xa(o, t, n);
        });
        const s = Tt(i, function (t, n) {
          return ei(t, n);
        });
        var l = {...s, ...c, revoke: g(Ya, o),
          config (t) {
            const n = Tn(`${o  }-config`, e, t);
            return {
              key: o,
              value: {
                config: n,
                me: l,
                configAsRaw: Lt(function () {
                  return Tn(`${o  }-config`, e, t);
                }),
                initialConfig: t,
                state: u,
              },
            };
          },
          schema () {
            return t;
          },
          exhibit (t, e) {
            return a(t)
              .bind(function (n) {
                return Ft(r, "exhibit").map(function (t) {
                  return t(e, n.config, n.state);
                });
              })
              .getOr(si({}));
          },
          name () {
            return o;
          },
          handlers (t) {
            return a(t)
              .map(function (t) {
                return Ft(r, "events").getOr(function () {
                  return {};
                })(t.config, t.state);
              })
              .getOr({});
          },};
      return l;
    };
    const Ka = function (t) {
      return $t(t);
    };
    const Ja = ln([
      Nn("fields"),
      Nn("name"),
      te("active", {}),
      te("apis", {}),
      te("state", ui),
      te("extra", {}),
    ]);
    const $a = function (t) {
      const n = Tn(`Creating behaviour: ${  t.name}`, Ja, t);
      return Ga(n.fields, n.name, n.active, n.apis, n.extra, n.state);
    };
    const Qa = ln([
      Nn("branchKey"),
      Nn("branches"),
      Nn("name"),
      te("active", {}),
      te("apis", {}),
      te("state", ui),
      te("extra", {}),
    ]);
    const Za = function (t) {
      let n;
        let e;
        let o;
        let r;
        let i;
        let u;
        let a;
        let c;
        const s = Tn(`Creating behaviour: ${  t.name}`, Qa, t);
      return (
        (n = Dn(s.branchKey, s.branches)),
        (e = s.name),
        (o = s.active),
        (r = s.apis),
        (i = s.extra),
        (u = s.state),
        (c = Zn(e, [Kn("config", (a = n))])),
        qa(a, c, e, o, r, i, u)
      );
    };
    const tc = at(undefined);
    const nc = /* */ Object.freeze({
      __proto__: null,
      events (c) {
        return qo([
          $o(xo(), function (r, t) {
            let n;
              let e;
              const i = c.channels;
              const o = Ct(i);
              const u = t;
              const a =
                ((n = o),
                (e = u).universal()
                  ? n
                  : H(n, function (t) {
                      return M(e.channels(), t);
                    }));
            rt(a, function (t) {
              const n = i[t];
                const e = n.schema;
                const o = Tn(
                  `channel[${  t  }] data\nReceiver: ${  Nr(r.element())}`,
                  e,
                  u.data()
                );
              n.onReceive(r, o);
            });
          }),
        ]);
      },
    });
    const ec = [
      Ln("channels", Cn(ut.value, ln([sa("onReceive"), te("schema", An())]))),
    ];
    const oc = $a({ fields: ec, name: "receiving", active: nc });
    const rc = /* */ Object.freeze({
      __proto__: null,
      exhibit (t, n) {
        return si({
          classes: [],
          styles: n.useFixed() ? {} : { position: "relative" },
        });
      },
    });
    const ic = function (t) {
      return t.dom().focus();
    };
    const uc = function (t) {
      return (
        void 0 === t && (t = fe.fromDom(nt.document)),
        st.from(t.dom().activeElement).map(fe.fromDom)
      );
    };
    const ac = function (n) {
      return uc(Mi(n)).filter(function (t) {
        return n.dom().contains(t.dom());
      });
    };
    const cc = function (t, e) {
      const o = gr(e);
        const n = uc(o).bind(function (n) {
          let r;
            let i;
            const t = function (t) {
              return je(n, t);
            };
          return t(e)
            ? st.some(e)
            : ((r = t),
              (i = function (t) {
                for (let n = 0; n < t.childNodes.length; n++) {
                  const e = fe.fromDom(t.childNodes[n]);
                  if (r(e)) return st.some(e);
                  const o = i(t.childNodes[n]);
                  if (o.isSome()) return o;
                }
                return st.none();
              })(e.dom()));
        });
        const r = t(e);
      return (
        n.each(function (n) {
          uc(o)
            .filter(function (t) {
              return je(t, n);
            })
            .fold(function () {
              ic(n);
            }, Z);
        }),
        r
      );
    };
    const sc = function (t, n, e, o, r) {
      return {
        position: at(t),
        left: at(n),
        top: at(e),
        right: at(o),
        bottom: at(r),
      };
    };
    const lc = function (t, n) {
      const e = function (t) {
        return `${t  }px`;
      };
      ji(t, {
        position: st.some(n.position()),
        left: n.left().map(e),
        top: n.top().map(e),
        right: n.right().map(e),
        bottom: n.bottom().map(e),
      });
    };
    const fc = Vt([
      { none: [] },
      { relative: ["x", "y", "width", "height"] },
      { fixed: ["x", "y", "width", "height"] },
    ]);
    const dc = function (t, n, e, o, r, i) {
      let u;
        let a;
        let c;
        let s;
        let l;
        let f;
        let d;
        let m;
        let g;
        const p = n.x - e;
        const h = n.y - o;
        const v = r - (p + n.width);
        const b = i - (h + n.height);
        const y = st.some(p);
        const x = st.some(h);
        const w = st.some(v);
        const S = st.some(b);
        const k = st.none();
      return (
        (u = n.direction),
        (a = function () {
          return sc(t, y, x, k, k);
        }),
        (c = function () {
          return sc(t, k, x, w, k);
        }),
        (s = function () {
          return sc(t, y, k, k, S);
        }),
        (l = function () {
          return sc(t, k, k, w, S);
        }),
        (f = function () {
          return sc(t, y, x, k, k);
        }),
        (d = function () {
          return sc(t, y, k, k, S);
        }),
        (m = function () {
          return sc(t, y, x, k, k);
        }),
        (g = function () {
          return sc(t, k, x, w, k);
        }),
        u.fold(a, c, s, l, f, d, m, g)
      );
    };
    const mc = function (t, n) {
      const e = g(Bu, n);
        const o = t.fold(e, e, function () {
          const t = ku();
          return Bu(n).translate(-t.left(), -t.top());
        });
        const r = yu(n);
        const i = fu(n);
      return Du(o.left(), o.top(), r, i);
    };
    const gc = function (t, n, e) {
      const o = mu(n, e);
      return t.fold(at(o), at(o), function () {
        const t = ku();
        return o.translate(-t.left(), -t.top());
      });
    };
    const pc = (fc.none, fc.relative);
    const hc = fc.fixed;
    const vc = function (t, n) {
      return (e = n), { anchorBox: at(t), origin: at(e) };
      let e;
    };
    const bc = function (t, n, e, o) {
      const r = t + n;
      return o < r ? e : r < e ? o : r;
    };
    const yc = function (t, n, e) {
      return Math.min(Math.max(t, n), e);
    };
    const xc = Vt([
      { fit: ["reposition"] },
      { nofit: ["reposition", "deltaW", "deltaH"] },
    ]);
    const wc = function (t, n, e, o) {
      let r;
        let i;
        let u;
        let a;
        let c;
        let s;
        let l;
        let f;
        let d;
        let m;
        let g;
        let p;
        let h;
        let v;
        let b;
        let y;
        let x;
        let w;
        let S;
        let k;
        let C;
        let O;
        let _;
        let T;
        let E;
        let B;
        let D;
        let A;
        let M;
        let F;
        let I;
        let R;
        let V;
        const P = t.x();
        const H = t.y();
        const z = t.bubble().offset();
        const N = z.left();
        const L = z.top();
        const j =
          ((r = o),
          (i = t.boundsRestriction()),
          (u = z),
          (c = (a = function (n, e) {
            const o = n === "top" || n === "bottom" ? u.top() : u.left();
            return Ft(i, n)
              .bind(ct)
              .bind(function (t) {
                return n === "left" || n === "top"
                  ? e <= t
                    ? st.some(t)
                    : st.none()
                  : t <= e
                  ? st.some(t)
                  : st.none();
              })
              .map(function (t) {
                return t + o;
              })
              .getOr(e);
          })("left", r.x)),
          (s = a("top", r.y)),
          (l = a("right", r.right)),
          (f = a("bottom", r.bottom)),
          Du(c, s, l - c, f - s));
        const U = j.y;
        const W = j.bottom;
        const G = j.x;
        const X = j.right;
        const Y = H + L;
        const q =
          ((d = P + N),
          (m = Y),
          (g = n),
          (p = e),
          (v = (h = j).x),
          (b = h.y),
          (y = h.width),
          (x = h.height),
          (S = b <= m),
          (k = (w = v <= d) && S),
          (C = d + g <= v + y && m + p <= b + x),
          (O = Math.abs(Math.min(g, w ? v + y - d : v - (d + g)))),
          (_ = Math.abs(Math.min(p, S ? b + x - m : b - (m + p)))),
          (T = Math.max(h.x, h.right - g)),
          (E = Math.max(h.y, h.bottom - p)),
          {
            originInBounds: k,
            sizeInBounds: C,
            limitX: yc(d, h.x, T),
            limitY: yc(m, h.y, E),
            deltaW: O,
            deltaH: _,
          });
        const K = q.originInBounds;
        const J = q.sizeInBounds;
        const $ = q.limitX;
        const Q = q.limitY;
        const Z = q.deltaW;
        const tt = q.deltaH;
        const nt = at(Q + tt - U);
        const et = at(W - Q);
        const ot =
          ((B = t.direction()),
          (A = D = et),
          (M = nt),
          B.fold(D, D, M, M, D, M, A, A));
        const rt = at($ + Z - G);
        const it = at(X - $);
        const ut = {
          x: $,
          y: Q,
          width: Z,
          height: tt,
          maxHeight: ot,
          maxWidth:
            ((F = t.direction()),
            (R = I = it),
            (V = rt),
            F.fold(I, V, I, V, R, R, I, V)),
          direction: t.direction(),
          classes: { on: t.bubble().classesOn(), off: t.bubble().classesOff() },
          label: t.label(),
          candidateYforTest: Y,
        };
      return K && J ? xc.fit(ut) : xc.nofit(ut, Z, tt);
    };
    const Sc = function (t, n, e, o) {
      Yi(n, "max-height"), Yi(n, "max-width");
      let r;
        let i;
        let u;
        let a;
        let c;
        let s;
        let l;
        let f;
        let d;
        const m = { width: yu((r = n)), height: fu(r) };
      return (
        (i = o.preference),
        (u = t),
        (a = m),
        (c = e),
        (s = o.bounds),
        (l = a.width),
        (f = a.height),
        (d = function (t, o, r, i) {
          const n = t(u, a, c);
          return wc(n, l, f, s).fold(xc.fit, function (t, n, e) {
            return i < e || r < n ? xc.nofit(t, n, e) : xc.nofit(o, r, i);
          });
        }),
        N(
          i,
          function (t, n) {
            const e = g(d, n);
            return t.fold(xc.fit, e);
          },
          xc.nofit(
            {
              x: u.x,
              y: u.y,
              width: a.width,
              height: a.height,
              maxHeight: a.height,
              maxWidth: a.width,
              direction: ha(),
              classes: { on: [], off: [] },
              label: "none",
              candidateYforTest: u.y,
            },
            -1,
            -1
          )
        ).fold(ct, ct)
      );
    };
    const kc = function (t, n, e) {
      let o; let r;
      lc(
        t,
        ((o = e.origin),
        (r = n),
        o.fold(
          function () {
            return sc(
              "absolute",
              st.some(r.x),
              st.some(r.y),
              st.none(),
              st.none()
            );
          },
          function (t, n, e, o) {
            return dc("absolute", r, t, n, e, o);
          },
          function (t, n, e, o) {
            return dc("fixed", r, t, n, e, o);
          }
        ))
      );
    };
    const Cc = function (t, n) {
      let e; let o; let r;
      (e = t),
        (o = Math.floor(n)),
        (r = su.max(e, o, [
          "margin-top",
          "border-top-width",
          "padding-top",
          "padding-bottom",
          "border-bottom-width",
          "margin-bottom",
        ])),
        Ni(e, "max-height", `${r  }px`);
    };
    const Oc = at(function (t, n) {
      Cc(t, n), Li(t, { "overflow-x": "hidden", "overflow-y": "auto" });
    });
    const _c = at(function (t, n) {
      Cc(t, n);
    });
    const Tc = function (t, n, e) {
      return t[n] === undefined ? e : t[n];
    };
    const Ec = function (t, n, e, o, r, i) {
      let u;
        const a = Tc(i, "maxHeightFunction", Oc());
        const c = Tc(i, "maxWidthFunction", Z);
        const s = t.anchorBox();
        const l = t.origin();
        const f = {
          bounds:
            ((u = l),
            r.fold(
              function () {
                return u.fold(Fu, Fu, Du);
              },
              function (e) {
                return u.fold(e, e, function () {
                  const t = e();
                    const n = gc(u, t.x, t.y);
                  return Du(n.left(), n.top(), t.width, t.height);
                });
              }
            )),
          origin: l,
          preference: o,
          maxHeightFunction: a,
          maxWidthFunction: c,
        };
      Bc(s, n, e, f);
    };
    var Bc = function (t, n, e, o) {
      let r;
        let i;
        let u;
        let a;
        let c;
        let s;
        const l = Sc(t, n, e, o);
      kc(n, l, o),
        (r = n),
        (i = l.classes),
        Ti(r, i.off),
        _i(r, i.on),
        (u = n),
        (a = l),
        (0, o.maxHeightFunction)(u, a.maxHeight),
        (c = n),
        (s = l),
        (0, o.maxWidthFunction)(c, s.maxWidth);
    };
    const Dc = [
      "valignCentre",
      "alignLeft",
      "alignRight",
      "alignCentre",
      "top",
      "bottom",
      "left",
      "right",
    ];
    const Ac = function (t, n, e) {
      const r = function (t) {
          return Ft(e, t).getOr([]);
        };
        const o = function (t, n, e) {
          const o = X(Dc, e);
          return {
            offset () {
              return mu(t, n);
            },
            classesOn () {
              return U(e, r);
            },
            classesOff () {
              return U(o, r);
            },
          };
        };
      return {
        southeast () {
          return o(-t, n, ["top", "alignLeft"]);
        },
        southwest () {
          return o(t, n, ["top", "alignRight"]);
        },
        south () {
          return o(-t / 2, n, ["top", "alignCentre"]);
        },
        northeast () {
          return o(-t, -n, ["bottom", "alignLeft"]);
        },
        northwest () {
          return o(t, -n, ["bottom", "alignRight"]);
        },
        north () {
          return o(-t / 2, -n, ["bottom", "alignCentre"]);
        },
        east () {
          return o(t, -n / 2, ["valignCentre", "left"]);
        },
        west () {
          return o(-t, -n / 2, ["valignCentre", "right"]);
        },
        innerNorthwest () {
          return o(-t, n, ["top", "alignRight"]);
        },
        innerNortheast () {
          return o(t, n, ["top", "alignLeft"]);
        },
        innerNorth () {
          return o(-t / 2, n, ["top", "alignCentre"]);
        },
        innerSouthwest () {
          return o(-t, -n, ["bottom", "alignRight"]);
        },
        innerSoutheast () {
          return o(t, -n, ["bottom", "alignLeft"]);
        },
        innerSouth () {
          return o(-t / 2, -n, ["bottom", "alignCentre"]);
        },
        innerWest () {
          return o(t, -n / 2, ["valignCentre", "right"]);
        },
        innerEast () {
          return o(-t, -n / 2, ["valignCentre", "left"]);
        },
      };
    };
    const Mc = function () {
      return Ac(0, 0, {});
    };
    const Fc = function (n, e) {
      return function (t) {
        return Ic(t) === "rtl" ? e : n;
      };
    };
    var Ic = function (t) {
      return Ui(t, "direction") === "rtl" ? "rtl" : "ltr";
    };
  ((qu = Yu = Yu || {}).TopToBottom = "toptobottom"),
    (qu.BottomToTop = "bottomtotop");
  const Rc = "data-alloy-vertical-dir";
    const Vc = function (t) {
      return zu(t, function (t) {
        return lr(t) && Ir(t, Rc) === Yu.BottomToTop;
      });
    };
    const Pc = function () {
      return Zn("layouts", [
        Nn("onLtr"),
        Nn("onRtl"),
        qn("onBottomLtr"),
        qn("onBottomRtl"),
      ]);
    };
    const Hc = function (n, t, e, o, r, i, u) {
      const a = u.map(Vc).getOr(!1);
        const c = t.layouts.map(function (t) {
          return t.onLtr(n);
        });
        const s = t.layouts.map(function (t) {
          return t.onRtl(n);
        });
        const l = a
          ? t.layouts
              .bind(function (t) {
                return t.onBottomLtr.map(function (t) {
                  return t(n);
                });
              })
              .or(c)
              .getOr(r)
          : c.getOr(e);
        const f = a
          ? t.layouts
              .bind(function (t) {
                return t.onBottomRtl.map(function (t) {
                  return t(n);
                });
              })
              .or(s)
              .getOr(i)
          : s.getOr(o);
      return Fc(l, f)(n);
    };
    const zc = [
      Nn("hotspot"),
      qn("bubble"),
      te("overrides", {}),
      Pc(),
      fa("placement", function (t, n, e) {
        const o = n.hotspot;
          const r = mc(e, o.element());
          const i = Hc(
            t.element(),
            n,
            ja(),
            Ua(),
            La(),
            [Ia, Fa, Ma, Aa, Ra, Va],
            st.some(n.hotspot.element())
          );
        return st.some({
          anchorBox: r,
          bubble: n.bubble.getOr(Mc()),
          overrides: n.overrides,
          layouts: i,
          placer: st.none(),
        });
      }),
    ];
    const Nc = [
      Nn("x"),
      Nn("y"),
      te("height", 0),
      te("width", 0),
      te("bubble", Mc()),
      te("overrides", {}),
      Pc(),
      fa("placement", function (t, n, e) {
        const o = gc(e, n.x, n.y);
          const r = Du(o.left(), o.top(), n.width, n.height);
          const i = Hc(t.element(), n, za(), Na(), za(), Na(), st.none());
        return st.some({
          anchorBox: r,
          bubble: n.bubble,
          overrides: n.overrides,
          layouts: i,
          placer: st.none(),
        });
      }),
    ];
    const Lc = function (t, n, e, o) {
      return { start: at(t), soffset: at(n), finish: at(e), foffset: at(o) };
    };
    const jc = Vt([
      { before: ["element"] },
      { on: ["element", "offset"] },
      { after: ["element"] },
    ]);
    const Uc =
      (jc.before,
      jc.on,
      jc.after,
      function (t) {
        return t.fold(ct, ct, ct);
      });
    const Wc = Vt([
      { domRange: ["rng"] },
      { relative: ["startSitu", "finishSitu"] },
      { exact: ["start", "soffset", "finish", "foffset"] },
    ]);
    const Gc = {
      domRange: Wc.domRange,
      relative: Wc.relative,
      exact: Wc.exact,
      exactFromRange (t) {
        return Wc.exact(t.start(), t.soffset(), t.finish(), t.foffset());
      },
      getWin (t) {
        const n = t.match({
          domRange (t) {
            return fe.fromDom(t.startContainer);
          },
          relative (t, n) {
            return Uc(t);
          },
          exact (t, n, e, o) {
            return t;
          },
        });
        return vr(n);
      },
      range: Lc,
    };
    const Xc = function (t, n, e) {
      let o;
        let r;
        const i = t.document.createRange();
      return (
        (o = i),
        n.fold(
          function (t) {
            o.setStartBefore(t.dom());
          },
          function (t, n) {
            o.setStart(t.dom(), n);
          },
          function (t) {
            o.setStartAfter(t.dom());
          }
        ),
        (r = i),
        e.fold(
          function (t) {
            r.setEndBefore(t.dom());
          },
          function (t, n) {
            r.setEnd(t.dom(), n);
          },
          function (t) {
            r.setEndAfter(t.dom());
          }
        ),
        i
      );
    };
    const Yc = function (t, n, e, o, r) {
      const i = t.document.createRange();
      return i.setStart(n.dom(), e), i.setEnd(o.dom(), r), i;
    };
    const qc = function (t) {
      return {
        left: at(t.left),
        top: at(t.top),
        right: at(t.right),
        bottom: at(t.bottom),
        width: at(t.width),
        height: at(t.height),
      };
    };
    const Kc = Vt([
      { ltr: ["start", "soffset", "finish", "foffset"] },
      { rtl: ["start", "soffset", "finish", "foffset"] },
    ]);
    const Jc = function (t, n, e) {
      return n(
        fe.fromDom(e.startContainer),
        e.startOffset,
        fe.fromDom(e.endContainer),
        e.endOffset
      );
    };
    const $c = function (t, n) {
      let r;
        let e;
        let o;
        const i =
          ((r = t),
          n.match({
            domRange (t) {
              return { ltr: at(t), rtl: st.none };
            },
            relative (t, n) {
              return {
                ltr: Lt(function () {
                  return Xc(r, t, n);
                }),
                rtl: Lt(function () {
                  return st.some(Xc(r, n, t));
                }),
              };
            },
            exact (t, n, e, o) {
              return {
                ltr: Lt(function () {
                  return Yc(r, t, n, e, o);
                }),
                rtl: Lt(function () {
                  return st.some(Yc(r, e, o, t, n));
                }),
              };
            },
          }));
      return (o = (e = i).ltr()).collapsed
        ? e
            .rtl()
            .filter(function (t) {
              return !1 === t.collapsed;
            })
            .map(function (t) {
              return Kc.rtl(
                fe.fromDom(t.endContainer),
                t.endOffset,
                fe.fromDom(t.startContainer),
                t.startOffset
              );
            })
            .getOrThunk(function () {
              return Jc(0, Kc.ltr, o);
            })
        : Jc(0, Kc.ltr, o);
    };
  Kc.ltr, Kc.rtl;
  const Qc = (function qF(e, o) {
      const n = function (t) {
        return e(t) ? st.from(t.dom().nodeValue) : st.none();
      };
      return {
        get (t) {
          if (!e(t))
            throw new Error(`Can only get ${  o  } value of a ${  o  } node`);
          return n(t).getOr("");
        },
        getOption: n,
        set (t, n) {
          if (!e(t))
            throw new Error(
              `Can only set raw ${  o  } value of a ${  o  } node`
            );
          t.dom().nodeValue = n;
        },
      };
    })(fr, "text");
    const Zc = function (t) {
      return Qc.getOption(t);
    };
    const ts = ["img", "br"];
    const ns = function (t) {
      return (
        Zc(t)
          .filter(function (t) {
            return t.trim().length !== 0 || t.indexOf("\xa0") > -1;
          })
          .isSome() || M(ts, cr(t))
      );
    };
    const es = function (t, i) {
      var u = function (t) {
        for (let n = xr(t), e = n.length - 1; e >= 0; e--) {
          const o = n[e];
          if (i(o)) return st.some(o);
          const r = u(o);
          if (r.isSome()) return r;
        }
        return st.none();
      };
      return u(t);
    };
    const os = function (t, n) {
      return (
        (e = n),
        (r = (o = t) === undefined ? nt.document : o.dom()),
        Le(r) ? [] : V(r.querySelectorAll(e), fe.fromDom)
      );
      let e; let o; let r;
    };
    const rs = function (t, n, e, o) {
      let r;
        let i;
        let u;
        let a;
        let c;
        const s =
          ((i = n),
          (u = e),
          (a = o),
          (c = gr((r = t))
            .dom()
            .createRange()).setStart(r.dom(), i),
          c.setEnd(u.dom(), a),
          c);
        const l = je(t, e) && n === o;
      return s.collapsed && !l;
    };
    const is = function (t) {
      const n = fe.fromDom(t.anchorNode);
        const e = fe.fromDom(t.focusNode);
      return rs(n, t.anchorOffset, e, t.focusOffset)
        ? st.some(Lc(n, t.anchorOffset, e, t.focusOffset))
        : (function (t) {
            if (t.rangeCount > 0) {
              const n = t.getRangeAt(0);
                const e = t.getRangeAt(t.rangeCount - 1);
              return st.some(
                Lc(
                  fe.fromDom(n.startContainer),
                  n.startOffset,
                  fe.fromDom(e.endContainer),
                  e.endOffset
                )
              );
            }
            return st.none();
          })(t);
    };
    const us = function (t, n) {
      let i;
        let e;
        let o;
        let r;
        const u = $c((i = t), n).match({
          ltr (t, n, e, o) {
            const r = i.document.createRange();
            return r.setStart(t.dom(), n), r.setEnd(e.dom(), o), r;
          },
          rtl (t, n, e, o) {
            const r = i.document.createRange();
            return r.setStart(e.dom(), o), r.setEnd(t.dom(), n), r;
          },
        });
      return (
        (o = (e = u).getClientRects()),
        (r = o.length > 0 ? o[0] : e.getBoundingClientRect()).width > 0 ||
        r.height > 0
          ? st.some(r).map(qc)
          : st.none()
      );
    };
    const as = function (t, n) {
      return { element: t, offset: n };
    };
    const cs = function (t, n) {
      const e = xr(t);
      if (e.length === 0) return as(t, n);
      if (n < e.length) return as(e[n], 0);
      let o;
        const r = e[e.length - 1];
        const i = fr(r) ? ((o = r), Qc.get(o).length) : xr(r).length;
      return as(r, i);
    };
    const ss = Vt([
      { screen: ["point"] },
      { absolute: ["point", "scrollLeft", "scrollTop"] },
    ]);
    const ls = function (t) {
      return t.fold(ct, function (t, n, e) {
        return t.translate(-n, -e);
      });
    };
    const fs = function (t) {
      return t.fold(ct, ct);
    };
    const ds = function (t) {
      return N(
        t,
        function (t, n) {
          return t.translate(n.left(), n.top());
        },
        mu(0, 0)
      );
    };
    const ms = function (t) {
      const n = V(t, fs);
      return ds(n);
    };
    const gs = ss.screen;
    const ps = ss.absolute;
    const hs = function (t, n, e) {
      let o;
        let r;
        const i = gr(t.element());
        const u = ku(i);
        const a =
          ((o = t),
          (r = vr(e.root).dom()),
          st
            .from(r.frameElement)
            .map(fe.fromDom)
            .filter(function (t) {
              const n = gr(t);
                const e = gr(o.element());
              return je(n, e);
            })
            .map(pu)
            .getOr(u));
      return ps(a, u.left(), u.top());
    };
    const vs = function (t, n, e, o) {
      let r = t;
        let i = n;
        let u = e;
        let a = o;
      t < 0 && ((r = 0), (u = e + t)), n < 0 && ((i = 0), (a = o + n));
      const c = gs(mu(r, i));
      return st.some({ point: c, width: u, height: a });
    };
    const bs = function (t, l, f, d, m) {
      return t.map(function (t) {
        let n;
          let e;
          let o;
          const r = [l, t.point];
          const i =
            ((n = function () {
              return ms(r);
            }),
            (e = function () {
              return ms(r);
            }),
            (o = function () {
              return (t = V(r, ls)), ds(t);
              let t;
            }),
            d.fold(n, e, o));
          const u = { x: i.left(), y: i.top(), width: t.width, height: t.height };
          const a = (f.showAbove ? La : ja)();
          const c = (f.showAbove, Ua());
          const s = Hc(m, f, a, c, a, c, st.none());
        return {
          anchorBox: u,
          bubble: f.bubble.getOr(Mc()),
          overrides: f.overrides,
          layouts: s,
          placer: st.none(),
        };
      });
    };
    const ys = function (t, n) {
      return fr(t) ? { element: t, offset: n } : cs(t, n);
    };
    const xs = function (n, t) {
      return t.getSelection
        .getOrThunk(function () {
          return function () {
            return (
              (t = n),
              st
                .from(t.getSelection())
                .filter(function (t) {
                  return t.rangeCount > 0;
                })
                .bind(is)
            );
            let t;
          };
        })()
        .map(function (t) {
          const n = ys(t.start(), t.soffset());
            const e = ys(t.finish(), t.foffset());
          return Gc.range(n.element, n.offset, e.element, e.offset);
        });
    };
    const ws = [
      qn("getSelection"),
      Nn("root"),
      qn("bubble"),
      Pc(),
      te("overrides", {}),
      te("showAbove", !1),
      fa("placement", function (t, n, e) {
        const o = vr(n.root).dom();
          const r = hs(t, 0, n);
          const i = xs(o, n).bind(function (t) {
            return us(o, Gc.exactFromRange(t))
              .orThunk(function () {
                const n = fe.fromText("\ufeff");
                return (
                  Sr(t.start(), n),
                  us(o, Gc.exact(n, 0, n, 1)).map(function (t) {
                    return Er(n), t;
                  })
                );
              })
              .bind(function (t) {
                return vs(t.left(), t.top(), t.width(), t.height());
              });
          });
          const u = xs(o, n)
            .bind(function (t) {
              return lr(t.start()) ? st.some(t.start()) : br(t.start());
            })
            .getOr(t.element());
        return bs(i, r, n, e, u);
      }),
    ];
    const Ss = [
      Nn("node"),
      Nn("root"),
      qn("bubble"),
      Pc(),
      te("overrides", {}),
      te("showAbove", !1),
      fa("placement", function (r, i, u) {
        const a = hs(r, 0, i);
        return i.node.bind(function (t) {
          const n = t.dom().getBoundingClientRect();
            const e = vs(n.left, n.top, n.width, n.height);
            const o = i.node.getOr(r.element());
          return bs(e, a, i, u, o);
        });
      }),
    ];
    const ks = function (t) {
      return t.x + t.width;
    };
    const Cs = function (t, n) {
      return t.x - n.width;
    };
    const Os = function (t, n) {
      return t.y - n.height + t.height;
    };
    const _s = function (t) {
      return t.y;
    };
    const Ts = function (t, n, e) {
      return ga(
        ks(t),
        _s(t),
        e.southeast(),
        ha(),
        Ca(t, { left: 0, top: 2 }),
        "link-layout-se"
      );
    };
    const Es = function (t, n, e) {
      return ga(
        Cs(t, n),
        _s(t),
        e.southwest(),
        va(),
        Ca(t, { right: 1, top: 2 }),
        "link-layout-sw"
      );
    };
    const Bs = function (t, n, e) {
      return ga(
        ks(t),
        Os(t, n),
        e.northeast(),
        ba(),
        Ca(t, { left: 0, bottom: 3 }),
        "link-layout-ne"
      );
    };
    const Ds = function (t, n, e) {
      return ga(
        Cs(t, n),
        Os(t, n),
        e.northwest(),
        ya(),
        Ca(t, { right: 1, bottom: 3 }),
        "link-layout-nw"
      );
    };
    const As = function () {
      return [Ts, Es, Bs, Ds];
    };
    const Ms = function () {
      return [Es, Ts, Ds, Bs];
    };
    const Fs = [
      Nn("item"),
      Pc(),
      te("overrides", {}),
      fa("placement", function (t, n, e) {
        const o = mc(e, n.item.element());
          const r = Hc(t.element(), n, As(), Ms(), As(), Ms(), st.none());
        return st.some({
          anchorBox: o,
          bubble: Mc(),
          overrides: n.overrides,
          layouts: r,
          placer: st.none(),
        });
      }),
    ];
    const Is = Dn("anchor", {
      selection: ws,
      node: Ss,
      hotspot: zc,
      submenu: Fs,
      makeshift: Nc,
    });
    const Rs = function (t, n, e, o, r) {
      const i = vc(e.anchorBox, n);
      Ec(i, r.element(), e.bubble, e.layouts, o, e.overrides);
    };
    const Vs = function (t, n, e, o, r, i) {
      const u = i.map(Au);
      return Ps(t, n, e, o, r, u);
    };
    var Ps = function (c, s, t, n, l, f) {
      const d = Tn("positioning anchor.info", Is, n);
      cc(function () {
        Ni(l.element(), "position", "fixed");
        const t = Gi(l.element(), "visibility");
        Ni(l.element(), "visibility", "hidden");
        let n;
          let e;
          let o;
          let r;
          const i = s.useFixed()
            ? ((r = nt.document.documentElement),
              hc(0, 0, r.clientWidth, r.clientHeight))
            : ((e = pu((n = c).element())),
              (o = n.element().dom().getBoundingClientRect()),
              pc(e.left(), e.top(), o.width, o.height));
          const u = d.placement;
          const a = f.map(at).or(s.getBounds);
        u(c, d, i).each(function (t) {
          t.placer.getOr(Rs)(c, i, t, a, l);
        }),
          t.fold(
            function () {
              Yi(l.element(), "visibility");
            },
            function (t) {
              Ni(l.element(), "visibility", t);
            }
          ),
          Gi(l.element(), "left").isNone() &&
            Gi(l.element(), "top").isNone() &&
            Gi(l.element(), "right").isNone() &&
            Gi(l.element(), "bottom").isNone() &&
            Gi(l.element(), "position").is("fixed") &&
            Yi(l.element(), "position");
      }, l.element());
    };
    const Hs = /* */ Object.freeze({
      __proto__: null,
      position (t, n, e, o, r) {
        Vs(t, n, e, o, r, st.none());
      },
      positionWithin: Vs,
      positionWithinBounds: Ps,
      getMode (t, n, e) {
        return n.useFixed() ? "fixed" : "absolute";
      },
    });
    const zs = [te("useFixed", c), qn("getBounds")];
    const Ns = $a({ fields: zs, name: "positioning", active: rc, apis: Hs });
    var Ls = function (t) {
      jo(t, Fo());
      const n = t.components();
      rt(n, Ls);
    };
    var js = function (t) {
      const n = t.components();
      rt(n, js), jo(t, Mo());
    };
    const Us = function (t, n) {
      Or(t.element(), n.element());
    };
    const Ws = function (n, t) {
      let e;
        const o = n.components();
      rt((e = n).components(), function (t) {
        return Er(t.element());
      }),
        Tr(e.element()),
        e.syncComponents();
      const r = X(o, t);
      rt(r, function (t) {
        Ls(t), n.getSystem().removeFromWorld(t);
      }),
        rt(t, function (t) {
          t.getSystem().isConnected()
            ? Us(n, t)
            : (n.getSystem().addToWorld(t), Us(n, t), Ri(n.element()) && js(t)),
            n.syncComponents();
        });
    };
    const Gs = function (t, n) {
      Xs(t, n, Or);
    };
    var Xs = function (t, n, e) {
      t.getSystem().addToWorld(n),
        e(t.element(), n.element()),
        Ri(t.element()) && js(n),
        t.syncComponents();
    };
    const Ys = function (t) {
      Ls(t), Er(t.element()), t.getSystem().removeFromWorld(t);
    };
    const qs = function (n) {
      const t = br(n.element()).bind(function (t) {
        return n.getSystem().getByDom(t).toOption();
      });
      Ys(n),
        t.each(function (t) {
          t.syncComponents();
        });
    };
    const Ks = function (t) {
      const n = t.components();
      rt(n, Ys), Tr(t.element()), t.syncComponents();
    };
    const Js = function (t, n) {
      $s(t, n, Or);
    };
    var $s = function (t, n, e) {
      e(t, n.element());
      const o = xr(n.element());
      rt(o, function (t) {
        n.getByDom(t).each(js);
      });
    };
    const Qs = function (n) {
      const t = xr(n.element());
      rt(t, function (t) {
        n.getByDom(t).each(Ls);
      }),
        Er(n.element());
    };
    const Zs = function (n, t, e, o) {
      e.get().each(function (t) {
        Ks(n);
      });
      const r = t.getAttachPoint(n);
      Gs(r, n);
      const i = n.getSystem().build(o);
      return Gs(n, i), e.set(i), i;
    };
    const tl = function (t, n, e, o) {
      const r = Zs(t, n, e, o);
      return n.onOpen(t, r), r;
    };
    const nl = function (n, e, o) {
      o.get().each(function (t) {
        Ks(n), qs(n), e.onClose(n, t), o.clear();
      });
    };
    const el = function (t, n, e) {
      return e.isOpen();
    };
    const ol = function (t, n, e) {
      let o;
        let r;
        let i;
        let u;
        const a = n.getAttachPoint(t);
      Ni(t.element(), "position", Ns.getMode(a)),
        (o = t),
        (r = "visibility"),
        (i = n.cloakVisibilityAttr),
        (u = "hidden"),
        Gi(o.element(), r).fold(
          function () {
            Pr(o.element(), i);
          },
          function (t) {
            Fr(o.element(), i, t);
          }
        ),
        Ni(o.element(), r, u);
    };
    const rl = function (t, n, e) {
      let o; let r; let i; let u;
      (o = t.element()),
        F(["top", "left", "right", "bottom"], function (t) {
          return Gi(o, t).isSome();
        }) || Yi(t.element(), "position"),
        (r = t),
        (i = "visibility"),
        (u = n.cloakVisibilityAttr),
        Rr(r.element(), u).fold(
          function () {
            return Yi(r.element(), i);
          },
          function (t) {
            return Ni(r.element(), i, t);
          }
        );
    };
    const il = /* */ Object.freeze({
      __proto__: null,
      cloak: ol,
      decloak: rl,
      open: tl,
      openWhileCloaked (t, n, e, o, r) {
        ol(t, n), tl(t, n, e, o), r(), rl(t, n);
      },
      close: nl,
      isOpen: el,
      isPartOf (n, e, t, o) {
        return (
          el(0, 0, t) &&
          t.get().exists(function (t) {
            return e.isPartOf(n, t, o);
          })
        );
      },
      getState (t, n, e) {
        return e.get();
      },
      setContent (t, n, e, o) {
        return e.get().map(function () {
          return Zs(t, n, e, o);
        });
      },
    });
    const ul = /* */ Object.freeze({
      __proto__: null,
      events (e, o) {
        return qo([
          $o(Oo(), function (t, n) {
            nl(t, e, o);
          }),
        ]);
      },
    });
    const al = [
      aa("onOpen"),
      aa("onClose"),
      Nn("isPartOf"),
      Nn("getAttachPoint"),
      te("cloakVisibilityAttr", "data-precloak-visibility"),
    ];
    const cl = $a({
      fields: al,
      name: "sandboxing",
      active: ul,
      apis: il,
      state: /* */ Object.freeze({
        __proto__: null,
        init () {
          const n = se(st.none());
            const t = at("not-implemented");
          return ai({
            readState: t,
            isOpen () {
              return n.get().isSome();
            },
            clear () {
              n.set(st.none());
            },
            set (t) {
              n.set(st.some(t));
            },
            get () {
              return n.get();
            },
          });
        },
      }),
    });
    const sl = at("dismiss.popups");
    const ll = at("reposition.popups");
    const fl = at("mouse.released");
    const dl = ln([
      te("isExtraPart", at(!1)),
      Zn("fireEventInstead", [te("event", Io())]),
    ]);
    const ml = function (t) {
      let n;
        const e = Tn("Dismissal", dl, t);
      return (
        ((n = {})[sl()] = {
          schema: ln([Nn("target")]),
          onReceive (n, t) {
            cl.isOpen(n) &&
              (cl.isPartOf(n, t.target) ||
                e.isExtraPart(n, t.target) ||
                e.fireEventInstead.fold(
                  function () {
                    return cl.close(n);
                  },
                  function (t) {
                    return jo(n, t.event);
                  }
                ));
          },
        }),
        n
      );
    };
    const gl = ln([Zn("fireEventInstead", [te("event", Ro())]), Wn("doReposition")]);
    const pl = function (t) {
      let n;
        const e = Tn("Reposition", gl, t);
      return (
        ((n = {})[ll()] = {
          onReceive (n) {
            cl.isOpen(n) &&
              e.fireEventInstead.fold(
                function () {
                  return e.doReposition(n);
                },
                function (t) {
                  return jo(n, t.event);
                }
              );
          },
        }),
        n
      );
    };
    const hl = function (t, n, e) {
      n.store.manager.onLoad(t, n, e);
    };
    const vl = function (t, n, e) {
      n.store.manager.onUnload(t, n, e);
    };
    const bl = /* */ Object.freeze({
      __proto__: null,
      onLoad: hl,
      onUnload: vl,
      setValue (t, n, e, o) {
        n.store.manager.setValue(t, n, e, o);
      },
      getValue (t, n, e) {
        return n.store.manager.getValue(t, n, e);
      },
      getState (t, n, e) {
        return e;
      },
    });
    const yl = /* */ Object.freeze({
      __proto__: null,
      events (e, o) {
        const t = e.resetOnDom
          ? [
              rr(function (t, n) {
                hl(t, e, o);
              }),
              ir(function (t, n) {
                vl(t, e, o);
              }),
            ]
          : [Wa(e, o, hl)];
        return qo(t);
      },
    });
    const xl = function () {
      const t = se(null);
      return ai({
        set: t.set,
        get: t.get,
        isNotSet () {
          return t.get() === null;
        },
        clear () {
          t.set(null);
        },
        readState () {
          return { mode: "memory", value: t.get() };
        },
      });
    };
    const wl = function () {
      const i = se({});
        const u = se({});
      return ai({
        readState () {
          return { mode: "dataset", dataByValue: i.get(), dataByText: u.get() };
        },
        lookup (t) {
          return Ft(i.get(), t).orThunk(function () {
            return Ft(u.get(), t);
          });
        },
        update (t) {
          const n = i.get();
            const e = u.get();
            const o = {};
            const r = {};
          rt(t, function (n) {
            (o[n.value] = n),
              Ft(n, "meta").each(function (t) {
                Ft(t, "text").each(function (t) {
                  r[t] = n;
                });
              });
          }),
            i.set({...n, ...o}),
            u.set({...e, ...r});
        },
        clear () {
          i.set({}), u.set({});
        },
      });
    };
    const Sl = /* */ Object.freeze({
      __proto__: null,
      memory: xl,
      dataset: wl,
      manual () {
        return ai({ readState () {} });
      },
      init (t) {
        return t.store.manager.state(t);
      },
    });
    const kl = function (t, n, e, o) {
      const r = n.store;
      e.update([o]), r.setValue(t, o), n.onSetValue(t, o);
    };
    const Cl = [
      qn("initialValue"),
      Nn("getFallbackEntry"),
      Nn("getDataKey"),
      Nn("setValue"),
      fa("manager", {
        setValue: kl,
        getValue (t, n, e) {
          const o = n.store;
            const r = o.getDataKey(t);
          return e.lookup(r).fold(
            function () {
              return o.getFallbackEntry(r);
            },
            function (t) {
              return t;
            }
          );
        },
        onLoad (n, e, o) {
          e.store.initialValue.each(function (t) {
            kl(n, e, o, t);
          });
        },
        onUnload (t, n, e) {
          e.clear();
        },
        state: wl,
      }),
    ];
    const Ol = [
      Nn("getValue"),
      te("setValue", Z),
      qn("initialValue"),
      fa("manager", {
        setValue (t, n, e, o) {
          n.store.setValue(t, o), n.onSetValue(t, o);
        },
        getValue (t, n, e) {
          return n.store.getValue(t);
        },
        onLoad (n, e, t) {
          e.store.initialValue.each(function (t) {
            e.store.setValue(n, t);
          });
        },
        onUnload: Z,
        state: ui.init,
      }),
    ];
    const _l = [
      qn("initialValue"),
      fa("manager", {
        setValue (t, n, e, o) {
          e.set(o), n.onSetValue(t, o);
        },
        getValue (t, n, e) {
          return e.get();
        },
        onLoad (t, n, e) {
          n.store.initialValue.each(function (t) {
            e.isNotSet() && e.set(t);
          });
        },
        onUnload (t, n, e) {
          e.clear();
        },
        state: xl,
      }),
    ];
    const Tl = [
      ne(
        "store",
        { mode: "memory" },
        Dn("mode", { memory: _l, manual: Ol, dataset: Cl })
      ),
      aa("onSetValue"),
      te("resetOnDom", !1),
    ];
    var El = $a({
      fields: Tl,
      name: "representing",
      active: yl,
      apis: bl,
      extra: {
        setValueFrom (t, n) {
          const e = El.getValue(n);
          El.setValue(t, e);
        },
      },
      state: Sl,
    });
    const Bl = function (o, t) {
      return ae(
        o,
        {},
        V(t, function (t) {
          return (
            (n = t.name()),
            (e = `Cannot configure ${  t.name()  } for ${  o}`),
            vn(
              n,
              n,
              Gt(),
              sn(function (t) {
                return yt(`The field: ${  n  } is forbidden. ${  e}`);
              })
            )
          );
          let n; let e;
        }).concat([ce("dump", ct)])
      );
    };
    const Dl = function (t) {
      return t.dump;
    };
    const Al = function (t, n) {
      return {...t.dump, ...Ka(n)};
    };
    const Ml = Bl;
    const Fl = Al;
    const Il = "placeholder";
    const Rl = Vt([
      { single: ["required", "valueThunk"] },
      { multiple: ["required", "valueThunks"] },
    ]);
    const Vl = function (t) {
      return It(t, "uiType");
    };
    const Pl = function (t, n, e, o) {
      return Vl(e) && e.uiType === Il
        ? ((i = e),
          (u = o),
          (r = t).exists(function (t) {
            return t !== i.owner;
          })
            ? Rl.single(!0, at(i))
            : Ft(u, i.name).fold(
                function () {
                  throw new Error(
                    `Unknown placeholder component: ${ 
                      i.name 
                      }\nKnown: [${ 
                      Ct(u) 
                      }]\nNamespace: ${ 
                      r.getOr("none") 
                      }\nSpec: ${ 
                      JSON.stringify(i, null, 2)}`
                  );
                },
                function (t) {
                  return t.replace();
                }
              ))
        : Rl.single(!1, at(e));
      let r; let i; let u;
    };
    var Hl = function (i, u, a, c) {
      return Pl(i, 0, a, c).fold(
        function (t, n) {
          const e = Vl(a) ? n(u, a.config, a.validated) : n(u);
            const o = Ft(e, "components").getOr([]);
            const r = U(o, function (t) {
              return Hl(i, u, t, c);
            });
          return [{...e, components: r}];
        },
        function (t, n) {
          if (Vl(a)) {
            const e = n(u, a.config, a.validated);
            return a.validated.preprocess.getOr(ct)(e);
          }
          return n(u);
        }
      );
    };
    const zl = function (n, e, t, o) {
      let r;
        let i;
        let u;
        const a = Tt(o, function (t, n) {
          return (
            (o = t),
            (r = !1),
            {
              name: at((e = n)),
              required () {
                return o.fold(
                  function (t, n) {
                    return t;
                  },
                  function (t, n) {
                    return t;
                  }
                );
              },
              used () {
                return r;
              },
              replace () {
                if (r)
                  throw new Error(
                    `Trying to use the same placeholder more than once: ${  e}`
                  );
                return (r = !0), o;
              },
            }
          );
          let e; let o; let r;
        });
        const c =
          ((r = n),
          (i = e),
          (u = a),
          U(t, function (t) {
            return Hl(r, i, t, u);
          }));
      return (
        _t(a, function (t) {
          if (!1 === t.used() && t.required())
            throw new Error(
              `Placeholder: ${ 
                t.name() 
                } was not found in components list\nNamespace: ${ 
                n.getOr("none") 
                }\nComponents: ${ 
                JSON.stringify(e.components, null, 2)}`
            );
        }),
        c
      );
    };
    const Nl = Rl.single;
    const Ll = Rl.multiple;
    const jl = at(Il);
    const Ul = Vt([
      { required: ["data"] },
      { external: ["data"] },
      { optional: ["data"] },
      { group: ["data"] },
    ]);
    const Wl = te("factory", { sketch: ct });
    const Gl = te("schema", []);
    const Xl = Nn("name");
    const Yl = vn(
      "pname",
      "pname",
      Xt(function (t) {
        return `<alloy.${  Wr(t.name)  }>`;
      }),
      An()
    );
    const ql = ce("schema", function () {
      return [qn("preprocess")];
    });
    const Kl = te("defaults", at({}));
    const Jl = te("overrides", at({}));
    const $l = fn([Wl, Gl, Xl, Yl, Kl, Jl]);
    const Ql = fn([Wl, Gl, Xl, Kl, Jl]);
    const Zl = fn([Wl, Gl, Xl, Yl, Kl, Jl]);
    const tf = fn([Wl, ql, Xl, Nn("unit"), Yl, Kl, Jl]);
    const nf = function (t) {
      return t.fold(st.some, st.none, st.some, st.some);
    };
    const ef = function (t) {
      const n = function (t) {
        return t.name;
      };
      return t.fold(n, n, n, n);
    };
    const of = function (e, o) {
      return function (t) {
        const n = Tn("Converting part type", o, t);
        return e(n);
      };
    };
    const rf = of(Ul.required, $l);
    const uf = of(Ul.external, Ql);
    const af = of(Ul.optional, Zl);
    const cf = of(Ul.group, tf);
    const sf = at("entirety");
    const lf = /* */ Object.freeze({
      __proto__: null,
      required: rf,
      external: uf,
      optional: af,
      group: cf,
      asNamedPart: nf,
      name: ef,
      asCommon (t) {
        return t.fold(ct, ct, ct, ct);
      },
      original: sf,
    });
    const ff = function (t, n, e, o) {
      return zt(
        n.defaults(t, e, o),
        e,
        { uid: t.partUids[n.name] },
        n.overrides(t, e, o)
      );
    };
    const df = function (r, t) {
      const n = {};
      return (
        rt(t, function (t) {
          nf(t).each(function (e) {
            const o = mf(r, e.pname);
            n[e.name] = function (t) {
              const n = Tn(`Part: ${  e.name  } in ${  r}`, fn(e.schema), t);
              return {...o, config: t, validated: n};
            };
          });
        }),
        n
      );
    };
    var mf = function (t, n) {
      return { uiType: jl(), owner: t, name: n };
    };
    const gf = function (t, n, e) {
      return { uiType: jl(), owner: t, name: n, config: e, validated: {} };
    };
    const pf = function (t) {
      return U(t, function (t) {
        return t
          .fold(st.none, st.some, st.none, st.none)
          .map(function (t) {
            return Gn(t.name, t.schema.concat([da(sf())]));
          })
          .toArray();
      });
    };
    const hf = function (t) {
      return V(t, ef);
    };
    const vf = function (t, n, e) {
      return (
        (o = n),
        (i = {}),
        (r = {}),
        rt(e, function (t) {
          t.fold(
            function (o) {
              i[o.pname] = Nl(!0, function (t, n, e) {
                return o.factory.sketch(ff(t, o, n, e));
              });
            },
            function (t) {
              const n = o.parts[t.name];
              r[t.name] = at(t.factory.sketch(ff(o, t, n[sf()]), n));
            },
            function (o) {
              i[o.pname] = Nl(!1, function (t, n, e) {
                return o.factory.sketch(ff(t, o, n, e));
              });
            },
            function (r) {
              i[r.pname] = Ll(!0, function (n, t, e) {
                const o = n[r.name];
                return V(o, function (t) {
                  return r.factory.sketch(
                    zt(r.defaults(n, t, e), t, r.overrides(n, t))
                  );
                });
              });
            }
          );
        }),
        { internals: at(i), externals: at(r) }
      );
      let o; let i; let r;
    };
    const bf = function (t, n, e) {
      return zl(st.some(t), n, n.components, e);
    };
    const yf = function (t, n, e) {
      const o = n.partUids[e];
      return t.getSystem().getByUid(o).toOption();
    };
    const xf = function (t, n, e) {
      return yf(t, n, e).getOrDie(`Could not find part: ${  e}`);
    };
    const wf = function (t, n, e) {
      const o = {};
        const r = n.partUids;
        const i = t.getSystem();
      return (
        rt(e, function (t) {
          o[t] = at(i.getByUid(r[t]));
        }),
        o
      );
    };
    const Sf = function (t, n) {
      const e = t.getSystem();
      return Tt(n.partUids, function (t, n) {
        return at(e.getByUid(t));
      });
    };
    const kf = function (t) {
      return Ct(t.partUids);
    };
    const Cf = function (t, n, e) {
      const o = {};
        const r = n.partUids;
        const i = t.getSystem();
      return (
        rt(e, function (t) {
          o[t] = at(i.getByUid(r[t]).getOrDie());
        }),
        o
      );
    };
    const Of = function (n, t) {
      const e = hf(t);
      return $t(
        V(e, function (t) {
          return { key: t, value: `${n  }-${  t}` };
        })
      );
    };
    const _f = function (n) {
      return vn(
        "partUids",
        "partUids",
        Yt(function (t) {
          return Of(t.uid, n);
        }),
        An()
      );
    };
    const Tf = /* */ Object.freeze({
      __proto__: null,
      generate: df,
      generateOne: gf,
      schemas: pf,
      names: hf,
      substitutes: vf,
      components: bf,
      defaultUids: Of,
      defaultUidsSchema: _f,
      getAllParts: Sf,
      getAllPartNames: kf,
      getPart: yf,
      getPartOrDie: xf,
      getParts: wf,
      getPartsOrDie: Cf,
    });
    const Ef = function (t, n, e, o, r) {
      let i;
        let u;
        const a =
          ((u = r),
          ((i = o).length > 0 ? [Gn("parts", i)] : [])
            .concat([
              Nn("uid"),
              te("dom", {}),
              te("components", []),
              da("originalSpec"),
              te("debug.sketcher", {}),
            ])
            .concat(u));
      return Tn(`${t  } [SpecSchema]`, ln(a.concat(n)), e);
    };
    const Bf = function (t, n, e, o, r) {
      const i = Df(r);
        const u = pf(e);
        const a = _f(e);
        const c = Ef(t, n, i, u, [a]);
        const s = vf(0, c, e);
      return o(c, bf(t, c, s.internals()), i, s.externals());
    };
    var Df = function (t) {
      return It(t, "uid") ? t : ({...t, uid: $r("uid")});
    };
  let Af;
    let Mf;
    const Ff = ln([
      Nn("name"),
      Nn("factory"),
      Nn("configFields"),
      te("apis", {}),
      te("extraApis", {}),
    ]);
    const If = ln([
      Nn("name"),
      Nn("factory"),
      Nn("configFields"),
      Nn("partFields"),
      te("apis", {}),
      te("extraApis", {}),
    ]);
    const Rf = function (t) {
      const i = Tn(`Sketcher for ${  t.name}`, Ff, t);
        const n = Tt(i.apis, ii);
        const e = Tt(i.extraApis, function (t, n) {
          return ei(t, n);
        });
      return {
        name: at(i.name),
            configFields: at(i.configFields),
            sketch (t) {
              return (
                (n = i.name),
                (e = i.configFields),
                (o = i.factory),
                (r = Df(t)),
                o(Ef(n, e, r, [], []), r)
              );
              let n; let e; let o; let r;
            },
          ...n,
        ...e
      };
    };
    const Vf = function (t) {
      const n = Tn(`Sketcher for ${  t.name}`, If, t);
        const e = df(n.name, n.partFields);
        const o = Tt(n.apis, ii);
        const r = Tt(n.extraApis, function (t, n) {
          return ei(t, n);
        });
      return {
        name: at(n.name),
            partFields: at(n.partFields),
            configFields: at(n.configFields),
            sketch (t) {
              return Bf(n.name, n.configFields, n.partFields, n.factory, t);
            },
            parts: at(e),
          ...o,
        ...r
      };
    };
    const Pf = function (t) {
      for (
        var n = [],
          e = function (t) {
            n.push(t);
          },
          o = 0;
        o < t.length;
        o++
      )
        t[o].each(e);
      return n;
    };
    const Hf = function (t) {
      return (
        (cr(t) === "input" && Ir(t, "type") !== "radio") || cr(t) === "textarea"
      );
    };
    const zf = /* */ Object.freeze({
      __proto__: null,
      getCurrent (t, n, e) {
        return n.find(t);
      },
    });
    const Nf = [Nn("find")];
    const Lf = $a({ fields: Nf, name: "composing", apis: zf });
    const jf = function (e, o, t, r) {
      const n = os(e.element(), `.${  o.highlightClass}`);
      rt(n, function (n) {
        F(r, function (t) {
          return t.element() === n;
        }) ||
          (Ci(n, o.highlightClass),
          e
            .getSystem()
            .getByDom(n)
            .each(function (t) {
              o.onDehighlight(e, t), jo(t, Lo());
            }));
      });
    };
    const Uf = function (t, n, e, o) {
      jf(t, n, 0, [o]),
        Wf(t, n, e, o) ||
          (Si(o.element(), n.highlightClass), n.onHighlight(t, o), jo(o, No()));
    };
    var Wf = function (t, n, e, o) {
      return Oi(o.element(), n.highlightClass);
    };
    const Gf = function (t, n, e, o) {
      const r = os(t.element(), `.${  n.itemClass}`);
      return st.from(r[o]).fold(function () {
        return ut.error(`No element found with index ${  o}`);
      }, t.getSystem().getByDom);
    };
    const Xf = function (n, t, e) {
      return Lu(n.element(), `.${  t.itemClass}`).bind(function (t) {
        return n.getSystem().getByDom(t).toOption();
      });
    };
    const Yf = function (n, t, e) {
      const o = os(n.element(), `.${  t.itemClass}`);
      return (o.length > 0 ? st.some(o[o.length - 1]) : st.none()).bind(
        function (t) {
          return n.getSystem().getByDom(t).toOption();
        }
      );
    };
    const qf = function (e, n, t, o) {
      const r = os(e.element(), `.${  n.itemClass}`);
      return j(r, function (t) {
        return Oi(t, n.highlightClass);
      }).bind(function (t) {
        const n = bc(t, o, 0, r.length - 1);
        return e.getSystem().getByDom(r[n]).toOption();
      });
    };
    const Kf = function (n, t, e) {
      const o = os(n.element(), `.${  t.itemClass}`);
      return Pf(
        V(o, function (t) {
          return n.getSystem().getByDom(t).toOption();
        })
      );
    };
    const Jf = /* */ Object.freeze({
      __proto__: null,
      dehighlightAll (t, n, e) {
        return jf(t, n, 0, []);
      },
      dehighlight (t, n, e, o) {
        Wf(t, n, e, o) &&
          (Ci(o.element(), n.highlightClass),
          n.onDehighlight(t, o),
          jo(o, Lo()));
      },
      highlight: Uf,
      highlightFirst (n, e, o) {
        Xf(n, e).each(function (t) {
          Uf(n, e, o, t);
        });
      },
      highlightLast (n, e, o) {
        Yf(n, e).each(function (t) {
          Uf(n, e, o, t);
        });
      },
      highlightAt (n, e, o, t) {
        Gf(n, e, o, t).fold(
          function (t) {
            throw new Error(t);
          },
          function (t) {
            Uf(n, e, o, t);
          }
        );
      },
      highlightBy (n, e, o, t) {
        const r = Kf(n, e);
        L(r, t).each(function (t) {
          Uf(n, e, o, t);
        });
      },
      isHighlighted: Wf,
      getHighlighted (n, t, e) {
        return Lu(n.element(), `.${  t.highlightClass}`).bind(function (t) {
          return n.getSystem().getByDom(t).toOption();
        });
      },
      getFirst: Xf,
      getLast: Yf,
      getPrevious (t, n, e) {
        return qf(t, n, 0, -1);
      },
      getNext (t, n, e) {
        return qf(t, n, 0, 1);
      },
      getCandidates: Kf,
    });
    const $f = [
      Nn("highlightClass"),
      Nn("itemClass"),
      aa("onHighlight"),
      aa("onDehighlight"),
    ];
    const Qf = $a({ fields: $f, name: "highlighting", apis: Jf });
    const Zf = function () {
      return [13];
    };
    const td = function () {
      return [27];
    };
    const nd = function () {
      return [32];
    };
    const ed = function () {
      return [37];
    };
    const od = function () {
      return [38];
    };
    const rd = function () {
      return [39];
    };
    const id = function () {
      return [40];
    };
    const ud = function (t, n, e) {
      const o = G(t.slice(0, n));
        const r = G(t.slice(n + 1));
      return L(o.concat(r), e);
    };
    const ad = function (t, n, e) {
      const o = G(t.slice(0, n));
      return L(o, e);
    };
    const cd = function (t, n, e) {
      const o = t.slice(0, n);
        const r = t.slice(n + 1);
      return L(r.concat(o), e);
    };
    const sd = function (t, n, e) {
      const o = t.slice(n + 1);
      return L(o, e);
    };
    const ld = function (e) {
      return function (t) {
        const n = t.raw();
        return M(e, n.which);
      };
    };
    const fd = function (t) {
      return function (n) {
        return W(t, function (t) {
          return t(n);
        });
      };
    };
    const dd = function (t) {
      return !0 === t.raw().shiftKey;
    };
    const md = function (t) {
      return !0 === t.raw().ctrlKey;
    };
    const gd = x(dd);
    const pd = function (t, n) {
      return { matches: t, classification: n };
    };
    const hd = function (t, n, e) {
      n.exists(function (n) {
        return e.exists(function (t) {
          return je(t, n);
        });
      }) || Uo(t, Vo(), { prevFocus: n, newFocus: e });
    };
    const vd = function () {
      const r = function (t) {
        return ac(t.element());
      };
      return {
        get: r,
        set (t, n) {
          const e = r(t);
          t.getSystem().triggerFocus(n, t.element());
          const o = r(t);
          hd(t, e, o);
        },
      };
    };
    const bd = function () {
      const r = function (t) {
        return Qf.getHighlighted(t).map(function (t) {
          return t.element();
        });
      };
      return {
        get: r,
        set (n, t) {
          const e = r(n);
          n.getSystem()
            .getByDom(t)
            .fold(Z, function (t) {
              Qf.highlight(n, t);
            });
          const o = r(n);
          hd(n, e, o);
        },
      };
    };
  ((Mf = Af = Af || {}).OnFocusMode = "onFocus"),
    (Mf.OnEnterOrSpaceMode = "onEnterOrSpace"),
    (Mf.OnApiMode = "onApi");
  let yd;
    const xd = function (t, n, e, o, a) {
      const c = function (n, e, t, o, r) {
          let i;
            let u;
            const a = t(n, e, o, r);
          return (
            (i = a),
            (u = e.event()),
            L(i, function (t) {
              return t.matches(u);
            })
              .map(function (t) {
                return t.classification;
              })
              .bind(function (t) {
                return t(n, e, o, r);
              })
          );
        };
        var r = {
          schema () {
            return t.concat([
              te("focusManager", vd()),
              ne(
                "focusInside",
                "onFocus",
                kn(function (t) {
                  return M(["onFocus", "onEnterOrSpace", "onApi"], t)
                    ? ut.value(t)
                    : ut.error("Invalid value for focusInside");
                })
              ),
              fa("handler", r),
              fa("state", n),
              fa("sendFocusIn", a),
            ]);
          },
          processKey: c,
          toEvents (i, u) {
            const t =
                i.focusInside !== Af.OnFocusMode
                  ? st.none()
                  : a(i).map(function (e) {
                      return $o(vo(), function (t, n) {
                        e(t, i, u), n.stop();
                      });
                    });
              const n = [
                $o(co(), function (o, r) {
                  c(o, r, e, i, u).fold(
                    function () {
                      let n; let e; let t;
                      (n = o),
                        (e = r),
                        (t = ld(nd().concat(Zf()))(e.event())),
                        i.focusInside === Af.OnEnterOrSpaceMode &&
                          t &&
                          qe(n, e) &&
                          a(i).each(function (t) {
                            t(n, i, u), e.stop();
                          });
                    },
                    function (t) {
                      r.stop();
                    }
                  );
                }),
                $o(so(), function (t, n) {
                  c(t, n, o, i, u).each(function (t) {
                    n.stop();
                  });
                }),
              ];
            return qo(t.toArray().concat(n));
          },
        };
      return r;
    };
    const wd = function (t) {
      const n = [
          qn("onEscape"),
          qn("onEnter"),
          te("selector", '[data-alloy-tabstop="true"]:not(:disabled)'),
          te("firstTabstop", 0),
          te("useTabstopAt", at(!0)),
          qn("visibilitySelector"),
        ].concat([t]);
        const u = function (t, n) {
          const e = t.visibilitySelector
            .bind(function (t) {
              return ju(n, t);
            })
            .getOr(n);
          return lu(e) > 0;
        };
        const e = function (n, e, t) {
          let o; let r; let i;
          (o = e),
            (r = os(n.element(), o.selector)),
            (i = H(r, function (t) {
              return u(o, t);
            })),
            st.from(i[o.firstTabstop]).each(function (t) {
              e.focusManager.set(n, t);
            });
        };
        const a = function (n, t, e, o, r) {
          return r(t, e, function (t) {
            return u((n = o), (e = t)) && n.useTabstopAt(e);
            let n; let e;
          }).fold(
            function () {
              return o.cyclic ? st.some(!0) : st.none();
            },
            function (t) {
              return o.focusManager.set(n, t), st.some(!0);
            }
          );
        };
        const r = function (n, t, e, o) {
          let r;
            let i;
            const u = os(n.element(), e.selector);
          return (
            (r = n),
            (i = e).focusManager
              .get(r)
              .bind(function (t) {
                return ju(t, i.selector);
              })
              .bind(function (t) {
                return j(u, g(je, t)).bind(function (t) {
                  return a(n, u, t, e, o);
                });
              })
          );
        };
        const o = at([
          pd(fd([dd, ld([9])]), function (t, n, e) {
            const o = e.cyclic ? ud : ad;
            return r(t, 0, e, o);
          }),
          pd(ld([9]), function (t, n, e) {
            const o = e.cyclic ? cd : sd;
            return r(t, 0, e, o);
          }),
          pd(ld(td()), function (n, e, t) {
            return t.onEscape.bind(function (t) {
              return t(n, e);
            });
          }),
          pd(fd([gd, ld(Zf())]), function (n, e, t) {
            return t.onEnter.bind(function (t) {
              return t(n, e);
            });
          }),
        ]);
        const i = at([]);
      return xd(n, ui.init, o, i, function () {
        return st.some(e);
      });
    };
    const Sd = wd(ce("cyclic", at(!1)));
    const kd = wd(ce("cyclic", at(!0)));
    const Cd = function (t, n, e) {
      return Hf(e) && ld(nd())(n.event())
        ? st.none()
        : (Go(t, e, wo()), st.some(!0));
    };
    const Od = function (t, n) {
      return st.some(!0);
    };
    const _d = [
      te("execute", Cd),
      te("useSpace", !1),
      te("useEnter", !0),
      te("useControlEnter", !1),
      te("useDown", !1),
    ];
    const Td = function (t, n, e) {
      return e.execute(t, n, t.element());
    };
    const Ed = xd(
      _d,
      ui.init,
      function (t, n, e, o) {
        const r = e.useSpace && !Hf(t.element()) ? nd() : [];
          const i = e.useEnter ? Zf() : [];
          const u = e.useDown ? id() : [];
          const a = r.concat(i).concat(u);
        return [pd(ld(a), Td)].concat(
          e.useControlEnter ? [pd(fd([md, ld(Zf())]), Td)] : []
        );
      },
      function (t, n, e, o) {
        return e.useSpace && !Hf(t.element()) ? [pd(ld(nd()), Od)] : [];
      },
      function () {
        return st.none();
      }
    );
    const Bd = function () {
      const e = se(st.none());
      return ai({
        readState () {
          return e
            .get()
            .map(function (t) {
              return {
                numRows: String(t.numRows),
                numColumns: String(t.numColumns),
              };
            })
            .getOr({ numRows: "?", numColumns: "?" });
        },
        setGridSize (t, n) {
          e.set(st.some({ numRows: t, numColumns: n }));
        },
        getNumRows () {
          return e.get().map(function (t) {
            return t.numRows;
          });
        },
        getNumColumns () {
          return e.get().map(function (t) {
            return t.numColumns;
          });
        },
      });
    };
    const Dd = /* */ Object.freeze({
      __proto__: null,
      flatgrid: Bd,
      init (t) {
        return t.state(t);
      },
    });
    const Ad = function (i) {
      return function (t, n, e, o) {
        const r = i(t.element());
        return Rd(r, t, n, e, o);
      };
    };
    const Md = function (t, n) {
      const e = Fc(t, n);
      return Ad(e);
    };
    const Fd = function (t, n) {
      const e = Fc(n, t);
      return Ad(e);
    };
    const Id = function (r) {
      return function (t, n, e, o) {
        return Rd(r, t, n, e, o);
      };
    };
    var Rd = function (n, e, t, o, r) {
      return o.focusManager
        .get(e)
        .bind(function (t) {
          return n(e.element(), t, o, r);
        })
        .map(function (t) {
          return o.focusManager.set(e, t), !0;
        });
    };
    const Vd = Id;
    const Pd = Id;
    const Hd = Id;
    const zd = function (t) {
      return !((n = t.dom()).offsetWidth <= 0 && n.offsetHeight <= 0);
      let n;
    };
    const Nd = function (t, n, e) {
      let o;
        const r = os(t, e);
        const i = H(r, zd);
      return j((o = i), function (t) {
        return je(t, n);
      }).map(function (t) {
        return { index: at(t), candidates: at(o) };
      });
    };
    const Ld = function (t, n) {
      return j(t, function (t) {
        return je(n, t);
      });
    };
    const jd = function (e, t, o, n) {
      return n(Math.floor(t / o), t % o).bind(function (t) {
        const n = t.row() * o + t.column();
        return n >= 0 && n < e.length ? st.some(e[n]) : st.none();
      });
    };
    const Ud = function (r, t, i, u, a) {
      return jd(r, t, u, function (t, n) {
        const e = t === i - 1 ? r.length - t * u : u;
          const o = bc(n, a, 0, e - 1);
        return st.some({ row: at(t), column: at(o) });
      });
    };
    const Wd = function (i, t, u, a, c) {
      return jd(i, t, a, function (t, n) {
        const e = bc(t, c, 0, u - 1);
          const o = e === u - 1 ? i.length - e * a : a;
          const r = yc(n, 0, o - 1);
        return st.some({ row: at(e), column: at(r) });
      });
    };
    const Gd = [
      Nn("selector"),
      te("execute", Cd),
      ca("onEscape"),
      te("captureTab", !1),
      ma(),
    ];
    const Xd = function (n, e, t) {
      Lu(n.element(), e.selector).each(function (t) {
        e.focusManager.set(n, t);
      });
    };
    const Yd = function (r) {
      return function (t, n, e, o) {
        return Nd(t, n, e.selector).bind(function (t) {
          return r(
            t.candidates(),
            t.index(),
            o.getNumRows().getOr(e.initSize.numRows),
            o.getNumColumns().getOr(e.initSize.numColumns)
          );
        });
      };
    };
    const qd = function (t, n, e) {
      return e.captureTab ? st.some(!0) : st.none();
    };
    const Kd = Yd(function (t, n, e, o) {
      return Ud(t, n, e, o, -1);
    });
    const Jd = Yd(function (t, n, e, o) {
      return Ud(t, n, e, o, 1);
    });
    const $d = Yd(function (t, n, e, o) {
      return Wd(t, n, e, o, -1);
    });
    const Qd = Yd(function (t, n, e, o) {
      return Wd(t, n, e, o, 1);
    });
    const Zd = at([
      pd(ld(ed()), Md(Kd, Jd)),
      pd(ld(rd()), Fd(Kd, Jd)),
      pd(ld(od()), Vd($d)),
      pd(ld(id()), Pd(Qd)),
      pd(fd([dd, ld([9])]), qd),
      pd(fd([gd, ld([9])]), qd),
      pd(ld(td()), function (t, n, e) {
        return e.onEscape(t, n);
      }),
      pd(ld(nd().concat(Zf())), function (n, e, o, t) {
        return (
          (r = n),
          (i = o).focusManager
            .get(r)
            .bind(function (t) {
              return ju(t, i.selector);
            })
            .bind(function (t) {
              return o.execute(n, e, t);
            })
        );
        let r; let i;
      }),
    ]);
    const tm = at([pd(ld(nd()), Od)]);
    const nm = xd(Gd, Bd, Zd, tm, function () {
      return st.some(Xd);
    });
    const em = function (t, n, e, i) {
      var u = function (t, n, e) {
        let o;
          const r = bc(n, i, 0, e.length - 1);
        return r === t
          ? st.none()
          : ((o = e[r]),
            cr(o) === "button" && Ir(o, "disabled") === "disabled"
              ? u(t, r, e)
              : st.from(e[r]));
      };
      return Nd(t, e, n).bind(function (t) {
        const n = t.index();
          const e = t.candidates();
        return u(n, n, e);
      });
    };
    const om = [
      Nn("selector"),
      te("getInitial", st.none),
      te("execute", Cd),
      ca("onEscape"),
      te("executeOnMove", !1),
      te("allowVertical", !0),
    ];
    const rm = function (n, e, o) {
      return (
        (t = n),
        (r = o).focusManager
          .get(t)
          .bind(function (t) {
            return ju(t, r.selector);
          })
          .bind(function (t) {
            return o.execute(n, e, t);
          })
      );
      let t; let r;
    };
    const im = function (n, e, t) {
      e.getInitial(n)
        .orThunk(function () {
          return Lu(n.element(), e.selector);
        })
        .each(function (t) {
          e.focusManager.set(n, t);
        });
    };
    const um = function (t, n, e) {
      return em(t, e.selector, n, -1);
    };
    const am = function (t, n, e) {
      return em(t, e.selector, n, 1);
    };
    const cm = function (r) {
      return function (t, n, e, o) {
        return r(t, n, e, o).bind(function () {
          return e.executeOnMove ? rm(t, n, e) : st.some(!0);
        });
      };
    };
    const sm = function (t, n, e) {
      return e.onEscape(t, n);
    };
    const lm = at([pd(ld(nd()), Od)]);
    const fm = xd(
      om,
      ui.init,
      function (t, n, e, o) {
        const r = ed().concat(e.allowVertical ? od() : []);
          const i = rd().concat(e.allowVertical ? id() : []);
        return [
          pd(ld(r), cm(Md(um, am))),
          pd(ld(i), cm(Fd(um, am))),
          pd(ld(Zf()), rm),
          pd(ld(nd()), rm),
          pd(ld(td()), sm),
        ];
      },
      lm,
      function () {
        return st.some(im);
      }
    );
    const dm = function (t, n, e) {
      return st.from(t[n]).bind(function (t) {
        return st.from(t[e]).map(function (t) {
          return { rowIndex: n, columnIndex: e, cell: t };
        });
      });
    };
    const mm = function (t, n, e, o) {
      const r = t[n].length;
        const i = bc(e, o, 0, r - 1);
      return dm(t, n, i);
    };
    const gm = function (t, n, e, o) {
      const r = bc(e, o, 0, t.length - 1);
        const i = t[r].length;
        const u = yc(n, 0, i - 1);
      return dm(t, r, u);
    };
    const pm = function (t, n, e, o) {
      const r = t[n].length;
        const i = yc(e + o, 0, r - 1);
      return dm(t, n, i);
    };
    const hm = function (t, n, e, o) {
      const r = yc(e + o, 0, t.length - 1);
        const i = t[r].length;
        const u = yc(n, 0, i - 1);
      return dm(t, r, u);
    };
    const vm = [
      Gn("selectors", [Nn("row"), Nn("cell")]),
      te("cycles", !0),
      te("previousSelector", st.none),
      te("execute", Cd),
    ];
    const bm = function (n, e, t) {
      e.previousSelector(n)
        .orThunk(function () {
          const t = e.selectors;
          return Lu(n.element(), t.cell);
        })
        .each(function (t) {
          e.focusManager.set(n, t);
        });
    };
    const ym = function (t, n) {
      return function (e, o, i) {
        const u = i.cycles ? t : n;
        return ju(o, i.selectors.row).bind(function (t) {
          const n = os(t, i.selectors.cell);
          return Ld(n, o).bind(function (o) {
            const r = os(e, i.selectors.row);
            return Ld(r, t).bind(function (t) {
              let n;
                const e =
                  ((n = i),
                  V(r, function (t) {
                    return os(t, n.selectors.cell);
                  }));
              return u(e, t, o).map(function (t) {
                return t.cell;
              });
            });
          });
        });
      };
    };
    const xm = ym(
      function (t, n, e) {
        return mm(t, n, e, -1);
      },
      function (t, n, e) {
        return pm(t, n, e, -1);
      }
    );
    const wm = ym(
      function (t, n, e) {
        return mm(t, n, e, 1);
      },
      function (t, n, e) {
        return pm(t, n, e, 1);
      }
    );
    const Sm = ym(
      function (t, n, e) {
        return gm(t, e, n, -1);
      },
      function (t, n, e) {
        return hm(t, e, n, -1);
      }
    );
    const km = ym(
      function (t, n, e) {
        return gm(t, e, n, 1);
      },
      function (t, n, e) {
        return hm(t, e, n, 1);
      }
    );
    const Cm = at([
      pd(ld(ed()), Md(xm, wm)),
      pd(ld(rd()), Fd(xm, wm)),
      pd(ld(od()), Vd(Sm)),
      pd(ld(id()), Pd(km)),
      pd(ld(nd().concat(Zf())), function (n, e, o) {
        return ac(n.element()).bind(function (t) {
          return o.execute(n, e, t);
        });
      }),
    ]);
    const Om = at([pd(ld(nd()), Od)]);
    const _m = xd(vm, ui.init, Cm, Om, function () {
      return st.some(bm);
    });
    const Tm = [Nn("selector"), te("execute", Cd), te("moveOnTab", !1)];
    const Em = function (n, e, o) {
      return o.focusManager.get(n).bind(function (t) {
        return o.execute(n, e, t);
      });
    };
    const Bm = function (n, e, t) {
      Lu(n.element(), e.selector).each(function (t) {
        e.focusManager.set(n, t);
      });
    };
    const Dm = function (t, n, e) {
      return em(t, e.selector, n, -1);
    };
    const Am = function (t, n, e) {
      return em(t, e.selector, n, 1);
    };
    const Mm = at([
      pd(ld(od()), Hd(Dm)),
      pd(ld(id()), Hd(Am)),
      pd(fd([dd, ld([9])]), function (t, n, e, o) {
        return e.moveOnTab ? Hd(Dm)(t, n, e, o) : st.none();
      }),
      pd(fd([gd, ld([9])]), function (t, n, e, o) {
        return e.moveOnTab ? Hd(Am)(t, n, e, o) : st.none();
      }),
      pd(ld(Zf()), Em),
      pd(ld(nd()), Em),
    ]);
    const Fm = at([pd(ld(nd()), Od)]);
    const Im = xd(Tm, ui.init, Mm, Fm, function () {
      return st.some(Bm);
    });
    const Rm = [
      ca("onSpace"),
      ca("onEnter"),
      ca("onShiftEnter"),
      ca("onLeft"),
      ca("onRight"),
      ca("onTab"),
      ca("onShiftTab"),
      ca("onUp"),
      ca("onDown"),
      ca("onEscape"),
      te("stopSpaceKeyup", !1),
      qn("focusIn"),
    ];
    const Vm = xd(
      Rm,
      ui.init,
      function (t, n, e) {
        return [
          pd(ld(nd()), e.onSpace),
          pd(fd([gd, ld(Zf())]), e.onEnter),
          pd(fd([dd, ld(Zf())]), e.onShiftEnter),
          pd(fd([dd, ld([9])]), e.onShiftTab),
          pd(fd([gd, ld([9])]), e.onTab),
          pd(ld(od()), e.onUp),
          pd(ld(id()), e.onDown),
          pd(ld(ed()), e.onLeft),
          pd(ld(rd()), e.onRight),
          pd(ld(nd()), e.onSpace),
          pd(ld(td()), e.onEscape),
        ];
      },
      function (t, n, e) {
        return e.stopSpaceKeyup ? [pd(ld(nd()), Od)] : [];
      },
      function (t) {
        return t.focusIn;
      }
    );
    const Pm = Sd.schema();
    const Hm = kd.schema();
    const zm = fm.schema();
    const Nm = nm.schema();
    const Lm = _m.schema();
    const jm = Ed.schema();
    const Um = Im.schema();
    const Wm = Vm.schema();
    const Gm = Za({
      branchKey: "mode",
      branches: /* */ Object.freeze({
        __proto__: null,
        acyclic: Pm,
        cyclic: Hm,
        flow: zm,
        flatgrid: Nm,
        matrix: Lm,
        execution: jm,
        menu: Um,
        special: Wm,
      }),
      name: "keying",
      active: {
        events (t, n) {
          return t.handler.toEvents(t, n);
        },
      },
      apis: {
        focusIn (n, e, o) {
          e.sendFocusIn(e).fold(
            function () {
              n.getSystem().triggerFocus(n.element(), n.element());
            },
            function (t) {
              t(n, e, o);
            }
          );
        },
        setGridSize (t, n, e, o, r) {
          Rt(e, "setGridSize")
            ? e.setGridSize(o, r)
            : nt.console.error("Layout does not support setGridSize");
        },
      },
      state: Dd,
    });
    const Xm = function (t, n, e, o) {
      const r = t.getSystem().build(o);
      Xs(t, r, e);
    };
    const Ym = function (t, n, e, o) {
      const r = qm(t);
      L(r, function (t) {
        return je(o.element(), t.element());
      }).each(qs);
    };
    var qm = function (t, n) {
      return t.components();
    };
    const Km = function (n, t, e, r, o) {
      const i = qm(n);
      return st.from(i[r]).map(function (t) {
        return (
          Ym(n, 0, 0, t),
          o.each(function (t) {
            Xm(
              n,
              0,
              function (t, n) {
                let e; let o;
                (o = n),
                  wr((e = t), r).fold(
                    function () {
                      Or(e, o);
                    },
                    function (t) {
                      Sr(t, o);
                    }
                  );
              },
              t
            );
          }),
          t
        );
      });
    };
    const Jm = $a({
      fields: [],
      name: "replacing",
      apis: /* */ Object.freeze({
        __proto__: null,
        append (t, n, e, o) {
          Xm(t, 0, Or, o);
        },
        prepend (t, n, e, o) {
          Xm(t, 0, Cr, o);
        },
        remove: Ym,
        replaceAt: Km,
        replaceBy (n, t, e, o, r) {
          const i = qm(n);
          return j(i, o).bind(function (t) {
            return Km(n, 0, 0, t, r);
          });
        },
        set (n, t, e, o) {
          cc(function () {
            const t = V(o, n.getSystem().build);
            Ws(n, t);
          }, n.element());
        },
        contents: qm,
      }),
    });
    const $m = function (t, n) {
      let e; let o;
      return {
        key: t,
        value: {
          config: {},
          me:
            ((e = t),
            (o = qo(n)),
            $a({
              fields: [Nn("enabled")],
              name: e,
              active: { events: at(o) },
            })),
          configAsRaw: at({}),
          initialConfig: {},
          state: ui,
        },
      };
    };
    const Qm = function (t, n) {
      n.ignore || (ic(t.element()), n.onFocus(t));
    };
    const Zm = /* */ Object.freeze({
      __proto__: null,
      focus: Qm,
      blur (t, n) {
        n.ignore || t.element().dom().blur();
      },
      isFocused (t) {
        return (
          (n = t.element()), (e = Mi(n).dom()), n.dom() === e.activeElement
        );
        let n; let e;
      },
    });
    const tg = /* */ Object.freeze({
      __proto__: null,
      exhibit (t, n) {
        const e = n.ignore ? {} : { attributes: { tabindex: "-1" } };
        return si(e);
      },
      events (e) {
        return qo(
          [
            $o(vo(), function (t, n) {
              Qm(t, e), n.stop();
            }),
          ].concat(
            e.stopMousedown
              ? [
                  $o(no(), function (t, n) {
                    n.event().prevent();
                  }),
                ]
              : []
          )
        );
      },
    });
    const ng = [aa("onFocus"), te("stopMousedown", !1), te("ignore", !1)];
    const eg = $a({ fields: ng, name: "focusing", active: tg, apis: Zm });
    const og = function (t, n, e) {
      const o = n.aria;
      o.update(t, o, e.get());
    };
    const rg = function (n, t, e) {
      t.toggleClass.each(function (t) {
        (e.get() ? Si : Ci)(n.element(), t);
      });
    };
    const ig = function (t, n, e) {
      cg(t, n, e, !e.get());
    };
    const ug = function (t, n, e) {
      e.set(!0), rg(t, n, e), og(t, n, e);
    };
    const ag = function (t, n, e) {
      e.set(!1), rg(t, n, e), og(t, n, e);
    };
    var cg = function (t, n, e, o) {
      (o ? ug : ag)(t, n, e);
    };
    const sg = function (t, n, e) {
      cg(t, n, e, n.selected);
    };
    const lg = /* */ Object.freeze({
      __proto__: null,
      onLoad: sg,
      toggle: ig,
      isOn (t, n, e) {
        return e.get();
      },
      on: ug,
      off: ag,
      set: cg,
    });
    const fg = /* */ Object.freeze({
      __proto__: null,
      exhibit () {
        return si({});
      },
      events (t, n) {
        let e;
          let o;
          let r;
          const i =
            ((e = t),
            (o = n),
            (r = ig),
            ar(function (t) {
              r(t, e, o);
            }));
          const u = Wa(t, n, sg);
        return qo(it([t.toggleOnExecute ? [i] : [], [u]]));
      },
    });
    const dg = function (t, n, e) {
      Fr(t.element(), "aria-expanded", e);
    };
    const mg = [
      te("selected", !1),
      qn("toggleClass"),
      te("toggleOnExecute", !0),
      ne(
        "aria",
        { mode: "none" },
        Dn("mode", {
          pressed: [
            te("syncWithExpanded", !1),
            fa("update", function (t, n, e) {
              Fr(t.element(), "aria-pressed", e),
                n.syncWithExpanded && dg(t, n, e);
            }),
          ],
          checked: [
            fa("update", function (t, n, e) {
              Fr(t.element(), "aria-checked", e);
            }),
          ],
          expanded: [fa("update", dg)],
          selected: [
            fa("update", function (t, n, e) {
              Fr(t.element(), "aria-selected", e);
            }),
          ],
          none: [fa("update", Z)],
        })
      ),
    ];
    const gg = $a({
      fields: mg,
      name: "toggling",
      active: fg,
      apis: lg,
      state:
        ((yd = !1),
        {
          init () {
            const n = se(yd);
            return {
              get () {
                return n.get();
              },
              set (t) {
                return n.set(t);
              },
              clear () {
                return n.set(yd);
              },
              readState () {
                return n.get();
              },
            };
          },
        }),
    });
    const pg = function () {
      const t = function (t, n) {
        n.stop(), Wo(t);
      };
      return [$o(mo(), t), $o(ko(), t), er($e()), er(no())];
    };
    const hg = function (t) {
      return qo(
        it([
          t
            .map(function (e) {
              return ar(function (t, n) {
                e(t), n.stop();
              });
            })
            .toArray(),
          pg(),
        ])
      );
    };
    const vg = "alloy.item-hover";
    const bg = "alloy.item-focus";
    const yg = function (t) {
      (ac(t.element()).isNone() || eg.isFocused(t)) &&
        (eg.isFocused(t) || eg.focus(t), Uo(t, vg, { item: t }));
    };
    const xg = function (t) {
      Uo(t, bg, { item: t });
    };
    const wg = at(vg);
    const Sg = at(bg);
    const kg = [
      Nn("data"),
      Nn("components"),
      Nn("dom"),
      te("hasSubmenu", !1),
      qn("toggling"),
      Ml("itemBehaviours", [gg, eg, Gm, El]),
      te("ignoreFocus", !1),
      te("domModification", {}),
      fa("builder", function (t) {
        return {
          dom: t.dom,
          domModification: {...t.domModification, attributes: {
              role: t.toggling.isSome() ? "menuitemcheckbox" : "menuitem",
                  ...t.domModification.attributes,
                "aria-haspopup": t.hasSubmenu,
              ...(t.hasSubmenu ? { "aria-expanded": !1 } : {})
            },},
          behaviours: Fl(t.itemBehaviours, [
            t.toggling.fold(gg.revoke, function (t) {
              return gg.config({aria: { mode: "checked" }, ...t});
            }),
            eg.config({
              ignore: t.ignoreFocus,
              stopMousedown: t.ignoreFocus,
              onFocus (t) {
                xg(t);
              },
            }),
            Gm.config({ mode: "execution" }),
            El.config({ store: { mode: "memory", initialValue: t.data } }),
            $m("item-type-events", b(pg(), [$o(io(), yg), $o(So(), eg.focus)])),
          ]),
          components: t.components,
          eventOrder: t.eventOrder,
        };
      }),
      te("eventOrder", {}),
    ];
    const Cg = [
      Nn("dom"),
      Nn("components"),
      fa("builder", function (t) {
        return {
          dom: t.dom,
          components: t.components,
          events: qo([
            ((n = So()),
            $o(n, function (t, n) {
              n.stop();
            })),
          ]),
        };
        let n;
      }),
    ];
    const Og = function () {
      return "item-widget";
    };
    const _g = at([
      rf({
        name: "widget",
        overrides (n) {
          return {
            behaviours: Ka([
              El.config({
                store: {
                  mode: "manual",
                  getValue (t) {
                    return n.data;
                  },
                  setValue () {},
                },
              }),
            ]),
          };
        },
      }),
    ]);
    const Tg = [
      Nn("uid"),
      Nn("data"),
      Nn("components"),
      Nn("dom"),
      te("autofocus", !1),
      te("ignoreFocus", !1),
      Ml("widgetBehaviours", [El, eg, Gm]),
      te("domModification", {}),
      _f(_g()),
      fa("builder", function (e) {
        const t = vf(Og(), e, _g());
          const n = bf(Og(), e, t.internals());
          const o = function (t) {
            return yf(t, e, "widget").map(function (t) {
              return Gm.focusIn(t), t;
            });
          };
          const r = function (t, n) {
            return (
              Hf(n.event().target()) ||
                (e.autofocus && n.setSource(t.element())),
              st.none()
            );
          };
        return {
          dom: e.dom,
          components: n,
          domModification: e.domModification,
          events: qo([
            ar(function (t, n) {
              o(t).each(function (t) {
                n.stop();
              });
            }),
            $o(io(), yg),
            $o(So(), function (t, n) {
              e.autofocus ? o(t) : eg.focus(t);
            }),
          ]),
          behaviours: Fl(e.widgetBehaviours, [
            El.config({ store: { mode: "memory", initialValue: e.data } }),
            eg.config({
              ignore: e.ignoreFocus,
              onFocus (t) {
                xg(t);
              },
            }),
            Gm.config({
              mode: "special",
              focusIn: e.autofocus
                ? function (t) {
                    o(t);
                  }
                : tc(),
              onLeft: r,
              onRight: r,
              onEscape (t, n) {
                return eg.isFocused(t) || e.autofocus
                  ? (e.autofocus && n.setSource(t.element()), st.none())
                  : (eg.focus(t), st.some(!0));
              },
            }),
          ]),
        };
      }),
    ];
    const Eg = Dn("type", { widget: Tg, item: kg, separator: Cg });
    const Bg = at([
      cf({
        factory: {
          sketch (t) {
            const n = Tn("menu.spec item", Eg, t);
            return n.builder(n);
          },
        },
        name: "items",
        unit: "item",
        defaults (t, n) {
          return n.hasOwnProperty("uid")
            ? n
            : ({...n, uid: $r("item")});
        },
        overrides (t, n) {
          return {
            type: n.type,
            ignoreFocus: t.fakeFocus,
            domModification: { classes: [t.markers.item] },
          };
        },
      }),
    ]);
    const Dg = at([
      Nn("value"),
      Nn("items"),
      Nn("dom"),
      Nn("components"),
      te("eventOrder", {}),
      Bl("menuBehaviours", [Qf, El, Lf, Gm]),
      ne(
        "movement",
        { mode: "menu", moveOnTab: !0 },
        Dn("mode", {
          grid: [
            ma(),
            fa("config", function (t, n) {
              return {
                mode: "flatgrid",
                selector: `.${  t.markers.item}`,
                initSize: {
                  numColumns: n.initSize.numColumns,
                  numRows: n.initSize.numRows,
                },
                focusManager: t.focusManager,
              };
            }),
          ],
          matrix: [
            fa("config", function (t, n) {
              return {
                mode: "matrix",
                selectors: { row: n.rowSelector, cell: `.${  t.markers.item}` },
                focusManager: t.focusManager,
              };
            }),
            Nn("rowSelector"),
          ],
          menu: [
            te("moveOnTab", !0),
            fa("config", function (t, n) {
              return {
                mode: "menu",
                selector: `.${  t.markers.item}`,
                moveOnTab: n.moveOnTab,
                focusManager: t.focusManager,
              };
            }),
          ],
        })
      ),
      Ln("markers", ea()),
      te("fakeFocus", !1),
      te("focusManager", vd()),
      aa("onHighlight"),
    ]);
    const Ag = at("alloy.menu-focus");
    const Mg = Vf({
      name: "Menu",
      configFields: Dg(),
      partFields: Bg(),
      factory (t, n, e, o) {
        return {
          uid: t.uid,
          dom: t.dom,
          markers: t.markers,
          behaviours: Al(t.menuBehaviours, [
            Qf.config({
              highlightClass: t.markers.selectedItem,
              itemClass: t.markers.item,
              onHighlight: t.onHighlight,
            }),
            El.config({ store: { mode: "memory", initialValue: t.value } }),
            Lf.config({ find: st.some }),
            Gm.config(t.movement.config(t, t.movement)),
          ]),
          events: qo([
            $o(Sg(), function (n, e) {
              const t = e.event();
              n.getSystem()
                .getByDom(t.target())
                .each(function (t) {
                  Qf.highlight(n, t),
                    e.stop(),
                    Uo(n, Ag(), { menu: n, item: t });
                });
            }),
            $o(wg(), function (t, n) {
              const e = n.event().item();
              Qf.highlight(t, e);
            }),
          ]),
          components: n,
          eventOrder: t.eventOrder,
          domModification: { attributes: { role: "menu" } },
        };
      },
    });
    var Fg = function (e, o, r, t) {
      return Ft(r, t)
        .bind(function (t) {
          return Ft(e, t).bind(function (t) {
            const n = Fg(e, o, r, t);
            return st.some([t].concat(n));
          });
        })
        .getOr([]);
    };
    const Ig = function (t, n) {
      const e = {};
      _t(t, function (t, n) {
        rt(t, function (t) {
          e[t] = n;
        });
      });
      const o = n;
        const r = Et(n, function (t, n) {
          return { k: t, v: n };
        });
        const i = Tt(r, function (t, n) {
          return [n].concat(Fg(e, o, r, n));
        });
      return Tt(e, function (t) {
        return Ft(i, t).getOr([t]);
      });
    };
    const Rg = function (t) {
      return t.type === "prepared" ? st.some(t.menu) : st.none();
    };
    const Vg = {
      init () {
        const i = se({});
          const u = se({});
          const a = se({});
          const c = se(st.none());
          const s = se({});
          const r = function (t, o, r) {
            return e(t).bind(function (n) {
              return (
                (e = t),
                At(i.get(), function (t, n) {
                  return t === e;
                }).bind(function (t) {
                  return o(t).map(function (t) {
                    return {
                      triggeredMenu: n,
                      triggeringItem: t,
                      triggeringPath: r,
                    };
                  });
                })
              );
              let e;
            });
          };
          var e = function (t) {
            return n(t).bind(Rg);
          };
          var n = function (t) {
            return Ft(u.get(), t);
          };
          const l = function (t) {
            return Ft(i.get(), t);
          };
        return {
          setMenuBuilt (t, n) {
            let e;
            u.set(
              {
                ...u.get(),
                ...(((e = {})[t] = { type: "prepared", menu: n }), e)
              }
            );
          },
          setContents (t, n, e, o) {
            c.set(st.some(t)), i.set(e), u.set(n), s.set(o);
            const r = Ig(o, e);
            a.set(r);
          },
          expand (e) {
            return Ft(i.get(), e).map(function (t) {
              const n = Ft(a.get(), e).getOr([]);
              return [t].concat(n);
            });
          },
          refresh (t) {
            return Ft(a.get(), t);
          },
          collapse (t) {
            return Ft(a.get(), t).bind(function (t) {
              return t.length > 1 ? st.some(t.slice(1)) : st.none();
            });
          },
          lookupMenu: n,
          lookupItem: l,
          otherMenus (t) {
            const n = s.get();
            return X(Ct(n), t);
          },
          getPrimary () {
            return c.get().bind(e);
          },
          getMenus () {
            return u.get();
          },
          clear () {
            i.set({}), u.set({}), a.set({}), c.set(st.none());
          },
          isClear () {
            return c.get().isNone();
          },
          getTriggeringPath (t, o) {
            const n = H(l(t).toArray(), function (t) {
              return e(t).isSome();
            });
            return Ft(a.get(), t).bind(function (t) {
              const e = G(n.concat(t));
              return (function (t) {
                for (var n = [], e = 0; e < t.length; e++) {
                  const o = t[e];
                  if (!o.isSome()) return st.none();
                  n.push(o.getOrDie());
                }
                return st.some(n);
              })(
                U(e, function (t, n) {
                  return r(t, o, e.slice(0, n + 1)).fold(
                    function () {
                      return c.get().is(t) ? [] : [st.none()];
                    },
                    function (t) {
                      return [st.some(t)];
                    }
                  );
                })
              );
            });
          },
        };
      },
      extractPreparedMenu: Rg,
    };
    const Pg = at("collapse-item");
    const Hg = Rf({
      name: "TieredMenu",
      configFields: [
        la("onExecute"),
        la("onEscape"),
        sa("onOpenMenu"),
        sa("onOpenSubmenu"),
        aa("onRepositionMenu"),
        aa("onCollapseMenu"),
        te("highlightImmediately", !0),
        Gn("data", [Nn("primary"), Nn("menus"), Nn("expansions")]),
        te("fakeFocus", !1),
        aa("onHighlight"),
        aa("onHover"),
        ra(),
        Nn("dom"),
        te("navigateOnHover", !0),
        te("stayInDom", !1),
        Bl("tmenuBehaviours", [Gm, Qf, Lf, Jm]),
        te("eventOrder", {}),
      ],
      apis: {
        collapseMenu (t, n) {
          t.collapseMenu(n);
        },
        highlightPrimary (t, n) {
          t.highlightPrimary(n);
        },
        repositionMenus (t, n) {
          t.repositionMenus(n);
        },
      },
      factory (a, t) {
        let c;
          let n;
          const i = se(st.none());
          const s = Vg.init();
          const e = function (t) {
            let o;
              let r;
              let n;
              const e =
                ((o = t),
                (r = a.data.primary),
                (n = a.data.menus),
                Tt(n, function (t, n) {
                  const e = function () {
                    return Mg.sketch(
                      {...t, value: n,
                        markers: a.markers,
                        fakeFocus: a.fakeFocus,
                        onHighlight: a.onHighlight,
                        focusManager: (a.fakeFocus ? bd : vd)(),}
                    );
                  };
                  return n === r
                    ? { type: "prepared", menu: o.getSystem().build(e()) }
                    : { type: "notbuilt", nbMenu: e };
                }));
              const i = u();
            return (
              s.setContents(a.data.primary, e, a.data.expansions, i),
              s.getPrimary()
            );
          };
          const l = function (t) {
            return El.getValue(t).value;
          };
          var u = function (t) {
            return Tt(a.data.menus, function (t, n) {
              return U(t.items, function (t) {
                return t.type === "separator" ? [] : [t.data.value];
              });
            });
          };
          const f = function (n, t) {
            Qf.highlight(n, t),
              Qf.getHighlighted(t)
                .orThunk(function () {
                  return Qf.getFirst(t);
                })
                .each(function (t) {
                  Go(n, t.element(), So());
                });
          };
          const d = function (n, t) {
            return Pf(
              V(t, function (t) {
                return n.lookupMenu(t).bind(function (t) {
                  return t.type === "prepared" ? st.some(t.menu) : st.none();
                });
              })
            );
          };
          const m = function (n, t, e) {
            const o = d(t, t.otherMenus(e));
            rt(o, function (t) {
              Ti(t.element(), [a.markers.backgroundMenu]),
                a.stayInDom || Jm.remove(n, t);
            });
          };
          const g = function (t, o) {
            let r;
              const n =
                ((r = t),
                i.get().getOrThunk(function () {
                  const e = {};
                    const t = os(r.element(), `.${  a.markers.item}`);
                    const n = H(t, function (t) {
                      return Ir(t, "aria-haspopup") === "true";
                    });
                  return (
                    rt(n, function (t) {
                      r.getSystem()
                        .getByDom(t)
                        .each(function (t) {
                          const n = l(t);
                          e[n] = t;
                        });
                    }),
                    i.set(st.some(e)),
                    e
                  );
                }));
            _t(n, function (t, n) {
              const e = M(o, n);
              Fr(t.element(), "aria-expanded", e);
            });
          };
          const p = function (o, r, i) {
            return st.from(i[0]).bind(function (t) {
              return r.lookupMenu(t).bind(function (t) {
                if (t.type === "notbuilt") return st.none();
                const n = t.menu;
                  const e = d(r, i.slice(1));
                return (
                  rt(e, function (t) {
                    Si(t.element(), a.markers.backgroundMenu);
                  }),
                  Ri(n.element()) || Jm.append(o, au(n)),
                  Ti(n.element(), [a.markers.backgroundMenu]),
                  f(o, n),
                  m(o, r, i),
                  st.some(n)
                );
              });
            });
          };
        ((n = c = c || {})[(n.HighlightSubmenu = 0)] = "HighlightSubmenu"),
          (n[(n.HighlightParent = 1)] = "HighlightParent");
        const h = function (r, i, u) {
            void 0 === u && (u = c.HighlightSubmenu);
            const t = l(i);
            return s.expand(t).bind(function (o) {
              return (
                g(r, o),
                st.from(o[0]).bind(function (e) {
                  return s.lookupMenu(e).bind(function (t) {
                    const n = (function (t, n, e) {
                      if (e.type !== "notbuilt") return e.menu;
                      const o = t.getSystem().build(e.nbMenu());
                      return s.setMenuBuilt(n, o), o;
                    })(r, e, t);
                    return (
                      Ri(n.element()) || Jm.append(r, au(n)),
                      a.onOpenSubmenu(r, i, n, G(o)),
                      u === c.HighlightSubmenu
                        ? (Qf.highlightFirst(n), p(r, s, o))
                        : (Qf.dehighlightAll(n), st.some(i))
                    );
                  });
                })
              );
            });
          };
          const o = function (n, e) {
            const t = l(e);
            return s.collapse(t).bind(function (t) {
              return (
                g(n, t),
                p(n, s, t).map(function (t) {
                  return a.onCollapseMenu(n, e, t), t;
                })
              );
            });
          };
          const r = function (e) {
            return function (n, t) {
              return ju(t.getSource(), `.${  a.markers.item}`).bind(function (t) {
                return n
                  .getSystem()
                  .getByDom(t)
                  .toOption()
                  .bind(function (t) {
                    return e(n, t).map(function () {
                      return !0;
                    });
                  });
              });
            };
          };
          const v = qo(
            [
              $o(Ag(), function (e, o) {
                const t = o.event().item();
                s.lookupItem(l(t)).each(function () {
                  const t = o.event().menu();
                  Qf.highlight(e, t);
                  const n = l(o.event().item());
                  s.refresh(n).each(function (t) {
                    return m(e, s, t);
                  });
                });
              }),
              ar(function (n, t) {
                const e = t.event().target();
                n.getSystem()
                  .getByDom(e)
                  .each(function (t) {
                    l(t).indexOf("collapse-item") === 0 && o(n, t),
                      h(n, t, c.HighlightSubmenu).fold(
                        function () {
                          a.onExecute(n, t);
                        },
                        function () {}
                      );
                  });
              }),
              rr(function (n, t) {
                e(n).each(function (t) {
                  Jm.append(n, au(t)),
                    a.onOpenMenu(n, t),
                    a.highlightImmediately && f(n, t);
                });
              }),
            ].concat(
              a.navigateOnHover
                ? [
                    $o(wg(), function (t, n) {
                      let e;
                        let o;
                        const r = n.event().item();
                      (e = t),
                        (o = l(r)),
                        s.refresh(o).bind(function (t) {
                          return g(e, t), p(e, s, t);
                        }),
                        h(t, r, c.HighlightParent),
                        a.onHover(t, r);
                    }),
                  ]
                : []
            )
          );
          const b = function (t) {
            return Qf.getHighlighted(t).bind(Qf.getHighlighted);
          };
          const y = {
            collapseMenu (n) {
              b(n).each(function (t) {
                o(n, t);
              });
            },
            highlightPrimary (n) {
              s.getPrimary().each(function (t) {
                f(n, t);
              });
            },
            repositionMenus (o) {
              s.getPrimary()
                .bind(function (n) {
                  return b(o)
                    .bind(function (t) {
                      const n = l(t);
                        const e = Mt(s.getMenus());
                        const o = Pf(V(e, Vg.extractPreparedMenu));
                      return s.getTriggeringPath(n, function (t) {
                        return (
                          (e = t),
                          $(o, function (t) {
                            if (!t.getSystem().isConnected()) return st.none();
                            const n = Qf.getCandidates(t);
                            return L(n, function (t) {
                              return l(t) === e;
                            });
                          })
                        );
                        let e;
                      });
                    })
                    .map(function (t) {
                      return { primary: n, triggeringPath: t };
                    });
                })
                .fold(
                  function () {
                    let t;
                    (t = o),
                      st
                        .from(t.components()[0])
                        .filter(function (t) {
                          return Ir(t.element(), "role") === "menu";
                        })
                        .each(function (t) {
                          a.onRepositionMenu(o, t, []);
                        });
                  },
                  function (t) {
                    const n = t.primary;
                      const e = t.triggeringPath;
                    a.onRepositionMenu(o, n, e);
                  }
                );
            },
          };
        return {
          uid: a.uid,
          dom: a.dom,
          markers: a.markers,
          behaviours: Al(a.tmenuBehaviours, [
            Gm.config({
              mode: "special",
              onRight: r(function (t, n) {
                return Hf(n.element())
                  ? st.none()
                  : h(t, n, c.HighlightSubmenu);
              }),
              onLeft: r(function (t, n) {
                return Hf(n.element()) ? st.none() : o(t, n);
              }),
              onEscape: r(function (t, n) {
                return o(t, n).orThunk(function () {
                  return a.onEscape(t, n).map(function () {
                    return t;
                  });
                });
              }),
              focusIn (n, t) {
                s.getPrimary().each(function (t) {
                  Go(n, t.element(), So());
                });
              },
            }),
            Qf.config({
              highlightClass: a.markers.selectedMenu,
              itemClass: a.markers.menu,
            }),
            Lf.config({
              find (t) {
                return Qf.getHighlighted(t);
              },
            }),
            Jm.config({}),
          ]),
          eventOrder: a.eventOrder,
          apis: y,
          events: v,
        };
      },
      extraApis: {
        tieredData (t, n, e) {
          return { primary: t, menus: n, expansions: e };
        },
        singleData (t, n) {
          return { primary: t, menus: Jt(t, n), expansions: {} };
        },
        collapseItem (t) {
          return { value: Wr(Pg()), meta: { text: t } };
        },
      },
    });
    const zg = Rf({
      name: "InlineView",
      configFields: [
        Nn("lazySink"),
        aa("onShow"),
        aa("onHide"),
        Qn("onEscape"),
        Bl("inlineBehaviours", [cl, El, oc]),
        Zn("fireDismissalEventInstead", [te("event", Io())]),
        Zn("fireRepositionEventInstead", [te("event", Ro())]),
        te("getRelated", st.none),
        te("isExtraPart", c),
        te("eventOrder", st.none),
      ],
      factory (m, t) {
        const o = function (t, n, e, o) {
            r(t, n, e, function () {
              return o.map(function (t) {
                return Au(t);
              });
            });
          };
          var r = function (t, n, e, o) {
            const r = m.lazySink(t).getOrDie();
            cl.openWhileCloaked(t, e, function () {
              return Ns.positionWithinBounds(r, n, t, o());
            }),
              El.setValue(
                t,
                st.some({ mode: "position", anchor: n, getBounds: o })
              );
          };
          const i = function (t, n, e, o) {
            let r;
              let i;
              let u;
              let a;
              let c;
              let s;
              let l;
              let f;
              const d =
                ((r = m),
                (i = t),
                (u = n),
                (c = o),
                (s = function () {
                  return r.lazySink(i);
                }),
                (l =
                  (a = e).type === "horizontal"
                    ? {
                        layouts: {
                          onLtr () {
                            return ja();
                          },
                          onRtl () {
                            return Ua();
                          },
                        },
                      }
                    : {}),
                (f = function (t) {
                  return t.length === 2 ? l : {};
                }),
                Hg.sketch({
                  dom: { tag: "div" },
                  data: a.data,
                  markers: a.menu.markers,
                  highlightImmediately: a.menu.highlightImmediately,
                  onEscape () {
                    return (
                      cl.close(i),
                      r.onEscape.map(function (t) {
                        return t(i);
                      }),
                      st.some(!0)
                    );
                  },
                  onExecute () {
                    return st.some(!0);
                  },
                  onOpenMenu (t, n) {
                    Ns.positionWithinBounds(s().getOrDie(), u, n, c());
                  },
                  onOpenSubmenu (t, n, e, o) {
                    const r = s().getOrDie();
                    Ns.position(r, {anchor: "submenu", item: n, ...f(o)}, e);
                  },
                  onRepositionMenu (t, n, e) {
                    const o = s().getOrDie();
                    Ns.positionWithinBounds(o, u, n, c()),
                      rt(e, function (t) {
                        const n = f(t.triggeringPath);
                        Ns.position(
                          o,
                          {anchor: "submenu", item: t.triggeringItem, ...n},
                          t.triggeredMenu
                        );
                      });
                  },
                }));
            cl.open(t, d), El.setValue(t, st.some({ mode: "menu", menu: d }));
          };
          const n = function (e) {
            cl.isOpen(e) &&
              El.getValue(e).each(function (t) {
                switch (t.mode) {
                  case "menu":
                    cl.getState(e).each(function (t) {
                      Hg.repositionMenus(t);
                    });
                    break;
                  case "position":
                    var n = m.lazySink(e).getOrDie();
                    Ns.positionWithinBounds(n, t.anchor, e, t.getBounds());
                }
              });
          };
          const e = {
            setContent (t, n) {
              cl.setContent(t, n);
            },
            showAt (t, n, e) {
              o(t, n, e, st.none());
            },
            showWithin: o,
            showWithinBounds: r,
            showMenuAt (t, n, e) {
              i(t, n, e, function () {
                return st.none();
              });
            },
            showMenuWithinBounds: i,
            hide (t) {
              cl.isOpen(t) && (El.setValue(t, st.none()), cl.close(t));
            },
            getContent (t) {
              return cl.getState(t);
            },
            reposition: n,
            isOpen: cl.isOpen,
          };
        return {
          uid: m.uid,
          dom: m.dom,
          behaviours: Al(m.inlineBehaviours, [
            cl.config({
              isPartOf (t, n, e) {
                return (
                  Gu(n, e) ||
                  ((o = t),
                  (r = e),
                  m.getRelated(o).exists(function (t) {
                    return Gu(t, r);
                  }))
                );
                let o; let r;
              },
              getAttachPoint (t) {
                return m.lazySink(t).getOrDie();
              },
              onOpen (t) {
                m.onShow(t);
              },
              onClose (t) {
                m.onHide(t);
              },
            }),
            El.config({ store: { mode: "memory", initialValue: st.none() } }),
            oc.config({
              channels: {
                ...ml(
                    {
                      isExtraPart: t.isExtraPart,
                      ...m.fireDismissalEventInstead
                        .map(function (t) {
                          return { fireEventInstead: { event: t.event } };
                        })
                        .getOr({})
                    }
                  ),
                ...pl(
                  {
                    ...m.fireRepositionEventInstead
                        .map(function (t) {
                          return { fireEventInstead: { event: t.event } };
                        })
                        .getOr({}),
                    doReposition: n
                  }
                )
              },
            }),
          ]),
          eventOrder: m.eventOrder,
          apis: e,
        };
      },
      apis: {
        showAt (t, n, e, o) {
          t.showAt(n, e, o);
        },
        showWithin (t, n, e, o, r) {
          t.showWithin(n, e, o, r);
        },
        showWithinBounds (t, n, e, o, r) {
          t.showWithinBounds(n, e, o, r);
        },
        showMenuAt (t, n, e, o) {
          t.showMenuAt(n, e, o);
        },
        showMenuWithinBounds (t, n, e, o, r) {
          t.showMenuWithinBounds(n, e, o, r);
        },
        hide (t, n) {
          t.hide(n);
        },
        isOpen (t, n) {
          return t.isOpen(n);
        },
        getContent (t, n) {
          return t.getContent(n);
        },
        setContent (t, n, e) {
          t.setContent(n, e);
        },
        reposition (t, n) {
          t.reposition(n);
        },
      },
    });
    const Ng = function (t) {
      return t.x;
    };
    const Lg = function (t, n) {
      return t.x + t.width / 2 - n.width / 2;
    };
    const jg = function (t, n) {
      return t.x + t.width - n.width;
    };
    const Ug = function (t) {
      return t.y;
    };
    const Wg = function (t, n) {
      return t.y + t.height - n.height;
    };
    const Gg = function (t, n, e) {
      return ga(
        jg(t, n),
        Wg(t, n),
        e.innerSoutheast(),
        ya(),
        Ca(t, { right: 0, bottom: 3 }),
        "layout-inner-se"
      );
    };
    const Xg = function (t, n, e) {
      return ga(
        Ng(t),
        Wg(t, n),
        e.innerSouthwest(),
        ba(),
        Ca(t, { left: 1, bottom: 3 }),
        "layout-inner-sw"
      );
    };
    const Yg = function (t, n, e) {
      return ga(
        jg(t, n),
        Ug(t),
        e.innerNortheast(),
        va(),
        Ca(t, { right: 0, top: 2 }),
        "layout-inner-ne"
      );
    };
    const qg = function (t, n, e) {
      return ga(
        Ng(t),
        Ug(t),
        e.innerNorthwest(),
        ha(),
        Ca(t, { left: 1, top: 2 }),
        "layout-inner-nw"
      );
    };
    const Kg = function (t, n, e) {
      return ga(
        Lg(t, n),
        Ug(t),
        e.innerNorth(),
        xa(),
        Ca(t, { top: 2 }),
        "layout-inner-n"
      );
    };
    const Jg = function (t, n, e) {
      return ga(
        Lg(t, n),
        Wg(t, n),
        e.innerSouth(),
        wa(),
        Ca(t, { bottom: 3 }),
        "layout-inner-s"
      );
    };
    const $g = tinymce.util.Tools.resolve("tinymce.util.Delay");
    const Qg = Rf({
      name: "Button",
      factory (t) {
        const n = hg(t.action);
          const e = t.dom.tag;
          const o = function (n) {
            return Ft(t.dom, "attributes").bind(function (t) {
              return Ft(t, n);
            });
          };
        return {
          uid: t.uid,
          dom: t.dom,
          components: t.components,
          events: n,
          behaviours: Fl(t.buttonBehaviours, [
            eg.config({}),
            Gm.config({ mode: "execution", useSpace: !0, useEnter: !0 }),
          ]),
          domModification: {
            attributes: (function () {
              if (e !== "button") return { role: o("role").getOr("button") };
              const t = o("type").getOr("button");
                const n = o("role")
                  .map(function (t) {
                    return { role: t };
                  })
                  .getOr({});
              return {type: t, ...n};
            })(),
          },
          eventOrder: t.eventOrder,
        };
      },
      configFields: [
        te("uid", undefined),
        Nn("dom"),
        te("components", []),
        Ml("buttonBehaviours", [eg, Gm]),
        qn("action"),
        qn("role"),
        te("eventOrder", {}),
      ],
    });
    const Zg = function (t) {
      const n =
        (function e(t) {
          return t.uid !== undefined;
        })(t) && Rt(t, "uid")
          ? t.uid
          : $r("memento");
      return {
        get (t) {
          return t.getSystem().getByUid(n).getOrDie();
        },
        getOpt (t) {
          return t.getSystem().getByUid(n).toOption();
        },
        asSpec () {
          return {...t, uid: n};
        },
      };
    };
    const tp = function (t) {
      return st.from(t()["temporary-placeholder"]).getOr("!not found!");
    };
    const np = function (t, n) {
      return st.from(n()[t.toLowerCase()]).getOrThunk(function () {
        return tp(n);
      });
    };
    const ep = {
      success: "checkmark",
      error: "warning",
      err: "error",
      warning: "warning",
      warn: "warning",
      info: "info",
    };
    const op = Rf({
      name: "Notification",
      factory (n) {
        let t;
          let e;
          const o = Zg({
            dom: { tag: "p", innerHtml: n.translationProvider(n.text) },
            behaviours: Ka([Jm.config({})]),
          });
          const r = function (t) {
            return {
              dom: {
                tag: "div",
                classes: ["tox-bar"],
                attributes: { style: `width: ${  t  }%` },
              },
            };
          };
          const i = function (t) {
            return {
              dom: { tag: "div", classes: ["tox-text"], innerHtml: `${t  }%` },
            };
          };
          const u = Zg({
            dom: {
              tag: "div",
              classes: n.progress
                ? ["tox-progress-bar", "tox-progress-indicator"]
                : ["tox-progress-bar"],
            },
            components: [
              {
                dom: { tag: "div", classes: ["tox-bar-container"] },
                components: [r(0)],
              },
              i(0),
            ],
            behaviours: Ka([Jm.config({})]),
          });
          const a = {
            updateProgress (t, n) {
              t.getSystem().isConnected() &&
                u.getOpt(t).each(function (t) {
                  Jm.set(t, [
                    {
                      dom: { tag: "div", classes: ["tox-bar-container"] },
                      components: [r(n)],
                    },
                    i(n),
                  ]);
                });
            },
            updateText (t, n) {
              if (t.getSystem().isConnected()) {
                const e = o.get(t);
                Jm.set(e, [ou(n)]);
              }
            },
          };
          const c = it([
            n.icon.toArray(),
            n.level.toArray(),
            n.level
              .bind(function (t) {
                return st.from(ep[t]);
              })
              .toArray(),
          ]);
        return {
          uid: n.uid,
          dom: {
            tag: "div",
            attributes: { role: "alert" },
            classes: n.level
              .map(function (t) {
                return [
                  "tox-notification",
                  "tox-notification--in",
                  `tox-notification--${  t}`,
                ];
              })
              .getOr(["tox-notification", "tox-notification--in"]),
          },
          components: [
            {
              dom: {
                tag: "div",
                classes: ["tox-notification__icon"],
                innerHtml:
                  ((t = c),
                  (e = n.iconProvider),
                  $(t, function (t) {
                    return st.from(e()[t.toLowerCase()]);
                  }).getOrThunk(function () {
                    return tp(e);
                  })),
              },
            },
            {
              dom: { tag: "div", classes: ["tox-notification__body"] },
              components: [o.asSpec()],
              behaviours: Ka([Jm.config({})]),
            },
          ]
            .concat(n.progress ? [u.asSpec()] : [])
            .concat(
              n.closeButton
                ? [
                    Qg.sketch({
                      dom: {
                        tag: "button",
                        classes: [
                          "tox-notification__dismiss",
                          "tox-button",
                          "tox-button--naked",
                          "tox-button--icon",
                        ],
                      },
                      components: [
                        {
                          dom: {
                            tag: "div",
                            classes: ["tox-icon"],
                            innerHtml: np("close", n.iconProvider),
                            attributes: {
                              "aria-label": n.translationProvider("Close"),
                            },
                          },
                        },
                      ],
                      action (t) {
                        n.onAction(t);
                      },
                    }),
                  ]
                : []
            ),
          apis: a,
        };
      },
      configFields: [
        qn("level"),
        Nn("progress"),
        Nn("icon"),
        Nn("onAction"),
        Nn("text"),
        Nn("iconProvider"),
        Nn("translationProvider"),
        ie("closeButton", !0),
      ],
      apis: {
        updateProgress (t, n, e) {
          t.updateProgress(n, e);
        },
        updateText (t, n, e) {
          t.updateText(n, e);
        },
      },
    });
  function rp(t, u, a) {
    const c = u.backstage;
    return {
      open (t, n) {
        const e = !t.closeButton && t.timeout && (t.timeout > 0 || t.timeout < 0);
          const o = function () {
            n(), zg.hide(i);
          };
          const r = uu(
            op.sketch({
              text: t.text,
              level: M(["success", "error", "warning", "warn", "info"], t.type)
                ? t.type
                : undefined,
              progress: !0 === t.progressBar,
              icon: st.from(t.icon),
              closeButton: !e,
              onAction: o,
              iconProvider: c.shared.providers.icons,
              translationProvider: c.shared.providers.translate,
            })
          );
          var i = uu(
            zg.sketch(
              {
                dom: { tag: "div", classes: ["tox-notifications-container"] },
                  lazySink: u.backstage.shared.getSink,
                  fireDismissalEventInstead: {},
                ...(c.shared.header.isPositionedAtTop()
                  ? {}
                  : { fireRepositionEventInstead: {} })
              }
            )
          );
        return (
          a.add(i),
          t.timeout > 0 &&
            $g.setTimeout(function () {
              o();
            }, t.timeout),
          {
            close: o,
            moveTo (t, n) {
              zg.showAt(i, { anchor: "makeshift", x: t, y: n }, au(r));
            },
            moveRel (t, n) {
              if (n !== "banner") {
                const e = (function (t) {
                    switch (t) {
                      case "bc-bc":
                        return Jg;
                      case "tc-tc":
                        return Kg;
                      case "tc-bc":
                        return Ra;
                      case "bc-tc":
                      default:
                        return Va;
                    }
                  })(n);
                  const o = {
                    anchor: "node",
                    root: Vi(),
                    node: st.some(fe.fromDom(t)),
                    layouts: {
                      onRtl () {
                        return [e];
                      },
                      onLtr () {
                        return [e];
                      },
                    },
                  };
                zg.showAt(i, o, au(r));
              } else zg.showAt(i, u.backstage.shared.anchors.banner(), au(r));
            },
            text (t) {
              op.updateText(r, t);
            },
            settings: t,
            getEl () {
              return r.element().dom();
            },
            progressBar: {
              value (t) {
                op.updateProgress(r, t);
              },
            },
          }
        );
      },
      close (t) {
        t.close();
      },
      reposition (t) {
        let e;
        rt(t, function (t) {
          return t.moveTo(0, 0);
        }),
          (e = t).length > 0 &&
            (q(e).each(function (t) {
              return t.moveRel(null, "banner");
            }),
            rt(e, function (t, n) {
              n > 0 && t.moveRel(e[n - 1].getEl(), "bc-tc");
            }));
      },
      getArgs (t) {
        return t.settings;
      },
    };
  }
  let ip;
    let up;
    const ap = function (e, o) {
      let r = null;
      return {
        cancel () {
          r !== null && (nt.clearTimeout(r), (r = null));
        },
        throttle () {
          for (var t = [], n = 0; n < arguments.length; n++)
            t[n] = arguments[n];
          r !== null && nt.clearTimeout(r),
            (r = nt.setTimeout(function () {
              e.apply(null, t), (r = null);
            }, o));
        },
      };
    };
    const cp = tinymce.util.Tools.resolve("tinymce.dom.TextSeeker");
    const sp = function (o, t, n, e, r) {
      const i = cp(o, function (t) {
        return (
          (e = t),
          (n = o).isBlock(e) ||
            M(["BR", "IMG", "HR", "INPUT"], e.nodeName) ||
            n.getContentEditable(e) === "false"
        );
        let n; let e;
      });
      return st.from(i.backwards(t, n, e, r));
    };
    const lp = function (e, n) {
      return fp(fe.fromDom(e.selection.getNode())).getOrThunk(function () {
        const t = fe.fromHtml(
          '<span data-mce-autocompleter="1" data-mce-bogus="1"></span>',
          e.getDoc()
        );
        return (
          Or(t, fe.fromDom(n.extractContents())),
          n.insertNode(t.dom()),
          br(t).each(function (t) {
            return t.dom().normalize();
          }),
          es(t, ns).map(function (t) {
            let n;
            e.selection.setCursorLocation(
              t.dom(),
              cr((n = t)) === "img"
                ? 1
                : Zc(n).fold(
                    function () {
                      return xr(n).length;
                    },
                    function (t) {
                      return t.length;
                    }
                  )
            );
          }),
          t
        );
      });
    };
    var fp = function (t) {
      return ju(t, "[data-mce-autocompleter]");
    };
    const dp = function (t) {
      return t
        .toString()
        .replace(/\u00A0/g, " ")
        .replace(/\uFEFF/g, "");
    };
    const mp = function (t) {
      return t !== "" && " \xa0\f\n\r\t\x0B".indexOf(t) !== -1;
    };
    const gp = function (t, n) {
      return t.substring(n.length);
    };
    const pp = function (t, o, r, i) {
      if (
        (void 0 === i && (i = 0),
        !(n = o).collapsed || n.startContainer.nodeType !== 3)
      )
        return st.none();
      let n;
        const e = t.getParent(o.startContainer, t.isBlock) || t.getRoot();
      return sp(
        t,
        o.startContainer,
        o.startOffset,
        function (t, n, e) {
          return (function (t, n, e) {
            let o;
            for (o = n - 1; o >= 0; o--) {
              const r = t.charAt(o);
              if (mp(r)) return st.none();
              if (r === e) break;
            }
            return st.some(o);
          })(e, n, r).getOr(n);
        },
        e
      ).bind(function (t) {
        const n = o.cloneRange();
        if (
          (n.setStart(t.container, t.offset),
          n.setEnd(o.endContainer, o.endOffset),
          n.collapsed)
        )
          return st.none();
        const e = dp(n);
        return e.lastIndexOf(r) !== 0 || gp(e, r).length < i
          ? st.none()
          : st.some({ text: gp(e, r), range: n, triggerChar: r });
      });
    };
    const hp = function (o, t, r, n) {
      return (
        void 0 === n && (n = 0),
        fp(fe.fromDom(t.startContainer)).fold(
          function () {
            return pp(o, t, r, n);
          },
          function (t) {
            const n = o.createRng();
            n.selectNode(t.dom());
            const e = dp(n);
            return st.some({ range: n, text: gp(e, r), triggerChar: r });
          }
        )
      );
    };
    const vp = function (e, t) {
      t.on("keypress compositionend", e.onKeypress.throttle),
        t.on("remove", e.onKeypress.cancel);
      const o = function (t, n) {
        Uo(t, co(), { raw: n });
      };
      t.on("keydown", function (n) {
        const t = function () {
          return e.getView().bind(Qf.getHighlighted);
        };
        n.which === 8 && e.onKeypress.throttle(n),
          e.isActive() &&
            (n.which === 27 && e.cancelIfNecessary(),
            e.isMenuOpen()
              ? n.which === 13
                ? (t().each(Wo), n.preventDefault())
                : n.which === 40
                ? (t().fold(
                    function () {
                      e.getView().each(Qf.highlightFirst);
                    },
                    function (t) {
                      o(t, n);
                    }
                  ),
                  n.preventDefault(),
                  n.stopImmediatePropagation())
                : (n.which !== 37 && n.which !== 38 && n.which !== 39) ||
                  t().each(function (t) {
                    o(t, n), n.preventDefault(), n.stopImmediatePropagation();
                  })
              : (n.which !== 13 && n.which !== 38 && n.which !== 40) ||
                e.cancelIfNecessary());
      }),
        t.on("NodeChange", function (t) {
          e.isActive() &&
            !e.isProcessingAction() &&
            fp(fe.fromDom(t.element)).isNone() &&
            e.cancelIfNecessary();
        });
    };
    const bp = tinymce.util.Tools.resolve("tinymce.util.Promise");
    const yp = function (t, n) {
      return { container: t, offset: n };
    };
    var xp = function (t) {
      if (t.nodeType === nt.Node.TEXT_NODE) return yp(t, t.data.length);
      const n = t.childNodes;
      return n.length > 0 ? xp(n[n.length - 1]) : yp(t, n.length);
    };
    var wp = function (t, n) {
      const e = t.childNodes;
      return e.length > 0 && n < e.length
        ? wp(e[n], 0)
        : e.length > 0 && t.nodeType === nt.Node.ELEMENT_NODE && e.length === n
        ? xp(e[e.length - 1])
        : yp(t, n);
    };
    const Sp = function (r) {
      return function (t) {
        let n;
          let e;
          const o = wp(t.startContainer, t.startOffset);
        return !sp(
          (n = r),
          (e = o).container,
          e.offset,
          function (t, n) {
            return n === 0 ? -1 : n;
          },
          n.getRoot()
        )
          .filter(function (t) {
            const n = t.container.data.charAt(t.offset - 1);
            return !mp(n);
          })
          .isSome();
      };
    };
    const kp = function (n, e) {
      let o;
        let r;
        const t = e();
        const i = n.selection.getRng();
      return (
        (o = n.dom),
        (r = i),
        $(t.triggerChars, function (t) {
          return hp(o, r, t);
        }).bind(function (t) {
          return Cp(n, e, t);
        })
      );
    };
    var Cp = function (n, t, e, o) {
      void 0 === o && (o = {});
      const r = t();
        const i = n.selection.getRng().startContainer.nodeValue;
        const u = H(r.lookupByChar(e.triggerChar), function (t) {
          return (
            e.text.length >= t.minChars &&
            t.matches.getOrThunk(function () {
              return Sp(n.dom);
            })(e.range, i, e.text)
          );
        });
      if (u.length === 0) return st.none();
      const a = bp.all(
        V(u, function (n) {
          return n.fetch(e.text, n.maxResults, o).then(function (t) {
            return {
              matchText: e.text,
              items: t,
              columns: n.columns,
              onAction: n.onAction,
            };
          });
        })
      );
      return st.some({ lookupData: a, context: e });
    };
    const Op = fn([jn("type"), $n("text")]);
    const _p = fn([
      ce("type", function () {
        return "autocompleteitem";
      }),
      ce("active", function () {
        return !1;
      }),
      ce("disabled", function () {
        return !1;
      }),
      te("meta", {}),
      jn("value"),
      $n("text"),
      $n("icon"),
    ]);
    const Tp = fn([
      jn("type"),
      jn("ch"),
      ee("minChars", 1),
      te("columns", 1),
      ee("maxResults", 10),
      Qn("matches"),
      Wn("fetch"),
      Wn("onAction"),
    ]);
    const Ep = function (t) {
      let n;
        let e;
        const o = t.ui.registry.getAll().popups;
        const r = Tt(o, function (t) {
          return On("Autocompleter", Tp, t).fold(
            function (t) {
              throw new Error(En(t));
            },
            function (t) {
              return t;
            }
          );
        });
        const i =
          ((n = Dt(r, function (t) {
            return t.ch;
          })),
          (e = {}),
          rt(n, function (t) {
            e[t] = {};
          }),
          Ct(e));
        const u = Mt(r);
      return {
        dataset: r,
        triggerChars: i,
        lookupByChar (n) {
          return H(u, function (t) {
            return t.ch === n;
          });
        },
      };
    };
  ((up = ip = ip || {})[(up.CLOSE_ON_EXECUTE = 0)] = "CLOSE_ON_EXECUTE"),
    (up[(up.BUBBLE_TO_SANDBOX = 1)] = "BUBBLE_TO_SANDBOX");
  let Bp;
    let Dp;
    const Ap = ip;
    const Mp = "tox-menu-nav__js";
    const Fp = "tox-collection__item";
    const Ip = "tox-swatch";
    const Rp = { normal: Mp, color: Ip };
    const Vp = "tox-collection__item--enabled";
    const Pp = "tox-collection__item-label";
    const Hp = "tox-collection__item-caret";
    const zp = "tox-collection__item--active";
    const Np = function (t) {
      return Ft(Rp, t).getOr(Mp);
    };
    const Lp = function (t) {
      return {
        backgroundMenu: "tox-background-menu",
        selectedMenu: "tox-selected-menu",
        selectedItem: "tox-collection__item--active",
        hasIcons: "tox-menu--has-icons",
        menu: t === "color" ? "tox-swatches" : "tox-menu",
        tieredMenu: "tox-tiered-menu",
      };
    };
    const jp = function (t) {
      const n = Lp(t);
      return {
        backgroundMenu: n.backgroundMenu,
        selectedMenu: n.selectedMenu,
        menu: n.menu,
        selectedItem: n.selectedItem,
        item: Np(t),
      };
    };
    const Up = [Mg.parts().items({})];
    const Wp = function (t, n, e) {
      const o = Lp(e);
      return {
        dom: { tag: "div", classes: it([[o.tieredMenu]]) },
        markers: jp(e),
      };
    };
    const Gp = function (e, o) {
      return function (t) {
        const n = R(t, o);
        return V(n, function (t) {
          return { dom: e, components: t };
        });
      };
    };
    const Xp = function (t, e) {
      const o = [];
        let r = [];
      return (
        rt(t, function (t, n) {
          e(t, n)
            ? (r.length > 0 && o.push(r),
              (r = []),
              It(t.dom, "innerHtml") && r.push(t))
            : r.push(t);
        }),
        r.length > 0 && o.push(r),
        V(o, function (t) {
          return {
            dom: { tag: "div", classes: ["tox-collection__group"] },
            components: t,
          };
        })
      );
    };
    const Yp = function (n, e, t) {
      return {
        dom: {
          tag: "div",
          classes: ["tox-menu", "tox-collection"].concat(
            n === 1 ? ["tox-collection--list"] : ["tox-collection--grid"]
          ),
        },
        components: [
          Mg.parts().items({
            preprocess (t) {
              return n !== "auto" && n > 1
                ? Gp({ tag: "div", classes: ["tox-collection__group"] }, n)(t)
                : Xp(t, function (t, n) {
                    return e[n].type === "separator";
                  });
            },
          }),
        ],
      };
    };
    const qp = function (t) {
      return F(t, function (t) {
        return "icon" in t && t.icon !== undefined;
      });
    };
    const Kp = function (t) {
      return nt.console.error(En(t)), nt.console.log(t), st.none();
    };
    const Jp = function (t, n, e, o, r) {
      let i;
        const u =
          ((i = e),
          {
            dom: {
              tag: "div",
              classes: ["tox-collection", "tox-collection--horizontal"],
            },
            components: [
              Mg.parts().items({
                preprocess (t) {
                  return Xp(t, function (t, n) {
                    return i[n].type === "separator";
                  });
                },
              }),
            ],
          });
      return { value: t, dom: u.dom, components: u.components, items: e };
    };
    const $p = function (t, n, e, o, r) {
      let i; let u; let a; let c; let s; let l;
      return r === "color"
        ? {
            value: t,
            dom: (l =
              ((i = o),
              {
                dom: { tag: "div", classes: ["tox-menu", "tox-swatches-menu"] },
                components: [
                  {
                    dom: { tag: "div", classes: ["tox-swatches"] },
                    components: [
                      Mg.parts().items({
                        preprocess:
                          i !== "auto"
                            ? Gp(
                                { tag: "div", classes: ["tox-swatches__row"] },
                                i
                              )
                            : ct,
                      }),
                    ],
                  },
                ],
              })).dom,
            components: l.components,
            items: e,
          }
        : r === "normal" && o === "auto"
        ? {
            value: t,
            dom: (l = Yp(o, e)).dom,
            components: l.components,
            items: e,
          }
        : r === "normal" && o === 1
        ? {
            value: t,
            dom: (l = Yp(1, e)).dom,
            components: l.components,
            items: e,
          }
        : r === "normal"
        ? {
            value: t,
            dom: (l = Yp(o, e)).dom,
            components: l.components,
            items: e,
          }
        : r !== "listpreview" || o === "auto"
        ? {
            value: t,
            dom:
              ((a = n),
              (c = o),
              (s = Lp(r)),
              {
                tag: "div",
                classes: it([
                  [s.menu, `tox-menu-${  c  }-column`],
                  a ? [s.hasIcons] : [],
                ]),
              }),
            components: Up,
            items: e,
          }
        : {
            value: t,
            dom: (l =
              ((u = o),
              {
                dom: {
                  tag: "div",
                  classes: [
                    "tox-menu",
                    "tox-collection",
                    "tox-collection--toolbar",
                    "tox-collection--toolbar-lg",
                  ],
                },
                components: [
                  Mg.parts().items({
                    preprocess: Gp(
                      { tag: "div", classes: ["tox-collection__group"] },
                      u
                    ),
                  }),
                ],
              })).dom,
            components: l.components,
            items: e,
          };
    };
    const Qp = [
      ie("disabled", !1),
      $n("text"),
      $n("shortcut"),
      vn(
        "value",
        "value",
        Xt(function () {
          return Wr("menuitem-value");
        }),
        An()
      ),
      te("meta", {}),
    ];
    const Zp = fn([jn("type"), ie("active", !1), $n("icon")].concat(Qp));
    const th = fn([
      jn("type"),
      Un("fancytype", ["inserttable", "colorswatch"]),
      ue("onAction", Z),
    ]);
    const nh = fn(
      [
        jn("type"),
        ue("onSetup", function () {
          return Z;
        }),
        ue("onAction", Z),
        $n("icon"),
      ].concat(Qp)
    );
    const eh = fn(
      [
        jn("type"),
        Wn("getSubmenuItems"),
        ue("onSetup", function () {
          return Z;
        }),
        $n("icon"),
      ].concat(Qp)
    );
    const oh = fn(
      [
        jn("type"),
        $n("icon"),
        ie("active", !1),
        ue("onSetup", function () {
          return Z;
        }),
        Wn("onAction"),
      ].concat(Qp)
    );
    const rh = function (t, o, n) {
      const r = os(t.element(), `.${  n}`);
      if (r.length > 0) {
        const e = j(r, function (t) {
          const n = t.dom().getBoundingClientRect().top;
            const e = r[0].dom().getBoundingClientRect().top;
          return Math.abs(n - e) > o;
        }).getOr(r.length);
        return st.some({ numColumns: e, numRows: Math.ceil(r.length / e) });
      }
      return st.none();
    };
    const ih = function (t, n) {
      return Ka([$m(t, n)]);
    };
    const uh = function (t) {
      return ih(Wr("unnamed-events"), t);
    };
    const ah = [
      Nn("lazySink"),
      Nn("tooltipDom"),
      te("exclusive", !0),
      te("tooltipComponents", []),
      te("delay", 300),
      re("mode", "normal", ["normal", "follow-highlight"]),
      te("anchor", function (t) {
        return {
          anchor: "hotspot",
          hotspot: t,
          layouts: {
            onLtr: at([Va, Ra, Aa, Fa, Ma, Ia]),
            onRtl: at([Va, Ra, Aa, Fa, Ma, Ia]),
          },
        };
      }),
      aa("onHide"),
      aa("onShow"),
    ];
    const ch = /* */ Object.freeze({
      __proto__: null,
      init () {
        const e = se(st.none());
          const n = se(st.none());
          const o = function () {
            e.get().each(function (t) {
              nt.clearTimeout(t);
            });
          };
          const t = at("not-implemented");
        return ai({
          getTooltip () {
            return n.get();
          },
          isShowing () {
            return n.get().isSome();
          },
          setTooltip (t) {
            n.set(st.some(t));
          },
          clearTooltip () {
            n.set(st.none());
          },
          clearTimer: o,
          resetTimer (t, n) {
            o(),
              e.set(
                st.some(
                  nt.setTimeout(function () {
                    t();
                  }, n)
                )
              );
          },
          readState: t,
        });
      },
    });
    const sh = Wr("tooltip.exclusive");
    const lh = Wr("tooltip.show");
    const fh = Wr("tooltip.hide");
    const dh = function (t, n, e) {
      t.getSystem().broadcastOn([sh], {});
    };
    const mh = /* */ Object.freeze({
      __proto__: null,
      hideAllExclusive: dh,
      setComponents (t, n, e, o) {
        e.getTooltip().each(function (t) {
          t.getSystem().isConnected() && Jm.set(t, o);
        });
      },
    });
    const gh = $a({
      fields: ah,
      name: "tooltipping",
      active: /* */ Object.freeze({
        __proto__: null,
        events (o, r) {
          const e = function (n) {
            r.getTooltip().each(function (t) {
              qs(t), o.onHide(n, t), r.clearTooltip();
            }),
              r.clearTimer();
          };
          return qo(
            it([
              [
                $o(lh, function (t) {
                  r.resetTimer(function () {
                    !(function (n) {
                      if (!r.isShowing()) {
                        dh(n);
                        const t = o.lazySink(n).getOrDie();
                          const e = n.getSystem().build({
                            dom: o.tooltipDom,
                            components: o.tooltipComponents,
                            events: qo(
                              o.mode === "normal"
                                ? [
                                    $o(io(), function (t) {
                                      jo(n, lh);
                                    }),
                                    $o(oo(), function (t) {
                                      jo(n, fh);
                                    }),
                                  ]
                                : []
                            ),
                            behaviours: Ka([Jm.config({})]),
                          });
                        r.setTooltip(e),
                          Gs(t, e),
                          o.onShow(n, e),
                          Ns.position(t, o.anchor(n), e);
                      }
                    })(t);
                  }, o.delay);
                }),
                $o(fh, function (t) {
                  r.resetTimer(function () {
                    e(t);
                  }, o.delay);
                }),
                $o(xo(), function (t, n) {
                  M(n.channels(), sh) && e(t);
                }),
                ir(function (t) {
                  e(t);
                }),
              ],
              o.mode === "normal"
                ? [
                    $o(uo(), function (t) {
                      jo(t, lh);
                    }),
                    $o(bo(), function (t) {
                      jo(t, fh);
                    }),
                    $o(io(), function (t) {
                      jo(t, lh);
                    }),
                    $o(oo(), function (t) {
                      jo(t, fh);
                    }),
                  ]
                : [
                    $o(No(), function (t, n) {
                      jo(t, lh);
                    }),
                    $o(Lo(), function (t) {
                      jo(t, fh);
                    }),
                  ],
            ])
          );
        },
      }),
      state: ch,
      apis: mh,
    });
    const ph = tinymce.util.Tools.resolve("tinymce.dom.DOMUtils");
    const hh = tinymce.util.Tools.resolve("tinymce.util.I18n");
    const vh = ["input", "button", "textarea", "select"];
    const bh = function (t, n, e) {
      (n.disabled() ? Ch : Oh)(t, n, e);
    };
    const yh = function (t, n) {
      return !0 === n.useNative && M(vh, cr(t.element()));
    };
    const xh = function (t) {
      Fr(t.element(), "disabled", "disabled");
    };
    const wh = function (t) {
      Pr(t.element(), "disabled");
    };
    const Sh = function (t) {
      Fr(t.element(), "aria-disabled", "true");
    };
    const kh = function (t) {
      Fr(t.element(), "aria-disabled", "false");
    };
    var Ch = function (n, t, e) {
      t.disableClass.each(function (t) {
        Si(n.element(), t);
      }),
        (yh(n, t) ? xh : Sh)(n),
        t.onDisabled(n);
    };
    var Oh = function (n, t, e) {
      t.disableClass.each(function (t) {
        Ci(n.element(), t);
      }),
        (yh(n, t) ? wh : kh)(n),
        t.onEnabled(n);
    };
    const _h = function (t, n) {
      return yh(t, n)
        ? Vr(t.element(), "disabled")
        : Ir(t.element(), "aria-disabled") === "true";
    };
    const Th = /* */ Object.freeze({
      __proto__: null,
      enable: Oh,
      disable: Ch,
      isDisabled: _h,
      onLoad: bh,
      set (t, n, e, o) {
        (o ? Ch : Oh)(t, n, e);
      },
    });
    const Eh = /* */ Object.freeze({
      __proto__: null,
      exhibit (t, n) {
        return si({ classes: n.disabled() ? n.disableClass.toArray() : [] });
      },
      events (e, t) {
        return qo([
          Ko(wo(), function (t, n) {
            return _h(t, e);
          }),
          Wa(e, t, bh),
        ]);
      },
    });
    const Bh = [
      ue("disabled", c),
      te("useNative", !0),
      qn("disableClass"),
      aa("onDisabled"),
      aa("onEnabled"),
    ];
    const Dh = $a({ fields: Bh, name: "disabling", active: Eh, apis: Th });
    const Ah = tinymce.util.Tools.resolve("tinymce.EditorManager");
    const Mh = function (t) {
      return t.getParam("height", Math.max(t.getElement().offsetHeight, 200));
    };
    const Fh = function (t) {
      return t.getParam("width", ph.DOM.getStyle(t.getElement(), "width"));
    };
    const Ih = function (t) {
      return st.from(t.getParam("min_width")).filter(ot);
    };
    const Rh = function (t) {
      return st.from(t.getParam("min_height")).filter(ot);
    };
    const Vh = function (t) {
      return st.from(t.getParam("max_width")).filter(ot);
    };
    const Ph = function (t) {
      return st.from(t.getParam("max_height")).filter(ot);
    };
    const Hh = function (t) {
      return !1 !== t.getParam("menubar", !0, "boolean");
    };
    const zh = function (t) {
      const n = t.getParam("toolbar", !0);
        const e = !0 === n;
        const o = w(n);
        const r = v(n) && n.length > 0;
      return !Lh(t) && (r || o || e);
    };
    const Nh = function (n) {
      const t = I(9, function (t) {
          return n.getParam(`toolbar${  t + 1}`, !1, "string");
        });
        const e = H(t, function (t) {
          return typeof t === "string";
        });
      return e.length > 0 ? st.some(e) : st.none();
    };
    var Lh = function (t) {
      return Nh(t).fold(
        function () {
          return t.getParam("toolbar", [], "string[]").length > 0;
        },
        function () {
          return !0;
        }
      );
    };
  ((Dp = Bp = Bp || {}).default = "wrap"),
    (Dp.floating = "floating"),
    (Dp.sliding = "sliding"),
    (Dp.scrolling = "scrolling");
  let jh;
    let Uh;
    const Wh = function (t) {
      return t.getParam("toolbar_mode", "", "string");
    };
  ((Uh = jh = jh || {}).auto = "auto"),
    (Uh.top = "top"),
    (Uh.bottom = "bottom");
  const Gh = function (t) {
      return t.getParam("toolbar_location", jh.auto, "string");
    };
    const Xh = function (t) {
      return Gh(t) === jh.bottom;
    };
    const Yh = function (t) {
      const n = t.getParam("fixed_toolbar_container", "", "string");
      return n.length > 0 && t.inline ? Lu(Vi(), n) : st.none();
    };
    const qh = function (t) {
      return t.inline && Yh(t).isSome();
    };
    const Kh = function (t) {
      return t.inline && !Hh(t) && !zh(t) && !Lh(t);
    };
    const Jh = function (t) {
      return (
        (t.getParam("toolbar_sticky", !1, "boolean") || t.inline) &&
        !qh(t) &&
        !Kh(t)
      );
    };
    const $h = "silver.readonly";
    const Qh = fn([Ln("readonly", Rn)]);
    const Zh = function (t, n) {
      const e = t.outerContainer.element();
      n &&
        (t.mothership.broadcastOn([sl()], { target: e }),
        t.uiMothership.broadcastOn([sl()], { target: e })),
        t.mothership.broadcastOn([$h], { readonly: n }),
        t.uiMothership.broadcastOn([$h], { readonly: n });
    };
    const tv = function (t, n) {
      t.on("init", function () {
        t.mode.isReadOnly() && Zh(n, !0);
      }),
        t.on("SwitchMode", function () {
          return Zh(n, t.mode.isReadOnly());
        }),
        t.getParam("readonly", !1, "boolean") && t.setMode("readonly");
    };
    const nv = function () {
      let t;
      return oc.config({
        channels:
          (((t = {})[$h] = {
            schema: Qh,
            onReceive (t, n) {
              Dh.set(t, n.readonly);
            },
          }),
          t),
      });
    };
    const ev = function (t) {
      return Dh.config({
        disabled: t,
        disableClass: "tox-collection__item--state-disabled",
      });
    };
    const ov = function (t) {
      return Dh.config({ disabled: t });
    };
    const rv = function (t) {
      return Dh.config({ disabled: t, disableClass: "tox-tbtn--disabled" });
    };
    const iv = function (t) {
      return Dh.config({
        disabled: t,
        disableClass: "tox-tbtn--disabled",
        useNative: !1,
      });
    };
    const uv = function (t, n) {
      const e = t.getApi(n);
      return function (t) {
        t(e);
      };
    };
    const av = function (e, o) {
      return rr(function (t) {
        uv(
          e,
          t
        )(function (t) {
          const n = e.onSetup(t);
          n !== null && n !== undefined && o.set(n);
        });
      });
    };
    const cv = function (n, e) {
      return ir(function (t) {
        return uv(n, t)(e.get());
      });
    };
    const sv = {
      "alloy.execute": [
        "disabling",
        "alloy.base.behaviour",
        "toggling",
        "item-events",
      ],
    };
    const lv = function (t) {
      return U(t, function (t) {
        return t.toArray();
      });
    };
    const fv = function (t, n, e, o) {
      let r;
        let i;
        const u = se(Z);
      return {
        type: "item",
        dom: n.dom,
        components: lv(n.optComponents),
        data: t.data,
        eventOrder: sv,
        hasSubmenu: t.triggersSubmenu,
        itemBehaviours: Ka(
          [
            $m("item-events", [
              ((r = t),
              (i = e),
              ar(function (t, n) {
                uv(r, t)(r.onAction),
                  r.triggersSubmenu ||
                    i !== Ap.CLOSE_ON_EXECUTE ||
                    (jo(t, Oo()), n.stop());
              })),
              av(t, u),
              cv(t, u),
            ]),
            ev(function () {
              return t.disabled || o.isReadOnly();
            }),
            nv(),
            Jm.config({}),
          ].concat(t.itemBehaviours)
        ),
      };
    };
    const dv = function (t) {
      return { value: t.value, meta: {text: t.text.getOr(""), ...t.meta} };
    };
    const mv = tinymce.util.Tools.resolve("tinymce.Env");
    const gv = function (t) {
      return {
        dom: {
          tag: "div",
          classes: ["tox-collection__item-icon"],
          innerHtml: t,
        },
      };
    };
    const pv = function (t) {
      return {
        dom: { tag: "div", classes: [Pp] },
        components: [ou(hh.translate(t))],
      };
    };
    const hv = function (t, n) {
      return {
        dom: { tag: "div", classes: [Pp] },
        components: [
          {
            dom: { tag: t.tag, styles: t.styles },
            components: [ou(hh.translate(n))],
          },
        ],
      };
    };
    const vv = function (t) {
      return {
        dom: {
          tag: "div",
          classes: ["tox-collection__item-accessory"],
          innerHtml:
            ((n = t),
            (e = mv.mac
              ? {
                  alt: "&#x2325;",
                  ctrl: "&#x2303;",
                  shift: "&#x21E7;",
                  meta: "&#x2318;",
                  access: "&#x2303;&#x2325;",
                }
              : { meta: "Ctrl", access: "Shift+Alt" }),
            (o = n.split("+")),
            (r = V(o, function (t) {
              const n = t.toLowerCase().trim();
              return It(e, n) ? e[n] : t;
            })),
            mv.mac ? r.join("") : r.join("+")),
        },
      };
      let n; let e; let o; let r;
    };
    const bv = function (t) {
      return {
        dom: {
          tag: "div",
          classes: ["tox-collection__item-checkmark"],
          innerHtml: np("checkmark", t),
        },
      };
    };
    const yv = function (t, n, e, o, r) {
      const i = e ? n.or(st.some("")).map(gv) : st.none();
        const u = t.checkMark;
        const a = t.ariaLabel
          .map(function (t) {
            return { attributes: { title: hh.translate(t) } };
          })
          .getOr({});
      return {
        dom: {
          tag: "div",
            classes: [Mp, Fp].concat(
              r ? ["tox-collection__item-icon-rtl"] : []
            ),
          ...a
        },
        optComponents: [
          i,
          t.htmlContent.fold(
            function () {
              return t.textContent.map(o);
            },
            function (t) {
              return st.some({
                dom: { tag: "div", classes: [Pp], innerHtml: t },
              });
            }
          ),
          t.shortcutContent.map(vv),
          u,
          t.caret,
        ],
      };
    };
    const xv = [
      "list-num-default",
      "list-num-lower-alpha",
      "list-num-lower-greek",
      "list-num-lower-roman",
      "list-num-upper-alpha",
      "list-num-upper-roman",
    ];
    const wv = ["list-bull-circle", "list-bull-default", "list-bull-square"];
    const Sv = function (t, r, n, i) {
      void 0 === i && (i = st.none());
      let e;
        let o;
        let u;
        let a;
        let c;
        const s =
          hh.isRtl() &&
          t.iconContent.exists(function (t) {
            return M(wv, t);
          });
        const l = t.iconContent
          .map(function (t) {
            return hh.isRtl() && M(xv, t) ? `${t  }-rtl` : t;
          })
          .map(function (t) {
            return (
              (n = t),
              (e = r.icons),
              (o = i),
              st
                .from(e()[n.toLowerCase()])
                .or(o)
                .getOrThunk(function () {
                  return tp(e);
                })
            );
            let n; let e; let o;
          });
        const f = st.from(t.meta).fold(
          function () {
            return pv;
          },
          function (t) {
            return It(t, "style") ? g(hv, t.style) : pv;
          }
        );
      return t.presets === "color"
        ? ((e = t.ariaLabel),
          (o = t.value),
          (u = r),
          {
            dom:
              ((a = l.getOr("")),
              (c = {
                tag: "div",
                attributes: e
                  .map(function (t) {
                    return { title: u.translate(t) };
                  })
                  .getOr({}),
                classes: ["tox-swatch"],
              }),
              ({
                ...c,
                ...(o === "custom"
                  ? {
                      tag: "button",
                      classes: b(c.classes, ["tox-swatches__picker-btn"]),
                      innerHtml: a,
                    }
                  : o === "remove"
                  ? {
                      classes: b(c.classes, ["tox-swatch--remove"]),
                      innerHtml: a,
                    }
                  : {
                      attributes: {...c.attributes, "data-mce-color": o,},
                      styles: { "background-color": o },
                    })
              })),
            optComponents: [],
          })
        : yv(t, l, n, f, s);
    };
    const kv = function (t, n) {
      let e;
        const o = hh.translate(t);
        const r = ((e = o), ph.DOM.encode(e));
      if (n.length > 0) {
        const i = new RegExp(n.replace(/[.*+?^${}()|[\]\\]/g, "\\$&"), "gi");
        return r.replace(i, function (t) {
          return `<span class="tox-autocompleter-highlight">${  t  }</span>`;
        });
      }
      return r;
    };
    const Cv = at(df(Og(), _g()));
    const Ov = Wr("cell-over");
    const _v = Wr("cell-execute");
    const Tv = function (n, e, t) {
      let o;
        const r = function (t) {
          return Uo(t, _v, { row: n, col: e });
        };
        const i = function (t, n) {
          n.stop(), r(t);
        };
      return uu({
        dom: {
          tag: "div",
          attributes: (((o = { role: "button" })["aria-labelledby"] = t), o),
        },
        behaviours: Ka([
          $m("insert-table-picker-cell", [
            $o(io(), eg.focus),
            $o(wo(), r),
            $o(mo(), i),
            $o(ko(), i),
          ]),
          gg.config({
            toggleClass: "tox-insert-table-picker__selected",
            toggleOnExecute: !1,
          }),
          eg.config({
            onFocus (t) {
              return Uo(t, Ov, { row: n, col: e });
            },
          }),
        ]),
      });
    };
    const Ev = function (t) {
      return { value: t };
    };
    const Bv = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
    const Dv = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i;
    const Av = function (t) {
      return Bv.test(t) || Dv.test(t);
    };
    const Mv = function (t) {
      const n = {
          value: t.value.replace(Bv, function (t, n, e, o) {
            return n + n + e + e + o + o;
          }),
        };
        const e = Dv.exec(n.value);
      return e === null ? ["FFFFFF", "FF", "FF", "FF"] : e;
    };
    const Fv = function (t) {
      const n = t.toString(16);
      return n.length === 1 ? `0${  n}` : n;
    };
    const Iv = function (t) {
      const n = Fv(t.red) + Fv(t.green) + Fv(t.blue);
      return Ev(n);
    };
    const Rv = Math.min;
    const Vv = Math.max;
    const Pv = Math.round;
    const Hv = /^rgb\((\d+),\s*(\d+),\s*(\d+)\)/;
    const zv = /^rgba\((\d+),\s*(\d+),\s*(\d+),\s*(\d?(?:\.\d+)?)\)/;
    const Nv = function (t, n, e, o) {
      return { red: t, green: n, blue: e, alpha: o };
    };
    const Lv = function (t) {
      const n = parseInt(t, 10);
      return n.toString() === t && n >= 0 && n <= 255;
    };
    const jv = function (t) {
      let n;
        let e;
        let o;
        const r = (t.hue || 0) % 360;
        let i = t.saturation / 100;
        let u = t.value / 100;
      if (((i = Vv(0, Rv(i, 1))), (u = Vv(0, Rv(u, 1))), i === 0))
        return (n = e = o = Pv(255 * u)), Nv(n, e, o, 1);
      const a = r / 60;
        const c = u * i;
        const s = c * (1 - Math.abs((a % 2) - 1));
        const l = u - c;
      switch (Math.floor(a)) {
        case 0:
          (n = c), (e = s), (o = 0);
          break;
        case 1:
          (n = s), (e = c), (o = 0);
          break;
        case 2:
          (n = 0), (e = c), (o = s);
          break;
        case 3:
          (n = 0), (e = s), (o = c);
          break;
        case 4:
          (n = s), (e = 0), (o = c);
          break;
        case 5:
          (n = c), (e = 0), (o = s);
          break;
        default:
          n = e = o = 0;
      }
      return (
        (n = Pv(255 * (n + l))),
        (e = Pv(255 * (e + l))),
        (o = Pv(255 * (o + l))),
        Nv(n, e, o, 1)
      );
    };
    const Uv = function (t) {
      const n = Mv(t);
        const e = parseInt(n[1], 16);
        const o = parseInt(n[2], 16);
        const r = parseInt(n[3], 16);
      return Nv(e, o, r, 1);
    };
    const Wv = function (t, n, e, o) {
      const r = parseInt(t, 10);
        const i = parseInt(n, 10);
        const u = parseInt(e, 10);
        const a = parseFloat(o);
      return Nv(r, i, u, a);
    };
    const Gv = function (t) {
      return (
        `rgba(${  t.red  },${  t.green  },${  t.blue  },${  t.alpha  })`
      );
    };
    const Xv = Nv(255, 0, 0, 1);
    const Yv = function (t, n) {
      return t.fire("ResizeContent", n);
    };
    const qv = tinymce.util.Tools.resolve("tinymce.util.LocalStorage");
    const Kv = "tinymce-custom-colors";
  const Jv = "choiceitem";
    const $v = [
      { type: Jv, text: "Light Green", value: "#BFEDD2" },
      { type: Jv, text: "Light Yellow", value: "#FBEEB8" },
      { type: Jv, text: "Light Red", value: "#F8CAC6" },
      { type: Jv, text: "Light Purple", value: "#ECCAFA" },
      { type: Jv, text: "Light Blue", value: "#C2E0F4" },
      { type: Jv, text: "Green", value: "#2DC26B" },
      { type: Jv, text: "Yellow", value: "#F1C40F" },
      { type: Jv, text: "Red", value: "#E03E2D" },
      { type: Jv, text: "Purple", value: "#B96AD9" },
      { type: Jv, text: "Blue", value: "#3598DB" },
      { type: Jv, text: "Dark Turquoise", value: "#169179" },
      { type: Jv, text: "Orange", value: "#E67E23" },
      { type: Jv, text: "Dark Red", value: "#BA372A" },
      { type: Jv, text: "Dark Purple", value: "#843FA1" },
      { type: Jv, text: "Dark Blue", value: "#236FA1" },
      { type: Jv, text: "Light Gray", value: "#ECF0F1" },
      { type: Jv, text: "Medium Gray", value: "#CED4D9" },
      { type: Jv, text: "Gray", value: "#95A5A6" },
      { type: Jv, text: "Dark Gray", value: "#7E8C8D" },
      { type: Jv, text: "Navy Blue", value: "#34495E" },
      { type: Jv, text: "Black", value: "#000000" },
      { type: Jv, text: "White", value: "#ffffff" },
    ];
    const Qv = (function KF(e) {
      void 0 === e && (e = 10);
      let t;
        const n = qv.getItem(Kv);
        const o = w(n) ? JSON.parse(n) : [];
        const r = e - (t = o).length < 0 ? t.slice(0, e) : t;
        const i = function (t) {
          r.splice(t, 1);
        };
      return {
        add (t) {
          let n;
          ((n = A(r, t)) === -1 ? st.none() : st.some(n)).each(i),
            r.unshift(t),
            r.length > e && r.pop(),
            qv.setItem(Kv, JSON.stringify(r));
        },
        state () {
          return r.slice(0);
        },
      };
    })(10);
    const Zv = function (t) {
      return !1 !== t.getParam("custom_colors");
    };
    const tb = function (t) {
      const n = t.getParam("color_map");
      return n !== undefined
        ? (function (t) {
            const n = [];
              const u = nt.document.createElement("canvas");
            (u.height = 1), (u.width = 1);
            for (
              var a = u.getContext("2d"),
                c = function (t, n) {
                  const e = n / 255;
                  return (`0${  Math.round(t * e + 255 * (1 - e)).toString(16)}`)
                    .slice(-2)
                    .toUpperCase();
                },
                e = function (t) {
                  if (/^[0-9A-Fa-f]{6}$/.test(t)) return `#${  t.toUpperCase()}`;
                  a.clearRect(0, 0, u.width, u.height),
                    (a.fillStyle = "#FFFFFF"),
                    (a.fillStyle = t),
                    a.fillRect(0, 0, 1, 1);
                  const n = a.getImageData(0, 0, 1, 1).data;
                    const e = n[0];
                    const o = n[1];
                    const r = n[2];
                    const i = n[3];
                  return `#${  c(e, i)  }${c(o, i)  }${c(r, i)}`;
                },
                o = 0;
              o < t.length;
              o += 2
            )
              n.push({ text: t[o + 1], value: e(t[o]), type: "choiceitem" });
            return n;
          })(n)
        : $v;
    };
    const nb = function (t) {
      Qv.add(t);
    };
    const eb = function (i) {
      i.addCommand("mceApplyTextcolor", function (t, n) {
        let e; let o; let r;
        (o = t),
          (r = n),
          (e = i).undoManager.transact(function () {
            e.focus(), e.formatter.apply(o, { value: r }), e.nodeChanged();
          });
      }),
        i.addCommand("mceRemoveTextcolor", function (t) {
          let n; let e;
          (e = t),
            (n = i).undoManager.transact(function () {
              n.focus(),
                n.formatter.remove(e, { value: null }, null, !0),
                n.nodeChanged();
            });
        });
    };
    const ob = function (t) {
      let n;
        let e;
        const o = tb(t);
        const r = ((n = o.length), Math.max(5, Math.ceil(Math.sqrt(n))));
      return (e = r), t.getParam("color_cols", e, "number");
    };
    const rb = function (n, e, t, o) {
      t === "custom"
        ? lb(n)(function (t) {
            t.each(function (t) {
              nb(t), n.execCommand("mceApplyTextcolor", e, t), o(t);
            });
          }, "#000000")
        : t === "remove"
        ? (o(""), n.execCommand("mceRemoveTextcolor", e))
        : (o(t), n.execCommand("mceApplyTextcolor", e, t));
    };
    const ib = function (t, n) {
      return t.concat(
        V(Qv.state(), function (t) {
          return { type: Jv, text: t, value: t };
        }).concat(
          ((o = {
            type: (e = "choiceitem"),
            text: "Remove color",
            icon: "color-swatch-remove-color",
            value: "remove",
          }),
          n
            ? [
                o,
                {
                  type: e,
                  text: "Custom color",
                  icon: "color-picker",
                  value: "custom",
                },
              ]
            : [o])
        )
      );
      let e; let o;
    };
    const ub = function (n, e) {
      return function (t) {
        t(ib(n, e));
      };
    };
    const ab = function (t, n, e) {
      let o; let r;
      (o =
        n === "forecolor"
          ? "tox-icon-text-color__color"
          : "tox-icon-highlight-bg-color__color"),
        (r = e),
        t.setIconFill(o, r),
        t.setIconStroke(o, r);
    };
    const cb = function (i, e, u, t, o) {
      i.ui.registry.addSplitButton(e, {
        tooltip: t,
        presets: "color",
        icon: e === "forecolor" ? "text-color" : "highlight-bg-color",
        select (e) {
          let t; let o; let r;
          return st
            .from(
              ((o = u),
              (t = i).dom.getParents(t.selection.getStart(), function (t) {
                let n;
                (n =
                  t.style[o === "forecolor" ? "color" : "background-color"]) &&
                  (r = r || n);
              }),
              r)
            )
            .bind(function (t) {
              return (function (t) {
                if (t === "transparent") return st.some(Nv(0, 0, 0, 0));
                const n = Hv.exec(t);
                if (n !== null) return st.some(Wv(n[1], n[2], n[3], "1"));
                const e = zv.exec(t);
                return e !== null
                  ? st.some(Wv(e[1], e[2], e[3], e[4]))
                  : st.none();
              })(t).map(function (t) {
                const n = Iv(t).value;
                return Be(e.toLowerCase(), n);
              });
            })
            .getOr(!1);
        },
        columns: ob(i),
        fetch: ub(tb(i), Zv(i)),
        onAction (t) {
          o.get() !== null && rb(i, u, o.get(), function () {});
        },
        onItemAction (t, n) {
          rb(i, u, n, function (t) {
            let n;
            o.set(t), (n = { name: e, color: t }), i.fire("TextColorChange", n);
          });
        },
        onSetup (n) {
          o.get() !== null && ab(n, e, o.get());
          const t = function (t) {
            t.name === e && ab(n, t.name, t.color);
          };
          return (
            i.on("TextColorChange", t),
            function () {
              i.off("TextColorChange", t);
            }
          );
        },
      });
    };
    const sb = function (n, t, e, o) {
      n.ui.registry.addNestedMenuItem(t, {
        text: o,
        icon: t === "forecolor" ? "text-color" : "highlight-bg-color",
        getSubmenuItems () {
          return [
            {
              type: "fancymenuitem",
              fancytype: "colorswatch",
              onAction (t) {
                rb(n, e, t.value, Z);
              },
            },
          ];
        },
      });
    };
    var lb = function (i) {
      return function (t, n) {
        let e;
          const o = { colorpicker: n };
          const r =
            ((e = t),
            function (t) {
              const n = t.getData();
              e(st.from(n.colorpicker)), t.close();
            });
        i.windowManager.open({
          title: "Color Picker",
          size: "normal",
          body: {
            type: "panel",
            items: [
              { type: "colorpicker", name: "colorpicker", label: "Color" },
            ],
          },
          buttons: [
            { type: "cancel", name: "cancel", text: "Cancel" },
            { type: "submit", name: "save", text: "Save", primary: !0 },
          ],
          initialData: o,
          onAction (t, n) {
            n.name === "hex-valid" &&
              (n.value ? t.enable("ok") : t.disable("ok"));
          },
          onSubmit: r,
          onClose () {},
          onCancel () {
            t(st.none());
          },
        });
      };
    };
    const fb = function (t, n, e, o, r, i, u, a) {
      const c = qp(n);
        const s = db(n, e, o, r !== "color" ? "normal" : "color", i, u, a);
      return $p(t, c, s, o, r);
    };
    var db = function (e, o, r, i, u, a, c) {
      return Pf(
        V(e, function (n) {
          return n.type === "choiceitem"
            ? On("choicemenuitem", Zp, n).fold(Kp, function (t) {
                return st.some(
                  (function (n, t, e, o, r, i, u, a) {
                    void 0 === a && (a = !0);
                    const c = Sv(
                      {
                        presets: e,
                        textContent: t ? n.text : st.none(),
                        htmlContent: st.none(),
                        ariaLabel: n.text,
                        iconContent: n.icon,
                        shortcutContent: t ? n.shortcut : st.none(),
                        checkMark: t ? st.some(bv(u.icons)) : st.none(),
                        caret: st.none(),
                        value: n.value,
                      },
                      u,
                      a
                    );
                    return zt(
                      fv(
                        {
                          data: dv(n),
                          disabled: n.disabled,
                          getApi (n) {
                            return {
                              setActive (t) {
                                gg.set(n, t);
                              },
                              isActive () {
                                return gg.isOn(n);
                              },
                              isDisabled () {
                                return Dh.isDisabled(n);
                              },
                              setDisabled (t) {
                                return Dh.set(n, t);
                              },
                            };
                          },
                          onAction (t) {
                            return o(n.value);
                          },
                          onSetup (t) {
                            return t.setActive(r), function () {};
                          },
                          triggersSubmenu: !1,
                          itemBehaviours: [],
                        },
                        c,
                        i,
                        u
                      ),
                      {
                        toggling: {
                          toggleClass: Vp,
                          toggleOnExecute: !1,
                          selected: n.active,
                        },
                      }
                    );
                  })(t, r === 1, i, o, a(n.value), u, c, qp(e))
                );
              })
            : st.none();
        })
      );
    };
    const mb = function (t, n) {
      const e = jp(n);
      return t === 1
        ? { mode: "menu", moveOnTab: !0 }
        : t === "auto"
        ? {
            mode: "grid",
            selector: `.${  e.item}`,
            initSize: { numColumns: 1, numRows: 1 },
          }
        : {
            mode: "matrix",
            rowSelector:
              `.${ 
              n === "color" ? "tox-swatches__row" : "tox-collection__group"}`,
          };
    };
  let gb;
    let pb;
    const hb = {
      inserttable (o) {
        const t = Wr("size-label");
          const i = (function (t, n, e) {
            for (var o = [], r = 0; r < n; r++) {
              for (var i = [], u = 0; u < e; u++) i.push(Tv(r, u, t));
              o.push(i);
            }
            return o;
          })(t, 10, 10);
          const u = Zg({
            dom: {
              tag: "span",
              classes: ["tox-insert-table-picker__label"],
              attributes: { id: t },
            },
            components: [ou("0x0")],
            behaviours: Ka([Jm.config({})]),
          });
        return {
          type: "widget",
          data: { value: Wr("widget-id") },
          dom: { tag: "div", classes: ["tox-fancymenuitem"] },
          autofocus: !0,
          components: [
            Cv().widget({
              dom: { tag: "div", classes: ["tox-insert-table-picker"] },
              components: U(i, function (t) {
                return V(t, au);
              }).concat(u.asSpec()),
              behaviours: Ka([
                $m("insert-table-picker", [
                  nr(Ov, function (t, n, e) {
                    const o = e.event().row();
                      const r = e.event().col();
                    !(function (t, n, e, o, r) {
                      for (let i = 0; i < o; i++)
                        for (let u = 0; u < r; u++)
                          gg.set(t[i][u], i <= n && u <= e);
                    })(i, o, r, 10, 10),
                      Jm.set(u.get(t), [ou(`${r + 1  }x${  o + 1}`)]);
                  }),
                  nr(_v, function (t, n, e) {
                    o.onAction({
                      numRows: e.event().row() + 1,
                      numColumns: e.event().col() + 1,
                    }),
                      jo(t, Oo());
                  }),
                ]),
                Gm.config({
                  initSize: { numRows: 10, numColumns: 10 },
                  mode: "flatgrid",
                  selector: '[role="button"]',
                }),
              ]),
            }),
          ],
        };
      },
      colorswatch: function JF(n, t) {
        const e = ib(t.colorinput.getColors(), t.colorinput.hasCustomColors());
          const o = t.colorinput.getColorCols();
          const r = fb(
            Wr("menu-value"),
            e,
            function (t) {
              n.onAction({ value: t });
            },
            o,
            "color",
            Ap.CLOSE_ON_EXECUTE,
            function () {
              return !1;
            },
            t.shared.providers
          );
          const i = {...r, markers: jp("color"), movement: mb(o, "color")};
        return {
          type: "widget",
          data: { value: Wr("widget-id") },
          dom: { tag: "div", classes: ["tox-fancymenuitem"] },
          autofocus: !0,
          components: [Cv().widget(Mg.sketch(i))],
        };
      },
    };
    const vb = function (n, e, t, o, r, i, u, a) {
      void 0 === a && (a = !0);
      let c;
        let s;
        const l = Sv(
          {
            presets: o,
            textContent: st.none(),
            htmlContent: t
              ? n.text.map(function (t) {
                  return kv(t, e);
                })
              : st.none(),
            ariaLabel: n.text,
            iconContent: n.icon,
            shortcutContent: st.none(),
            checkMark: st.none(),
            caret: st.none(),
            value: n.value,
          },
          u.providers,
          a,
          n.icon
        );
      return fv(
        {
          data: dv(n),
          disabled: n.disabled,
          getApi () {
            return {};
          },
          onAction (t) {
            return r(n.value, n.meta);
          },
          onSetup () {
            return function () {};
          },
          triggersSubmenu: !1,
          itemBehaviours:
            ((c = n.meta),
            (s = u),
            Ft(c, "tooltipWorker")
              .map(function (e) {
                return [
                  gh.config({
                    lazySink: s.getSink,
                    tooltipDom: {
                      tag: "div",
                      classes: ["tox-tooltip-worker-container"],
                    },
                    tooltipComponents: [],
                    anchor (t) {
                      return {
                        anchor: "submenu",
                        item: t,
                        overrides: { maxHeightFunction: _c },
                      };
                    },
                    mode: "follow-highlight",
                    onShow (n, t) {
                      e(function (t) {
                        gh.setComponents(n, [ru({ element: fe.fromDom(t) })]);
                      });
                    },
                  }),
                ];
              })
              .getOr([])),
        },
        l,
        i,
        u.providers
      );
    };
    const bb = function (t) {
      const n = t.text.fold(
        function () {
          return {};
        },
        function (t) {
          return { innerHtml: t };
        }
      );
      return {
        type: "separator",
        dom: {
          tag: "div", classes: [Fp, "tox-collection__group-heading"],
          ...n
        },
        components: [],
      };
    };
    const yb = function (t, n, e, o) {
      void 0 === o && (o = !0);
      const r = Sv(
        {
          presets: "normal",
          iconContent: t.icon,
          textContent: t.text,
          htmlContent: st.none(),
          ariaLabel: t.text,
          caret: st.none(),
          checkMark: st.none(),
          shortcutContent: t.shortcut,
        },
        e,
        o
      );
      return fv(
        {
          data: dv(t),
          getApi (n) {
            return {
              isDisabled () {
                return Dh.isDisabled(n);
              },
              setDisabled (t) {
                return Dh.set(n, t);
              },
            };
          },
          disabled: t.disabled,
          onAction: t.onAction,
          onSetup: t.onSetup,
          triggersSubmenu: !1,
          itemBehaviours: [],
        },
        r,
        n,
        e
      );
    };
    const xb = function (t, n, e, o, r) {
      void 0 === o && (o = !0), void 0 === r && (r = !1);
      let i;
        let u;
        const a = r
          ? ((u = e.icons),
            {
              dom: {
                tag: "div",
                classes: [Hp],
                innerHtml: np("chevron-down", u),
              },
            })
          : ((i = e.icons),
            {
              dom: {
                tag: "div",
                classes: [Hp],
                innerHtml: np("chevron-right", i),
              },
            });
        const c = Sv(
          {
            presets: "normal",
            iconContent: t.icon,
            textContent: t.text,
            htmlContent: st.none(),
            ariaLabel: t.text,
            caret: st.some(a),
            checkMark: st.none(),
            shortcutContent: t.shortcut,
          },
          e,
          o
        );
      return fv(
        {
          data: dv(t),
          getApi (n) {
            return {
              isDisabled () {
                return Dh.isDisabled(n);
              },
              setDisabled (t) {
                return Dh.set(n, t);
              },
            };
          },
          disabled: t.disabled,
          onAction: Z,
          onSetup: t.onSetup,
          triggersSubmenu: !0,
          itemBehaviours: [],
        },
        c,
        n,
        e
      );
    };
    const wb = function (t, n, e, o) {
      void 0 === o && (o = !0);
      const r = Sv(
        {
          iconContent: t.icon,
          textContent: t.text,
          htmlContent: st.none(),
          ariaLabel: t.text,
          checkMark: st.some(bv(e.icons)),
          caret: st.none(),
          shortcutContent: t.shortcut,
          presets: "normal",
          meta: t.meta,
        },
        e,
        o
      );
      return zt(
        fv(
          {
            data: dv(t),
            disabled: t.disabled,
            getApi (n) {
              return {
                setActive (t) {
                  gg.set(n, t);
                },
                isActive () {
                  return gg.isOn(n);
                },
                isDisabled () {
                  return Dh.isDisabled(n);
                },
                setDisabled (t) {
                  return Dh.set(n, t);
                },
              };
            },
            onAction: t.onAction,
            onSetup: t.onSetup,
            triggersSubmenu: !1,
            itemBehaviours: [],
          },
          r,
          n,
          e
        ),
        {
          toggling: {
            toggleClass: Vp,
            toggleOnExecute: !1,
            selected: t.active,
          },
        }
      );
    };
    const Sb = function (n, e) {
      return (
        (t = hb),
        (o = n.fancytype),
        (Object.prototype.hasOwnProperty.call(t, o)
          ? st.some(t[o])
          : st.none()
        ).map(function (t) {
          return t(n, e);
        })
      );
      let t; let o;
    };
  ((pb = gb = gb || {})[(pb.ContentFocus = 0)] = "ContentFocus"),
    (pb[(pb.UiFocus = 1)] = "UiFocus");
  const kb = function (t, n, e, o, r) {
      const i = e.shared.providers;
        const u = function (t) {
          return r
            ? ({...t, shortcut: st.none(),
                icon: t.text.isSome() ? st.none() : t.icon,})
            : t;
        };
      switch (t.type) {
        case "menuitem":
          return On("menuitem", nh, t).fold(Kp, function (t) {
            return st.some(yb(u(t), n, i, o));
          });
        case "nestedmenuitem":
          return On("nestedmenuitem", eh, t).fold(Kp, function (t) {
            return st.some(xb(u(t), n, i, o, r));
          });
        case "togglemenuitem":
          return On("togglemenuitem", oh, t).fold(Kp, function (t) {
            return st.some(wb(u(t), n, i, o));
          });
        case "separator":
          return On("separatormenuitem", Op, t).fold(Kp, function (t) {
            return st.some(bb(t));
          });
        case "fancymenuitem":
          return On("fancymenuitem", th, t).fold(Kp, function (t) {
            return Sb(u(t), e);
          });
        default:
          return nt.console.error("Unknown item in general menu", t), st.none();
      }
    };
    const Cb = function (t, n, e, o, r, i) {
      const u = o === 1;
        const a = !u || qp(t);
      return Pf(
        V(t, function (t) {
          return t.type === "separator"
            ? On("Autocompleter.Separator", Op, t).fold(Kp, function (t) {
                return st.some(bb(t));
              })
            : On("Autocompleter.Item", _p, t).fold(Kp, function (t) {
                return st.some(vb(t, n, u, "normal", e, r, i, a));
              });
        })
      );
    };
    const Ob = function (t, n, e, o, r) {
      const i = qp(n);
        const u = Pf(
          V(n, function (t) {
            const n = function (t) {
              return kb(
                t,
                e,
                o,
                ((n = t), r ? !n.hasOwnProperty("text") : i),
                r
              );
              let n;
            };
            return t.type === "nestedmenuitem" &&
              t.getSubmenuItems().length <= 0
              ? n({...t, disabled: !0})
              : n(t);
          })
        );
      return (r ? Jp : $p)(t, i, u, 1, "normal");
    };
    const _b = function (t) {
      return Hg.singleData(t.value, t);
    };
    const Tb = function (d, c) {
      const e = se(st.none());
        const s = se(!1);
        const m = uu(
          zg.sketch({
            dom: { tag: "div", classes: ["tox-autocompleter"] },
            components: [],
            fireDismissalEventInstead: {},
            inlineBehaviours: Ka([
              $m("dismissAutocompleter", [
                $o(Io(), function () {
                  return f();
                }),
              ]),
            ]),
            lazySink: c.getSink,
          })
        );
        const o = function () {
          return e.get().isSome();
        };
        const l = function () {
          o() && zg.hide(m);
        };
        var f = function () {
          if (o()) {
            const t = e.get().map(function (t) {
              return t.element;
            });
            fp(t.getOr(fe.fromDom(d.selection.getNode()))).each(Br),
              l(),
              e.set(st.none()),
              s.set(!1);
          }
        };
        const r = Lt(function () {
          return Ep(d);
        });
        const g = function (t, n, e, o) {
          t.matchLength = n.text.length;
          let r;
            let i;
            let u;
            let a;
            let c;
            let s;
            let l;
            const f = $(e, function (t) {
              return st.from(t.columns);
            }).getOr(1);
          zg.showAt(
            m,
            {
              anchor: "node",
              root: fe.fromDom(d.getBody()),
              node: st.from(t.element),
            },
            Mg.sketch(
              ((r = $p("autocompleter-value", !0, o, f, "normal")),
              (i = f),
              (u = gb.ContentFocus),
              (a = "normal"),
              (c = (u === gb.ContentFocus ? bd : vd)()),
              (s = mb(i, a)),
              (l = jp(a)),
              {
                dom: r.dom,
                components: r.components,
                items: r.items,
                value: r.value,
                markers: { selectedItem: l.selectedItem, item: l.item },
                movement: s,
                fakeFocus: u === gb.ContentFocus,
                focusManager: c,
                menuBehaviours: uh(
                  i !== "auto"
                    ? []
                    : [
                        rr(function (o, t) {
                          rh(o, 4, l.item).each(function (t) {
                            const n = t.numColumns;
                              const e = t.numRows;
                            Gm.setGridSize(o, e, n);
                          });
                        }),
                      ]
                ),
              })
            )
          ),
            zg.getContent(m).each(Qf.highlightFirst);
        };
        var p = function (t) {
          let n;
          (n = t),
            e
              .get()
              .map(function (t) {
                return hp(d.dom, d.selection.getRng(), t.triggerChar).bind(
                  function (t) {
                    return Cp(d, r, t, n);
                  }
                );
              })
              .getOrThunk(function () {
                return kp(d, r);
              })
              .fold(f, function (a) {
                !(function (t) {
                  if (!o()) {
                    const n = lp(d, t.range);
                    e.set(
                      st.some({
                        triggerChar: t.triggerChar,
                        element: n,
                        matchLength: t.text.length,
                      })
                    ),
                      s.set(!1);
                  }
                })(a.context),
                  a.lookupData.then(function (u) {
                    e.get().map(function (t) {
                      let n;
                        let e;
                        let o;
                        const r = a.context;
                      if (t.triggerChar === r.triggerChar) {
                        const i =
                          ((n = r.triggerChar),
                          (o = $((e = u), function (t) {
                            return st.from(t.columns);
                          }).getOr(1)),
                          U(e, function (i) {
                            const t = i.items;
                            return Cb(
                              t,
                              i.matchText,
                              function (o, r) {
                                const t = d.selection.getRng();
                                hp(d.dom, t, n).fold(
                                  function () {
                                    return nt.console.error(
                                      "Lost context. Cursor probably moved"
                                    );
                                  },
                                  function (t) {
                                    const n = t.range;
                                      const e = {
                                        hide () {
                                          f();
                                        },
                                        reload (t) {
                                          l(), p(t);
                                        },
                                      };
                                    s.set(!0),
                                      i.onAction(e, n, o, r),
                                      s.set(!1);
                                  }
                                );
                              },
                              o,
                              Ap.BUBBLE_TO_SANDBOX,
                              c
                            );
                          }));
                        i.length > 0
                          ? g(t, r, u, i)
                          : (r.text.length - t.matchLength >= 10 ? f : l)();
                      }
                    });
                  });
              });
        };
        const t = {
          onKeypress: ap(function (t) {
            t.which !== 27 && p();
          }, 50),
          cancelIfNecessary: f,
          isMenuOpen () {
            return zg.isOpen(m);
          },
          isActive: o,
          isProcessingAction: s.get,
          getView () {
            return zg.getContent(m);
          },
        };
      vp(t, d);
    };
    const Eb = at(!0);
    const Bb = function (t, n, e) {
      return wu(t, n, Eb, e, !1);
    };
    const Db = function (t, n, e) {
      return wu(t, n, Eb, e, !0);
    };
    const Ab = xu;
    const Mb = function (t, n, e) {
      return ju(t, n, e).isSome();
    };
  function Fb(e, o) {
    let r = null;
    return {
      cancel () {
        r !== null && (nt.clearTimeout(r), (r = null));
      },
      schedule () {
        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
        r = nt.setTimeout(function () {
          e.apply(null, t), (r = null);
        }, o);
      },
    };
  }
  const Ib = function (t) {
      const n = t.raw();
      return n.touches === undefined || n.touches.length !== 1
        ? st.none()
        : st.some(n.touches[0]);
    };
    const Rb = function (e) {
      const u = se(st.none());
        const o = se(!1);
        const r = Fb(function (t) {
          e.triggerEvent(Co(), t), o.set(!0);
        }, 400);
        const i = $t([
          {
            key: $e(),
            value (e) {
              return (
                Ib(e).each(function (t) {
                  r.cancel();
                  const n = { x: t.clientX, y: t.clientY, target: e.target() };
                  r.schedule(e), o.set(!1), u.set(st.some(n));
                }),
                st.none()
              );
            },
          },
          {
            key: Qe(),
            value (t) {
              return (
                r.cancel(),
                Ib(t).each(function (i) {
                  u.get().each(function (t) {
                    let n; let e; let o; let r;
                    (n = i),
                      (e = t),
                      (o = Math.abs(n.clientX - e.x)),
                      (r = Math.abs(n.clientY - e.y)),
                      (o > 5 || r > 5) && u.set(st.none());
                  });
                }),
                st.none()
              );
            },
          },
          {
            key: Ze(),
            value (n) {
              r.cancel();
              return u
                .get()
                .filter(function (t) {
                  return je(t.target, n.target());
                })
                .map(function (t) {
                  return o.get() ? (n.prevent(), !1) : e.triggerEvent(ko(), n);
                });
            },
          },
        ]);
      return {
        fireIfReady (n, t) {
          return Ft(i, t).bind(function (t) {
            return t(n);
          });
        },
      };
    };
    const Vb = function () {
      return ze().browser.isFirefox();
    };
    const Pb = ln([Wn("triggerEvent"), te("stopBackspace", !0)]);
    const Hb = function (n, t) {
      let e;
        let o;
        let r;
        let i;
        const u = Tn("Getting GUI events settings", Pb, t);
        const a = Rb(u);
        const c = V(
          [
            "touchstart",
            "touchmove",
            "touchend",
            "touchcancel",
            "gesturestart",
            "mousedown",
            "mouseup",
            "mouseover",
            "mousemove",
            "mouseout",
            "click",
          ].concat([
            "selectstart",
            "input",
            "contextmenu",
            "change",
            "transitionend",
            "drag",
            "dragstart",
            "dragend",
            "dragenter",
            "dragleave",
            "dragover",
            "drop",
            "keyup",
          ]),
          function (t) {
            return Bb(n, t, function (n) {
              a.fireIfReady(n, t).each(function (t) {
                t && n.kill();
              }),
                u.triggerEvent(t, n) && n.kill();
            });
          }
        );
        const s = se(st.none());
        const l = Bb(n, "paste", function (n) {
          a.fireIfReady(n, "paste").each(function (t) {
            t && n.kill();
          }),
            u.triggerEvent("paste", n) && n.kill(),
            s.set(
              st.some(
                nt.setTimeout(function () {
                  u.triggerEvent(yo(), n);
                }, 0)
              )
            );
        });
        const f = Bb(n, "keydown", function (t) {
          let n;
          u.triggerEvent("keydown", t)
            ? t.kill()
            : !0 !== u.stopBackspace ||
              (n = t).raw().which !== 8 ||
              M(["input", "textarea"], cr(n.target())) ||
              Mb(n.target(), '[contenteditable="true"]') ||
              t.prevent();
        });
        const d =
          ((e = n),
          (o = function (t) {
            u.triggerEvent("focusin", t) && t.kill();
          }),
          Vb() ? Db(e, "focus", o) : Bb(e, "focusin", o));
        const m = se(st.none());
        const g =
          ((r = n),
          (i = function (t) {
            u.triggerEvent("focusout", t) && t.kill(),
              m.set(
                st.some(
                  nt.setTimeout(function () {
                    u.triggerEvent(bo(), t);
                  }, 0)
                )
              );
          }),
          Vb() ? Db(r, "blur", i) : Bb(r, "focusout", i));
      return {
        unbind () {
          rt(c, function (t) {
            t.unbind();
          }),
            f.unbind(),
            d.unbind(),
            g.unbind(),
            l.unbind(),
            s.get().each(nt.clearTimeout),
            m.get().each(nt.clearTimeout);
        },
      };
    };
    const zb = function (t, n) {
      const e = Ft(t, "target")
        .map(function (t) {
          return t();
        })
        .getOr(n);
      return se(e);
    };
    const Nb = Vt([{ stopped: [] }, { resume: ["element"] }, { complete: [] }]);
    const Lb = function (t, o, n, e, r, i) {
      let u;
        let a;
        let c;
        let s;
        const l = t(o, e);
        const f =
          ((u = n),
          (a = r),
          (c = se(!1)),
          (s = se(!1)),
          {
            stop () {
              c.set(!0);
            },
            cut () {
              s.set(!0);
            },
            isStopped: c.get,
            isCut: s.get,
            event: at(u),
            setSource: a.set,
            getSource: a.get,
          });
      return l.fold(
        function () {
          return i.logEventNoHandlers(o, e), Nb.complete();
        },
        function (n) {
          const e = n.descHandler;
          return (
            fi(e)(f),
            f.isStopped()
              ? (i.logEventStopped(o, n.element, e.purpose()), Nb.stopped())
              : f.isCut()
              ? (i.logEventCut(o, n.element, e.purpose()), Nb.complete())
              : br(n.element).fold(
                  function () {
                    return (
                      i.logNoParent(o, n.element, e.purpose()), Nb.complete()
                    );
                  },
                  function (t) {
                    return (
                      i.logEventResponse(o, n.element, e.purpose()),
                      Nb.resume(t)
                    );
                  }
                )
          );
        }
      );
    };
    var jb = function (n, e, o, t, r, i) {
      return Lb(n, e, o, t, r, i).fold(
        function () {
          return !0;
        },
        function (t) {
          return jb(n, e, o, t, r, i);
        },
        function () {
          return !1;
        }
      );
    };
    const Ub = function (t, n, e) {
      let o;
        let r;
        const i =
          ((o = n),
          (r = se(!1)),
          {
            stop () {
              r.set(!0);
            },
            cut: Z,
            isStopped: r.get,
            isCut: at(!1),
            event: at(o),
            setSource: u("Cannot set source of a broadcasted event"),
            getSource: u("Cannot get source of a broadcasted event"),
          });
      return (
        rt(t, function (t) {
          const n = t.descHandler();
          fi(n)(i);
        }),
        i.isStopped()
      );
    };
    const Wb = function (t, n, e, o, r) {
      const i = zb(e, o);
      return jb(t, n, e, o, i, r);
    };
    const Gb = function (t, n) {
      return { element: t, descHandler: n };
    };
    const Xb = function (t, n) {
      return { id: at(t), descHandler: at(n) };
    };
  function Yb() {
    const i = {};
    return {
      registerId (o, r, t) {
        _t(t, function (t, n) {
          const e = i[n] !== undefined ? i[n] : {};
          (e[r] = li(t, o)), (i[n] = e);
        });
      },
      unregisterId (e) {
        _t(i, function (t, n) {
          t.hasOwnProperty(e) && delete t[e];
        });
      },
      filterByType (t) {
        return Ft(i, t)
          .map(function (t) {
            return Dt(t, function (t, n) {
              return Xb(n, t);
            });
          })
          .getOr([]);
      },
      find (t, n, e) {
        const r = Ft(i, n);
        return Ye(
          e,
          function (t) {
            return (
              (e = r),
              Jr((o = t)).fold(
                function () {
                  return st.none();
                },
                function (n) {
                  return e
                    .bind(function (t) {
                      return Ft(t, n);
                    })
                    .map(function (t) {
                      return Gb(o, t);
                    });
                }
              )
            );
            let e; let o;
          },
          t
        );
      },
    };
  }
  function qb() {
    const o = Yb();
      const r = {};
      const i = function (o) {
        const t = o.element();
        return Jr(t).fold(
          function () {
            return (
              (t = "uid-"), (n = o.element()), (e = Wr(Yr + t)), Kr(n, e), e
            );
            let t; let n; let e;
          },
          function (t) {
            return t;
          }
        );
      };
      const u = function (t) {
        Jr(t.element()).each(function (t) {
          delete r[t], o.unregisterId(t);
        });
      };
    return {
      find (t, n, e) {
        return o.find(t, n, e);
      },
      filter (t) {
        return o.filterByType(t);
      },
      register (t) {
        const n = i(t);
        Rt(r, n) &&
          (function (t, n) {
            const e = r[n];
            if (e !== t)
              throw new Error(
                `The tagId "${ 
                  n 
                  }" is already used by: ${ 
                  Nr(e.element()) 
                  }\nCannot use it for: ${ 
                  Nr(t.element()) 
                  }\nThe conflicting element is${ 
                  Ri(e.element()) ? " " : " not " 
                  }already in the DOM`
              );
            u(t);
          })(t, n);
        const e = [t];
        o.registerId(e, n, t.events()), (r[n] = t);
      },
      unregister: u,
      getById (t) {
        return Ft(r, t);
      },
    };
  }
  let Kb;
    let Jb;
    let $b;
    let Qb;
    const Zb = Rf({
      name: "Container",
      factory (t) {
        const n = t.dom;
          const e = n.attributes;
          const o = y(n, ["attributes"]);
        return {
          uid: t.uid,
          dom: {
            tag: "div", attributes: {role: "presentation", ...e},
            ...o
          },
          components: t.components,
          behaviours: Dl(t.containerBehaviours),
          events: t.events,
          domModification: t.domModification,
          eventOrder: t.eventOrder,
        };
      },
      configFields: [
        te("components", []),
        Bl("containerBehaviours", []),
        te("events", {}),
        te("domModification", {}),
        te("eventOrder", {}),
      ],
    });
    const ty = function (e) {
      const o = function (n) {
          return br(e.element()).fold(
            function () {
              return !0;
            },
            function (t) {
              return je(n, t);
            }
          );
        };
        const r = qb();
        const s = function (t, n) {
          return r.find(o, t, n);
        };
        const t = Hb(e.element(), {
          triggerEvent (u, a) {
            return Qu(u, a.target(), function (t) {
              return (
                (n = s),
                (e = u),
                (r = t),
                (i = (o = a).target()),
                Wb(n, e, o, i, r)
              );
              let n; let e; let o; let r; let i;
            });
          },
        });
        var i = {
          debugInfo: at("real"),
          triggerEvent (n, e, o) {
            Qu(n, e, function (t) {
              return Wb(s, n, o, e, t);
            });
          },
          triggerFocus (a, c) {
            Jr(a).fold(
              function () {
                ic(a);
              },
              function (t) {
                Qu(vo(), a, function (t) {
                  let n; let e; let o; let r; let i; let u;
                  return (
                    (n = s),
                    (e = vo()),
                    (o = {
                      originator: at(c),
                      kill: Z,
                      prevent: Z,
                      target: at(a),
                    }),
                    (i = t),
                    (u = zb(o, (r = a))),
                    Lb(n, e, o, r, u, i),
                    !1
                  );
                });
              }
            );
          },
          triggerEscape (t, n) {
            i.triggerEvent("keydown", t.element(), n.event());
          },
          getByUid (t) {
            return g(t);
          },
          getByDom (t) {
            return p(t);
          },
          build: uu,
          addToGui (t) {
            a(t);
          },
          removeFromGui (t) {
            c(t);
          },
          addToWorld (t) {
            n(t);
          },
          removeFromWorld (t) {
            u(t);
          },
          broadcast (t) {
            f(t);
          },
          broadcastOn (t, n) {
            d(t, n);
          },
          broadcastEvent (t, n) {
            m(t, n);
          },
          isConnected: at(!0),
        };
        var n = function (t) {
          t.connect(i),
            fr(t.element()) ||
              (r.register(t),
              rt(t.components(), n),
              i.triggerEvent(To(), t.element(), { target: at(t.element()) }));
        };
        var u = function (t) {
          fr(t.element()) || (rt(t.components(), u), r.unregister(t)),
            t.disconnect();
        };
        var a = function (t) {
          Gs(e, t);
        };
        var c = function (t) {
          qs(t);
        };
        const l = function (e) {
          const t = r.filter(xo());
          rt(t, function (t) {
            const n = t.descHandler();
            fi(n)(e);
          });
        };
        var f = function (t) {
          l({ universal: at(!0), data: at(t) });
        };
        var d = function (t, n) {
          l({ universal: at(!1), channels: at(t), data: at(n) });
        };
        var m = function (t, n) {
          const e = r.filter(t);
          return Ub(e, n);
        };
        var g = function (t) {
          return r.getById(t).fold(function () {
            return ut.error(
              new Error(
                `Could not find component with uid: "${  t  }" in system.`
              )
            );
          }, ut.value);
        };
        var p = function (t) {
          const n = Jr(t).getOr("not found");
          return g(n);
        };
      return (
        n(e),
        {
          root: at(e),
          element: e.element,
          destroy () {
            t.unbind(), Er(e.element());
          },
          add: a,
          remove: c,
          getByUid: g,
          getByDom: p,
          addToWorld: n,
          removeFromWorld: u,
          broadcast: f,
          broadcastOn: d,
          broadcastEvent: m,
        }
      );
    };
    const ny = at([te("prefix", "form-field"), Bl("fieldBehaviours", [Lf, El])]);
    const ey = at([
      af({ schema: [Nn("dom")], name: "label" }),
      af({
        factory: {
          sketch (t) {
            return {
              uid: t.uid,
              dom: {
                tag: "span",
                styles: { display: "none" },
                attributes: { "aria-hidden": "true" },
                innerHtml: t.text,
              },
            };
          },
        },
        schema: [Nn("text")],
        name: "aria-descriptor",
      }),
      rf({
        factory: {
          sketch (t) {
            const n = Kt(t, ["factory"]);
            return t.factory.sketch(n);
          },
        },
        schema: [Nn("factory")],
        name: "field",
      }),
    ]);
    const oy = Vf({
      name: "FormField",
      configFields: ny(),
      partFields: ey(),
      factory (r, t, n, e) {
        const o = Al(r.fieldBehaviours, [
            Lf.config({
              find (t) {
                return yf(t, r, "field");
              },
            }),
            El.config({
              store: {
                mode: "manual",
                getValue (t) {
                  return Lf.getCurrent(t).bind(El.getValue);
                },
                setValue (t, n) {
                  Lf.getCurrent(t).each(function (t) {
                    El.setValue(t, n);
                  });
                },
              },
            }),
          ]);
          const i = qo([
            rr(function (t, n) {
              const o = wf(t, r, ["label", "field", "aria-descriptor"]);
              o.field().each(function (e) {
                const n = Wr(r.prefix);
                o.label().each(function (t) {
                  Fr(t.element(), "for", n), Fr(e.element(), "id", n);
                }),
                  o["aria-descriptor"]().each(function (t) {
                    const n = Wr(r.prefix);
                    Fr(t.element(), "id", n),
                      Fr(e.element(), "aria-describedby", n);
                  });
              });
            }),
          ]);
          const u = {
            getField (t) {
              return yf(t, r, "field");
            },
            getLabel (t) {
              return yf(t, r, "label");
            },
          };
        return {
          uid: r.uid,
          dom: r.dom,
          components: t,
          behaviours: o,
          events: i,
          apis: u,
        };
      },
      apis: {
        getField (t, n) {
          return t.getField(n);
        },
        getLabel (t, n) {
          return t.getLabel(n);
        },
      },
    });
    const ry = /* */ Object.freeze({
      __proto__: null,
      exhibit (t, n) {
        return si({ attributes: $t([{ key: n.tabAttr, value: "true" }]) });
      },
    });
    const iy = [te("tabAttr", "data-alloy-tabstop")];
    const uy = $a({ fields: iy, name: "tabstopping", active: ry });
    const ay = function (t, n, e, o) {
      const r = cy(t, n, e, o);
      return oy.sketch(r);
    };
    var cy = function (t, n, e, o) {
      return {
        dom: sy(e),
        components: t.toArray().concat([n]),
        fieldBehaviours: Ka(o),
      };
    };
    var sy = function (t) {
      return { tag: "div", classes: ["tox-form__group"].concat(t) };
    };
    const ly = function (t, n) {
      return oy
        .parts()
        .label({
          dom: {
            tag: "label",
            classes: ["tox-label"],
            innerHtml: n.translate(t),
          },
        });
    };
    const fy = Wr("form-component-change");
    const dy = Wr("form-close");
    const my = Wr("form-cancel");
    const gy = Wr("form-action");
    const py = Wr("form-submit");
    const hy = Wr("form-block");
    const vy = Wr("form-unblock");
    const by = Wr("form-tabchange");
    const yy = Wr("form-resize");
    const xy = function (a, c) {
      let t;
        let n;
        const e = a.label.map(function (t) {
          return ly(t, c);
        });
        const o = function (o) {
          return function (n, e) {
            ju(e.event().target(), "[data-collection-item-value]").each(
              function (t) {
                o(n, e, t, Ir(t, "data-collection-item-value"));
              }
            );
          };
        };
        const r = function (t, n) {
          const e = V(n, function (t) {
              let n;
                const e = hh.translate(t.text);
                const o =
                  a.columns === 1
                    ? `<div class="tox-collection__item-label">${  e  }</div>`
                    : "";
                const r =
                  `<div class="tox-collection__item-icon">${  t.icon  }</div>`;
                const i = { _: " ", " - ": " ", "-": " " };
                const u = e.replace(/\_| \- |\-/g, function (t) {
                  return i[t];
                });
              return (
                `<div class="tox-collection__item${ 
                c.isReadOnly()
                  ? " tox-collection__item--state-disabled"
                  : "" 
                }" tabindex="-1" data-collection-item-value="${ 
                (n = t.value) === '"' ? "&quot;" : n 
                }" title="${ 
                u 
                }" aria-label="${ 
                u 
                }">${ 
                r 
                }${o 
                }</div>`
              );
            });
            const o = a.columns > 1 && a.columns !== "auto" ? R(e, a.columns) : [e];
            const r = V(o, function (t) {
              return (
                `<div class="tox-collection__group">${  t.join("")  }</div>`
              );
            });
          Ar(t.element(), r.join(""));
        };
        const i = o(function (t, n, e, o) {
          n.stop(), c.isReadOnly() || Uo(t, gy, { name: a.name, value: o });
        });
        const u = [
          $o(
            io(),
            o(function (t, n, e) {
              ic(e);
            })
          ),
          $o(mo(), i),
          $o(ko(), i),
          $o(
            uo(),
            o(function (t, n, e) {
              Lu(t.element(), `.${  zp}`).each(function (t) {
                Ci(t, zp);
              }),
                Si(e, zp);
            })
          ),
          $o(
            ao(),
            o(function (t) {
              Lu(t.element(), `.${  zp}`).each(function (t) {
                Ci(t, zp);
              });
            })
          ),
          ar(
            o(function (t, n, e, o) {
              Uo(t, gy, { name: a.name, value: o });
            })
          ),
        ];
        const s = function (t, n) {
          return V(os(t.element(), ".tox-collection__item"), n);
        };
        const l = oy.parts().field({
          dom: {
            tag: "div",
            classes: ["tox-collection"].concat(
              a.columns !== 1
                ? ["tox-collection--grid"]
                : ["tox-collection--list"]
            ),
          },
          components: [],
          factory: { sketch: ct },
          behaviours: Ka([
            Dh.config({
              disabled: c.isReadOnly,
              onDisabled (t) {
                s(t, function (t) {
                  Si(t, "tox-collection__item--state-disabled"),
                    Fr(t, "aria-disabled", !0);
                });
              },
              onEnabled (t) {
                s(t, function (t) {
                  Ci(t, "tox-collection__item--state-disabled"),
                    Pr(t, "aria-disabled");
                });
              },
            }),
            nv(),
            Jm.config({}),
            El.config({
              store: { mode: "memory", initialValue: [] },
              onSetValue (o, t) {
                r(o, t),
                  a.columns === "auto" &&
                    rh(o, 5, "tox-collection__item").each(function (t) {
                      const n = t.numRows;
                        const e = t.numColumns;
                      Gm.setGridSize(o, n, e);
                    }),
                  jo(o, yy);
              },
            }),
            uy.config({}),
            Gm.config(
              ((t = a.columns),
              (n = "normal"),
              t === 1
                ? {
                    mode: "menu",
                    moveOnTab: !1,
                    selector: ".tox-collection__item",
                  }
                : t === "auto"
                ? {
                    mode: "flatgrid",
                    selector: ".tox-collection__item",
                    initSize: { numColumns: 1, numRows: 1 },
                  }
                : {
                    mode: "matrix",
                    selectors: {
                      row:
                        n === "color"
                          ? ".tox-swatches__row"
                          : ".tox-collection__group",
                      cell: n === "color" ? `.${  Ip}` : `.${  Fp}`,
                    },
                  })
            ),
            $m("collection-events", u),
          ]),
          eventOrder: {
            "alloy.execute": [
              "disabling",
              "alloy.base.behaviour",
              "collection-events",
            ],
          },
        });
      return ay(e, l, ["tox-form__group--collection"], []);
    };
    const wy = at([
      qn("data"),
      te("inputAttributes", {}),
      te("inputStyles", {}),
      te("tag", "input"),
      te("inputClasses", []),
      aa("onSetValue"),
      te("styles", {}),
      te("eventOrder", {}),
      Bl("inputBehaviours", [El, eg]),
      te("selectOnFocus", !0),
    ]);
    const Sy = function (t) {
      return Ka([
        eg.config({
          onFocus: t.selectOnFocus
            ? function (t) {
                const n = t.element();
                  const e = Ki(n);
                n.dom().setSelectionRange(0, e.length);
              }
            : Z,
        }),
      ]);
    };
    const ky = function (t) {
      return {
        tag: t.tag,
        attributes: {type: "text", ...t.inputAttributes},
        styles: t.inputStyles,
        classes: t.inputClasses,
      };
    };
    const Cy = Rf({
      name: "Input",
      configFields: wy(),
      factory (t, n) {
        return {
          uid: t.uid,
          dom: ky(t),
          components: [],
          behaviours: {
            ...Sy((e = t)),
            ...Al(e.inputBehaviours, [
              El.config({
                store: {
                  mode: "manual",
                    ...e.data
                      .map(function (t) {
                        return { initialValue: t };
                      })
                      .getOr({}),
                  getValue (t) {
                      return Ki(t.element());
                    },
                    setValue (t, n) {
                      Ki(t.element()) !== n && Ji(t.element(), n);
                    },
                },
                onSetValue: e.onSetValue,
              }),
            ])
          },
          eventOrder: t.eventOrder,
        };
        let e;
      },
    });
    const Oy = {};
    const _y = { exports: Oy };
  (Kb = undefined),
    (Jb = Oy),
    ($b = _y),
    (Qb = undefined),
    (function (t) {
      if (typeof Jb === "object" && void 0 !== $b) $b.exports = t();
      else if (typeof Kb === "function" && Kb.amd) Kb([], t);
      else {
        (typeof window !== "undefined"
          ? window
          : typeof global !== "undefined"
          ? global
          : typeof self !== "undefined"
          ? self
          : this
        ).EphoxContactWrapper = t();
      }
    })(function () {
      return (function l(i, u, a) {
        function c(n, t) {
          if (!u[n]) {
            if (!i[n]) {
              const e = typeof Qb === "function" && Qb;
              if (!t && e) return e(n, !0);
              if (s) return s(n, !0);
              const o = new Error(`Cannot find module '${  n  }'`);
              throw ((o.code = "MODULE_NOT_FOUND"), o);
            }
            const r = (u[n] = { exports: {} });
            i[n][0].call(
              r.exports,
              function (t) {
                return c(i[n][1][t] || t);
              },
              r,
              r.exports,
              l,
              i,
              u,
              a
            );
          }
          return u[n].exports;
        }
        for (var s = typeof Qb === "function" && Qb, t = 0; t < a.length; t++)
          c(a[t]);
        return c;
      })(
        {
          1: [
            function (t, n, e) {
              let o;
                let r;
                const i = (n.exports = {});
              function u() {
                throw new Error("setTimeout has not been defined");
              }
              function a() {
                throw new Error("clearTimeout has not been defined");
              }
              function c(t) {
                if (o === setTimeout) return setTimeout(t, 0);
                if ((o === u || !o) && setTimeout)
                  return (o = setTimeout), setTimeout(t, 0);
                try {
                  return o(t, 0);
                } catch (n) {
                  try {
                    return o.call(null, t, 0);
                  } catch (n) {
                    return o.call(this, t, 0);
                  }
                }
              }
              !(function () {
                try {
                  o = typeof setTimeout === "function" ? setTimeout : u;
                } catch (t) {
                  o = u;
                }
                try {
                  r = typeof clearTimeout === "function" ? clearTimeout : a;
                } catch (t) {
                  r = a;
                }
              })();
              let s;
                let l = [];
                let f = !1;
                let d = -1;
              function m() {
                f &&
                  s &&
                  ((f = !1),
                  s.length ? (l = s.concat(l)) : (d = -1),
                  l.length && g());
              }
              function g() {
                if (!f) {
                  const t = c(m);
                  f = !0;
                  for (let n = l.length; n; ) {
                    for (s = l, l = []; ++d < n; ) s && s[d].run();
                    (d = -1), (n = l.length);
                  }
                  (s = null),
                    (f = !1),
                    (function e(t) {
                      if (r === clearTimeout) return clearTimeout(t);
                      if ((r === a || !r) && clearTimeout)
                        return (r = clearTimeout), clearTimeout(t);
                      try {
                        return r(t);
                      } catch (n) {
                        try {
                          return r.call(null, t);
                        } catch (n) {
                          return r.call(this, t);
                        }
                      }
                    })(t);
                }
              }
              function p(t, n) {
                (this.fun = t), (this.array = n);
              }
              function h() {}
              (i.nextTick = function (t) {
                const n = new Array(arguments.length - 1);
                if (arguments.length > 1)
                  for (let e = 1; e < arguments.length; e++)
                    n[e - 1] = arguments[e];
                l.push(new p(t, n)), l.length !== 1 || f || c(g);
              }),
                (p.prototype.run = function () {
                  this.fun.apply(null, this.array);
                }),
                (i.title = "browser"),
                (i.browser = !0),
                (i.env = {}),
                (i.argv = []),
                (i.version = ""),
                (i.versions = {}),
                (i.on = h),
                (i.addListener = h),
                (i.once = h),
                (i.off = h),
                (i.removeListener = h),
                (i.removeAllListeners = h),
                (i.emit = h),
                (i.prependListener = h),
                (i.prependOnceListener = h),
                (i.listeners = function (t) {
                  return [];
                }),
                (i.binding = function (t) {
                  throw new Error("process.binding is not supported");
                }),
                (i.cwd = function () {
                  return "/";
                }),
                (i.chdir = function (t) {
                  throw new Error("process.chdir is not supported");
                }),
                (i.umask = function () {
                  return 0;
                });
            },
            {},
          ],
          2: [
            function (t, f, n) {
              (function (n) {
                function o() {}
                function i(t) {
                  if (typeof this !== "object")
                    throw new TypeError("Promises must be constructed via new");
                  if (typeof t !== "function")
                    throw new TypeError("not a function");
                  (this._state = 0),
                    (this._handled = !1),
                    (this._value = undefined),
                    (this._deferreds = []),
                    l(t, this);
                }
                function r(o, r) {
                  for (; o._state === 3; ) o = o._value;
                  o._state !== 0
                    ? ((o._handled = !0),
                      i._immediateFn(function () {
                        const t = o._state === 1 ? r.onFulfilled : r.onRejected;
                        if (t !== null) {
                          let n;
                          try {
                            n = t(o._value);
                          } catch (e) {
                            return void a(r.promise, e);
                          }
                          u(r.promise, n);
                        } else (o._state === 1 ? u : a)(r.promise, o._value);
                      }))
                    : o._deferreds.push(r);
                }
                function u(t, n) {
                  try {
                    if (n === t)
                      throw new TypeError(
                        "A promise cannot be resolved with itself."
                      );
                    if (n && (typeof n === "object" || typeof n === "function")) {
                      const e = n.then;
                      if (n instanceof i)
                        return (t._state = 3), (t._value = n), void c(t);
                      if (typeof e === "function")
                        return void l(
                          (function o(t, n) {
                            return function () {
                              t.apply(n, arguments);
                            };
                          })(e, n),
                          t
                        );
                    }
                    (t._state = 1), (t._value = n), c(t);
                  } catch (r) {
                    a(t, r);
                  }
                }
                function a(t, n) {
                  (t._state = 2), (t._value = n), c(t);
                }
                function c(t) {
                  t._state === 2 &&
                    t._deferreds.length === 0 &&
                    i._immediateFn(function () {
                      t._handled || i._unhandledRejectionFn(t._value);
                    });
                  for (let n = 0, e = t._deferreds.length; n < e; n++)
                    r(t, t._deferreds[n]);
                  t._deferreds = null;
                }
                function s(t, n, e) {
                  (this.onFulfilled = typeof t === "function" ? t : null),
                    (this.onRejected = typeof n === "function" ? n : null),
                    (this.promise = e);
                }
                function l(t, n) {
                  let e = !1;
                  try {
                    t(
                      function (t) {
                        e || ((e = !0), u(n, t));
                      },
                      function (t) {
                        e || ((e = !0), a(n, t));
                      }
                    );
                  } catch (o) {
                    if (e) return;
                    (e = !0), a(n, o);
                  }
                }
                let t; let e;
                (t = this),
                  (e = setTimeout),
                  (i.prototype.catch = function (t) {
                    return this.then(null, t);
                  }),
                  (i.prototype.then = function (t, n) {
                    const e = new this.constructor(o);
                    return r(this, new s(t, n, e)), e;
                  }),
                  (i.all = function (t) {
                    const c = Array.prototype.slice.call(t);
                    return new i(function (r, i) {
                      if (c.length === 0) return r([]);
                      let u = c.length;
                      function a(n, t) {
                        try {
                          if (
                            t &&
                            (typeof t === "object" || typeof t === "function")
                          ) {
                            const e = t.then;
                            if (typeof e === "function")
                              return void e.call(
                                t,
                                function (t) {
                                  a(n, t);
                                },
                                i
                              );
                          }
                          (c[n] = t), --u == 0 && r(c);
                        } catch (o) {
                          i(o);
                        }
                      }
                      for (let t = 0; t < c.length; t++) a(t, c[t]);
                    });
                  }),
                  (i.resolve = function (n) {
                    return n && typeof n === "object" && n.constructor === i
                      ? n
                      : new i(function (t) {
                          t(n);
                        });
                  }),
                  (i.reject = function (e) {
                    return new i(function (t, n) {
                      n(e);
                    });
                  }),
                  (i.race = function (r) {
                    return new i(function (t, n) {
                      for (let e = 0, o = r.length; e < o; e++) r[e].then(t, n);
                    });
                  }),
                  (i._immediateFn =
                    typeof n === "function"
                      ? function (t) {
                          n(t);
                        }
                      : function (t) {
                          e(t, 0);
                        }),
                  (i._unhandledRejectionFn = function (t) {
                    typeof console !== "undefined" &&
                      console &&
                      console.warn("Possible Unhandled Promise Rejection:", t);
                  }),
                  (i._setImmediateFn = function (t) {
                    i._immediateFn = t;
                  }),
                  (i._setUnhandledRejectionFn = function (t) {
                    i._unhandledRejectionFn = t;
                  }),
                  void 0 !== f && f.exports
                    ? (f.exports = i)
                    : t.Promise || (t.Promise = i);
              }.call(this, t("timers").setImmediate));
            },
            { timers: 3 },
          ],
          3: [
            function (c, t, s) {
              (function (t, n) {
                const o = c("process/browser.js").nextTick;
                  const e = Function.prototype.apply;
                  const r = Array.prototype.slice;
                  const i = {};
                  let u = 0;
                function a(t, n) {
                  (this._id = t), (this._clearFn = n);
                }
                (s.setTimeout = function () {
                  return new a(
                    e.call(setTimeout, window, arguments),
                    clearTimeout
                  );
                }),
                  (s.setInterval = function () {
                    return new a(
                      e.call(setInterval, window, arguments),
                      clearInterval
                    );
                  }),
                  (s.clearTimeout = s.clearInterval = function (t) {
                    t.close();
                  }),
                  (a.prototype.unref = a.prototype.ref = function () {}),
                  (a.prototype.close = function () {
                    this._clearFn.call(window, this._id);
                  }),
                  (s.enroll = function (t, n) {
                    clearTimeout(t._idleTimeoutId), (t._idleTimeout = n);
                  }),
                  (s.unenroll = function (t) {
                    clearTimeout(t._idleTimeoutId), (t._idleTimeout = -1);
                  }),
                  (s._unrefActive = s.active = function (t) {
                    clearTimeout(t._idleTimeoutId);
                    const n = t._idleTimeout;
                    n >= 0 &&
                      (t._idleTimeoutId = setTimeout(function () {
                        t._onTimeout && t._onTimeout();
                      }, n));
                  }),
                  (s.setImmediate =
                    typeof t === "function"
                      ? t
                      : function (t) {
                          const n = u++;
                            const e = !(arguments.length < 2) && r.call(arguments, 1);
                          return (
                            (i[n] = !0),
                            o(function () {
                              i[n] &&
                                (e ? t.apply(null, e) : t.call(null),
                                s.clearImmediate(n));
                            }),
                            n
                          );
                        }),
                  (s.clearImmediate =
                    typeof n === "function"
                      ? n
                      : function (t) {
                          delete i[t];
                        });
              }.call(
                this,
                c("timers").setImmediate,
                c("timers").clearImmediate
              ));
            },
            { "process/browser.js": 1, timers: 3 },
          ],
          4: [
            function (t, n, e) {
              const o = t("promise-polyfill");
                const r =
                  typeof window !== "undefined"
                    ? window
                    : Function("return this;")();
              n.exports = { boltExport: r.Promise || o };
            },
            { "promise-polyfill": 2 },
          ],
        },
        {},
        [4]
      )(4);
    });
  let Ty;
    let Ey;
    const By = _y.exports.boltExport;
    var Dy = function (t) {
      let e = st.none();
        let n = [];
        const o = function (t) {
          r() ? u(t) : n.push(t);
        };
        var r = function () {
          return e.isSome();
        };
        const i = function (t) {
          rt(t, u);
        };
        var u = function (n) {
          e.each(function (t) {
            nt.setTimeout(function () {
              n(t);
            }, 0);
          });
        };
      return (
        t(function (t) {
          r() || ((e = st.some(t)), i(n), (n = []));
        }),
        {
          get: o,
          map (e) {
            return Dy(function (n) {
              o(function (t) {
                n(e(t));
              });
            });
          },
          isReady: r,
        }
      );
    };
    const Ay = {
      nu: Dy,
      pure (n) {
        return Dy(function (t) {
          t(n);
        });
      },
    };
    const My = function (t) {
      nt.setTimeout(function () {
        throw t;
      }, 0);
    };
    var Fy = function (e) {
      const t = function (t) {
        e().then(t, My);
      };
      return {
        map (t) {
          return Fy(function () {
            return e().then(t);
          });
        },
        bind (n) {
          return Fy(function () {
            return e().then(function (t) {
              return n(t).toPromise();
            });
          });
        },
        anonBind (t) {
          return Fy(function () {
            return e().then(function () {
              return t.toPromise();
            });
          });
        },
        toLazy () {
          return Ay.nu(t);
        },
        toCached () {
          let t = null;
          return Fy(function () {
            return t === null && (t = e()), t;
          });
        },
        toPromise: e,
        get: t,
      };
    };
    const Iy = function (t) {
      return Fy(function () {
        return new By(t);
      });
    };
    const Ry = function (t) {
      return Fy(function () {
        return By.resolve(t);
      });
    };
    const Vy = ["input", "textarea"];
    const Py = function (t) {
      const n = cr(t);
      return M(Vy, n);
    };
    const Hy = function (t, n) {
      const e = n.getRoot(t).getOr(t.element());
      Ci(e, n.invalidClass),
        n.notify.each(function (n) {
          Py(t.element()) && Fr(t.element(), "aria-invalid", !1),
            n.getContainer(t).each(function (t) {
              Ar(t, n.validHtml);
            }),
            n.onValid(t);
        });
    };
    const zy = function (n, t, e, o) {
      const r = t.getRoot(n).getOr(n.element());
      Si(r, t.invalidClass),
        t.notify.each(function (t) {
          Py(n.element()) && Fr(n.element(), "aria-invalid", !0),
            t.getContainer(n).each(function (t) {
              Ar(t, o);
            }),
            t.onInvalid(n, o);
        });
    };
    const Ny = function (n, t, e) {
      return t.validator.fold(
        function () {
          return Ry(ut.value(!0));
        },
        function (t) {
          return t.validate(n);
        }
      );
    };
    const Ly = function (n, e, t) {
      return (
        e.notify.each(function (t) {
          t.onValidate(n);
        }),
        Ny(n, e).map(function (t) {
          return n.getSystem().isConnected()
            ? t.fold(
                function (t) {
                  return zy(n, e, 0, t), ut.error(t);
                },
                function (t) {
                  return Hy(n, e), ut.value(t);
                }
              )
            : ut.error("No longer in system");
        })
      );
    };
    const jy = /* */ Object.freeze({
      __proto__: null,
      markValid: Hy,
      markInvalid: zy,
      query: Ny,
      run: Ly,
      isInvalid (t, n) {
        const e = n.getRoot(t).getOr(t.element());
        return Oi(e, n.invalidClass);
      },
    });
    const Uy = /* */ Object.freeze({
      __proto__: null,
      events (n, t) {
        return n.validator
          .map(function (t) {
            return qo(
              [
                $o(t.onEvent, function (t) {
                  Ly(t, n).get(ct);
                }),
              ].concat(
                t.validateOnLoad
                  ? [
                      rr(function (t) {
                        Ly(t, n).get(Z);
                      }),
                    ]
                  : []
              )
            );
          })
          .getOr({});
      },
    });
    const Wy = [
      Nn("invalidClass"),
      te("getRoot", st.none),
      Zn("notify", [
        te("aria", "alert"),
        te("getContainer", st.none),
        te("validHtml", ""),
        aa("onValid"),
        aa("onInvalid"),
        aa("onValidate"),
      ]),
      Zn("validator", [
        Nn("validate"),
        te("onEvent", "input"),
        te("validateOnLoad", !0),
      ]),
    ];
    const Gy = $a({
      fields: Wy,
      name: "invalidating",
      active: Uy,
      apis: jy,
      extra: {
        validation (e) {
          return function (t) {
            const n = El.getValue(t);
            return Ry(e(n));
          };
        },
      },
    });
    const Xy = /* */ Object.freeze({
      __proto__: null,
      getCoupled (t, n, e, o) {
        return e.getOrCreate(t, n, o);
      },
    });
    const Yy = [Ln("others", Cn(ut.value, An()))];
    const qy = $a({
      fields: Yy,
      name: "coupling",
      apis: Xy,
      state: /* */ Object.freeze({
        __proto__: null,
        init () {
          const i = {};
            const t = at({});
          return ai({
            readState: t,
            getOrCreate (e, o, r) {
              const t = Ct(o.others);
              if (t)
                return Ft(i, r).getOrThunk(function () {
                  const t = Ft(o.others, r).getOrDie(
                      `No information found for coupled component: ${  r}`
                    )(e);
                    const n = e.getSystem().build(t);
                  return (i[r] = n);
                });
              throw new Error(
                `Cannot find coupled component: ${ 
                  r 
                  }. Known coupled components: ${ 
                  JSON.stringify(t, null, 2)}`
              );
            },
          });
        },
      }),
    });
    const Ky = at("sink");
    const Jy = at(
      af({
        name: Ky(),
        overrides: at({
          dom: { tag: "div" },
          behaviours: Ka([Ns.config({ useFixed: i })]),
          events: qo([er(co()), er(no()), er(mo())]),
        }),
      })
    );
  ((Ey = Ty = Ty || {})[(Ey.HighlightFirst = 0)] = "HighlightFirst"),
    (Ey[(Ey.HighlightNone = 1)] = "HighlightNone");
  const $y = function (t, n) {
      const e = t.getHotspot(n).getOr(n);
        const o = t.getAnchorOverrides();
      return t.layouts.fold(
        function () {
          return { anchor: "hotspot", hotspot: e, overrides: o };
        },
        function (t) {
          return { anchor: "hotspot", hotspot: e, overrides: o, layouts: t };
        }
      );
    };
    const Qy = function (t, n, e, o, r, i, u) {
      let a;
        let c;
        let s;
        let l;
        let f;
        let d;
        let m;
        let g;
        let p;
        let h;
        const v = $y(t, e);
      return ((c = v),
      (l = o),
      (f = r),
      (d = u),
      (m = n),
      (g = s = e),
      (p = (0, (a = t).fetch)(g).map(m)),
      (h = ex(s, a)),
      p.map(function (t) {
        return t.bind(function (t) {
          return st.from(
            Hg.sketch(
              {...f.menu(), uid: $r(""),
                data: t,
                highlightImmediately: d === Ty.HighlightFirst,
                onOpenMenu (t, n) {
                  const e = h().getOrDie();
                  Ns.position(e, c, n), cl.decloak(l);
                },
                onOpenSubmenu (t, n, e) {
                  const o = h().getOrDie();
                  Ns.position(o, { anchor: "submenu", item: n }, e),
                    cl.decloak(l);
                },
                onRepositionMenu (t, n, e) {
                  const o = h().getOrDie();
                  Ns.position(o, c, n),
                    rt(e, function (t) {
                      Ns.position(
                        o,
                        { anchor: "submenu", item: t.triggeringItem },
                        t.triggeredMenu
                      );
                    });
                },
                onEscape () {
                  return eg.focus(s), cl.close(l), st.some(!0);
                },}
            )
          );
        });
      })).map(function (t) {
        return (
          t.fold(
            function () {
              cl.isOpen(o) && cl.close(o);
            },
            function (t) {
              cl.cloak(o), cl.open(o, t), i(o);
            }
          ),
          o
        );
      });
    };
    const Zy = function (t, n, e, o, r, i, u) {
      return cl.close(o), Ry(o);
    };
    const tx = function (t, n, e, o, r, i) {
      const u = qy.getCoupled(e, "sandbox");
      return (cl.isOpen(u) ? Zy : Qy)(t, n, e, u, o, r, i);
    };
    const nx = function (t, n, e) {
      let o;
        let r;
        const i = Lf.getCurrent(n).getOr(n);
        const u = bu(t.element());
      e
        ? Ni(i.element(), "min-width", `${u  }px`)
        : ((o = i.element()), (r = u), vu.set(o, r));
    };
    var ex = function (n, t) {
      return n
        .getSystem()
        .getByUid(`${t.uid  }-${  Ky()}`)
        .map(function (t) {
          return function () {
            return ut.value(t);
          };
        })
        .getOrThunk(function () {
          return t.lazySink.fold(
            function () {
              return function () {
                return ut.error(
                  new Error(
                    "No internal sink is specified, nor could an external sink be found"
                  )
                );
              };
            },
            function (t) {
              return function () {
                return t(n);
              };
            }
          );
        });
    };
    const ox = function (t) {
      cl.getState(t).each(function (t) {
        Hg.repositionMenus(t);
      });
    };
    const rx = function (o, r, i) {
      const u = Uu();
        const t = ex(r, o);
      return {
        dom: {
          tag: "div",
          classes: o.sandboxClasses,
          attributes: { id: u.id, role: "listbox" },
        },
        behaviours: Fl(o.sandboxBehaviours, [
          El.config({ store: { mode: "memory", initialValue: r } }),
          cl.config({
            onOpen (t, n) {
              const e = $y(o, r);
              u.link(r.element()),
                o.matchWidth && nx(e.hotspot, n, o.useMinWidth),
                o.onOpen(e, t, n),
                i !== undefined && i.onOpen !== undefined && i.onOpen(t, n);
            },
            onClose (t, n) {
              u.unlink(r.element()),
                i !== undefined && i.onClose !== undefined && i.onClose(t, n);
            },
            isPartOf (t, n, e) {
              return Gu(n, e) || Gu(r, e);
            },
            getAttachPoint () {
              return t().getOrDie();
            },
          }),
          Lf.config({
            find (t) {
              return cl.getState(t).bind(function (t) {
                return Lf.getCurrent(t);
              });
            },
          }),
          oc.config({
            channels: {
              ...ml({ isExtraPart: c }),
              ...pl({ doReposition: ox })
            },
          }),
        ]),
      };
    };
    const ix = function (t) {
      const n = qy.getCoupled(t, "sandbox");
      ox(n);
    };
    const ux = function () {
      return [
        te("sandboxClasses", []),
        Ml("sandboxBehaviours", [Lf, oc, cl, El]),
      ];
    };
    const ax = at(
      [
        Nn("dom"),
        Nn("fetch"),
        aa("onOpen"),
        ca("onExecute"),
        te("getHotspot", st.some),
        te("getAnchorOverrides", at({})),
        Pc(),
        Bl("dropdownBehaviours", [gg, qy, Gm, eg]),
        Nn("toggleClass"),
        te("eventOrder", {}),
        qn("lazySink"),
        te("matchWidth", !1),
        te("useMinWidth", !1),
        qn("role"),
      ].concat(ux())
    );
    const cx = at([
      uf({
        schema: [ra()],
        name: "menu",
        defaults (t) {
          return { onExecute: t.onExecute };
        },
      }),
      Jy(),
    ]);
    var sx = Vf({
      name: "Dropdown",
      configFields: ax(),
      partFields: cx(),
      factory (n, t, e, o) {
        let r;
          let i;
          const u = function (t) {
            cl.getState(t).each(function (t) {
              Hg.highlightPrimary(t);
            });
          };
          const a = {
            expand (t) {
              gg.isOn(t) ||
                tx(
                  n,
                  function (t) {
                    return t;
                  },
                  t,
                  o,
                  Z,
                  Ty.HighlightNone
                ).get(Z);
            },
            open (t) {
              gg.isOn(t) ||
                tx(
                  n,
                  function (t) {
                    return t;
                  },
                  t,
                  o,
                  Z,
                  Ty.HighlightFirst
                ).get(Z);
            },
            isOpen: gg.isOn,
            close (t) {
              gg.isOn(t) &&
                tx(
                  n,
                  function (t) {
                    return t;
                  },
                  t,
                  o,
                  Z,
                  Ty.HighlightFirst
                ).get(Z);
            },
            repositionMenus (t) {
              gg.isOn(t) && ix(t);
            },
          };
          const c = function (t, n) {
            return Wo(t), st.some(!0);
          };
        return {
          uid: n.uid,
          dom: n.dom,
          components: t,
          behaviours: Al(n.dropdownBehaviours, [
            gg.config({
              toggleClass: n.toggleClass,
              aria: { mode: "expanded" },
            }),
            qy.config({
              others: {
                sandbox (t) {
                  return rx(n, t, {
                    onOpen () {
                      gg.on(t);
                    },
                    onClose () {
                      gg.off(t);
                    },
                  });
                },
              },
            }),
            Gm.config({
              mode: "special",
              onSpace: c,
              onEnter: c,
              onDown (t, n) {
                if (sx.isOpen(t)) {
                  const e = qy.getCoupled(t, "sandbox");
                  u(e);
                } else sx.open(t);
                return st.some(!0);
              },
              onEscape (t, n) {
                return sx.isOpen(t) ? (sx.close(t), st.some(!0)) : st.none();
              },
            }),
            eg.config({}),
          ]),
          events: hg(
            st.some(function (t) {
              tx(
                n,
                function (t) {
                  return t;
                },
                t,
                o,
                u,
                Ty.HighlightFirst
              ).get(Z);
            })
          ),
          eventOrder: {
            ...n.eventOrder,
            ...(((r = {})[wo()] = [
              "disabling",
              "toggling",
              "alloy.base.behaviour",
            ]),
            r)
          },
          apis: a,
          domModification: {
            attributes: {
              "aria-haspopup": "true",
                ...n.role.fold(
                  function () {
                    return {};
                  },
                  function (t) {
                    return { role: t };
                  }
                ),
              ...(n.dom.tag === "button"
                ? {
                    type:
                      ((i = "type"),
                      Ft(n.dom, "attributes")
                        .bind(function (t) {
                          return Ft(t, i);
                        })
                        .getOr("button")),
                  }
                : {})
            },
          },
        };
      },
      apis: {
        open (t, n) {
          return t.open(n);
        },
        expand (t, n) {
          return t.expand(n);
        },
        close (t, n) {
          return t.close(n);
        },
        isOpen (t, n) {
          return t.isOpen(n);
        },
        repositionMenus (t, n) {
          return t.repositionMenus(n);
        },
      },
    });
    const lx = $a({
      fields: [],
      name: "unselecting",
      active: /* */ Object.freeze({
        __proto__: null,
        events () {
          return qo([Ko(po(), at(!0))]);
        },
        exhibit () {
          return si({
            styles: {
              "-webkit-user-select": "none",
              "user-select": "none",
              "-ms-user-select": "none",
              "-moz-user-select": "-moz-none",
            },
            attributes: { unselectable: "on" },
          });
        },
      }),
    });
    const fx = Wr("color-input-change");
    const dx = Wr("color-swatch-change");
    const mx = Wr("color-picker-cancel");
    const gx = function (e, n, o) {
      let r;
        let i;
        const t = oy.parts().field({
          factory: Cy,
          inputClasses: ["tox-textfield"],
          onSetValue (t) {
            return Gy.run(t).get(function () {});
          },
          inputBehaviours: Ka([
            Dh.config({ disabled: n.providers.isReadOnly }),
            nv(),
            uy.config({}),
            Gy.config({
              invalidClass: "tox-textbox-field-invalid",
              getRoot (t) {
                return br(t.element());
              },
              notify: {
                onValid (t) {
                  const n = El.getValue(t);
                  Uo(t, fx, { color: n });
                },
              },
              validator: {
                validateOnLoad: !1,
                validate (t) {
                  const n = El.getValue(t);
                  if (n.length === 0) return Ry(ut.value(!0));
                  const e = fe.fromTag("span");
                  Ni(e, "background-color", n);
                  const o = Gi(e, "background-color").fold(
                    function () {
                      return ut.error("blah");
                    },
                    function (t) {
                      return ut.value(n);
                    }
                  );
                  return Ry(o);
                },
              },
            }),
          ]),
          selectOnFocus: !1,
        });
        const u = e.label.map(function (t) {
          return ly(t, n.providers);
        });
        const a = function (t, n) {
          Uo(t, dx, { value: n });
        };
        var c = Zg(
          ((r = {
            dom: {
              tag: "span",
              attributes: {
                "aria-label": n.providers.translate("Color swatch"),
              },
            },
            layouts: {
              onRtl () {
                return [Ma, Aa, Va];
              },
              onLtr () {
                return [Aa, Ma, Va];
              },
            },
            components: [],
            fetch: ub(o.getColors(), o.hasCustomColors()),
            columns: o.getColorCols(),
            presets: "color",
            onItemAction (t, e) {
              c.getOpt(t).each(function (n) {
                e === "custom"
                  ? o.colorPicker(function (t) {
                      t.fold(
                        function () {
                          return jo(n, mx);
                        },
                        function (t) {
                          a(n, t), nb(t);
                        }
                      );
                    }, "#ffffff")
                  : a(n, e === "remove" ? "" : e);
              });
            },
          }),
          (i = n),
          sx.sketch({
            dom: r.dom,
            components: r.components,
            toggleClass: "mce-active",
            dropdownBehaviours: Ka([
              ov(i.providers.isReadOnly),
              nv(),
              lx.config({}),
              uy.config({}),
            ]),
            layouts: r.layouts,
            sandboxClasses: ["tox-dialog__popups"],
            lazySink: i.getSink,
            fetch (n) {
              return Iy(function (t) {
                return r.fetch(t);
              }).map(function (t) {
                return st.from(
                  _b(
                    zt(
                      fb(
                        Wr("menu-value"),
                        t,
                        function (t) {
                          r.onItemAction(n, t);
                        },
                        r.columns,
                        r.presets,
                        Ap.CLOSE_ON_EXECUTE,
                        function () {
                          return !1;
                        },
                        i.providers
                      ),
                      { movement: mb(r.columns, r.presets) }
                    )
                  )
                );
              });
            },
            parts: { menu: Wp(0, 0, r.presets) },
          }))
        );
      return oy.sketch({
        dom: { tag: "div", classes: ["tox-form__group"] },
        components: u
          .toArray()
          .concat([
            {
              dom: { tag: "div", classes: ["tox-color-input"] },
              components: [t, c.asSpec()],
            },
          ]),
        fieldBehaviours: Ka([
          $m("form-field-events", [
            $o(fx, function (t, n) {
              c.getOpt(t).each(function (t) {
                Ni(t.element(), "background-color", n.event().color());
              }),
                Uo(t, fy, { name: e.name });
            }),
            $o(dx, function (n, e) {
              oy.getField(n).each(function (t) {
                El.setValue(t, e.event().value()),
                  Lf.getCurrent(n).each(eg.focus);
              });
            }),
            $o(mx, function (n, t) {
              oy.getField(n).each(function (t) {
                Lf.getCurrent(n).each(eg.focus);
              });
            }),
          ]),
        ]),
      });
    };
    const px = function (t, n, e) {
      return { hue: t, saturation: n, value: e };
    };
    const hx = Wr("rgb-hex-update");
    const vx = Wr("slider-update");
    const bx = Wr("palette-update");
    const yx = af({ schema: [Nn("dom")], name: "label" });
    const xx = function (n) {
      return af({
        name: `${n  }-edge`,
        overrides (t) {
          return t.model.manager.edgeActions[n].fold(
            function () {
              return {};
            },
            function (o) {
              return {
                events: qo([
                  Qo(
                    $e(),
                    function (t, n, e) {
                      return o(t, e);
                    },
                    [t]
                  ),
                  Qo(
                    no(),
                    function (t, n, e) {
                      return o(t, e);
                    },
                    [t]
                  ),
                  Qo(
                    eo(),
                    function (t, n, e) {
                      e.mouseIsDown.get() && o(t, e);
                    },
                    [t]
                  ),
                ]),
              };
            }
          );
        },
      });
    };
    const wx = xx("top-left");
    const Sx = xx("top");
    const kx = xx("top-right");
    const Cx = xx("right");
    const Ox = xx("bottom-right");
    const _x = xx("bottom");
    const Tx = xx("bottom-left");
    const Ex = [
      yx,
      xx("left"),
      Cx,
      Sx,
      _x,
      wx,
      kx,
      Tx,
      Ox,
      rf({
        name: "thumb",
        defaults: at({ dom: { styles: { position: "absolute" } } }),
        overrides (t) {
          return {
            events: qo([
              tr($e(), t, "spectrum"),
              tr(Qe(), t, "spectrum"),
              tr(Ze(), t, "spectrum"),
              tr(no(), t, "spectrum"),
              tr(eo(), t, "spectrum"),
              tr(ro(), t, "spectrum"),
            ]),
          };
        },
      }),
      rf({
        schema: [
          ce("mouseIsDown", function () {
            return se(!1);
          }),
        ],
        name: "spectrum",
        overrides (e) {
          const o = e.model.manager;
            const r = function (n, t) {
              return o.getValueFromEvent(t).map(function (t) {
                return o.setValueFrom(n, e, t);
              });
            };
          return {
            behaviours: Ka([
              Gm.config({
                mode: "special",
                onLeft (t) {
                  return o.onLeft(t, e);
                },
                onRight (t) {
                  return o.onRight(t, e);
                },
                onUp (t) {
                  return o.onUp(t, e);
                },
                onDown (t) {
                  return o.onDown(t, e);
                },
              }),
              eg.config({}),
            ]),
            events: qo([
              $o($e(), r),
              $o(Qe(), r),
              $o(no(), r),
              $o(eo(), function (t, n) {
                e.mouseIsDown.get() && r(t, n);
              }),
            ]),
          };
        },
      }),
    ];
    const Bx = at("slider.change.value");
    const Dx = function (t) {
      const n = t.event().raw();
      if (n.type.indexOf("touch") !== -1) {
        return n.touches !== undefined && n.touches.length === 1
          ? st.some(n.touches[0]).map(function (t) {
              return mu(t.clientX, t.clientY);
            })
          : st.none();
      }
      return n.clientX !== undefined
        ? st.some(n).map(function (t) {
            return mu(t.clientX, t.clientY);
          })
        : st.none();
    };
    const Ax = function (t) {
      return t.model.minX;
    };
    const Mx = function (t) {
      return t.model.minY;
    };
    const Fx = function (t) {
      return t.model.minX - 1;
    };
    const Ix = function (t) {
      return t.model.minY - 1;
    };
    const Rx = function (t) {
      return t.model.maxX;
    };
    const Vx = function (t) {
      return t.model.maxY;
    };
    const Px = function (t) {
      return t.model.maxX + 1;
    };
    const Hx = function (t) {
      return t.model.maxY + 1;
    };
    const zx = function (t, n, e) {
      return n(t) - e(t);
    };
    const Nx = function (t) {
      return zx(t, Rx, Ax);
    };
    const Lx = function (t) {
      return zx(t, Vx, Mx);
    };
    const jx = function (t) {
      return Nx(t) / 2;
    };
    const Ux = function (t) {
      return Lx(t) / 2;
    };
    const Wx = function (t) {
      return t.stepSize;
    };
    const Gx = function (t) {
      return t.snapToGrid;
    };
    const Xx = function (t) {
      return t.snapStart;
    };
    const Yx = function (t) {
      return t.rounded;
    };
    const qx = function (t, n) {
      return t[`${n  }-edge`] !== undefined;
    };
    const Kx = function (t) {
      return qx(t, "left");
    };
    const Jx = function (t) {
      return qx(t, "right");
    };
    const $x = function (t) {
      return qx(t, "top");
    };
    const Qx = function (t) {
      return qx(t, "bottom");
    };
    const Zx = function (t) {
      return t.model.value.get();
    };
    const tw = function (t) {
      return { x: at(t) };
    };
    const nw = function (t) {
      return { y: at(t) };
    };
    const ew = function (t, n) {
      return { x: at(t), y: at(n) };
    };
    const ow = function (t, n) {
      Uo(t, Bx(), { value: n });
    };
    const rw = function (t, n, e, o) {
      return t < n ? t : e < t ? e : t === n ? n - 1 : Math.max(n, t - o);
    };
    const iw = function (t, n, e, o) {
      return e < t ? t : t < n ? n : t === e ? e + 1 : Math.min(e, t + o);
    };
    const uw = function (t, n, e) {
      return Math.max(n, Math.min(e, t));
    };
    const aw = function (t) {
      const n = t.min;
        const e = t.max;
        const o = t.range;
        const r = t.value;
        const i = t.step;
        const u = t.snap;
        const a = t.snapStart;
        const c = t.rounded;
        const s = t.hasMinEdge;
        const l = t.hasMaxEdge;
        const f = t.minBound;
        const d = t.maxBound;
        const m = t.screenRange;
        const g = s ? n - 1 : n;
        const p = l ? e + 1 : e;
      if (r < f) return g;
      if (d < r) return p;
      let h;
        let v;
        let b;
        let y;
        let x;
        let w;
        let S;
        const k = ((x = r), (w = f), (S = d), Math.min(S, Math.max(x, w)) - w);
        const C = uw((k / m) * o + n, g, p);
      return u && n <= C && C <= e
        ? ((h = C),
          (v = n),
          (b = e),
          (y = i),
          a.fold(
            function () {
              const t = h - v;
                const n = Math.round(t / y) * y;
              return uw(v + n, v - 1, b + 1);
            },
            function (t) {
              const n = (h - t) % y;
                const e = Math.round(n / y);
                const o = Math.floor((h - t) / y);
                const r = Math.floor((b - t) / y);
                const i = t + Math.min(r, o + e) * y;
              return Math.max(t, i);
            }
          ))
        : c
        ? Math.round(C)
        : C;
    };
    const cw = function (t) {
      const n = t.min;
        const e = t.max;
        const o = t.range;
        const r = t.value;
        const i = t.hasMinEdge;
        const u = t.hasMaxEdge;
        const a = t.maxBound;
        const c = t.maxOffset;
        const s = t.centerMinEdge;
        const l = t.centerMaxEdge;
      return r < n ? (i ? 0 : s) : e < r ? (u ? a : l) : ((r - n) / o) * c;
    };
    const sw = "left";
    const lw = function (t) {
      return t.element().dom().getBoundingClientRect();
    };
    const fw = function (t, n) {
      return t[n];
    };
    const dw = function (t) {
      const n = lw(t);
      return fw(n, sw);
    };
    const mw = function (t) {
      const n = lw(t);
      return fw(n, "right");
    };
    const gw = function (t) {
      const n = lw(t);
      return fw(n, "top");
    };
    const pw = function (t) {
      const n = lw(t);
      return fw(n, "bottom");
    };
    const hw = function (t) {
      const n = lw(t);
      return fw(n, "width");
    };
    const vw = function (t) {
      const n = lw(t);
      return fw(n, "height");
    };
    const bw = function (t, n, e) {
      return (t + n) / 2 - e;
    };
    const yw = function (t, n) {
      const e = lw(t);
        const o = lw(n);
        const r = fw(e, sw);
        const i = fw(e, "right");
        const u = fw(o, sw);
      return bw(r, i, u);
    };
    const xw = function (t, n) {
      const e = lw(t);
        const o = lw(n);
        const r = fw(e, "top");
        const i = fw(e, "bottom");
        const u = fw(o, "top");
      return bw(r, i, u);
    };
    const ww = function (t, n) {
      Uo(t, Bx(), { value: n });
    };
    const Sw = function (t) {
      return { x: at(t) };
    };
    const kw = function (t, n, e) {
      const o = {
        min: Ax(n),
        max: Rx(n),
        range: Nx(n),
        value: e,
        step: Wx(n),
        snap: Gx(n),
        snapStart: Xx(n),
        rounded: Yx(n),
        hasMinEdge: Kx(n),
        hasMaxEdge: Jx(n),
        minBound: dw(t),
        maxBound: mw(t),
        screenRange: hw(t),
      };
      return aw(o);
    };
    const Cw = function (i) {
      return function (t, n) {
        return (
          (e = t),
          (r = (i > 0 ? iw : rw)(Zx((o = n)).x(), Ax(o), Rx(o), Wx(o))),
          ww(e, Sw(r)),
          st.some(r).map(function () {
            return !0;
          })
        );
        let e; let o; let r;
      };
    };
    const Ow = function (t, n, e, o, r, i) {
      let u;
        let a;
        let c;
        let s;
        let l;
        let f;
        let d;
        let m;
        let g;
        const p =
          ((a = i),
          (c = e),
          (s = o),
          (l = r),
          (f = hw((u = n))),
          (d = s
            .bind(function (t) {
              return st.some(yw(t, u));
            })
            .getOr(0)),
          (m = l
            .bind(function (t) {
              return st.some(yw(t, u));
            })
            .getOr(f)),
          (g = {
            min: Ax(a),
            max: Rx(a),
            range: Nx(a),
            value: c,
            hasMinEdge: Kx(a),
            hasMaxEdge: Jx(a),
            minBound: dw(u),
            minOffset: 0,
            maxBound: mw(u),
            maxOffset: f,
            centerMinEdge: d,
            centerMaxEdge: m,
          }),
          cw(g));
      return dw(n) - dw(t) + p;
    };
    const _w = Cw(-1);
    const Tw = Cw(1);
    const Ew = st.none;
    const Bw = st.none;
    const Dw = {
      "top-left": st.none(),
      top: st.none(),
      "top-right": st.none(),
      right: st.some(function (t, n) {
        ow(t, tw(Px(n)));
      }),
      "bottom-right": st.none(),
      bottom: st.none(),
      "bottom-left": st.none(),
      left: st.some(function (t, n) {
        ow(t, tw(Fx(n)));
      }),
    };
    const Aw = /* */ Object.freeze({
      __proto__: null,
      setValueFrom (t, n, e) {
        const o = kw(t, n, e);
          const r = Sw(o);
        return ww(t, r), o;
      },
      setToMin (t, n) {
        const e = Ax(n);
        ww(t, Sw(e));
      },
      setToMax (t, n) {
        const e = Rx(n);
        ww(t, Sw(e));
      },
      findValueOfOffset: kw,
      getValueFromEvent (t) {
        return Dx(t).map(function (t) {
          return t.left();
        });
      },
      findPositionOfValue: Ow,
      setPositionFromValue (t, n, e, o) {
        const r = Zx(e);
          const i = Ow(
            t,
            o.getSpectrum(t),
            r.x(),
            o.getLeftEdge(t),
            o.getRightEdge(t),
            e
          );
          const u = bu(n.element()) / 2;
        Ni(n.element(), "left", `${i - u  }px`);
      },
      onLeft: _w,
      onRight: Tw,
      onUp: Ew,
      onDown: Bw,
      edgeActions: Dw,
    });
    const Mw = function (t, n) {
      Uo(t, Bx(), { value: n });
    };
    const Fw = function (t) {
      return { y: at(t) };
    };
    const Iw = function (t, n, e) {
      const o = {
        min: Mx(n),
        max: Vx(n),
        range: Lx(n),
        value: e,
        step: Wx(n),
        snap: Gx(n),
        snapStart: Xx(n),
        rounded: Yx(n),
        hasMinEdge: $x(n),
        hasMaxEdge: Qx(n),
        minBound: gw(t),
        maxBound: pw(t),
        screenRange: vw(t),
      };
      return aw(o);
    };
    const Rw = function (i) {
      return function (t, n) {
        return (
          (e = t),
          (r = (i > 0 ? iw : rw)(Zx((o = n)).y(), Mx(o), Vx(o), Wx(o))),
          Mw(e, Fw(r)),
          st.some(r).map(function () {
            return !0;
          })
        );
        let e; let o; let r;
      };
    };
    const Vw = function (t, n, e, o, r, i) {
      let u;
        let a;
        let c;
        let s;
        let l;
        let f;
        let d;
        let m;
        let g;
        const p =
          ((a = i),
          (c = e),
          (s = o),
          (l = r),
          (f = vw((u = n))),
          (d = s
            .bind(function (t) {
              return st.some(xw(t, u));
            })
            .getOr(0)),
          (m = l
            .bind(function (t) {
              return st.some(xw(t, u));
            })
            .getOr(f)),
          (g = {
            min: Mx(a),
            max: Vx(a),
            range: Lx(a),
            value: c,
            hasMinEdge: $x(a),
            hasMaxEdge: Qx(a),
            minBound: gw(u),
            minOffset: 0,
            maxBound: pw(u),
            maxOffset: f,
            centerMinEdge: d,
            centerMaxEdge: m,
          }),
          cw(g));
      return gw(n) - gw(t) + p;
    };
    const Pw = st.none;
    const Hw = st.none;
    const zw = Rw(-1);
    const Nw = Rw(1);
    const Lw = {
      "top-left": st.none(),
      top: st.some(function (t, n) {
        ow(t, nw(Ix(n)));
      }),
      "top-right": st.none(),
      right: st.none(),
      "bottom-right": st.none(),
      bottom: st.some(function (t, n) {
        ow(t, nw(Hx(n)));
      }),
      "bottom-left": st.none(),
      left: st.none(),
    };
    const jw = /* */ Object.freeze({
      __proto__: null,
      setValueFrom (t, n, e) {
        const o = Iw(t, n, e);
          const r = Fw(o);
        return Mw(t, r), o;
      },
      setToMin (t, n) {
        const e = Mx(n);
        Mw(t, Fw(e));
      },
      setToMax (t, n) {
        const e = Vx(n);
        Mw(t, Fw(e));
      },
      findValueOfOffset: Iw,
      getValueFromEvent (t) {
        return Dx(t).map(function (t) {
          return t.top();
        });
      },
      findPositionOfValue: Vw,
      setPositionFromValue (t, n, e, o) {
        const r = Zx(e);
          const i = Vw(
            t,
            o.getSpectrum(t),
            r.y(),
            o.getTopEdge(t),
            o.getBottomEdge(t),
            e
          );
          const u = lu(n.element()) / 2;
        Ni(n.element(), "top", `${i - u  }px`);
      },
      onLeft: Pw,
      onRight: Hw,
      onUp: zw,
      onDown: Nw,
      edgeActions: Lw,
    });
    const Uw = function (t, n) {
      Uo(t, Bx(), { value: n });
    };
    const Ww = function (t, n) {
      return { x: at(t), y: at(n) };
    };
    const Gw = function (c, s) {
      return function (t, n) {
        return (
          (o = t),
          (r = n),
          (i = c > 0 ? iw : rw),
          (u = (e = s) ? Zx(r).x() : i(Zx(r).x(), Ax(r), Rx(r), Wx(r))),
          (a = e ? i(Zx(r).y(), Mx(r), Vx(r), Wx(r)) : Zx(r).y()),
          Uw(o, Ww(u, a)),
          st.some(u).map(function () {
            return !0;
          })
        );
        let e; let o; let r; let i; let u; let a;
      };
    };
    const Xw = Gw(-1, !1);
    const Yw = Gw(1, !1);
    const qw = Gw(-1, !0);
    const Kw = Gw(1, !0);
    const Jw = {
      "top-left": st.some(function (t, n) {
        ow(t, ew(Fx(n), Ix(n)));
      }),
      top: st.some(function (t, n) {
        ow(t, ew(jx(n), Ix(n)));
      }),
      "top-right": st.some(function (t, n) {
        ow(t, ew(Px(n), Ix(n)));
      }),
      right: st.some(function (t, n) {
        ow(t, ew(Px(n), Ux(n)));
      }),
      "bottom-right": st.some(function (t, n) {
        ow(t, ew(Px(n), Hx(n)));
      }),
      bottom: st.some(function (t, n) {
        ow(t, ew(jx(n), Hx(n)));
      }),
      "bottom-left": st.some(function (t, n) {
        ow(t, ew(Fx(n), Hx(n)));
      }),
      left: st.some(function (t, n) {
        ow(t, ew(Fx(n), Ux(n)));
      }),
    };
    const $w = /* */ Object.freeze({
      __proto__: null,
      setValueFrom (t, n, e) {
        const o = kw(t, n, e.left());
          const r = Iw(t, n, e.top());
          const i = Ww(o, r);
        return Uw(t, i), i;
      },
      setToMin (t, n) {
        const e = Ax(n);
          const o = Mx(n);
        Uw(t, Ww(e, o));
      },
      setToMax (t, n) {
        const e = Rx(n);
          const o = Vx(n);
        Uw(t, Ww(e, o));
      },
      getValueFromEvent (t) {
        return Dx(t);
      },
      setPositionFromValue (t, n, e, o) {
        const r = Zx(e);
          const i = Ow(
            t,
            o.getSpectrum(t),
            r.x(),
            o.getLeftEdge(t),
            o.getRightEdge(t),
            e
          );
          const u = Vw(
            t,
            o.getSpectrum(t),
            r.y(),
            o.getTopEdge(t),
            o.getBottomEdge(t),
            e
          );
          const a = bu(n.element()) / 2;
          const c = lu(n.element()) / 2;
        Ni(n.element(), "left", `${i - a  }px`),
          Ni(n.element(), "top", `${u - c  }px`);
      },
      onLeft: Xw,
      onRight: Yw,
      onUp: qw,
      onDown: Kw,
      edgeActions: Jw,
    });
    const Qw = Vf({
      name: "Slider",
      configFields: [
        te("stepSize", 1),
        te("onChange", Z),
        te("onChoose", Z),
        te("onInit", Z),
        te("onDragStart", Z),
        te("onDragEnd", Z),
        te("snapToGrid", !1),
        te("rounded", !0),
        qn("snapStart"),
        Ln(
          "model",
          Dn("mode", {
            x: [
              te("minX", 0),
              te("maxX", 100),
              ce("value", function (t) {
                return se(t.mode.minX);
              }),
              Nn("getInitialValue"),
              fa("manager", Aw),
            ],
            y: [
              te("minY", 0),
              te("maxY", 100),
              ce("value", function (t) {
                return se(t.mode.minY);
              }),
              Nn("getInitialValue"),
              fa("manager", jw),
            ],
            xy: [
              te("minX", 0),
              te("maxX", 100),
              te("minY", 0),
              te("maxY", 100),
              ce("value", function (t) {
                return se({ x: at(t.mode.minX), y: at(t.mode.minY) });
              }),
              Nn("getInitialValue"),
              fa("manager", $w),
            ],
          })
        ),
        Bl("sliderBehaviours", [Gm, El]),
        ce("mouseIsDown", function () {
          return se(!1);
        }),
      ],
      partFields: Ex,
      factory (i, t, n, e) {
        let o;
          const u = function (t) {
            return xf(t, i, "thumb");
          };
          const a = function (t) {
            return xf(t, i, "spectrum");
          };
          const r = function (t) {
            return yf(t, i, "left-edge");
          };
          const c = function (t) {
            return yf(t, i, "right-edge");
          };
          const s = function (t) {
            return yf(t, i, "top-edge");
          };
          const l = function (t) {
            return yf(t, i, "bottom-edge");
          };
          const f = i.model;
          const d = f.manager;
          const m = function (t, n) {
            d.setPositionFromValue(t, n, i, {
              getLeftEdge: r,
              getRightEdge: c,
              getTopEdge: s,
              getBottomEdge: l,
              getSpectrum: a,
            });
          };
          const g = function (t, n) {
            f.value.set(n);
            const e = u(t);
            return m(t, e), i.onChange(t, e, n), st.some(!0);
          };
          const p = function (e) {
            const t = i.mouseIsDown.get();
            i.mouseIsDown.set(!1),
              t &&
                yf(e, i, "thumb").each(function (t) {
                  const n = f.value.get();
                  i.onChoose(e, t, n);
                });
          };
          const h = function (t, n) {
            n.stop(), i.mouseIsDown.set(!0), i.onDragStart(t, u(t));
          };
          const v = function (t, n) {
            n.stop(), i.onDragEnd(t, u(t)), p(t);
          };
        return {
          uid: i.uid,
          dom: i.dom,
          components: t,
          behaviours: Al(i.sliderBehaviours, [
            Gm.config({
              mode: "special",
              focusIn (t) {
                return yf(t, i, "spectrum").map(Gm.focusIn).map(at(!0));
              },
            }),
            El.config({
              store: {
                mode: "manual",
                getValue (t) {
                  return f.value.get();
                },
              },
            }),
            oc.config({ channels: (((o = {})[fl()] = { onReceive: p }), o) }),
          ]),
          events: qo([
            $o(Bx(), function (t, n) {
              g(t, n.event().value());
            }),
            rr(function (t, n) {
              const e = f.getInitialValue();
              f.value.set(e);
              const o = u(t);
              m(t, o);
              const r = a(t);
              i.onInit(t, o, r, f.value.get());
            }),
            $o($e(), h),
            $o(Ze(), v),
            $o(no(), h),
            $o(ro(), v),
          ]),
          apis: {
            resetToMin (t) {
              d.setToMin(t, i);
            },
            resetToMax (t) {
              d.setToMax(t, i);
            },
            changeValue: g,
            refresh: m,
          },
          domModification: { styles: { position: "relative" } },
        };
      },
      apis: {
        resetToMin (t, n) {
          t.resetToMin(n);
        },
        resetToMax (t, n) {
          t.resetToMax(n);
        },
        refresh (t, n) {
          t.refresh(n);
        },
      },
    });
    const Zw = [Bl("formBehaviours", [El])];
    const tS = function (t) {
      return `<alloy.field.${  t  }>`;
    };
    const nS = function (o, t) {
      return {
        uid: o.uid,
        dom: o.dom,
        components: t,
        behaviours: Al(o.formBehaviours, [
          El.config({
            store: {
              mode: "manual",
              getValue (t) {
                const n = Sf(t, o);
                return Tt(n, function (t, r) {
                  return t()
                    .bind(function (t) {
                      let n;
                        let e;
                        const o = Lf.getCurrent(t);
                      return (
                        (n = o),
                        (e = new Error(
                          `Cannot find a current component to extract the value from for form part '${ 
                            r 
                            }': ${ 
                            Nr(t.element())}`
                        )),
                        n.fold(function () {
                          return ut.error(e);
                        }, ut.value)
                      );
                    })
                    .map(El.getValue);
                });
              },
              setValue (e, t) {
                _t(t, function (n, t) {
                  yf(e, o, t).each(function (t) {
                    Lf.getCurrent(t).each(function (t) {
                      El.setValue(t, n);
                    });
                  });
                });
              },
            },
          }),
        ]),
        apis: {
          getField (t, n) {
            return yf(t, o, n).bind(Lf.getCurrent);
          },
        },
      };
    };
    const eS = {
      getField: ii(function (t, n, e) {
        return t.getField(n, e);
      }),
      sketch (t) {
        let e;
          const n =
            ((e = []),
            {
              field (t, n) {
                return e.push(t), gf("form", tS(t), n);
              },
              record () {
                return e;
              },
            });
          const o = t(n);
          const r = n.record();
          const i = V(r, function (t) {
            return rf({ name: t, pname: tS(t) });
          });
        return Bf("form", Zw, i, nS, o);
      },
    };
    const oS = Wr("valid-input");
    const rS = Wr("invalid-input");
    const iS = Wr("validating-input");
    const uS = "colorcustom.rgb.";
    const aS = function (d, m, g, p) {
      const h = function (t, n, e, o, r) {
          let i;
            let u;
            const a = d(`${uS  }range`);
            const c = [
              oy
                .parts()
                .label({
                  dom: {
                    tag: "label",
                    innerHtml: e,
                    attributes: { "aria-label": o },
                  },
                }),
              oy.parts().field({
                data: r,
                factory: Cy,
                inputAttributes: {
                  type: "text",
                  ...(n === "hex" ? { "aria-live": "polite" } : {})
                },
                inputClasses: [m("textfield")],
                inputBehaviours: Ka([
                  ((i = n),
                  (u = t),
                  Gy.config({
                    invalidClass: m("invalid"),
                    notify: {
                      onValidate (t) {
                        Uo(t, iS, { type: i });
                      },
                      onValid (t) {
                        Uo(t, oS, { type: i, value: El.getValue(t) });
                      },
                      onInvalid (t) {
                        Uo(t, rS, { type: i, value: El.getValue(t) });
                      },
                    },
                    validator: {
                      validate (t) {
                        const n = El.getValue(t);
                          const e = u(n)
                            ? ut.value(!0)
                            : ut.error(d("aria.input.invalid"));
                        return Ry(e);
                      },
                      validateOnLoad: !1,
                    },
                  })),
                  uy.config({}),
                ]),
                onSetValue (t) {
                  Gy.isInvalid(t) && Gy.run(t).get(Z);
                },
              }),
            ];
            const s = n !== "hex" ? [oy.parts()["aria-descriptor"]({ text: a })] : [];
          return {
            dom: { tag: "div", attributes: { role: "presentation" } },
            components: c.concat(s),
          };
        };
        const v = function (t, n) {
          const e = n.red;
            const o = n.green;
            const r = n.blue;
          El.setValue(t, { red: e, green: o, blue: r });
        };
        const b = Zg({
          dom: {
            tag: "div",
            classes: [m("rgba-preview")],
            styles: { "background-color": "white" },
            attributes: { role: "presentation" },
          },
        });
        const y = function (t, n) {
          b.getOpt(t).each(function (t) {
            Ni(t.element(), "background-color", `#${  n.value}`);
          });
        };
      return Rf({
        factory () {
          const e = {
              red: se(st.some(255)),
              green: se(st.some(255)),
              blue: se(st.some(255)),
              hex: se(st.some("ffffff")),
            };
            const o = function (t) {
              return e[t].get();
            };
            const i = function (t, n) {
              e[t].set(n);
            };
            const r = function (t) {
              const n = t.red;
                const e = t.green;
                const o = t.blue;
              i("red", st.some(n)),
                i("green", st.some(e)),
                i("blue", st.some(o));
            };
            const n = function (t, n) {
              const e = n.event();
              e.type() !== "hex" ? i(e.type(), st.none()) : p(t);
            };
            const u = function (r, t, n) {
              const e = parseInt(n, 10);
              i(t, st.some(e)),
                o("red")
                  .bind(function (e) {
                    return o("green").bind(function (n) {
                      return o("blue").map(function (t) {
                        return Nv(e, n, t, 1);
                      });
                    });
                  })
                  .each(function (t) {
                    let n;
                      let e;
                      const o =
                        ((n = r),
                        (e = Iv(t)),
                        eS.getField(n, "hex").each(function (t) {
                          eg.isFocused(t) || El.setValue(n, { hex: e.value });
                        }),
                        e);
                    y(r, o);
                  });
            };
            const a = function (t, n) {
              const e = n.event();
              e.type() === "hex"
                ? (function (t, n) {
                    g(t);
                    const e = Ev(n);
                    i("hex", st.some(n));
                    const o = Uv(e);
                    v(t, o), r(o), Uo(t, hx, { hex: e }), y(t, e);
                  })(t, e.value())
                : u(t, e.type(), e.value());
            };
            const t = function (t) {
              return {
                label: d(`${uS + t  }.label`),
                description: d(`${uS + t  }.description`),
              };
            };
            const c = t("red");
            const s = t("green");
            const l = t("blue");
            const f = t("hex");
          return zt(
            eS.sketch(function (t) {
              return {
                dom: {
                  tag: "form",
                  classes: [m("rgb-form")],
                  attributes: { "aria-label": d("aria.color.picker") },
                },
                components: [
                  t.field(
                    "red",
                    oy.sketch(h(Lv, "red", c.label, c.description, 255))
                  ),
                  t.field(
                    "green",
                    oy.sketch(h(Lv, "green", s.label, s.description, 255))
                  ),
                  t.field(
                    "blue",
                    oy.sketch(h(Lv, "blue", l.label, l.description, 255))
                  ),
                  t.field(
                    "hex",
                    oy.sketch(h(Av, "hex", f.label, f.description, "ffffff"))
                  ),
                  b.asSpec(),
                ],
                formBehaviours: Ka([
                  Gy.config({ invalidClass: m("form-invalid") }),
                  $m("rgb-form-events", [$o(oS, a), $o(rS, n), $o(iS, n)]),
                ]),
              };
            }),
            {
              apis: {
                updateHex (t, n) {
                  let e; let o;
                  El.setValue(t, { hex: n.value }),
                    (e = t),
                    (o = Uv(n)),
                    v(e, o),
                    r(o),
                    y(t, n);
                },
              },
            }
          );
        },
        name: "RgbForm",
        configFields: [],
        apis: {
          updateHex (t, n, e) {
            t.updateHex(n, e);
          },
        },
        extraApis: {},
      });
    };
    const cS = function (t, o) {
      const r = Qw.parts().spectrum({
          dom: {
            tag: "canvas",
            attributes: { role: "presentation" },
            classes: [o("sv-palette-spectrum")],
          },
        });
        const i = Qw.parts().thumb({
          dom: {
            tag: "div",
            attributes: { role: "presentation" },
            classes: [o("sv-palette-thumb")],
            innerHtml:
              `<div class=${ 
              o("sv-palette-inner-thumb") 
              } role="presentation"></div>`,
          },
        });
        const u = function (t, n) {
          const e = t.width;
            const o = t.height;
            const r = t.getContext("2d");
          if (r !== null) {
            (r.fillStyle = n), r.fillRect(0, 0, e, o);
            const i = r.createLinearGradient(0, 0, e, 0);
            i.addColorStop(0, "rgba(255,255,255,1)"),
              i.addColorStop(1, "rgba(255,255,255,0)"),
              (r.fillStyle = i),
              r.fillRect(0, 0, e, o);
            const u = r.createLinearGradient(0, 0, 0, o);
            u.addColorStop(0, "rgba(0,0,0,0)"),
              u.addColorStop(1, "rgba(0,0,0,1)"),
              (r.fillStyle = u),
              r.fillRect(0, 0, e, o);
          }
        };
      return Rf({
        factory (t) {
          const n = at({ x: at(0), y: at(0) });
            const e = Ka([Lf.config({ find: st.some }), eg.config({})]);
          return Qw.sketch({
            dom: {
              tag: "div",
              attributes: { role: "presentation" },
              classes: [o("sv-palette")],
            },
            model: { mode: "xy", getInitialValue: n },
            rounded: !1,
            components: [r, i],
            onChange (t, n, e) {
              Uo(t, bx, { value: e });
            },
            onInit (t, n, e, o) {
              u(e.element().dom(), Gv(Xv));
            },
            sliderBehaviours: e,
          });
        },
        name: "SaturationBrightnessPalette",
        configFields: [],
        apis: {
          setRgba (t, n, e) {
            let o; let r;
            (o = e), (r = n.components()[0].element().dom()), u(r, Gv(o));
          },
        },
        extraApis: {},
      });
    };
    const sS = function (f, d) {
      return Rf({
        name: "ColourPicker",
        configFields: [Nn("dom"), te("onValidHex", Z), te("onInvalidHex", Z)],
        factory (t) {
          let a;
            let v;
            let n;
            let e;
            let o;
            const r = aS(f, d, t.onValidHex, t.onInvalidHex);
            const i = cS(0, d);
            const b = { paletteRgba: se(Xv) };
            const u = Zg(i.sketch({}));
            const c = Zg(r.sketch({}));
            const s = function (t, e) {
              u.getOpt(t).each(function (t) {
                const n = Uv(e);
                b.paletteRgba.set(n), i.setRgba(t, n);
              });
            };
            const l = function (t, n) {
              c.getOpt(t).each(function (t) {
                r.updateHex(t, n);
              });
            };
            const y = function (n, e, t) {
              rt(t, function (t) {
                t(n, e);
              });
            };
          return {
            uid: t.uid,
            dom: t.dom,
            components: [
              u.asSpec(),
              ((n = d),
              (e = Qw.parts().spectrum({
                dom: {
                  tag: "div",
                  classes: [n("hue-slider-spectrum")],
                  attributes: { role: "presentation" },
                },
              })),
              (o = Qw.parts().thumb({
                dom: {
                  tag: "div",
                  classes: [n("hue-slider-thumb")],
                  attributes: { role: "presentation" },
                },
              })),
              Qw.sketch({
                dom: {
                  tag: "div",
                  classes: [n("hue-slider")],
                  attributes: { role: "presentation" },
                },
                rounded: !1,
                model: { mode: "y", getInitialValue: at({ y: at(0) }) },
                components: [e, o],
                sliderBehaviours: Ka([eg.config({})]),
                onChange (t, n, e) {
                  Uo(t, vx, { value: e });
                },
              })),
              c.asSpec(),
            ],
            behaviours: Ka([
              $m("colour-picker-events", [
                $o(
                  bx,
                  ((v = [l]),
                  function (t, n) {
                    let e;
                      let o;
                      let r;
                      let i;
                      let u;
                      let a;
                      let c;
                      let s;
                      let l;
                      const f = n.event().value();
                      const d = b.paletteRgba.get();
                      const m =
                        ((i = r = 0),
                        (u = (e = d).red / 255),
                        (a = e.green / 255),
                        (c = e.blue / 255),
                        (s = Math.min(u, Math.min(a, c))),
                        (l = Math.max(u, Math.max(a, c))),
                        s === l
                          ? px(0, 0, 100 * (i = s))
                          : ((r =
                              60 *
                              ((r = u === s ? 3 : c === s ? 1 : 5) -
                                (u === s ? a - c : c === s ? u - a : c - u) /
                                  (l - s))),
                            (o = (l - s) / l),
                            (i = l),
                            px(
                              Math.round(r),
                              Math.round(100 * o),
                              Math.round(100 * i)
                            )));
                      const g = px(m.hue, f.x(), 100 - f.y());
                      const p = jv(g);
                      const h = Iv(p);
                    y(t, h, v);
                  })
                ),
                $o(
                  vx,
                  ((a = [s, l]),
                  function (t, n) {
                    let e;
                      let o;
                      let r;
                      const i = n.event().value();
                      const u =
                        ((e = i.y()),
                        (o = px(((100 - e) / 100) * 360, 100, 100)),
                        (r = jv(o)),
                        Iv(r));
                    y(t, u, a);
                  })
                ),
              ]),
              Lf.config({
                find (t) {
                  return c.getOpt(t);
                },
              }),
              Gm.config({ mode: "acyclic" }),
            ]),
          };
        },
      });
    };
    const lS = function () {
      return Lf.config({ find: st.some });
    };
    const fS = function (t) {
      return Lf.config({ find: t.getOpt });
    };
    const dS = function (t) {
      return Lf.config({
        find (n) {
          return wr(n.element(), t).bind(function (t) {
            return n.getSystem().getByDom(t).toOption();
          });
        },
      });
    };
    const mS = {
      "colorcustom.rgb.red.label": "R",
      "colorcustom.rgb.red.description": "Red component",
      "colorcustom.rgb.green.label": "G",
      "colorcustom.rgb.green.description": "Green component",
      "colorcustom.rgb.blue.label": "B",
      "colorcustom.rgb.blue.description": "Blue component",
      "colorcustom.rgb.hex.label": "#",
      "colorcustom.rgb.hex.description": "Hex color code",
      "colorcustom.rgb.range": "Range 0 to 255",
      "colorcustom.sb.saturation": "Saturation",
      "colorcustom.sb.brightness": "Brightness",
      "colorcustom.sb.picker": "Saturation and Brightness Picker",
      "colorcustom.sb.palette": "Saturation and Brightness Palette",
      "colorcustom.sb.instructions":
        "Use arrow keys to select saturation and brightness, on x and y axes",
      "colorcustom.hue.hue": "Hue",
      "colorcustom.hue.slider": "Hue Slider",
      "colorcustom.hue.palette": "Hue Palette",
      "colorcustom.hue.instructions": "Use arrow keys to select a hue",
      "aria.color.picker": "Color Picker",
      "aria.input.invalid": "Invalid input",
    };
    const gS = function (t) {
      return mS[t];
    };
    const pS = tinymce.util.Tools.resolve("tinymce.Resource");
    const hS = fn([te("preprocess", ct), te("postprocess", ct)]);
    const vS = function (t, n, e) {
      return El.config(
        zt(
          { store: { mode: "manual", getValue: n, setValue: e } },
          t
            .map(function (t) {
              return { store: { initialValue: t } };
            })
            .getOr({})
        )
      );
    };
    const bS = function (t, n, e) {
      return vS(
        t,
        function (t) {
          return n(t.element());
        },
        function (t, n) {
          return e(t.element(), n);
        }
      );
    };
    const yS = function (r, t) {
      const i = Tn("RepresentingConfigs.memento processors", hS, t);
      return El.config({
        store: {
          mode: "manual",
          getValue (t) {
            const n = r.get(t);
              const e = El.getValue(n);
            return i.postprocess(e);
          },
          setValue (t, n) {
            const e = i.preprocess(n);
              const o = r.get(t);
            El.setValue(o, e);
          },
        },
      });
    };
    const xS = vS;
    const wS = function (t) {
      return bS(t, Dr, Ar);
    };
    const SS = function (t) {
      return El.config({ store: { mode: "memory", initialValue: t } });
    };
    const kS = function (r, n) {
      const e = function (t, n) {
          n.stop();
        };
        const o = function (t) {
          return function (n, e) {
            rt(t, function (t) {
              t(n, e);
            });
          };
        };
        const i = function (t, n) {
          if (!Dh.isDisabled(t)) {
            const e = n.event().raw();
            a(t, e.dataTransfer.files);
          }
        };
        const u = function (t, n) {
          const e = n.event().raw().target.files;
          a(t, e);
        };
        var a = function (t, n) {
          let e; let o;
          El.setValue(
            t,
            ((e = n),
            (o = new RegExp(
              `(${  ".jpg,.jpeg,.png,.gif".split(/\s*,\s*/).join("|")  })$`,
              "i"
            )),
            H(J(e), function (t) {
              return o.test(t.name);
            }))
          ),
            Uo(t, fy, { name: r.name });
        };
        const c = Zg({
          dom: {
            tag: "input",
            attributes: { type: "file", accept: "image/*" },
            styles: { display: "none" },
          },
          behaviours: Ka([$m("input-file-events", [er(mo()), er(ko())])]),
        });
        const t = r.label.map(function (t) {
          return ly(t, n);
        });
        const s = oy.parts().field({
          factory: {
            sketch (t) {
              return {
                uid: t.uid,
                dom: { tag: "div", classes: ["tox-dropzone-container"] },
                behaviours: Ka([
                  SS([]),
                  lS(),
                  Dh.config({}),
                  gg.config({ toggleClass: "dragenter", toggleOnExecute: !1 }),
                  $m("dropzone-events", [
                    $o("dragenter", o([e, gg.toggle])),
                    $o("dragleave", o([e, gg.toggle])),
                    $o("dragover", e),
                    $o("drop", o([e, i])),
                    $o(fo(), u),
                  ]),
                ]),
                components: [
                  {
                    dom: { tag: "div", classes: ["tox-dropzone"], styles: {} },
                    components: [
                      {
                        dom: {
                          tag: "p",
                          innerHtml: n.translate("Drop an image here"),
                        },
                      },
                      Qg.sketch({
                        dom: {
                          tag: "button",
                          innerHtml: n.translate("Browse for an image"),
                          styles: { position: "relative" },
                          classes: ["tox-button", "tox-button--secondary"],
                        },
                        components: [c.asSpec()],
                        action (t) {
                          c.get(t).element().dom().click();
                        },
                        buttonBehaviours: Ka([
                          uy.config({}),
                          ov(n.isReadOnly),
                          nv(),
                        ]),
                      }),
                    ],
                  },
                ],
              };
            },
          },
        });
      return ay(t, s, ["tox-form__group--stretched"], []);
    };
    const CS = Wr("alloy-fake-before-tabstop");
    const OS = Wr("alloy-fake-after-tabstop");
    const _S = function (t) {
      return {
        dom: {
          tag: "div",
          styles: { width: "1px", height: "1px", outline: "none" },
          attributes: { tabindex: "0" },
          classes: t,
        },
        behaviours: Ka([eg.config({ ignore: !0 }), uy.config({})]),
      };
    };
    const TS = function (t) {
      return {
        dom: { tag: "div", classes: ["tox-navobj"] },
        components: [_S([CS]), t, _S([OS])],
        behaviours: Ka([dS(1)]),
      };
    };
    const ES = function (t, n) {
      Uo(t, co(), { raw: { which: 9, shiftKey: n } });
    };
    const BS = function (t, n) {
      const e = n.element();
      Oi(e, CS) ? ES(t, !0) : Oi(e, OS) && ES(t, !1);
    };
    const DS = function (t) {
      return Mb(t, [`.${  CS}`, `.${  OS}`].join(","), at(!1));
    };
    const AS = !(ze().browser.isIE() || ze().browser.isEdge());
    const MS = function (t, n) {
      let o;
        let r;
        const e = AS && t.sandboxed;
        const i = {
          ...t.label
              .map(function (t) {
                return { title: t };
              })
              .getOr({}),
          ...(e ? { sandbox: "allow-scripts allow-same-origin" } : {})
        };
        const u =
          ((o = e),
          (r = se("")),
          {
            getValue (t) {
              return r.get();
            },
            setValue (t, n) {
              if (o) Fr(t.element(), "srcdoc", n);
              else {
                Fr(t.element(), "src", "javascript:''");
                const e = t.element().dom().contentWindow.document;
                e.open(), e.write(n), e.close();
              }
              r.set(n);
            },
          });
        const a = t.label.map(function (t) {
          return ly(t, n);
        });
        const c = oy.parts().field({
          factory: {
            sketch (t) {
              return TS({
                uid: t.uid,
                dom: { tag: "iframe", attributes: i },
                behaviours: Ka([
                  uy.config({}),
                  eg.config({}),
                  xS(st.none(), u.getValue, u.setValue),
                ]),
              });
            },
          },
        });
      return ay(a, c, ["tox-form__group--stretched"], []);
    };
  function FS(t, n) {
    return VS(nt.document.createElement("canvas"), t, n);
  }
  function IS(t) {
    const n = FS(t.width, t.height);
    return RS(n).drawImage(t, 0, 0), n;
  }
  function RS(t) {
    return t.getContext("2d");
  }
  function VS(t, n, e) {
    return (t.width = n), (t.height = e), t;
  }
  function PS(t) {
    return t.naturalWidth || t.width;
  }
  function HS(t) {
    return t.naturalHeight || t.height;
  }
  let zS;
    let NS;
    let LS;
    const jS = window.Promise
      ? window.Promise
      : ((NS =
          (zS = function (t) {
            if (typeof this !== "object")
              throw new TypeError("Promises must be constructed via new");
            if (typeof t !== "function") throw new TypeError("not a function");
            (this._state = null),
              (this._value = null),
              (this._deferreds = []),
              KS(t, US(GS, this), US(XS, this));
          }).immediateFn ||
          (typeof window.setImmediate === "function" && window.setImmediate) ||
          function (t) {
            nt.setTimeout(t, 1);
          }),
        (LS =
          Array.isArray ||
          function (t) {
            return Object.prototype.toString.call(t) === "[object Array]";
          }),
        (zS.prototype.catch = function (t) {
          return this.then(null, t);
        }),
        (zS.prototype.then = function (e, o) {
          const r = this;
          return new zS(function (t, n) {
            WS.call(r, new qS(e, o, t, n));
          });
        }),
        (zS.all = function () {
          for (var t = [], n = 0; n < arguments.length; n++)
            t[n] = arguments[n];
          const c = Array.prototype.slice.call(
            t.length === 1 && LS(t[0]) ? t[0] : t
          );
          return new zS(function (r, i) {
            if (c.length === 0) return r([]);
            let u = c.length;
            function a(n, t) {
              try {
                if (t && (typeof t === "object" || typeof t === "function")) {
                  const e = t.then;
                  if (typeof e === "function")
                    return void e.call(
                      t,
                      function (t) {
                        a(n, t);
                      },
                      i
                    );
                }
                (c[n] = t), --u == 0 && r(c);
              } catch (o) {
                i(o);
              }
            }
            for (let t = 0; t < c.length; t++) a(t, c[t]);
          });
        }),
        (zS.resolve = function (n) {
          return n && typeof n === "object" && n.constructor === zS
            ? n
            : new zS(function (t) {
                t(n);
              });
        }),
        (zS.reject = function (e) {
          return new zS(function (t, n) {
            n(e);
          });
        }),
        (zS.race = function (r) {
          return new zS(function (t, n) {
            for (let e = 0, o = r; e < o.length; e++) o[e].then(t, n);
          });
        }),
        zS);
  function US(t, n) {
    return function () {
      return t.apply(n, arguments);
    };
  }
  function WS(o) {
    const r = this;
    this._state !== null
      ? NS(function () {
          const t = r._state ? o.onFulfilled : o.onRejected;
          if (t !== null) {
            let n;
            try {
              n = t(r._value);
            } catch (e) {
              return void o.reject(e);
            }
            o.resolve(n);
          } else (r._state ? o.resolve : o.reject)(r._value);
        })
      : this._deferreds.push(o);
  }
  function GS(t) {
    try {
      if (t === this)
        throw new TypeError("A promise cannot be resolved with itself.");
      if (t && (typeof t === "object" || typeof t === "function")) {
        const n = t.then;
        if (typeof n === "function")
          return void KS(US(n, t), US(GS, this), US(XS, this));
      }
      (this._state = !0), (this._value = t), YS.call(this);
    } catch (e) {
      XS.call(this, e);
    }
  }
  function XS(t) {
    (this._state = !1), (this._value = t), YS.call(this);
  }
  function YS() {
    for (let t = 0, n = this._deferreds; t < n.length; t++) {
      const e = n[t];
      WS.call(this, e);
    }
    this._deferreds = [];
  }
  function qS(t, n, e, o) {
    (this.onFulfilled = typeof t === "function" ? t : null),
      (this.onRejected = typeof n === "function" ? n : null),
      (this.resolve = e),
      (this.reject = o);
  }
  function KS(t, n, e) {
    let o = !1;
    try {
      t(
        function (t) {
          o || ((o = !0), n(t));
        },
        function (t) {
          o || ((o = !0), e(t));
        }
      );
    } catch (r) {
      if (o) return;
      (o = !0), e(r);
    }
  }
  function JS(e) {
    return new jS(function (t, n) {
      (function p(t) {
        const n = t.split(",");
          const e = /data:([^;]+)/.exec(n[0]);
        if (!e) return st.none();
        for (
          var o = e[1],
            r = n[1],
            i = nt.atob(r),
            u = i.length,
            a = Math.ceil(u / 1024),
            c = new Array(a),
            s = 0;
          s < a;
          ++s
        ) {
          for (
            var l = 1024 * s,
              f = Math.min(1024 + l, u),
              d = new Array(f - l),
              m = l,
              g = 0;
            m < f;
            ++g, ++m
          )
            d[g] = i[m].charCodeAt(0);
          c[s] = new Uint8Array(d);
        }
        return st.some(new nt.Blob(c, { type: o }));
      })(e).fold(function () {
        n(`uri is not base64: ${  e}`);
      }, t);
    });
  }
  function $S(t, o, r) {
    return (
      (o = o || "image/png"),
      nt.HTMLCanvasElement.prototype.toBlob
        ? new jS(function (n, e) {
            t.toBlob(
              function (t) {
                t ? n(t) : e();
              },
              o,
              r
            );
          })
        : JS(t.toDataURL(o, r))
    );
  }
  function QS(t) {
    return (function n(a) {
      return new jS(function (t, n) {
        const e = nt.URL.createObjectURL(a);
          const o = new nt.Image();
          const r = function () {
            o.removeEventListener("load", i), o.removeEventListener("error", u);
          };
        function i() {
          r(), t(o);
        }
        function u() {
          r(), n(`Unable to load data of type ${  a.type  }: ${  e}`);
        }
        o.addEventListener("load", i),
          o.addEventListener("error", u),
          (o.src = e),
          o.complete && i();
      });
    })(t).then(function (t) {
      !(function e(t) {
        nt.URL.revokeObjectURL(t.src);
      })(t);
      const n = FS(PS(t), HS(t));
      return RS(n).drawImage(t, 0, 0), n;
    });
  }
  function ZS(t, n, e) {
    const o = n.type;
    function r(n, e) {
      return t.then(function (t) {
        return (function o(t, n, e) {
          return (n = n || "image/png"), t.toDataURL(n, e);
        })(t, n, e);
      });
    }
    return {
      getType: at(o),
      toBlob: function i() {
        return jS.resolve(n);
      },
      toDataURL: at(e),
      toBase64: function u() {
        return e.split(",")[1];
      },
      toAdjustedBlob: function a(n, e) {
        return t.then(function (t) {
          return $S(t, n, e);
        });
      },
      toAdjustedDataURL: r,
      toAdjustedBase64: function c(t, n) {
        return r(t, n).then(function (t) {
          return t.split(",")[1];
        });
      },
      toCanvas: function s() {
        return t.then(IS);
      },
    };
  }
  function tk(n) {
    return (function t(e) {
      return new jS(function (t) {
        const n = new nt.FileReader();
        (n.onloadend = function () {
          t(n.result);
        }),
          n.readAsDataURL(e);
      });
    })(n).then(function (t) {
      return ZS(QS(n), n, t);
    });
  }
  function nk(n, t) {
    return $S(n, t).then(function (t) {
      return ZS(jS.resolve(n), t, n.toDataURL());
    });
  }
  function ek(t, n, e) {
    let o = typeof t === "string" ? parseFloat(t) : t;
    return e < o ? (o = e) : o < n && (o = n), o;
  }
  function ok() {
    return [
      1,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      1,
    ];
  }
  const rk = [
    0,
    0.01,
    0.02,
    0.04,
    0.05,
    0.06,
    0.07,
    0.08,
    0.1,
    0.11,
    0.12,
    0.14,
    0.15,
    0.16,
    0.17,
    0.18,
    0.2,
    0.21,
    0.22,
    0.24,
    0.25,
    0.27,
    0.28,
    0.3,
    0.32,
    0.34,
    0.36,
    0.38,
    0.4,
    0.42,
    0.44,
    0.46,
    0.48,
    0.5,
    0.53,
    0.56,
    0.59,
    0.62,
    0.65,
    0.68,
    0.71,
    0.74,
    0.77,
    0.8,
    0.83,
    0.86,
    0.89,
    0.92,
    0.95,
    0.98,
    1,
    1.06,
    1.12,
    1.18,
    1.24,
    1.3,
    1.36,
    1.42,
    1.48,
    1.54,
    1.6,
    1.66,
    1.72,
    1.78,
    1.84,
    1.9,
    1.96,
    2,
    2.12,
    2.25,
    2.37,
    2.5,
    2.62,
    2.75,
    2.87,
    3,
    3.2,
    3.4,
    3.6,
    3.8,
    4,
    4.3,
    4.7,
    4.9,
    5,
    5.5,
    6,
    6.5,
    6.8,
    7,
    7.3,
    7.5,
    7.8,
    8,
    8.4,
    8.7,
    9,
    9.4,
    9.6,
    9.8,
    10,
  ];
  function ik(t, n) {
    for (var e, o = [], r = new Array(25), i = 0; i < 5; i++) {
      for (var u = 0; u < 5; u++) o[u] = n[u + 5 * i];
      for (u = 0; u < 5; u++) {
        for (let a = (e = 0); a < 5; a++) e += t[u + 5 * a] * o[a];
        r[u + 5 * i] = e;
      }
    }
    return r;
  }
  function uk(n, e) {
    return n.toCanvas().then(function (t) {
      return (function i(t, n, e) {
        const o = RS(t);
        const r = (function E(t, n) {
          for (
            var e,
              o,
              r,
              i,
              u = t.data,
              a = n[0],
              c = n[1],
              s = n[2],
              l = n[3],
              f = n[4],
              d = n[5],
              m = n[6],
              g = n[7],
              p = n[8],
              h = n[9],
              v = n[10],
              b = n[11],
              y = n[12],
              x = n[13],
              w = n[14],
              S = n[15],
              k = n[16],
              C = n[17],
              O = n[18],
              _ = n[19],
              T = 0;
            T < u.length;
            T += 4
          )
            (e = u[T]),
              (o = u[T + 1]),
              (r = u[T + 2]),
              (i = u[T + 3]),
              (u[T] = e * a + o * c + r * s + i * l + f),
              (u[T + 1] = e * d + o * m + r * g + i * p + h),
              (u[T + 2] = e * v + o * b + r * y + i * x + w),
              (u[T + 3] = e * S + o * k + r * C + i * O + _);
          return t;
        })(o.getImageData(0, 0, t.width, t.height), e);
        return o.putImageData(r, 0, 0), nk(t, n);
      })(t, n.getType(), e);
    });
  }
  function ak(n, e) {
    return n.toCanvas().then(function (t) {
      return (function u(t, n, e) {
        const o = RS(t);
        const r = o.getImageData(0, 0, t.width, t.height);
          let i = o.getImageData(0, 0, t.width, t.height);
        return (
          (i = (function w(t, n, e) {
            function o(t, n, e) {
              return e < t ? (t = e) : t < n && (t = n), t;
            }
            for (
              let r = Math.round(Math.sqrt(e.length)),
                i = Math.floor(r / 2),
                u = t.data,
                a = n.data,
                c = t.width,
                s = t.height,
                l = 0;
              l < s;
              l++
            )
              for (let f = 0; f < c; f++) {
                for (var d = 0, m = 0, g = 0, p = 0; p < r; p++)
                  for (let h = 0; h < r; h++) {
                    const v = o(f + h - i, 0, c - 1);
                      const b = 4 * (o(l + p - i, 0, s - 1) * c + v);
                      const y = e[p * r + h];
                    (d += u[b] * y), (m += u[1 + b] * y), (g += u[2 + b] * y);
                  }
                const x = 4 * (l * c + f);
                (a[x] = o(d, 0, 255)),
                  (a[1 + x] = o(m, 0, 255)),
                  (a[2 + x] = o(g, 0, 255));
              }
            return n;
          })(r, i, e)),
          o.putImageData(i, 0, 0),
          nk(t, n)
        );
      })(t, n.getType(), e);
    });
  }
  function ck(e) {
    return function (t, n) {
      return uk(t, e(ok(), n));
    };
  }
  const sk = (function $F(n) {
      return function (t) {
        return uk(t, n);
      };
    })([
      -1,
      0,
      0,
      0,
      255,
      0,
      -1,
      0,
      0,
      255,
      0,
      0,
      -1,
      0,
      255,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      1,
    ]);
    const lk = ck(function QF(t, n) {
      return ik(t, [
        1,
        0,
        0,
        0,
        (n = ek(255 * n, -255, 255)),
        0,
        1,
        0,
        0,
        n,
        0,
        0,
        1,
        0,
        n,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        0,
        1,
      ]);
    });
    const fk = ck(function ZF(t, n) {
      let e;
      return (
        (n = ek(n, -1, 1)),
        ik(t, [
          (e =
            (n *= 100) < 0
              ? 127 + (n / 100) * 127
              : 127 *
                  (e =
                    (e = n % 1) === 0
                      ? rk[n]
                      : rk[Math.floor(n)] * (1 - e) +
                        rk[Math.floor(n) + 1] * e) +
                127) / 127,
          0,
          0,
          0,
          0.5 * (127 - e),
          0,
          e / 127,
          0,
          0,
          0.5 * (127 - e),
          0,
          0,
          e / 127,
          0,
          0.5 * (127 - e),
          0,
          0,
          0,
          1,
          0,
          0,
          0,
          0,
          0,
          1,
        ])
      );
    });
    const dk = function (t, n, e, o) {
      return uk(
        t,
        (function r(t, n, e, o) {
          return ik(t, [
            (n = ek(n, 0, 2)),
            0,
            0,
            0,
            0,
            0,
            (e = ek(e, 0, 2)),
            0,
            0,
            0,
            0,
            0,
            (o = ek(o, 0, 2)),
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
          ]);
        })(ok(), n, e, o)
      );
    };
    const mk = (function tI(n) {
      return function (t) {
        return ak(t, n);
      };
    })([0, -1, 0, -1, 5, -1, 0, -1, 0]);
    const gk = (function nI(c) {
      const o = function (t, n, e) {
        const o = RS(t);
          const r = new Array(256);
        for (let i = 0; i < r.length; i++) r[i] = c(i, e);
        const u = (function a(t, n) {
          for (let e = t.data, o = 0; o < e.length; o += 4)
            (e[o] = n[e[o]]),
              (e[o + 1] = n[e[o + 1]]),
              (e[o + 2] = n[e[o + 2]]);
          return t;
        })(o.getImageData(0, 0, t.width, t.height), r);
        return o.putImageData(u, 0, 0), nk(t, n);
      };
      return function (n, e) {
        return n.toCanvas().then(function (t) {
          return o(t, n.getType(), e);
        });
      };
    })(function (t, n) {
      return 255 * Math.pow(t / 255, 1 - n);
    });
  function pk(t, n, e) {
    const o = PS(t);
      const r = HS(t);
      let i = n / o;
      let u = e / r;
      let a = !1;
    (i < 0.5 || i > 2) && ((i = i < 0.5 ? 0.5 : 2), (a = !0)),
      (u < 0.5 || u > 2) && ((u = u < 0.5 ? 0.5 : 2), (a = !0));
    const c = (function s(u, a, c) {
      return new jS(function (t) {
        const n = PS(u);
          const e = HS(u);
          const o = Math.floor(n * a);
          const r = Math.floor(e * c);
          const i = FS(o, r);
        RS(i).drawImage(u, 0, 0, n, e, 0, 0, o, r), t(i);
      });
    })(t, i, u);
    return a
      ? c.then(function (t) {
          return pk(t, n, e);
        })
      : c;
  }
  function hk(n, e) {
    return n.toCanvas().then(function (t) {
      return (function a(t, n, e) {
        const o = FS(t.width, t.height);
          const r = RS(o);
          let i = 0;
          let u = 0;
        ((e = e < 0 ? 360 + e : e) !== 90 && e !== 270) ||
          VS(o, o.height, o.width);
        (e !== 90 && e !== 180) || (i = o.width);
        (e !== 270 && e !== 180) || (u = o.height);
        return (
          r.translate(i, u),
          r.rotate((e * Math.PI) / 180),
          r.drawImage(t, 0, 0),
          nk(o, n)
        );
      })(t, n.getType(), e);
    });
  }
  function vk(n, e) {
    return n.toCanvas().then(function (t) {
      return (function i(t, n, e) {
        const o = FS(t.width, t.height);
          const r = RS(o);
        e === "v"
          ? (r.scale(1, -1), r.drawImage(t, 0, -o.height))
          : (r.scale(-1, 1), r.drawImage(t, -o.width, 0));
        return nk(o, n);
      })(t, n.getType(), e);
    });
  }
  function bk(n, e, o, r, i) {
    return n.toCanvas().then(function (t) {
      return (function a(t, n, e, o, r, i) {
        const u = FS(r, i);
        return RS(u).drawImage(t, -e, -o), nk(u, n);
      })(t, n.getType(), e, o, r, i);
    });
  }
  const yk = function (t) {
      return sk(t);
    };
    const xk = function (t) {
      return mk(t);
    };
    const wk = function (t, n) {
      return gk(t, n);
    };
    const Sk = function (t, n) {
      return lk(t, n);
    };
    const kk = function (t, n) {
      return fk(t, n);
    };
    const Ck = function (t, n) {
      return vk(t, n);
    };
    const Ok = function (t, n, e) {
      return (function r(n, e, o) {
        return n.toCanvas().then(function (t) {
          return pk(t, e, o).then(function (t) {
            return nk(t, n.getType());
          });
        });
      })(t, n, e);
    };
    const _k = function (t, n) {
      return hk(t, n);
    };
    const Tk = function (t, n) {
      return {
        dom: {
            tag: "span",
            innerHtml: t,
            classes: ["tox-icon", "tox-tbtn__icon-wrap"],
          },
        ...n
      };
    };
    const Ek = function (t, n) {
      return Tk(np(t, n), {});
    };
    const Bk = function (t, n) {
      return Tk(np(t, n), { behaviours: Ka([Jm.config({})]) });
    };
    const Dk = function (t, n, e) {
      return {
        dom: {
          tag: "span",
          innerHtml: e.translate(t),
          classes: [`${n  }__select-label`],
        },
        behaviours: Ka([Jm.config({})]),
      };
    };
    const Ak = Wr("toolbar.button.execute");
    const Mk = {
      "alloy.execute": [
        "disabling",
        "alloy.base.behaviour",
        "toggling",
        "toolbar-button-events",
      ],
    };
    const Fk = Wr("update-menu-text");
    const Ik = Wr("update-menu-icon");
    const Rk = function (t, n, o) {
      const e = se(Z);
        const r = t.text.map(function (t) {
          return Zg(Dk(t, n, o.providers));
        });
        const i = t.icon.map(function (t) {
          return Zg(Bk(t, o.providers.icons));
        });
        const u = function (t, n) {
          const e = El.getValue(t);
          return (
            eg.focus(e),
            Uo(e, "keydown", { raw: n.event().raw() }),
            sx.close(e),
            st.some(!0)
          );
        };
        const a = t.role.fold(
          function () {
            return {};
          },
          function (t) {
            return { role: t };
          }
        );
        const c = t.tooltip.fold(
          function () {
            return {};
          },
          function (t) {
            const n = o.providers.translate(t);
            return { title: n, "aria-label": n };
          }
        );
      return Zg(
        sx.sketch(
          {...a, dom: {
              tag: "button",
              classes: [n, `${n  }--select`].concat(
                V(t.classes, function (t) {
                  return `${n  }--${  t}`;
                })
              ),
              attributes: { ...c},
            },
            components: lv([
              i.map(function (t) {
                return t.asSpec();
              }),
              r.map(function (t) {
                return t.asSpec();
              }),
              st.some({
                dom: {
                  tag: "div",
                  classes: [`${n  }__select-chevron`],
                  innerHtml: np("chevron-down", o.providers.icons),
                },
              }),
            ]),
            matchWidth: !0,
            useMinWidth: !0,
            dropdownBehaviours: Ka(
              b(t.dropdownBehaviours, [
                ov(function () {
                  return t.disabled || o.providers.isReadOnly();
                }),
                nv(),
                lx.config({}),
                Jm.config({}),
                $m("dropdown-events", [av(t, e), cv(t, e)]),
                $m("menubutton-update-display-text", [
                  $o(Fk, function (n, e) {
                    r.bind(function (t) {
                      return t.getOpt(n);
                    }).each(function (t) {
                      Jm.set(t, [ou(o.providers.translate(e.event().text()))]);
                    });
                  }),
                  $o(Ik, function (n, e) {
                    i.bind(function (t) {
                      return t.getOpt(n);
                    }).each(function (t) {
                      Jm.set(t, [Bk(e.event().icon(), o.providers.icons)]);
                    });
                  }),
                ]),
              ])
            ),
            eventOrder: zt(Mk, {
              mousedown: [
                "focusing",
                "alloy.base.behaviour",
                "item-type-events",
                "normal-dropdown-events",
              ],
            }),
            sandboxBehaviours: Ka([
              Gm.config({ mode: "special", onLeft: u, onRight: u }),
            ]),
            lazySink: o.getSink,
            toggleClass: `${n  }--active`,
            parts: { menu: Wp(0, t.columns, t.presets) },
            fetch () {
              return Iy(t.fetch);
            },}
        )
      ).asSpec();
    };
    const Vk = function (t) {
      return t.type === "separator";
    };
    const Pk = { type: "separator" };
    const Hk = function (t, e) {
      const n = N(
        t,
        function (t, n) {
          return w(n)
            ? n === ""
              ? t
              : n === "|"
              ? t.length > 0 && !Vk(t[t.length - 1])
                ? t.concat([Pk])
                : t
              : It(e, n.toLowerCase())
              ? t.concat([e[n.toLowerCase()]])
              : t
            : t.concat([n]);
        },
        []
      );
      return n.length > 0 && Vk(n[n.length - 1]) && n.pop(), n;
    };
    const zk = function (t, n) {
      return It(t, "getSubmenuItems")
        ? ((o = n),
          (r = (e = t).getSubmenuItems()),
          (i = Nk(r, o)),
          {
            item: e,
            menus: zt(i.menus, Jt(e.value, i.items)),
            expansions: zt(i.expansions, Jt(e.value, e.value)),
          })
        : { item: t, menus: {}, expansions: {} };
      let e; let o; let r; let i;
    };
    var Nk = function (t, r) {
      const n = Hk(w(t) ? t.split(" ") : t, r);
      return z(
        n,
        function (t, n) {
          const e = (function (t) {
              if (Vk(t)) return t;
              const n = Ft(t, "value").getOrThunk(function () {
                return Wr("generated-menu-item");
              });
              return zt({ value: n }, t);
            })(n);
            const o = zk(e, r);
          return {
            menus: zt(t.menus, o.menus),
            items: [o.item].concat(t.items),
            expansions: zt(t.expansions, o.expansions),
          };
        },
        { menus: {}, expansions: {}, items: [] }
      );
    };
    const Lk = function (t, e, o, n) {
      const r = Wr("primary-menu");
        const i = Nk(t, o.shared.providers.menuItems());
      if (i.items.length === 0) return st.none();
      const u = Ob(r, i.items, e, o, n);
        const a = Tt(i.menus, function (t, n) {
          return Ob(n, t, e, o, !1);
        });
        const c = zt(a, Jt(r, u));
      return st.from(Hg.tieredData(r, c, i.expansions));
    };
    const jk = function (e) {
      return {
        isDisabled () {
          return Dh.isDisabled(e);
        },
        setDisabled (t) {
          return Dh.set(e, t);
        },
        setActive (t) {
          const n = e.element();
          t
            ? (Si(n, "tox-tbtn--enabled"), Fr(n, "aria-pressed", !0))
            : (Ci(n, "tox-tbtn--enabled"), Pr(n, "aria-pressed"));
        },
        isActive () {
          return Oi(e.element(), "tox-tbtn--enabled");
        },
      };
    };
    const Uk = function (t, n, e, o) {
      return Rk(
        {
          text: t.text,
          icon: t.icon,
          tooltip: t.tooltip,
          role: o,
          fetch (n) {
            t.fetch(function (t) {
              n(Lk(t, Ap.CLOSE_ON_EXECUTE, e, !1));
            });
          },
          onSetup: t.onSetup,
          getApi: jk,
          columns: 1,
          presets: "normal",
          classes: [],
          dropdownBehaviours: [uy.config({})],
        },
        n,
        e.shared
      );
    };
    const Wk = function (n, r, i) {
      return function (t) {
        t(
          V(n, function (t) {
            let n;
              let e;
              const o = t.text.fold(
                function () {
                  return {};
                },
                function (t) {
                  return { text: t };
                }
              );
            return {type: t.type, active: !1, ...o, onAction (t) {
                const n = !t.isActive();
                t.setActive(n),
                  e.storage.set(n),
                  i.shared.getSink().each(function (t) {
                    r()
                      .getOpt(t)
                      .each(function (t) {
                        ic(t.element()),
                          Uo(t, gy, { name: e.name, value: e.storage.get() });
                      });
                  });
              },
              onSetup:
                ((n = e = t),
                function (t) {
                  t.setActive(n.storage.get());
                }),};
          })
        );
      };
    };
    const Gk = function (t, n, e, o, r, i) {
      void 0 === e && (e = []);
      const u = n.fold(
          function () {
            return {};
          },
          function (t) {
            return { action: t };
          }
        );
        const a = {
          buttonBehaviours: Ka(
              [
                ov(function () {
                  return t.disabled || i.isReadOnly();
                }),
                nv(),
                uy.config({}),
                $m("button press", [Jo("click"), Jo("mousedown")]),
              ].concat(e)
            ),
            eventOrder: {
              click: ["button press", "alloy.base.behaviour"],
              mousedown: ["button press", "alloy.base.behaviour"],
            },
          ...u
        };
        const c = zt(a, { dom: o });
      return zt(c, { components: r });
    };
    const Xk = function (t, n, e, o) {
      void 0 === o && (o = []);
      const r = {
          tag: "button",
          classes: ["tox-tbtn"],
          attributes: t.tooltip
            .map(function (t) {
              return { "aria-label": e.translate(t), title: e.translate(t) };
            })
            .getOr({}),
        };
        const i = t.icon.map(function (t) {
          return Ek(t, e.icons);
        });
        const u = lv([i]);
      return Gk(t, n, o, r, u, e);
    };
    const Yk = function (t, n, e, o) {
      void 0 === o && (o = []);
      const r = Xk(t, st.some(n), e, o);
      return Qg.sketch(r);
    };
    const qk = function (t, n, e, o, r) {
      void 0 === o && (o = []), void 0 === r && (r = []);
      const i = e.translate(t.text);
        const u = t.icon
          ? t.icon.map(function (t) {
              return Ek(t, e.icons);
            })
          : st.none();
        const a = u.isSome() ? lv([u]) : [];
        const c = u.isSome() ? {} : { innerHtml: i };
        const s = b(
          t.primary || t.borderless
            ? ["tox-button"]
            : ["tox-button", "tox-button--secondary"],
          u.isSome() ? ["tox-button--icon"] : [],
          t.borderless ? ["tox-button--naked"] : [],
          r
        );
        const l = {tag: "button", classes: s, ...c, attributes: { title: i },};
      return Gk(t, n, o, l, a, e);
    };
    const Kk = function (t, n, e, o, r) {
      void 0 === o && (o = []), void 0 === r && (r = []);
      const i = qk(t, st.some(n), e, o, r);
      return Qg.sketch(i);
    };
    const Jk = function (n, e) {
      return function (t) {
        e === "custom"
          ? Uo(t, gy, { name: n, value: {} })
          : e === "submit"
          ? jo(t, py)
          : e === "cancel"
          ? jo(t, my)
          : nt.console.error("Unknown button type: ", e);
      };
    };
    const $k = function (n, t, e) {
      if (t === "menu") {
        const o = n;
          const r = {...n, onSetup (t) {
              return t.setDisabled(n.disabled), Z;
            },
            fetch: Wk(
              o.items,
              function () {
                return i;
              },
              e
            ),};
          var i = Zg(Uk(r, "tox-tbtn", e, st.none()));
        return i.asSpec();
      }
      if ((c = t) === "custom" || c === "cancel" || c === "submit") {
        const u = Jk(n.name, t);
          const a = {...n, borderless: !1};
        return Kk(a, u, e.shared.providers, []);
      }
      let c;
      nt.console.error("Unknown footer button type: ", t);
    };
    const Qk = function (t, n) {
      let e;
        let o;
        const r = Jk(t.name, "custom");
      return (
        (e = st.none()),
        (o = oy
          .parts()
          .field({factory: Qg, ...qk(t, st.some(r), n, [SS(""), lS()])})),
        ay(e, o, [], [])
      );
    };
    const Zk = at([
      te("field1Name", "field1"),
      te("field2Name", "field2"),
      sa("onLockedChange"),
      ia(["lockClass"]),
      te("locked", !1),
      Ml("coupledFieldBehaviours", [Lf, El]),
    ]);
    const tC = function (t, n) {
      return rf({
        factory: oy,
        name: t,
        overrides (o) {
          return {
            fieldBehaviours: Ka([
              $m("coupled-input-behaviour", [
                $o(lo(), function (e) {
                  yf(e, o, n)
                    .bind(Lf.getCurrent)
                    .each(function (n) {
                      yf(e, o, "lock").each(function (t) {
                        gg.isOn(t) && o.onLockedChange(e, n, t);
                      });
                    });
                }),
              ]),
            ]),
          };
        },
      });
    };
    const nC = at([
      tC("field1", "field2"),
      tC("field2", "field1"),
      rf({
        factory: Qg,
        schema: [Nn("dom")],
        name: "lock",
        overrides (t) {
          return {
            buttonBehaviours: Ka([
              gg.config({
                selected: t.locked,
                toggleClass: t.markers.lockClass,
                aria: { mode: "pressed" },
              }),
            ]),
          };
        },
      }),
    ]);
    const eC = Vf({
      name: "FormCoupledInputs",
      configFields: Zk(),
      partFields: nC(),
      factory (o, t, n, e) {
        return {
          uid: o.uid,
          dom: o.dom,
          components: t,
          behaviours: Fl(o.coupledFieldBehaviours, [
            Lf.config({ find: st.some }),
            El.config({
              store: {
                mode: "manual",
                getValue (t) {
                  let n;
                    const e = Cf(t, o, ["field1", "field2"]);
                  return (
                    ((n = {})[o.field1Name] = El.getValue(e.field1())),
                    (n[o.field2Name] = El.getValue(e.field2())),
                    n
                  );
                },
                setValue (t, n) {
                  const e = Cf(t, o, ["field1", "field2"]);
                  Rt(n, o.field1Name) &&
                    El.setValue(e.field1(), n[o.field1Name]),
                    Rt(n, o.field2Name) &&
                      El.setValue(e.field2(), n[o.field2Name]);
                },
              },
            }),
          ]),
          apis: {
            getField1 (t) {
              return yf(t, o, "field1");
            },
            getField2 (t) {
              return yf(t, o, "field2");
            },
            getLock (t) {
              return yf(t, o, "lock");
            },
          },
        };
      },
      apis: {
        getField1 (t, n) {
          return t.getField1(n);
        },
        getField2 (t, n) {
          return t.getField2(n);
        },
        getLock (t, n) {
          return t.getLock(n);
        },
      },
    });
    const oC = function (t) {
      const n = /^\s*(\d+(?:\.\d+)?)\s*(|cm|mm|in|px|pt|pc|em|ex|ch|rem|vw|vh|vmin|vmax|%)\s*$/.exec(
        t
      );
      if (n === null) return ut.error(t);
      const e = parseFloat(n[1]);
        const o = n[2];
      return ut.value({ value: e, unit: o });
    };
    const rC = function (t, n) {
      const e = { "": 96, px: 96, pt: 72, cm: 2.54, pc: 12, mm: 25.4, in: 1 };
        const o = function (t) {
          return Object.prototype.hasOwnProperty.call(e, t);
        };
      return t.unit === n
        ? st.some(t.value)
        : o(t.unit) && o(n)
        ? e[t.unit] === e[n]
          ? st.some(t.value)
          : st.some((t.value / e[t.unit]) * e[n])
        : st.none();
    };
    const iC = function (t) {
      return st.none();
    };
    const uC = function (t, n) {
      let e;
        let o;
        let r;
        const i = oC(t).toOption();
        const u = oC(n).toOption();
      return (
        (o = u),
        (r = function (t, o) {
          return rC(t, o.unit)
            .map(function (t) {
              return o.value / t;
            })
            .map(function (t) {
              return (
                (n = t),
                (e = o.unit),
                function (t) {
                  return rC(t, e).map(function (t) {
                    return { value: t * n, unit: e };
                  });
                }
              );
              let n; let e;
            })
            .getOr(iC);
        }),
        ((e = i).isSome() && o.isSome()
          ? st.some(r(e.getOrDie(), o.getOrDie()))
          : st.none()
        ).getOr(iC)
      );
    };
    const aC = function (o, n) {
      let a = iC;
        const r = Wr("ratio-event");
        const t = eC.parts().lock({
          dom: {
            tag: "button",
            classes: [
              "tox-lock",
              "tox-button",
              "tox-button--naked",
              "tox-button--icon",
            ],
            attributes: {
              title: n.translate(o.label.getOr("Constrain proportions")),
            },
          },
          components: [
            {
              dom: {
                tag: "span",
                classes: ["tox-icon", "tox-lock-icon__lock"],
                innerHtml: np("lock", n.icons),
              },
            },
            {
              dom: {
                tag: "span",
                classes: ["tox-icon", "tox-lock-icon__unlock"],
                innerHtml: np("unlock", n.icons),
              },
            },
          ],
          buttonBehaviours: Ka([
            Dh.config({
              disabled () {
                return o.disabled || n.isReadOnly();
              },
            }),
            nv(),
            uy.config({}),
          ]),
        });
        const e = function (t) {
          return {
            dom: { tag: "div", classes: ["tox-form__group"] },
            components: t,
          };
        };
        const i = function (e) {
          return oy.parts().field({
            factory: Cy,
            inputClasses: ["tox-textfield"],
            inputBehaviours: Ka([
              Dh.config({
                disabled () {
                  return o.disabled || n.isReadOnly();
                },
              }),
              nv(),
              uy.config({}),
              $m("size-input-events", [
                $o(uo(), function (t, n) {
                  Uo(t, r, { isField1: e });
                }),
                $o(fo(), function (t, n) {
                  Uo(t, fy, { name: o.name });
                }),
              ]),
            ]),
            selectOnFocus: !1,
          });
        };
        const u = function (t) {
          return {
            dom: {
              tag: "label",
              classes: ["tox-label"],
              innerHtml: n.translate(t),
            },
          };
        };
        const c = eC.parts().field1(e([oy.parts().label(u("Width")), i(!0)]));
        const s = eC.parts().field2(e([oy.parts().label(u("Height")), i(!1)]));
      return eC.sketch({
        dom: { tag: "div", classes: ["tox-form__group"] },
        components: [
          {
            dom: { tag: "div", classes: ["tox-form__controls-h-stack"] },
            components: [c, s, e([u("&nbsp;"), t])],
          },
        ],
        field1Name: "width",
        field2Name: "height",
        locked: !0,
        markers: { lockClass: "tox-locked" },
        onLockedChange (t, i, n) {
          oC(El.getValue(t)).each(function (t) {
            a(t).each(function (t) {
              let n; let e; let o; let r;
              El.setValue(
                i,
                ((o = {
                  "": 0,
                  px: 0,
                  pt: 1,
                  mm: 1,
                  pc: 2,
                  ex: 2,
                  em: 2,
                  ch: 2,
                  rem: 2,
                  cm: 3,
                  in: 4,
                  "%": 4,
                }),
                (r = (n = t).value.toFixed(
                    (e = n.unit) in o ? o[e] : 1
                  )).indexOf(".") !==
                  -1 && (r = r.replace(/\.?0*$/, "")),
                r + n.unit)
              );
            });
          });
        },
        coupledFieldBehaviours: Ka([
          Dh.config({
            disabled () {
              return o.disabled || n.isReadOnly();
            },
            onDisabled (t) {
              eC.getField1(t).bind(oy.getField).each(Dh.disable),
                eC.getField2(t).bind(oy.getField).each(Dh.disable),
                eC.getLock(t).each(Dh.disable);
            },
            onEnabled (t) {
              eC.getField1(t).bind(oy.getField).each(Dh.enable),
                eC.getField2(t).bind(oy.getField).each(Dh.enable),
                eC.getLock(t).each(Dh.enable);
            },
          }),
          nv(),
          $m("size-input-events2", [
            $o(r, function (t, n) {
              const e = n.event().isField1();
                const o = e ? eC.getField1(t) : eC.getField2(t);
                const r = e ? eC.getField2(t) : eC.getField1(t);
                const i = o.map(El.getValue).getOr("");
                const u = r.map(El.getValue).getOr("");
              a = uC(i, u);
            }),
          ]),
        ]),
      });
    };
    const cC = {
      undo: at(Wr("undo")),
      redo: at(Wr("redo")),
      zoom: at(Wr("zoom")),
      back: at(Wr("back")),
      apply: at(Wr("apply")),
      swap: at(Wr("swap")),
      transform: at(Wr("transform")),
      tempTransform: at(Wr("temp-transform")),
      transformApply: at(Wr("transform-apply")),
    };
    const sC = at("save-state");
    const lC = at("disable");
    const fC = at("enable");
    const dC = { formActionEvent: gy, saveState: sC, disable: lC, enable: fC };
    const mC = function (a, c) {
      const t = function (t, n, e, o) {
          return Zg(
            Kk(
              {
                name: t,
                text: t,
                disabled: e,
                primary: o,
                icon: st.none(),
                borderless: !1,
              },
              n,
              c
            )
          );
        };
        const n = function (t, n, e, o) {
          return Zg(
            Yk(
              {
                name: t,
                icon: st.some(t),
                tooltip: st.some(n),
                disabled: o,
                primary: !1,
                borderless: !1,
              },
              e,
              c
            )
          );
        };
        const u = function (t, e) {
          t.map(function (t) {
            const n = t.get(e);
            n.hasConfigured(Dh) && Dh.disable(n);
          });
        };
        const s = function (t, e) {
          t.map(function (t) {
            const n = t.get(e);
            n.hasConfigured(Dh) && Dh.enable(n);
          });
        };
        const l = {
          tag: "div",
          classes: ["tox-image-tools__toolbar", "tox-image-tools-edit-panel"],
        };
        const e = Z;
        const r = function (t, n, e) {
          Uo(t, n, e);
        };
        const i = function (t) {
          return jo(t, dC.disable());
        };
        const f = function (t) {
          return jo(t, dC.enable());
        };
        const d = function (t, n) {
          i(t), r(t, cC.transform(), { transform: n }), f(t);
        };
        const o = function (t) {
          return function () {
            Q.getOpt(t).each(function (t) {
              Jm.set(t, [J]);
            });
          };
        };
        const m = function (t, n) {
          i(t), r(t, cC.transformApply(), { transform: n, swap: o(t) }), f(t);
        };
        const g = function () {
          return t(
            "Back",
            function (t) {
              return r(t, cC.back(), { swap: o(t) });
            },
            !1,
            !1
          );
        };
        const p = function () {
          return Zg({
            dom: { tag: "div", classes: ["tox-spacer"] },
            behaviours: Ka([Dh.config({})]),
          });
        };
        const h = function () {
          return t(
            "Apply",
            function (t) {
              return r(t, cC.apply(), { swap: o(t) });
            },
            !0,
            !0
          );
        };
        const v = function () {
          return function (t) {
            let n;
              let e;
              let o;
              let r;
              let i;
              const u = a.getRect();
            return (
              (n = t),
              (e = u.x),
              (o = u.y),
              (r = u.w),
              (i = u.h),
              bk(n, e, o, r, i)
            );
          };
        };
        const b = [
          g(),
          p(),
          t(
            "Apply",
            function (t) {
              const n = v();
              m(t, n), a.hideCrop();
            },
            !1,
            !0
          ),
        ];
        const y = Zb.sketch({
          dom: l,
          components: b.map(function (t) {
            return t.asSpec();
          }),
          containerBehaviours: Ka([
            $m("image-tools-crop-buttons-events", [
              $o(dC.disable(), function (t, n) {
                u(b, t);
              }),
              $o(dC.enable(), function (t, n) {
                s(b, t);
              }),
            ]),
          ]),
        });
        const x = Zg(
          aC({ name: "size", label: st.none(), constrain: !0, disabled: !1 }, c)
        );
        const w = [
          g(),
          p(),
          x,
          p(),
          t(
            "Apply",
            function (a) {
              x.getOpt(a).each(function (t) {
                let n;
                  let e;
                  const o = El.getValue(t);
                  const r = parseInt(o.width, 10);
                  const i = parseInt(o.height, 10);
                  const u =
                    ((n = r),
                    (e = i),
                    function (t) {
                      return Ok(t, n, e);
                    });
                m(a, u);
              });
            },
            !1,
            !0
          ),
        ];
        const S = Zb.sketch({
          dom: l,
          components: w.map(function (t) {
            return t.asSpec();
          }),
          containerBehaviours: Ka([
            $m("image-tools-resize-buttons-events", [
              $o(dC.disable(), function (t, n) {
                u(w, t);
              }),
              $o(dC.enable(), function (t, n) {
                s(w, t);
              }),
            ]),
          ]),
        });
        const k = function (n, e) {
          return function (t) {
            return n(t, e);
          };
        };
        const C = k(Ck, "h");
        const O = k(Ck, "v");
        const _ = k(_k, -90);
        const T = k(_k, 90);
        const E = function (t, n) {
          let e; let o;
          (o = n), i((e = t)), r(e, cC.tempTransform(), { transform: o }), f(e);
        };
        const B = [
          g(),
          p(),
          n(
            "flip-horizontally",
            "Flip horizontally",
            function (t) {
              E(t, C);
            },
            !1
          ),
          n(
            "flip-vertically",
            "Flip vertically",
            function (t) {
              E(t, O);
            },
            !1
          ),
          n(
            "rotate-left",
            "Rotate counterclockwise",
            function (t) {
              E(t, _);
            },
            !1
          ),
          n(
            "rotate-right",
            "Rotate clockwise",
            function (t) {
              E(t, T);
            },
            !1
          ),
          p(),
          h(),
        ];
        const D = Zb.sketch({
          dom: l,
          components: B.map(function (t) {
            return t.asSpec();
          }),
          containerBehaviours: Ka([
            $m("image-tools-fliprotate-buttons-events", [
              $o(dC.disable(), function (t, n) {
                u(B, t);
              }),
              $o(dC.enable(), function (t, n) {
                s(B, t);
              }),
            ]),
          ]),
        });
        const A = function (t, n, e, o, r) {
          const i = Qw.parts().label({
              dom: {
                tag: "label",
                classes: ["tox-label"],
                innerHtml: c.translate(t),
              },
            });
            const u = Qw.parts().spectrum({
              dom: {
                tag: "div",
                classes: ["tox-slider__rail"],
                attributes: { role: "presentation" },
              },
            });
            const a = Qw.parts().thumb({
              dom: {
                tag: "div",
                classes: ["tox-slider__handle"],
                attributes: { role: "presentation" },
              },
            });
          return Zg(
            Qw.sketch({
              dom: {
                tag: "div",
                classes: ["tox-slider"],
                attributes: { role: "presentation" },
              },
              model: {
                mode: "x",
                minX: e,
                maxX: r,
                getInitialValue: at({ x: at(o) }),
              },
              components: [i, u, a],
              sliderBehaviours: Ka([eg.config({})]),
              onChoose: n,
            })
          );
        };
        const M = function (t, n, e, o, r) {
          return [
            g(),
            ((i = n),
            A(
              t,
              function (t, n, e) {
                const o = k(i, e.x() / 100);
                d(t, o);
              },
              e,
              o,
              r
            )),
            h(),
          ];
          let i;
        };
        const F = function (t, n, e, o, r) {
          const i = M(t, n, e, o, r);
          return Zb.sketch({
            dom: l,
            components: i.map(function (t) {
              return t.asSpec();
            }),
            containerBehaviours: Ka([
              $m("image-tools-filter-panel-buttons-events", [
                $o(dC.disable(), function (t, n) {
                  u(i, t);
                }),
                $o(dC.enable(), function (t, n) {
                  s(i, t);
                }),
              ]),
            ]),
          });
        };
        const I = [g(), p(), h()];
        const R = Zb.sketch({
          dom: l,
          components: I.map(function (t) {
            return t.asSpec();
          }),
        });
        const V = F("Brightness", Sk, -100, 0, 100);
        const P = F("Contrast", kk, -100, 0, 100);
        const H = F("Gamma", wk, -100, 0, 100);
        const z = function (n, e, o) {
          return function (t) {
            return dk(t, n, e, o);
          };
        };
        const N = function (t) {
          return A(
            t,
            function (a, t, n) {
              const e = L.getOpt(a);
                const o = U.getOpt(a);
                const r = j.getOpt(a);
              e.each(function (u) {
                o.each(function (i) {
                  r.each(function (t) {
                    const n = El.getValue(u).x() / 100;
                      const e = El.getValue(t).x() / 100;
                      const o = El.getValue(i).x() / 100;
                      const r = z(n, e, o);
                    d(a, r);
                  });
                });
              });
            },
            0,
            100,
            200
          );
        };
        var L = N("R");
        var j = N("G");
        var U = N("B");
        const W = [g(), L, j, U, h()];
        const G = Zb.sketch({
          dom: l,
          components: W.map(function (t) {
            return t.asSpec();
          }),
        });
        const X = function (n, e, o) {
          return function (t) {
            r(t, cC.swap(), {
              transform: e,
              swap () {
                Q.getOpt(t).each(function (t) {
                  Jm.set(t, [n]), o(t);
                });
              },
            });
          };
        };
        const Y = st.some(xk);
        const q = st.some(yk);
        const K = [
          n(
            "crop",
            "Crop",
            X(y, st.none(), function (t) {
              a.showCrop();
            }),
            !1
          ),
          n(
            "resize",
            "Resize",
            X(S, st.none(), function (t) {
              x.getOpt(t).each(function (t) {
                const n = a.getMeasurements();
                  const e = n.width;
                  const o = n.height;
                El.setValue(t, { width: e, height: o });
              });
            }),
            !1
          ),
          n("orientation", "Orientation", X(D, st.none(), e), !1),
          n("brightness", "Brightness", X(V, st.none(), e), !1),
          n("sharpen", "Sharpen", X(R, Y, e), !1),
          n("contrast", "Contrast", X(P, st.none(), e), !1),
          n("color-levels", "Color levels", X(G, st.none(), e), !1),
          n("gamma", "Gamma", X(H, st.none(), e), !1),
          n("invert", "Invert", X(R, q, e), !1),
        ];
        var J = Zb.sketch({
          dom: l,
          components: K.map(function (t) {
            return t.asSpec();
          }),
        });
        const $ = Zb.sketch({
          dom: { tag: "div" },
          components: [J],
          containerBehaviours: Ka([Jm.config({})]),
        });
        var Q = Zg($);
      return {
        memContainer: Q,
        getApplyButton (t) {
          return Q.getOpt(t).map(function (t) {
            const n = t.components()[0];
            return n.components()[n.components().length - 1];
          });
        },
      };
    };
    const gC = tinymce.util.Tools.resolve("tinymce.dom.DomQuery");
    const pC = tinymce.util.Tools.resolve("tinymce.geom.Rect");
    const hC = tinymce.util.Tools.resolve("tinymce.util.Observable");
    const vC = tinymce.util.Tools.resolve("tinymce.util.Tools");
    const bC = tinymce.util.Tools.resolve("tinymce.util.VK");
  function yC(t) {
    let n; let e;
    if (t.changedTouches)
      for (
        n = "screenX screenY pageX pageY clientX clientY".split(" "), e = 0;
        e < n.length;
        e++
      )
        t[n[e]] = t.changedTouches[0][n[e]];
  }
  function xC(t, r) {
    let i;
      let u;
      let a;
      let c;
      const l = r.document || nt.document;
    r = r || {};
    const f = l.getElementById(r.handle || t);
      const d = function (t) {
        if ((yC(t), t.button !== u)) return m(t);
        (t.deltaX = t.screenX - a),
          (t.deltaY = t.screenY - c),
          t.preventDefault(),
          r.drag(t);
      };
      var m = function (t) {
        yC(t),
          gC(l).off("mousemove touchmove", d).off("mouseup touchend", m),
          i.remove(),
          r.stop && r.stop(t);
      };
    (this.destroy = function () {
      gC(f).off();
    }),
      gC(f).on("mousedown touchstart", function (t) {
        let n;
          const e = (function s(t) {
            const n = Math.max;
              const e = t.documentElement;
              const o = t.body;
              const r = n(e.scrollWidth, o.scrollWidth);
              const i = n(e.clientWidth, o.clientWidth);
              const u = n(e.offsetWidth, o.offsetWidth);
              const a = n(e.scrollHeight, o.scrollHeight);
              const c = n(e.clientHeight, o.clientHeight);
            return {
              width: r < u ? i : r,
              height: a < n(e.offsetHeight, o.offsetHeight) ? c : a,
            };
          })(l);
        yC(t), t.preventDefault(), (u = t.button);
        const o = f;
        (a = t.screenX),
          (c = t.screenY),
          (n = nt.window.getComputedStyle
            ? nt.window.getComputedStyle(o, null).getPropertyValue("cursor")
            : o.runtimeStyle.cursor),
          (i = gC("<div></div>")
            .css({
              position: "absolute",
              top: 0,
              left: 0,
              width: e.width,
              height: e.height,
              zIndex: 2147483647,
              opacity: 1e-4,
              cursor: n,
            })
            .appendTo(l.body)),
          gC(l).on("mousemove touchmove", d).on("mouseup touchend", m),
          r.start(t);
      });
  }
  let wC = 0;
    const SC = function (s, e, l, o, r) {
      let n;
        const i = "tox-";
        const u = `tox-crid-${  wC++}`;
        const a = [
          {
            name: "move",
            xMul: 0,
            yMul: 0,
            deltaX: 1,
            deltaY: 1,
            deltaW: 0,
            deltaH: 0,
            label: "Crop Mask",
          },
          {
            name: "nw",
            xMul: 0,
            yMul: 0,
            deltaX: 1,
            deltaY: 1,
            deltaW: -1,
            deltaH: -1,
            label: "Top Left Crop Handle",
          },
          {
            name: "ne",
            xMul: 1,
            yMul: 0,
            deltaX: 0,
            deltaY: 1,
            deltaW: 1,
            deltaH: -1,
            label: "Top Right Crop Handle",
          },
          {
            name: "sw",
            xMul: 0,
            yMul: 1,
            deltaX: 1,
            deltaY: 0,
            deltaW: -1,
            deltaH: 1,
            label: "Bottom Left Crop Handle",
          },
          {
            name: "se",
            xMul: 1,
            yMul: 1,
            deltaX: 0,
            deltaY: 0,
            deltaW: 1,
            deltaH: 1,
            label: "Bottom Right Crop Handle",
          },
        ];
        const c = ["top", "right", "bottom", "left"];
        const f = function (t, n) {
          return { x: n.x + t.x, y: n.y + t.y, w: n.w, h: n.h };
        };
        const d = function (t, n) {
          return { x: n.x - t.x, y: n.y - t.y, w: n.w, h: n.h };
        };
      function m(t, n, e, o) {
        let r; let i; let u; let a; let c;
        (r = n.x),
          (i = n.y),
          (u = n.w),
          (a = n.h),
          (r += e * t.deltaX),
          (i += o * t.deltaY),
          (u += e * t.deltaW) < 20 && (u = 20),
          (a += o * t.deltaH) < 20 && (a = 20),
          (c = s = pC.clamp({ x: r, y: i, w: u, h: a }, l, t.name === "move")),
          (c = d(l, c)),
          v.fire("updateRect", { rect: c }),
          h(c);
      }
      function g(n) {
        function t(t, n) {
          n.h < 0 && (n.h = 0),
            n.w < 0 && (n.w = 0),
            gC(`#${  u  }-${  t}`, o).css({
              left: n.x,
              top: n.y,
              width: n.w,
              height: n.h,
            });
        }
        vC.each(a, function (t) {
          gC(`#${  u  }-${  t.name}`, o).css({
            left: n.w * t.xMul + n.x,
            top: n.h * t.yMul + n.y,
          });
        }),
          t("top", { x: e.x, y: e.y, w: e.w, h: n.y - e.y }),
          t("right", {
            x: n.x + n.w,
            y: n.y,
            w: e.w - n.x - n.w + e.x,
            h: n.h,
          }),
          t("bottom", {
            x: e.x,
            y: n.y + n.h,
            w: e.w,
            h: e.h - n.y - n.h + e.y,
          }),
          t("left", { x: e.x, y: n.y, w: n.x - e.x, h: n.h }),
          t("move", n);
      }
      function p(t) {
        g((s = t));
      }
      function h(t) {
        p(f(l, t));
      }
      !(function b() {
        gC(
          `<div id="${ 
            u 
            }" class="${ 
            i 
            }croprect-container" role="grid" aria-dropeffect="execute">`
        ).appendTo(o),
          vC.each(c, function (t) {
            gC(`#${  u}`, o).append(
              `<div id="${ 
                u 
                }-${ 
                t 
                }"class="${ 
                i 
                }croprect-block" style="display: none" data-mce-bogus="all">`
            );
          }),
          vC.each(a, function (t) {
            gC(`#${  u}`, o).append(
              `<div id="${ 
                u 
                }-${ 
                t.name 
                }" class="${ 
                i 
                }croprect-handle ${ 
                i 
                }croprect-handle-${ 
                t.name 
                }"style="display: none" data-mce-bogus="all" role="gridcell" tabindex="-1" aria-label="${ 
                t.label 
                }" aria-grabbed="false" title="${ 
                t.label 
                }">`
            );
          }),
          (n = vC.map(a, function t(n) {
            let e;
            return new xC(u, {
              document: o.ownerDocument,
              handle: `${u  }-${  n.name}`,
              start () {
                e = s;
              },
              drag (t) {
                m(n, e, t.deltaX, t.deltaY);
              },
            });
          })),
          g(s),
          gC(o).on("focusin focusout", function (t) {
            gC(t.target).attr(
              "aria-grabbed",
              t.type === "focus" ? "true" : "false"
            );
          }),
          gC(o).on("keydown", function (n) {
            let i;
            function t(t, n, e, o, r) {
              t.stopPropagation(), t.preventDefault(), m(i, e, o, r);
            }
            switch (
              (vC.each(a, function (t) {
                if (n.target.id === `${u  }-${  t.name}`) return (i = t), !1;
              }),
              n.keyCode)
            ) {
              case bC.LEFT:
                t(n, 0, s, -10, 0);
                break;
              case bC.RIGHT:
                t(n, 0, s, 10, 0);
                break;
              case bC.UP:
                t(n, 0, s, 0, -10);
                break;
              case bC.DOWN:
                t(n, 0, s, 0, 10);
                break;
              case bC.ENTER:
              case bC.SPACEBAR:
                n.preventDefault(), r();
            }
          });
      })();
      var v = vC.extend(
        {
          toggleVisibility: function y(t) {
            const n = vC
              .map(a, function (t) {
                return `#${  u  }-${  t.name}`;
              })
              .concat(
                vC.map(c, function (t) {
                  return `#${  u  }-${  t}`;
                })
              )
              .join(",");
            t ? gC(n, o).show() : gC(n, o).hide();
          },
          setClampRect: function x(t) {
            (l = t), g(s);
          },
          setRect: p,
          getInnerRect () {
            return d(l, s);
          },
          setInnerRect: h,
          setViewPortRect: function w(t) {
            (e = t), g(s);
          },
          destroy: function t() {
            vC.each(n, function (t) {
              t.destroy();
            }),
              (n = []);
          },
        },
        hC
      );
      return v;
    };
    const kC = function (n) {
      const l = Zg({
          dom: {
            tag: "div",
            classes: ["tox-image-tools__image-bg"],
            attributes: { role: "presentation" },
          },
        });
        const f = se(1);
        const d = se(st.none());
        const m = se({ x: 0, y: 0, w: 1, h: 1 });
        const c = se({ x: 0, y: 0, w: 1, h: 1 });
        const s = function (t, s) {
          g.getOpt(t).each(function (t) {
            const e = f.get();
              const o = bu(t.element());
              const r = lu(t.element());
              const i = s.dom().naturalWidth * e;
              const u = s.dom().naturalHeight * e;
              const a = Math.max(0, o / 2 - i / 2);
              const c = Math.max(0, r / 2 - u / 2);
              const n = {
                left: `${a.toString()  }px`,
                top: `${c.toString()  }px`,
                width: `${i.toString()  }px`,
                height: `${u.toString()  }px`,
                position: "absolute",
              };
            Li(s, n),
              l.getOpt(t).each(function (t) {
                Li(t.element(), n);
              }),
              d.get().each(function (t) {
                const n = m.get();
                t.setRect({
                  x: n.x * e + a,
                  y: n.y * e + c,
                  w: n.w * e,
                  h: n.h * e,
                }),
                  t.setClampRect({ x: a, y: c, w: i, h: u }),
                  t.setViewPortRect({ x: 0, y: 0, w: o, h: r });
              });
          });
        };
        const e = function (t, n) {
          let e;
            const a = fe.fromTag("img");
          return (
            Fr(a, "src", n),
            (e = a.dom()),
            new bp(function (t) {
              var n = function () {
                e.removeEventListener("load", n), t(e);
              };
              e.complete ? t(e) : e.addEventListener("load", n);
            }).then(function () {
              return g.getOpt(t).map(function (t) {
                const n = ru({ element: a });
                Jm.replaceAt(t, 1, st.some(n));
                const e = c.get();
                  const o = {
                    x: 0,
                    y: 0,
                    w: a.dom().naturalWidth,
                    h: a.dom().naturalHeight,
                  };
                c.set(o);
                let r;
                  let u;
                  const i = pC.inflate(o, -20, -20);
                return (
                  m.set(i),
                  (e.w === o.w && e.h === o.h) ||
                    ((r = t),
                    (u = a),
                    g.getOpt(r).each(function (t) {
                      const n = bu(t.element());
                        const e = lu(t.element());
                        const o = u.dom().naturalWidth;
                        const r = u.dom().naturalHeight;
                        const i = Math.min(n / o, e / r);
                      i >= 1 ? f.set(1) : f.set(i);
                    })),
                  s(t, a),
                  a
                );
              });
            })
          );
        };
        const t = Zb.sketch({
          dom: { tag: "div", classes: ["tox-image-tools__image"] },
          components: [
            l.asSpec(),
            { dom: { tag: "img", attributes: { src: n } } },
            {
              dom: { tag: "div" },
              behaviours: Ka([
                $m("image-panel-crop-events", [
                  rr(function (t) {
                    g.getOpt(t).each(function (t) {
                      const n = t.element().dom();
                        const e = SC(
                          { x: 10, y: 10, w: 100, h: 100 },
                          { x: 0, y: 0, w: 200, h: 200 },
                          { x: 0, y: 0, w: 200, h: 200 },
                          n,
                          function () {}
                        );
                      e.toggleVisibility(!1),
                        e.on("updateRect", function (t) {
                          const n = t.rect;
                            const e = f.get();
                            const o = {
                              x: Math.round(n.x / e),
                              y: Math.round(n.y / e),
                              w: Math.round(n.w / e),
                              h: Math.round(n.h / e),
                            };
                          m.set(o);
                        }),
                        d.set(st.some(e));
                    });
                  }),
                ]),
              ]),
            },
          ],
          containerBehaviours: Ka([
            Jm.config({}),
            $m("image-panel-events", [
              rr(function (t) {
                e(t, n);
              }),
            ]),
          ]),
        });
        var g = Zg(t);
      return {
        memContainer: g,
        updateSrc: e,
        zoom (t, n) {
          const e = f.get();
            const o = n > 0 ? Math.min(2, e + 0.1) : Math.max(0.1, e - 0.1);
          f.set(o),
            g.getOpt(t).each(function (t) {
              const n = t.components()[1].element();
              s(t, n);
            });
        },
        showCrop () {
          d.get().each(function (t) {
            t.toggleVisibility(!0);
          });
        },
        hideCrop () {
          d.get().each(function (t) {
            t.toggleVisibility(!1);
          });
        },
        getRect () {
          return m.get();
        },
        getMeasurements () {
          const t = c.get();
          return { width: t.w, height: t.h };
        },
      };
    };
    const CC = function (t, n, e, o, r) {
      return Yk(
        {
          name: t,
          icon: st.some(n),
          disabled: e,
          tooltip: st.some(t),
          primary: !1,
          borderless: !1,
        },
        o,
        r
      );
    };
    const OC = function (t, n) {
      n ? Dh.enable(t) : Dh.disable(t);
    };
  function _C() {
    const e = [];
      let o = -1;
    function t() {
      return o > 0;
    }
    function n() {
      return o !== -1 && o < e.length - 1;
    }
    return {
      data: e,
      add: function r(t) {
        const n = e.splice(++o);
        return e.push(t), { state: t, removed: n };
      },
      undo: function i() {
        if (t()) return e[--o];
      },
      redo: function u() {
        if (n()) return e[++o];
      },
      canUndo: t,
      canRedo: n,
    };
  }
  let TC;
    let EC;
    let BC;
    let DC;
    const AC = function (t) {
      const n = se(t);
        const e = se(st.none());
        const r = _C();
      r.add(t);
      const i = function (t) {
          n.set(t);
        };
        const u = function (t) {
          return { blob: t, url: nt.URL.createObjectURL(t) };
        };
        const a = function (t) {
          nt.URL.revokeObjectURL(t.url);
        };
        const o = function () {
          e.get().each(a), e.set(st.none());
        };
        const c = function (t) {
          const n = u(t);
          i(n);
          let e;
            const o = r.add(n).removed;
          return (e = o), vC.each(e, a), n.url;
        };
      return {
        getBlobState () {
          return n.get();
        },
        setBlobState: i,
        addBlobState: c,
        getTempState () {
          return e.get().fold(
            function () {
              return n.get();
            },
            function (t) {
              return t;
            }
          );
        },
        updateTempState (t) {
          const n = u(t);
          return o(), e.set(st.some(n)), n.url;
        },
        addTempState (t) {
          const n = u(t);
          return e.set(st.some(n)), n.url;
        },
        applyTempState (n) {
          return e.get().fold(
            function () {},
            function (t) {
              c(t.blob), n();
            }
          );
        },
        destroyTempState: o,
        undo () {
          const t = r.undo();
          return i(t), t.url;
        },
        redo () {
          const t = r.redo();
          return i(t), t.url;
        },
        getHistoryStates () {
          return { undoEnabled: r.canUndo(), redoEnabled: r.canRedo() };
        },
      };
    };
    const MC = function (t, n) {
      let e;
        let o;
        let r;
        const u = AC(t.currentState);
        const i = function (t) {
          const n = u.getHistoryStates();
          p.updateButtonUndoStates(t, n.undoEnabled, n.redoEnabled),
            Uo(t, dC.formActionEvent, {
              name: dC.saveState(),
              value: n.undoEnabled,
            });
        };
        const a = function (t) {
          return t.toBlob();
        };
        const c = function (t) {
          Uo(t, dC.formActionEvent, { name: dC.disable(), value: {} });
        };
        const s = function (t) {
          h.getApplyButton(t).each(function (t) {
            Dh.enable(t);
          }),
            Uo(t, dC.formActionEvent, { name: dC.enable(), value: {} });
        };
        const l = function (t, n) {
          return c(t), g.updateSrc(t, n);
        };
        const f = function (n, t, e, o, r) {
          return (
            c(n),
            tk(t)
              .then(e)
              .then(a)
              .then(o)
              .then(function (t) {
                return l(n, t).then(function (t) {
                  return i(n), r(), s(n), t;
                });
              })
              .catch(function (t) {
                return nt.console.log(t), s(n), t;
              })
          );
        };
        const d = function (t, n, e) {
          const o = u.getBlobState().blob;
          f(
            t,
            o,
            n,
            function (t) {
              return u.updateTempState(t);
            },
            e
          );
        };
        const m = function (t) {
          const n = u.getBlobState().url;
          return u.destroyTempState(), i(t), n;
        };
        var g = kC(t.currentState.url);
        var p =
          ((o = Zg(
            CC(
              "Undo",
              "undo",
              !0,
              function (t) {
                Uo(t, cC.undo(), { direction: 1 });
              },
              (e = n)
            )
          )),
          (r = Zg(
            CC(
              "Redo",
              "redo",
              !0,
              function (t) {
                Uo(t, cC.redo(), { direction: 1 });
              },
              e
            )
          )),
          {
            container: Zb.sketch({
              dom: {
                tag: "div",
                classes: [
                  "tox-image-tools__toolbar",
                  "tox-image-tools__sidebar",
                ],
              },
              components: [
                o.asSpec(),
                r.asSpec(),
                CC(
                  "Zoom in",
                  "zoom-in",
                  !1,
                  function (t) {
                    Uo(t, cC.zoom(), { direction: 1 });
                  },
                  e
                ),
                CC(
                  "Zoom out",
                  "zoom-out",
                  !1,
                  function (t) {
                    Uo(t, cC.zoom(), { direction: -1 });
                  },
                  e
                ),
              ],
            }),
            updateButtonUndoStates (t, n, e) {
              o.getOpt(t).each(function (t) {
                OC(t, n);
              }),
                r.getOpt(t).each(function (t) {
                  OC(t, e);
                });
            },
          });
        var h = mC(g, n);
      return {
        dom: { tag: "div", attributes: { role: "presentation" } },
        components: [
          h.memContainer.asSpec(),
          g.memContainer.asSpec(),
          p.container,
        ],
        behaviours: Ka([
          El.config({
            store: {
              mode: "manual",
              getValue () {
                return u.getBlobState();
              },
            },
          }),
          $m("image-tools-events", [
            $o(cC.undo(), function (n, t) {
              const e = u.undo();
              l(n, e).then(function (t) {
                s(n), i(n);
              });
            }),
            $o(cC.redo(), function (n, t) {
              const e = u.redo();
              l(n, e).then(function (t) {
                s(n), i(n);
              });
            }),
            $o(cC.zoom(), function (t, n) {
              const e = n.event().direction();
              g.zoom(t, e);
            }),
            $o(cC.back(), function (t, n) {
              let e; let o;
              (o = m((e = t))),
                l(e, o).then(function (t) {
                  s(e);
                }),
                n.event().swap()(),
                g.hideCrop();
            }),
            $o(cC.apply(), function (t, n) {
              u.applyTempState(function () {
                m(t), n.event().swap()();
              });
            }),
            $o(cC.transform(), function (t, n) {
              return d(t, n.event().transform(), Z);
            }),
            $o(cC.tempTransform(), function (t, n) {
              return (
                (e = t),
                (o = n.event().transform()),
                (r = u.getTempState().blob),
                void f(
                  e,
                  r,
                  o,
                  function (t) {
                    return u.addTempState(t);
                  },
                  Z
                )
              );
              let e; let o; let r;
            }),
            $o(cC.transformApply(), function (t, n) {
              return (
                (e = t),
                (o = n.event().transform()),
                (r = n.event().swap()),
                (i = u.getBlobState().blob),
                void f(
                  e,
                  i,
                  o,
                  function (t) {
                    const n = u.addBlobState(t);
                    return m(e), n;
                  },
                  r
                )
              );
              let e; let o; let r; let i;
            }),
            $o(cC.swap(), function (n, t) {
              let e;
              (e = n), p.updateButtonUndoStates(e, !1, !1);
              const o = t.event().transform();
                const r = t.event().swap();
              o.fold(
                function () {
                  r();
                },
                function (t) {
                  d(n, t, r);
                }
              );
            }),
          ]),
          lS(),
        ]),
      };
    };
    const FC = Rf({
      name: "HtmlSelect",
      configFields: [
        Nn("options"),
        Bl("selectBehaviours", [eg, El]),
        te("selectClasses", []),
        te("selectAttributes", {}),
        qn("data"),
      ],
      factory (e, t) {
        const n = V(e.options, function (t) {
            return {
              dom: { tag: "option", value: t.value, innerHtml: t.text },
            };
          });
          const o = e.data
            .map(function (t) {
              return Jt("initialValue", t);
            })
            .getOr({});
        return {
          uid: e.uid,
          dom: {
            tag: "select",
            classes: e.selectClasses,
            attributes: e.selectAttributes,
          },
          components: n,
          behaviours: Al(e.selectBehaviours, [
            eg.config({}),
            El.config({
              store: {
                mode: "manual",
                  getValue (t) {
                    return Ki(t.element());
                  },
                  setValue (t, n) {
                    L(e.options, function (t) {
                      return t.value === n;
                    }).isSome() && Ji(t.element(), n);
                  },
                ...o
              },
            }),
          ]),
        };
      },
    });
    const IC = function (e, n) {
      const t = e.label.map(function (t) {
          return ly(t, n);
        });
        const o = [
          Dh.config({
            disabled () {
              return e.disabled || n.isReadOnly();
            },
          }),
          nv(),
          Gm.config({
            mode: "execution",
            useEnter: !0 !== e.multiline,
            useControlEnter: !0 === e.multiline,
            execute (t) {
              return jo(t, py), st.some(!0);
            },
          }),
          $m("textfield-change", [
            $o(lo(), function (t, n) {
              Uo(t, fy, { name: e.name });
            }),
            $o(yo(), function (t, n) {
              Uo(t, fy, { name: e.name });
            }),
          ]),
          uy.config({}),
        ];
        const r = e.validation
          .map(function (o) {
            return Gy.config({
              getRoot (t) {
                return br(t.element());
              },
              invalidClass: "tox-invalid",
              validator: {
                validate (t) {
                  const n = El.getValue(t);
                    const e = o.validator(n);
                  return Ry(!0 === e ? ut.value(n) : ut.error(e));
                },
                validateOnLoad: o.validateOnLoad,
              },
            });
          })
          .toArray();
        const i = e.placeholder.fold(at({}), function (t) {
          return { placeholder: n.translate(t) };
        });
        const u = e.inputMode.fold(at({}), function (t) {
          return { inputmode: t };
        });
        const a = {...i, ...u};
        const c = oy
          .parts()
          .field({
            tag: !0 === e.multiline ? "textarea" : "input",
            inputAttributes: a,
            inputClasses: [e.classname],
            inputBehaviours: Ka(it([o, r])),
            selectOnFocus: !1,
            factory: Cy,
          });
        const s = (e.flex ? ["tox-form__group--stretched"] : []).concat(
          e.maximized ? ["tox-form-group--maximize"] : []
        );
        const l = [
          Dh.config({
            disabled () {
              return e.disabled || n.isReadOnly();
            },
            onDisabled (t) {
              oy.getField(t).each(Dh.disable);
            },
            onEnabled (t) {
              oy.getField(t).each(Dh.enable);
            },
          }),
          nv(),
        ];
      return ay(t, c, s, l);
    };
    const RC = /* */ Object.freeze({
      __proto__: null,
      events (t, n) {
        const e = t.stream.streams.setup(t, n);
        return qo(
          [
            $o(t.event, e),
            ir(function () {
              return n.cancel();
            }),
          ].concat(
            t.cancelEvent
              .map(function (t) {
                return [
                  $o(t, function () {
                    return n.cancel();
                  }),
                ];
              })
              .getOr([])
          )
        );
      },
    });
    const VC = function (t) {
      const n = se(null);
      return ai({
        readState () {
          return { timer: n.get() !== null ? "set" : "unset" };
        },
        setTimer (t) {
          n.set(t);
        },
        cancel () {
          const t = n.get();
          t !== null && t.cancel();
        },
      });
    };
    const PC = /* */ Object.freeze({
      __proto__: null,
      throttle: VC,
      init (t) {
        return t.stream.streams.state(t);
      },
    });
    const HC = [
      Ln(
        "stream",
        Dn("mode", {
          throttle: [
            Nn("delay"),
            te("stopEvent", !0),
            fa("streams", {
              setup (t, n) {
                const e = t.stream;
                  const o = ap(t.onStream, e.delay);
                return (
                  n.setTimer(o),
                  function (t, n) {
                    o.throttle(t, n), e.stopEvent && n.stop();
                  }
                );
              },
              state: VC,
            }),
          ],
        })
      ),
      te("event", "input"),
      qn("cancelEvent"),
      sa("onStream"),
    ];
    const zC = $a({ fields: HC, name: "streaming", active: RC, state: PC });
    const NC = function (t, n, e) {
      const o = El.getValue(e);
      El.setValue(n, o), jC(n);
    };
    const LC = function (t, n) {
      const e = t.element();
        const o = Ki(e);
        const r = e.dom();
      Ir(e, "type") !== "number" && n(r, o);
    };
    var jC = function (t) {
      LC(t, function (t, n) {
        return t.setSelectionRange(n.length, n.length);
      });
    };
    const UC = function (t, n, o) {
      if (t.selectsOver) {
        const e = El.getValue(n);
          const r = t.getDisplayText(e);
          const i = El.getValue(o);
        return t.getDisplayText(i).indexOf(r) === 0
          ? st.some(function () {
              let t; let e;
              NC(0, n, o),
                (t = n),
                (e = r.length),
                LC(t, function (t, n) {
                  return t.setSelectionRange(e, n.length);
                });
            })
          : st.none();
      }
      return st.none();
    };
    const WC = at("alloy.typeahead.itemexecute");
    const GC = at(
      [
        qn("lazySink"),
        Nn("fetch"),
        te("minChars", 5),
        te("responseTime", 1e3),
        aa("onOpen"),
        te("getHotspot", st.some),
        te("getAnchorOverrides", at({})),
        te("layouts", st.none()),
        te("eventOrder", {}),
        ae("model", {}, [
          te("getDisplayText", function (t) {
            return t.meta !== undefined && t.meta.text !== undefined
              ? t.meta.text
              : t.value;
          }),
          te("selectsOver", !0),
          te("populateFromBrowse", !0),
        ]),
        aa("onSetValue"),
        ca("onExecute"),
        aa("onItemExecute"),
        te("inputClasses", []),
        te("inputAttributes", {}),
        te("inputStyles", {}),
        te("matchWidth", !0),
        te("useMinWidth", !1),
        te("dismissOnBlur", !0),
        ia(["openClass"]),
        qn("initialData"),
        Bl("typeaheadBehaviours", [eg, El, zC, Gm, gg, qy]),
        ce("previewing", function () {
          return se(!0);
        }),
      ]
        .concat(wy())
        .concat(ux())
    );
    const XC = at([
      uf({
        schema: [ra()],
        name: "menu",
        overrides (o) {
          return {
            fakeFocus: !0,
            onHighlight (n, e) {
              o.previewing.get()
                ? n
                    .getSystem()
                    .getByUid(o.uid)
                    .each(function (t) {
                      UC(o.model, t, e).fold(
                        function () {
                          return Qf.dehighlight(n, e);
                        },
                        function (t) {
                          return t();
                        }
                      );
                    })
                : n
                    .getSystem()
                    .getByUid(o.uid)
                    .each(function (t) {
                      o.model.populateFromBrowse && NC(o.model, t, e);
                    }),
                o.previewing.set(!1);
            },
            onExecute (t, n) {
              return t
                .getSystem()
                .getByUid(o.uid)
                .toOption()
                .map(function (t) {
                  return Uo(t, WC(), { item: n }), !0;
                });
            },
            onHover (t, n) {
              o.previewing.set(!1),
                t
                  .getSystem()
                  .getByUid(o.uid)
                  .each(function (t) {
                    o.model.populateFromBrowse && NC(o.model, t, n);
                  });
            },
          };
        },
      }),
    ]);
    const YC = Vf({
      name: "Typeahead",
      configFields: GC(),
      partFields: XC(),
      factory (r, t, n, i) {
        const e = function (t, n, e) {
            r.previewing.set(!1);
            const o = qy.getCoupled(t, "sandbox");
            if (cl.isOpen(o))
              Lf.getCurrent(o).each(function (t) {
                Qf.getHighlighted(t).fold(
                  function () {
                    e(t);
                  },
                  function () {
                    Yo(o, t.element(), "keydown", n);
                  }
                );
              });
            else {
              Qy(
                r,
                u(t),
                t,
                o,
                i,
                function (t) {
                  Lf.getCurrent(t).each(e);
                },
                Ty.HighlightFirst
              ).get(Z);
            }
          };
          const o = Sy(r);
          var u = function (o) {
            return function (t) {
              return t.map(function (t) {
                const n = Mt(t.menus);
                  const e = U(n, function (t) {
                    return H(t.items, function (t) {
                      return t.type === "item";
                    });
                  });
                return (
                  El.getState(o).update(
                    V(e, function (t) {
                      return t.data;
                    })
                  ),
                  t
                );
              });
            };
          };
          const a = [
            eg.config({}),
            El.config({
              onSetValue: r.onSetValue,
              store: {
                mode: "dataset",
                  getDataKey (t) {
                    return Ki(t.element());
                  },
                  getFallbackEntry (t) {
                    return { value: t, meta: {} };
                  },
                  setValue (t, n) {
                    Ji(t.element(), r.model.getDisplayText(n));
                  },
                ...r.initialData
                  .map(function (t) {
                    return Jt("initialValue", t);
                  })
                  .getOr({})
              },
            }),
            zC.config({
              stream: {
                mode: "throttle",
                delay: r.responseTime,
                stopEvent: !1,
              },
              onStream (t, n) {
                const e = qy.getCoupled(t, "sandbox");
                if (eg.isFocused(t) && Ki(t.element()).length >= r.minChars) {
                  const o = Lf.getCurrent(e).bind(function (t) {
                    return Qf.getHighlighted(t).map(El.getValue);
                  });
                  r.previewing.set(!0);
                  Qy(
                    r,
                    u(t),
                    t,
                    e,
                    i,
                    function (t) {
                      Lf.getCurrent(e).each(function (t) {
                        o.fold(
                          function () {
                            r.model.selectsOver && Qf.highlightFirst(t);
                          },
                          function (n) {
                            Qf.highlightBy(t, function (t) {
                              return El.getValue(t).value === n.value;
                            }),
                              Qf.getHighlighted(t).orThunk(function () {
                                return Qf.highlightFirst(t), st.none();
                              });
                          }
                        );
                      });
                    },
                    Ty.HighlightFirst
                  ).get(Z);
                }
              },
              cancelEvent: _o(),
            }),
            Gm.config({
              mode: "special",
              onDown (t, n) {
                return e(t, n, Qf.highlightFirst), st.some(!0);
              },
              onEscape (t) {
                const n = qy.getCoupled(t, "sandbox");
                return cl.isOpen(n) ? (cl.close(n), st.some(!0)) : st.none();
              },
              onUp (t, n) {
                return e(t, n, Qf.highlightLast), st.some(!0);
              },
              onEnter (n) {
                const t = qy.getCoupled(n, "sandbox");
                  const e = cl.isOpen(t);
                if (e && !r.previewing.get())
                  return Lf.getCurrent(t)
                    .bind(function (t) {
                      return Qf.getHighlighted(t);
                    })
                    .map(function (t) {
                      return Uo(n, WC(), { item: t }), !0;
                    });
                const o = El.getValue(n);
                return (
                  jo(n, _o()),
                  r.onExecute(t, n, o),
                  e && cl.close(t),
                  st.some(!0)
                );
              },
            }),
            gg.config({
              toggleClass: r.markers.openClass,
              aria: { mode: "expanded" },
            }),
            qy.config({
              others: {
                sandbox (t) {
                  return rx(r, t, {
                    onOpen () {
                      return gg.on(t);
                    },
                    onClose () {
                      return gg.off(t);
                    },
                  });
                },
              },
            }),
            $m(
              "typeaheadevents",
              [
                ar(function (t) {
                  const n = Z;
                  tx(r, u(t), t, i, n, Ty.HighlightFirst).get(Z);
                }),
                $o(WC(), function (t, n) {
                  const e = qy.getCoupled(t, "sandbox");
                  NC(r.model, t, n.event().item()),
                    jo(t, _o()),
                    r.onItemExecute(t, e, n.event().item(), El.getValue(t)),
                    cl.close(e),
                    jC(t);
                }),
              ].concat(
                r.dismissOnBlur
                  ? [
                      $o(bo(), function (t) {
                        const n = qy.getCoupled(t, "sandbox");
                        ac(n.element()).isNone() && cl.close(n);
                      }),
                    ]
                  : []
              )
            ),
          ];
        return {
          uid: r.uid,
          dom: ky(
            zt(r, {
              inputAttributes: {
                role: "combobox",
                "aria-autocomplete": "list",
                "aria-haspopup": "true",
              },
            })
          ),
          behaviours: {...o, ...Al(r.typeaheadBehaviours, a)},
          eventOrder: r.eventOrder,
        };
      },
    });
    var qC = function (i) {
      return {...i, toCached () {
          return qC(i.toCached());
        },
        bindFuture (n) {
          return qC(
            i.bind(function (t) {
              return t.fold(
                function (t) {
                  return Ry(ut.error(t));
                },
                function (t) {
                  return n(t);
                }
              );
            })
          );
        },
        bindResult (n) {
          return qC(
            i.map(function (t) {
              return t.bind(n);
            })
          );
        },
        mapResult (n) {
          return qC(
            i.map(function (t) {
              return t.map(n);
            })
          );
        },
        mapError (n) {
          return qC(
            i.map(function (t) {
              return t.mapError(n);
            })
          );
        },
        foldResult (n, e) {
          return i.map(function (t) {
            return t.fold(n, e);
          });
        },
        withTimeout (t, r) {
          return qC(
            Iy(function (n) {
              let e = !1;
                const o = nt.setTimeout(function () {
                  (e = !0), n(ut.error(r()));
                }, t);
              i.get(function (t) {
                e || (nt.clearTimeout(o), n(t));
              });
            })
          );
        },};
    };
    const KC = function (t) {
      return qC(Iy(t));
    };
    const JC = KC;
    const $C = { type: "separator" };
    const QC = function (t) {
      return {
        type: "menuitem",
        value: t.url,
        text: t.title,
        meta: { attach: t.attach },
        onAction () {},
      };
    };
    const ZC = function (t, n) {
      return {
        type: "menuitem",
        value: n,
        text: t,
        meta: { attach: undefined },
        onAction () {},
      };
    };
    const tO = function (t, n) {
      return (
        (o = t),
        (e = H(n, function (t) {
          return t.type === o;
        })),
        V(e, QC)
      );
      let e; let o;
    };
    const nO = function (t, n) {
      const e = t.toLowerCase();
      return H(n, function (t) {
        const n =
          t.meta !== undefined && t.meta.text !== undefined
            ? t.meta.text
            : t.text;
        return Be(n.toLowerCase(), e) || Be(t.value.toLowerCase(), e);
      });
    };
    const eO = function (u, t, a) {
      const n = El.getValue(t);
        const c = n.meta.text !== undefined ? n.meta.text : n.value;
      return a.getLinkInformation().fold(
        function () {
          return [];
        },
        function (t) {
          let n;
            let e;
            let o;
            let r;
            const i = nO(
              c,
              ((n = a.getHistory(u)),
              V(n, function (t) {
                return ZC(t, t);
              }))
            );
          return u === "file"
            ? ((e = [
                i,
                nO(c, tO("header", t.targets)),
                nO(
                  c,
                  it([
                    ((r = t),
                    st
                      .from(r.anchorTop)
                      .map(function (t) {
                        return ZC("<top>", t);
                      })
                      .toArray()),
                    tO("anchor", t.targets),
                    ((o = t),
                    st
                      .from(o.anchorBottom)
                      .map(function (t) {
                        return ZC("<bottom>", t);
                      })
                      .toArray()),
                  ])
                ),
              ]),
              N(
                e,
                function (t, n) {
                  return t.length === 0 || n.length === 0
                    ? t.concat(n)
                    : t.concat($C, n);
                },
                []
              ))
            : i;
        }
      );
    };
    const oO = Wr("aria-invalid");
    const rO = function (r, o, i) {
      let t;
        let n;
        let e;
        let u;
        let a;
        const c = o.shared.providers;
        const s = function (t) {
          const n = El.getValue(t);
          i.addToHistory(n.value, r.filetype);
        };
        const l = oy.parts().field({
          factory: YC,
          dismissOnBlur: !0,
          inputClasses: ["tox-textfield"],
          sandboxClasses: ["tox-dialog__popups"],
          inputAttributes: { "aria-errormessage": oO, type: "url" },
          minChars: 0,
          responseTime: 0,
          fetch (t) {
            const n = eO(r.filetype, t, i);
              const e = Lk(n, Ap.BUBBLE_TO_SANDBOX, o, !1);
            return Ry(e);
          },
          getHotspot (t) {
            return h.getOpt(t);
          },
          onSetValue (t, n) {
            t.hasConfigured(Gy) && Gy.run(t).get(Z);
          },
          typeaheadBehaviours: Ka(
            it([
              i
                .getValidationHandler()
                .map(function (e) {
                  return Gy.config({
                    getRoot (t) {
                      return br(t.element());
                    },
                    invalidClass: "tox-control-wrap--status-invalid",
                    notify: {
                      onInvalid (t, n) {
                        d.getOpt(t).each(function (t) {
                          Fr(t.element(), "title", c.translate(n));
                        });
                      },
                    },
                    validator: {
                      validate (t) {
                        const n = El.getValue(t);
                        return JC(function (o) {
                          e({ type: r.filetype, url: n.value }, function (t) {
                            if (t.status === "invalid") {
                              const n = ut.error(t.message);
                              o(n);
                            } else {
                              const e = ut.value(t.message);
                              o(e);
                            }
                          });
                        });
                      },
                      validateOnLoad: !1,
                    },
                  });
                })
                .toArray(),
              [
                Dh.config({
                  disabled () {
                    return r.disabled || c.isReadOnly();
                  },
                }),
                uy.config({}),
                $m(
                  "urlinput-events",
                  it([
                    r.filetype === "file"
                      ? [
                          $o(lo(), function (t) {
                            Uo(t, fy, { name: r.name });
                          }),
                        ]
                      : [],
                    [
                      $o(fo(), function (t) {
                        Uo(t, fy, { name: r.name }), s(t);
                      }),
                      $o(yo(), function (t) {
                        Uo(t, fy, { name: r.name }), s(t);
                      }),
                    ],
                  ])
                ),
              ],
            ])
          ),
          eventOrder:
            (((t = {})[lo()] = [
              "streaming",
              "urlinput-events",
              "invalidating",
            ]),
            t),
          model: {
            getDisplayText (t) {
              return t.value;
            },
            selectsOver: !1,
            populateFromBrowse: !1,
          },
          markers: { openClass: "tox-textfield--popup-open" },
          lazySink: o.shared.getSink,
          parts: { menu: Wp(0, 0, "normal") },
          onExecute (t, n, e) {
            Uo(n, py, {});
          },
          onItemExecute (t, n, e, o) {
            s(t), Uo(t, fy, { name: r.name });
          },
        });
        const f = r.label.map(function (t) {
          return ly(t, c);
        });
        var d = Zg(
          ((n = "invalid"),
          (e = st.some(oO)),
          void 0 === (u = "warning") && (u = n),
          void 0 === a && (a = n),
          {
            dom: {
              tag: "div",
              classes: ["tox-icon", `tox-control-wrap__status-icon-${  n}`],
              innerHtml: np(u, c.icons),
              attributes: {
                title: c.translate(a), "aria-live": "polite",
                ...e.fold(
                  function () {
                    return {};
                  },
                  function (t) {
                    return { id: t };
                  }
                )
              },
            },
          })
        );
        const m = Zg({
          dom: { tag: "div", classes: ["tox-control-wrap__status-icon-wrap"] },
          components: [d.asSpec()],
        });
        const g = i.getUrlPicker(r.filetype);
        const p = Wr("browser.url.event");
        var h = Zg({
          dom: { tag: "div", classes: ["tox-control-wrap"] },
          components: [l, m.asSpec()],
          behaviours: Ka([
            Dh.config({
              disabled () {
                return r.disabled || c.isReadOnly();
              },
            }),
          ]),
        });
        const v = Zg(
          Kk(
            {
              name: r.name,
              icon: st.some("browse"),
              text: r.label.getOr(""),
              disabled: r.disabled,
              primary: !1,
              borderless: !0,
            },
            function (t) {
              return jo(t, p);
            },
            c,
            [],
            ["tox-browse-url"]
          )
        );
      return oy.sketch({
        dom: sy([]),
        components: f.toArray().concat([
          {
            dom: { tag: "div", classes: ["tox-form__controls-h-stack"] },
            components: it([
              [h.asSpec()],
              g
                .map(function () {
                  return v.asSpec();
                })
                .toArray(),
            ]),
          },
        ]),
        fieldBehaviours: Ka([
          Dh.config({
            disabled () {
              return r.disabled || c.isReadOnly();
            },
            onDisabled (t) {
              oy.getField(t).each(Dh.disable), v.getOpt(t).each(Dh.disable);
            },
            onEnabled (t) {
              oy.getField(t).each(Dh.enable), v.getOpt(t).each(Dh.enable);
            },
          }),
          nv(),
          $m("url-input-events", [
            $o(p, function (o) {
              Lf.getCurrent(o).each(function (n) {
                const t = El.getValue(n);
                  const e = {fieldname: r.name, ...t};
                g.each(function (t) {
                  t(e).get(function (t) {
                    El.setValue(n, t), Uo(o, fy, { name: r.name });
                  });
                });
              });
            }),
          ]),
        ]),
      });
    };
    const iO = function (r) {
      return function (n, e, o) {
        return Ft(e, "name").fold(
          function () {
            return r(e, o);
          },
          function (t) {
            return n.field(t, r(e, o));
          }
        );
      };
    };
    const uO = {
      bar: iO(function (t, n) {
        return (
          (e = t),
          (o = n.shared),
          {
            dom: {
              tag: "div",
              classes: ["tox-bar", "tox-form__controls-h-stack"],
            },
            components: V(e.items, o.interpreter),
          }
        );
        let e; let o;
      }),
      collection: iO(function (t, n) {
        return xy(t, n.shared.providers);
      }),
      alertbanner: iO(function (t, n) {
        return (
          (e = t),
          (o = n.shared.providers),
          Zb.sketch({
            dom: {
              tag: "div",
              attributes: { role: "alert" },
              classes: [
                "tox-notification",
                "tox-notification--in",
                `tox-notification--${  e.level}`,
              ],
            },
            components: [
              {
                dom: { tag: "div", classes: ["tox-notification__icon"] },
                components: [
                  Qg.sketch({
                    dom: {
                      tag: "button",
                      classes: [
                        "tox-button",
                        "tox-button--naked",
                        "tox-button--icon",
                      ],
                      innerHtml: np(e.icon, o.icons),
                      attributes: { title: o.translate(e.iconTooltip) },
                    },
                    action (t) {
                      Uo(t, gy, { name: "alert-banner", value: e.url });
                    },
                  }),
                ],
              },
              {
                dom: {
                  tag: "div",
                  classes: ["tox-notification__body"],
                  innerHtml: o.translate(e.text),
                },
              },
            ],
          })
        );
        let e; let o;
      }),
      input: iO(function (t, n) {
        return (
          (e = t),
          (o = n.shared.providers),
          IC(
            {
              name: e.name,
              multiline: !1,
              label: e.label,
              inputMode: e.inputMode,
              placeholder: e.placeholder,
              flex: !1,
              disabled: e.disabled,
              classname: "tox-textfield",
              validation: st.none(),
              maximized: e.maximized,
            },
            o
          )
        );
        let e; let o;
      }),
      textarea: iO(function (t, n) {
        return (
          (e = t),
          (o = n.shared.providers),
          IC(
            {
              name: e.name,
              multiline: !0,
              label: e.label,
              inputMode: st.none(),
              placeholder: e.placeholder,
              flex: !0,
              disabled: e.disabled,
              classname: "tox-textarea",
              validation: st.none(),
              maximized: e.maximized,
            },
            o
          )
        );
        let e; let o;
      }),
      label: iO(function (t, n) {
        return (
          (e = t),
          (o = n.shared),
          (r = {
            dom: {
              tag: "label",
              innerHtml: o.providers.translate(e.label),
              classes: ["tox-label"],
            },
          }),
          (i = V(e.items, o.interpreter)),
          {
            dom: { tag: "div", classes: ["tox-form__group"] },
            components: [r].concat(i),
            behaviours: Ka([
              lS(),
              Jm.config({}),
              wS(st.none()),
              Gm.config({ mode: "acyclic" }),
            ]),
          }
        );
        let e; let o; let r; let i;
      }),
      iframe:
        ((TC = function (t, n) {
          return MS(t, n.shared.providers);
        }),
        function (t, n, e) {
          const o = zt(n, { source: "dynamic" });
          return iO(TC)(t, o, e);
        }),
      button: iO(function (t, n) {
        return Qk(t, n.shared.providers);
      }),
      checkbox: iO(function (t, n) {
        return (
          (e = t),
          (o = n.shared.providers),
          (r = El.config({
            store: {
              mode: "manual",
              getValue (t) {
                return t.element().dom().checked;
              },
              setValue (t, n) {
                t.element().dom().checked = n;
              },
            },
          })),
          (i = function (t) {
            return t.element().dom().click(), st.some(!0);
          }),
          (u = oy.parts().field({
            factory: { sketch: ct },
            dom: {
              tag: "input",
              classes: ["tox-checkbox__input"],
              attributes: { type: "checkbox" },
            },
            behaviours: Ka([
              lS(),
              Dh.config({
                disabled () {
                  return e.disabled || o.isReadOnly();
                },
              }),
              uy.config({}),
              eg.config({}),
              r,
              Gm.config({
                mode: "special",
                onEnter: i,
                onSpace: i,
                stopSpaceKeyup: !0,
              }),
              $m("checkbox-events", [
                $o(fo(), function (t, n) {
                  Uo(t, fy, { name: e.name });
                }),
              ]),
            ]),
          })),
          (a = oy
            .parts()
            .label({
              dom: {
                tag: "span",
                classes: ["tox-checkbox__label"],
                innerHtml: o.translate(e.label),
              },
              behaviours: Ka([lx.config({})]),
            })),
          (s = Zg({
            dom: { tag: "div", classes: ["tox-checkbox__icons"] },
            components: [
              (c = function (t) {
                return {
                  dom: {
                    tag: "span",
                    classes: ["tox-icon", `tox-checkbox-icon__${  t}`],
                    innerHtml: np(
                      t === "checked" ? "selected" : "unselected",
                      o.icons
                    ),
                  },
                };
              })("checked"),
              c("unchecked"),
            ],
          })),
          oy.sketch({
            dom: { tag: "label", classes: ["tox-checkbox"] },
            components: [u, s.asSpec(), a],
            fieldBehaviours: Ka([
              Dh.config({
                disabled () {
                  return e.disabled || o.isReadOnly();
                },
                disableClass: "tox-checkbox--disabled",
                onDisabled (t) {
                  oy.getField(t).each(Dh.disable);
                },
                onEnabled (t) {
                  oy.getField(t).each(Dh.enable);
                },
              }),
              nv(),
            ]),
          })
        );
        let e; let o; let r; let i; let u; let a; let c; let s;
      }),
      colorinput: iO(function (t, n) {
        return gx(t, n.shared, n.colorinput);
      }),
      colorpicker: iO(function (t) {
        const n = function (t) {
            return `tox-${  t}`;
          };
          const e = sS(gS, n);
          const r = Zg(
            e.sketch({
              dom: {
                tag: "div",
                classes: ["tox-color-picker-container"],
                attributes: { role: "presentation" },
              },
              onValidHex (t) {
                Uo(t, gy, { name: "hex-valid", value: !0 });
              },
              onInvalidHex (t) {
                Uo(t, gy, { name: "hex-valid", value: !1 });
              },
            })
          );
        return {
          dom: { tag: "div" },
          components: [r.asSpec()],
          behaviours: Ka([
            El.config({
              store: {
                mode: "manual",
                getValue (t) {
                  const n = r.get(t);
                  return Lf.getCurrent(n)
                    .bind(function (t) {
                      return El.getValue(t).hex;
                    })
                    .map(function (t) {
                      return `#${  t}`;
                    })
                    .getOr("");
                },
                setValue (t, n) {
                  const e = /^#([a-fA-F0-9]{3}(?:[a-fA-F0-9]{3})?)/.exec(n);
                    const o = r.get(t);
                  Lf.getCurrent(o).fold(
                    function () {
                      nt.console.log("Can not find form");
                    },
                    function (t) {
                      El.setValue(t, { hex: st.from(e[1]).getOr("") }),
                        eS.getField(t, "hex").each(function (t) {
                          jo(t, lo());
                        });
                    }
                  );
                },
              },
            }),
            lS(),
          ]),
        };
      }),
      dropzone: iO(function (t, n) {
        return kS(t, n.shared.providers);
      }),
      grid: iO(function (t, n) {
        return (
          (e = t),
          (o = n.shared),
          {
            dom: {
              tag: "div",
              classes: [
                "tox-form__grid",
                `tox-form__grid--${  e.columns  }col`,
              ],
            },
            components: V(e.items, o.interpreter),
          }
        );
        let e; let o;
      }),
      selectbox: iO(function (t, n) {
        return (
          (e = t),
          (o = n.shared.providers),
          (r = V(e.items, function (t) {
            return { text: o.translate(t.text), value: t.value };
          })),
          (i = e.label.map(function (t) {
            return ly(t, o);
          })),
          (u = oy.parts().field({
            dom: {},
            selectAttributes: { size: e.size },
            options: r,
            factory: FC,
            selectBehaviours: Ka([
              Dh.config({
                disabled () {
                  return e.disabled || o.isReadOnly();
                },
              }),
              uy.config({}),
              $m("selectbox-change", [
                $o(fo(), function (t, n) {
                  Uo(t, fy, { name: e.name });
                }),
              ]),
            ]),
          })),
          (a =
            e.size > 1
              ? st.none()
              : st.some({
                  dom: {
                    tag: "div",
                    classes: ["tox-selectfield__icon-js"],
                    innerHtml: np("chevron-down", o.icons),
                  },
                })),
          (c = {
            dom: { tag: "div", classes: ["tox-selectfield"] },
            components: it([[u], a.toArray()]),
          }),
          oy.sketch({
            dom: { tag: "div", classes: ["tox-form__group"] },
            components: it([i.toArray(), [c]]),
            fieldBehaviours: Ka([
              Dh.config({
                disabled () {
                  return e.disabled || o.isReadOnly();
                },
                onDisabled (t) {
                  oy.getField(t).each(Dh.disable);
                },
                onEnabled (t) {
                  oy.getField(t).each(Dh.enable);
                },
              }),
              nv(),
            ]),
          })
        );
        let e; let o; let r; let i; let u; let a; let c;
      }),
      sizeinput: iO(function (t, n) {
        return aC(t, n.shared.providers);
      }),
      urlinput: iO(function (t, n) {
        return rO(t, n, n.urlinput);
      }),
      customeditor: iO(function (e) {
        const o = se(st.none());
          const n = Zg({ dom: { tag: e.tag } });
          const r = se(st.none());
        return {
          dom: { tag: "div", classes: ["tox-custom-editor"] },
          behaviours: Ka([
            $m("editor-foo-events", [
              rr(function (t) {
                n.getOpt(t).each(function (n) {
                  let t;
                  (t = e),
                    (Object.prototype.hasOwnProperty.call(t, "init")
                      ? e.init(n.element().dom())
                      : pS.load(e.scriptId, e.scriptUrl).then(function (t) {
                          return t(n.element().dom(), e.settings);
                        })
                    ).then(function (n) {
                      r.get().each(function (t) {
                        n.setValue(t);
                      }),
                        r.set(st.none()),
                        o.set(st.some(n));
                    });
                });
              }),
            ]),
            El.config({
              store: {
                mode: "manual",
                getValue () {
                  return o.get().fold(
                    function () {
                      return r.get().getOr("");
                    },
                    function (t) {
                      return t.getValue();
                    }
                  );
                },
                setValue (t, n) {
                  o.get().fold(
                    function () {
                      r.set(st.some(n));
                    },
                    function (t) {
                      return t.setValue(n);
                    }
                  );
                },
              },
            }),
            lS(),
          ]),
          components: [n.asSpec()],
        };
      }),
      htmlpanel: iO(function (t) {
        return t.presets === "presentation"
          ? Zb.sketch({
              dom: {
                tag: "div",
                classes: ["tox-form__group"],
                innerHtml: t.html,
              },
            })
          : Zb.sketch({
              dom: {
                tag: "div",
                classes: ["tox-form__group"],
                innerHtml: t.html,
                attributes: { role: "document" },
              },
              containerBehaviours: Ka([uy.config({}), eg.config({})]),
            });
      }),
      imagetools: iO(function (t, n) {
        return MC(t, n.shared.providers);
      }),
      table: iO(function (t, n) {
        return (
          (e = t),
          (o = n.shared.providers),
          (u = function (t) {
            return { dom: { tag: "th", innerHtml: o.translate(t) } };
          }),
          (a = function (t) {
            return { dom: { tag: "td", innerHtml: o.translate(t) } };
          }),
          (c = function (t) {
            return { dom: { tag: "tr" }, components: V(t, a) };
          }),
          {
            dom: { tag: "table", classes: ["tox-dialog__table"] },
            components: [
              ((i = e.header),
              {
                dom: { tag: "thead" },
                components: [{ dom: { tag: "tr" }, components: V(i, u) }],
              }),
              ((r = e.cells), { dom: { tag: "tbody" }, components: V(r, c) }),
            ],
            behaviours: Ka([uy.config({}), eg.config({})]),
          }
        );
        let e; let o; let r; let i; let u; let a; let c;
      }),
      panel: iO(function (t, n) {
        return (
          (o = n),
          {
            dom: { tag: "div", classes: (e = t).classes },
            components: V(e.items, o.shared.interpreter),
          }
        );
        let e; let o;
      }),
    };
    const aO = {
      field (t, n) {
        return n;
      },
    };
    const cO = function (n, t, e) {
      var o = zt(e, {
        shared: {
          interpreter (t) {
            return sO(n, t, o);
          },
        },
      });
      return sO(n, t, o);
    };
    var sO = function (n, e, o) {
      return Ft(uO, e.type).fold(
        function () {
          return (
            nt.console.error(
              `Unknown factory type "${ 
                e.type 
                }", defaulting to container: `,
              e
            ),
            e
          );
        },
        function (t) {
          return t(n, e, o);
        }
      );
    };
    const lO = {
      valignCentre: [],
      alignCentre: [],
      alignLeft: [],
      alignRight: [],
      right: [],
      left: [],
      bottom: [],
      top: [],
    };
    const fO = function (t, n, e) {
      const o = Ac(-12, 12, lO);
        const r = { maxHeightFunction: _c() };
      return function () {
        return e()
          ? {
              anchor: "node",
              root: Pi(gr(t())),
              node: st.from(t()),
              bubble: o,
              layouts: {
                onRtl () {
                  return [qg];
                },
                onLtr () {
                  return [Yg];
                },
              },
              overrides: r,
            }
          : {
              anchor: "hotspot",
              hotspot: n(),
              bubble: o,
              layouts: {
                onRtl () {
                  return [Aa];
                },
                onLtr () {
                  return [Ma];
                },
              },
              overrides: r,
            };
      };
    };
    const dO = function (t, n, e) {
      return function () {
        return e()
          ? {
              anchor: "node",
              root: Pi(gr(t())),
              node: st.from(t()),
              layouts: {
                onRtl () {
                  return [Kg];
                },
                onLtr () {
                  return [Kg];
                },
              },
            }
          : {
              anchor: "hotspot",
              hotspot: n(),
              layouts: {
                onRtl () {
                  return [Va];
                },
                onLtr () {
                  return [Va];
                },
              },
            };
      };
    };
    const mO = function (t, n, e) {
      let o;
        let r;
        let i;
        const u = qh(t);
        const a = function () {
          return fe.fromDom(t.getBody());
        };
        const c = function () {
          return fe.fromDom(t.getContentAreaContainer());
        };
        const s = function () {
          return u || !e();
        };
      return {
        inlineDialog: fO(c, n, s),
        banner: dO(c, n, s),
        cursor:
          ((r = t),
          function () {
            return {
              anchor: "selection",
              root: i(),
              getSelection () {
                const t = r.selection.getRng();
                return st.some(
                  Gc.range(
                    fe.fromDom(t.startContainer),
                    t.startOffset,
                    fe.fromDom(t.endContainer),
                    t.endOffset
                  )
                );
              },
            };
          }),
        node:
          ((o = i = a),
          function (t) {
            return { anchor: "node", root: o(), node: t };
          }),
      };
    };
    const gO = function (t) {
      return {
        colorPicker (t, n) {
          lb(r)(t, n);
        },
        hasCustomColors () {
          return Zv(o);
        },
        getColors () {
          return tb(e);
        },
        getColorCols:
          ((n = e = o = r = t),
          function () {
            return ob(n);
          }),
      };
      let n; let e; let o; let r;
    };
    const pO = [
      {
        title: "Headings",
        items: [
          { title: "Heading 1", format: "h1" },
          { title: "Heading 2", format: "h2" },
          { title: "Heading 3", format: "h3" },
          { title: "Heading 4", format: "h4" },
          { title: "Heading 5", format: "h5" },
          { title: "Heading 6", format: "h6" },
        ],
      },
      {
        title: "Inline",
        items: [
          { title: "Bold", format: "bold" },
          { title: "Italic", format: "italic" },
          { title: "Underline", format: "underline" },
          { title: "Strikethrough", format: "strikethrough" },
          { title: "Superscript", format: "superscript" },
          { title: "Subscript", format: "subscript" },
          { title: "Code", format: "code" },
        ],
      },
      {
        title: "Blocks",
        items: [
          { title: "Paragraph", format: "p" },
          { title: "Blockquote", format: "blockquote" },
          { title: "Div", format: "div" },
          { title: "Pre", format: "pre" },
        ],
      },
      {
        title: "Align",
        items: [
          { title: "Left", format: "alignleft" },
          { title: "Center", format: "aligncenter" },
          { title: "Right", format: "alignright" },
          { title: "Justify", format: "alignjustify" },
        ],
      },
    ];
    var hO = function (t) {
      return N(
        t,
        function (t, n) {
          if (It(n, "items")) {
            const e = hO(n.items);
            return {
              customFormats: t.customFormats.concat(e.customFormats),
              formats: t.formats.concat([{ title: n.title, items: e.formats }]),
            };
          }
          if (It(n, "inline") || It(n, "block") || It(n, "selector")) {
            const o = `custom-${  n.title.toLowerCase()}`;
            return {
              customFormats: t.customFormats.concat([{ name: o, format: n }]),
              formats: t.formats.concat([
                { title: n.title, format: o, icon: n.icon },
              ]),
            };
          }
          return {...t, formats: t.formats.concat(n)};
        },
        { customFormats: [], formats: [] }
      );
    };
    const vO = function (i) {
      return (
        (t = i),
        st
          .from(t.getParam("style_formats"))
          .filter(v)
          .map(function (t) {
            let n;
              let e;
              let o;
              const r =
                ((n = i),
                (e = hO(t)),
                (o = function (t) {
                  rt(t, function (t) {
                    n.formatter.has(t.name) ||
                      n.formatter.register(t.name, t.format);
                  });
                }),
                n.formatter
                  ? o(e.customFormats)
                  : n.on("init", function () {
                      o(e.customFormats);
                    }),
                e.formats);
            return i.getParam("style_formats_merge", !1, "boolean")
              ? pO.concat(r)
              : r;
          })
          .getOr(pO)
      );
      let t;
    };
    const bO = function (t, n, e) {
      const o = {
        type: "formatter",
        isSelected: n(t.format),
        getStylePreview: e(t.format),
      };
      return zt(t, o);
    };
    const yO = function (a, t, c, s) {
      var l = function (t) {
        return V(t, function (t) {
          let n;
            let e;
            let o;
            let r;
            const i = Ct(t);
          if (Rt(t, "items")) {
            const u = l(t.items);
            return zt(zt(t, { type: "submenu" }), {
              getStyleItems () {
                return u;
              },
            });
          }
          return Rt(t, "format")
            ? bO(t, c, s)
            : i.length === 1 && M(i, "title")
            ? zt(t, { type: "separator" })
            : ((e = Wr((n = t).title)),
              (o = {
                type: "formatter",
                format: e,
                isSelected: c(e),
                getStylePreview: s(e),
              }),
              (r = zt(n, o)),
              a.formatter.register(e, r),
              r);
        });
      };
      return l(t);
    };
    const xO = vC.trim;
    const wO = function (n) {
      return function (t) {
        if (t && t.nodeType === 1) {
          if (t.contentEditable === n) return !0;
          if (t.getAttribute("data-mce-contenteditable") === n) return !0;
        }
        return !1;
      };
    };
    const SO = wO("true");
    const kO = wO("false");
    const CO = function (t, n, e, o, r) {
      return { type: t, title: n, url: e, level: o, attach: r };
    };
    const OO = function (t) {
      return t.innerText || t.textContent;
    };
    const _O = function (t) {
      return (
        (n = t) && n.nodeName === "A" && (n.id || n.name) !== undefined && EO(t)
      );
      let n;
    };
    const TO = function (t) {
      return t && /^(H[1-6])$/.test(t.nodeName);
    };
    var EO = function (t) {
      return (
        (function (t) {
          for (; (t = t.parentNode); ) {
            const n = t.contentEditable;
            if (n && n !== "inherit") return SO(t);
          }
          return !1;
        })(t) && !kO(t)
      );
    };
    const BO = function (t) {
      return TO(t) && EO(t);
    };
    const DO = function (t) {
      let n;
        let e;
        const o = (n = t).id ? n.id : Wr("h");
      return CO(
        "header",
        OO(t),
        `#${  o}`,
        TO((e = t)) ? parseInt(e.nodeName.substr(1), 10) : 0,
        function () {
          t.id = o;
        }
      );
    };
    const AO = function (t) {
      const n = t.id || t.name;
        const e = OO(t);
      return CO("anchor", e || `#${  n}`, `#${  n}`, 0, Z);
    };
    const MO = function (t) {
      let n; let e;
      return (
        (n = "h1,h2,h3,h4,h5,h6,a:not([href])"),
        (e = t),
        V(os(fe.fromDom(e), n), function (t) {
          return t.dom();
        })
      );
    };
    const FO = function (t) {
      return xO(t.title).length > 0;
    };
    const IO = function (t) {
      const n = MO(t);
      return H(V(H(n, BO), DO).concat(V(H(n, _O), AO)), FO);
    };
    const RO = "tinymce-url-history";
    const VO = function (t) {
      return w(t) && /^https?/.test(t);
    };
    const PO = function (t) {
      return (
        S(t) &&
        At(t, function (t) {
          return !(v((n = t)) && n.length <= 5 && W(n, VO));
          let n;
        }).isNone()
      );
    };
    const HO = function () {
      let t;
        const n = qv.getItem(RO);
      if (n === null) return {};
      try {
        t = JSON.parse(n);
      } catch (e) {
        if (e instanceof SyntaxError)
          return (
            nt.console.log(`Local storage ${  RO  } was not valid JSON`, e), {}
          );
        throw e;
      }
      return PO(t)
        ? t
        : (nt.console.log(`Local storage ${  RO  } was not valid format`, t),
          {});
    };
    const zO = function (t) {
      const n = HO();
      return Object.prototype.hasOwnProperty.call(n, t) ? n[t] : [];
    };
    const NO = function (n, t) {
      if (VO(n)) {
        const e = HO();
          const o = Object.prototype.hasOwnProperty.call(e, t) ? e[t] : [];
          const r = H(o, function (t) {
            return t !== n;
          });
        (e[t] = [n].concat(r).slice(0, 5)),
          (function (t) {
            if (!PO(t))
              throw new Error(`Bad format for history:\n${  JSON.stringify(t)}`);
            qv.setItem(RO, JSON.stringify(t));
          })(e);
      }
    };
    const LO = function (t) {
      return !!t;
    };
    const jO = function (t) {
      return Tt(vC.makeMap(t, /[, ]/), LO);
    };
    const UO = function (t) {
      return st.from(t.getParam("file_picker_callback")).filter(_);
    };
    const WO = function (t, n) {
      let e;
        let o;
        let r;
        let i;
        const u =
          ((e = t),
          (o = st.some(e.getParam("file_picker_types")).filter(LO)),
          (r = st.some(e.getParam("file_browser_callback_types")).filter(LO)),
          (i = o.or(r).map(jO)),
          UO(e).fold(
            function () {
              return !1;
            },
            function (t) {
              return i.fold(
                function () {
                  return !0;
                },
                function (t) {
                  return Ct(t).length > 0 && t;
                }
              );
            }
          ));
      return k(u) ? (u ? UO(t) : st.none()) : u[n] ? UO(t) : st.none();
    };
    const GO = function (t) {
      return st.from(
        (e = (n = t).getParam(
          "file_picker_validator_handler",
          undefined,
          "function"
        )) === undefined
          ? n.getParam("filepicker_validator_handler", undefined, "function")
          : e
      );
      let n; let e;
    };
    const XO = function (n) {
      return {
        getHistory: zO,
        addToHistory: NO,
        getLinkInformation () {
          return !1 === (t = n).getParam("typeahead_urls")
            ? st.none()
            : st.some({
                targets: IO(t.getBody()),
                anchorTop: t.getParam("anchor_top", "#top", "string"),
                anchorBottom: t.getParam("anchor_bottom", "#bottom", "string"),
              });
          let t;
        },
        getValidationHandler () {
          return GO(n);
        },
        getUrlPicker (t) {
          return WO((r = n), (i = t)).map(function (o) {
            return function (n) {
              return Iy(function (e) {
                const t = {
                  filetype: i, fieldname: n.fieldname,
                  ...st.from(n.meta).getOr({})
                };
                o.call(
                  r,
                  function (t, n) {
                    if (!w(t)) throw new Error("Expected value to be string");
                    if (n !== undefined && !S(n))
                      throw new Error("Expected meta to be a object");
                    e({ value: t, meta: n });
                  },
                  n.value,
                  t
                );
              });
            };
          });
          let r; let i;
        },
      };
    };
    const YO = function (t, n, e) {
      let o;
        let r;
        const i = se(!1);
        const u = {
          isPositionedAtTop () {
            return o.get() === "top";
          },
          getDockingMode: (o = se(Xh(n) ? "bottom" : "top")).get,
          setDockingMode: o.set,
        };
        var a = {
          shared: {
            providers: {
              icons () {
                return n.ui.registry.getAll().icons;
              },
              menuItems () {
                return n.ui.registry.getAll().menuItems;
              },
              translate: hh.translate,
              isReadOnly () {
                return n.mode.isReadOnly();
              },
            },
            interpreter (t) {
              return sO(aO, t, a);
            },
            anchors: mO(n, e, u.isPositionedAtTop),
            header: u,
            getSink () {
              return ut.value(t);
            },
          },
          urlinput: XO(n),
          styleselect: (function (o) {
            const r = function (t) {
                return function () {
                  return o.formatter.match(t);
                };
              };
              const i = function (n) {
                return function () {
                  const t = o.formatter.get(n);
                  return t !== undefined
                    ? st.some({
                        tag:
                          (t.length > 0 && (t[0].inline || t[0].block)) ||
                          "div",
                        styles: o.dom.parseStyle(o.formatter.getCssText(n)),
                      })
                    : st.none();
                };
              };
              var u = function (t) {
                const n = t.items;
                return n !== undefined && n.length > 0 ? U(n, u) : [t.format];
              };
              const a = se([]);
              const c = se([]);
              const e = se([]);
              const s = se([]);
              const l = se(!1);
            o.on("PreInit", function (t) {
              const n = vO(o);
                const e = yO(o, n, r, i);
              a.set(e), c.set(U(e, u));
            }),
              o.on("addStyleModifications", function (t) {
                const n = yO(o, t.items, r, i);
                e.set(n), l.set(t.replace), s.set(U(n, u));
              });
            return {
              getData () {
                const t = l.get() ? [] : a.get();
                  const n = e.get();
                return t.concat(n);
              },
              getFlattenedKeys () {
                const t = l.get() ? [] : c.get();
                  const n = s.get();
                return t.concat(n);
              },
            };
          })(n),
          colorinput: gO(n),
          dialog: {
            isDraggableModal:
              ((r = n),
              function () {
                return r.getParam("draggable_modal", !1, "boolean");
              }),
          },
          isContextMenuOpen () {
            return i.get();
          },
          setContextMenuState (t) {
            return i.set(t);
          },
        };
      return a;
    };
    const qO = at(function (t, n) {
      let e; let o; let r;
      (e = t),
        (o = Math.floor(n)),
        (r = vu.max(e, o, [
          "margin-left",
          "border-left-width",
          "padding-left",
          "padding-right",
          "border-right-width",
          "margin-right",
        ])),
        Ni(e, "max-width", `${r  }px`);
    });
    const KO = "contexttoolbar-hide";
    const JO = at([Nn("items"), ia(["itemSelector"]), Bl("tgroupBehaviours", [Gm])]);
    const $O = at([cf({ name: "items", unit: "item" })]);
    const QO = Vf({
      name: "ToolbarGroup",
      configFields: JO(),
      partFields: $O(),
      factory (t, n, e, o) {
        return {
          uid: t.uid,
          dom: t.dom,
          components: n,
          behaviours: Al(t.tgroupBehaviours, [
            Gm.config({ mode: "flow", selector: t.markers.itemSelector }),
          ]),
          domModification: { attributes: { role: "toolbar" } },
        };
      },
    });
    const ZO = at([Nn("dom"), te("shell", !0), Bl("toolbarBehaviours", [Jm])]);
    const t_ = at([
      af({
        name: "groups",
        overrides () {
          return { behaviours: Ka([Jm.config({})]) };
        },
      }),
    ]);
    const n_ = Vf({
      name: "Toolbar",
      configFields: ZO(),
      partFields: t_(),
      factory (n, t, e, o) {
        const r = function (t) {
            return n.shell ? st.some(t) : yf(t, n, "groups");
          };
          const i = n.shell
            ? { behaviours: [Jm.config({})], components: [] }
            : { behaviours: [], components: t };
        return {
          uid: n.uid,
          dom: n.dom,
          components: i.components,
          behaviours: Al(n.toolbarBehaviours, i.behaviours),
          apis: {
            setGroups (t, n) {
              r(t).fold(
                function () {
                  throw (
                    (nt.console.error(
                      "Toolbar was defined to not be a shell, but no groups container was specified in components"
                    ),
                    new Error(
                      "Toolbar was defined to not be a shell, but no groups container was specified in components"
                    ))
                  );
                },
                function (t) {
                  Jm.set(t, n);
                }
              );
            },
          },
          domModification: { attributes: { role: "group" } },
        };
      },
      apis: {
        setGroups (t, n, e) {
          t.setGroups(n, e);
        },
      },
    });
    const e_ = function (t, n, e) {
      return { within: at(t), extra: at(n), withinWidth: at(e) };
    };
    const o_ = function (t, n, o) {
      let e;
        const r =
          ((e = function (t, n) {
            const e = o(t);
            return st.some({
              element: at(t),
              start: at(n),
              finish: at(n + e),
              width: at(e),
            });
          }),
          N(
            t,
            function (n, t) {
              return e(t, n.len).fold(at(n), function (t) {
                return { len: t.finish(), list: n.list.concat([t]) };
              });
            },
            { len: 0, list: [] }
          ).list);
        const i = H(r, function (t) {
          return t.finish() <= n;
        });
        const u = z(
          i,
          function (t, n) {
            return t + n.width();
          },
          0
        );
        const a = r.slice(i.length);
      return { within: at(i), extra: at(a), withinWidth: at(u) };
    };
    const r_ = function (t) {
      return V(t, function (t) {
        return t.element();
      });
    };
    const i_ = function (t, n, e, o) {
      let r;
        let i;
        let u;
        let a;
        let c;
        let s;
        let l;
        let f;
        let d;
        const m = ((r = o_(n, t, e)).extra().length === 0
          ? st.some(r)
          : st.none()
        ).getOrThunk(function () {
          return o_(n, t - e(o), e);
        });
        const g = m.within();
        const p = m.extra();
        const h = m.withinWidth();
      return p.length === 1 && p[0].width() <= e(o)
        ? ((l = p), (f = h), (d = r_(g.concat(l))), e_(d, [], f))
        : p.length >= 1
        ? ((u = p), (a = o), (c = h), (s = r_(g).concat([a])), e_(s, r_(u), c))
        : ((i = h), e_(r_(g), [], i));
    };
    const u_ = function (t, n) {
      const e = V(n, function (t) {
        return au(t);
      });
      n_.setGroups(t, e);
    };
    const a_ = function (t, n, e) {
      const o = xf(t, n, "primary");
        const r = qy.getCoupled(t, "overflowGroup");
      Ni(o.element(), "visibility", "hidden");
      const i = n.builtGroups.get().concat([r]);
        const u = $(i, function (n) {
          return ac(n.element()).bind(function (t) {
            return n.getSystem().getByDom(t).toOption();
          });
        });
      e([]), u_(o, i);
      const a = bu(o.element());
        const c = i_(
          a,
          n.builtGroups.get(),
          function (t) {
            return bu(t.element());
          },
          r
        );
      c.extra().length === 0
        ? (Jm.remove(o, r), e([]))
        : (u_(o, c.within()), e(c.extra())),
        Yi(o.element(), "visibility"),
        qi(o.element()),
        u.each(eg.focus);
    };
    const c_ = at([
      Bl("splitToolbarBehaviours", [qy]),
      ce("builtGroups", function () {
        return se([]);
      }),
    ]);
    const s_ = at(
      [
        ia(["overflowToggledClass"]),
        Qn("getOverflowBounds"),
        Nn("lazySink"),
        ce("overflowGroups", function () {
          return se([]);
        }),
      ].concat(c_())
    );
    const l_ = at([
      rf({ factory: n_, schema: ZO(), name: "primary" }),
      uf({ schema: ZO(), name: "overflow" }),
      uf({ name: "overflow-button" }),
      uf({ name: "overflow-group" }),
    ]);
    const f_ = at([
      ia(["toggledClass"]),
      Nn("lazySink"),
      Wn("fetch"),
      Qn("getBounds"),
      Zn("fireDismissalEventInstead", [te("event", Io())]),
      Pc(),
    ]);
    const d_ = at([
      uf({
        name: "button",
        overrides (t) {
          return {
            dom: { attributes: { "aria-haspopup": "true" } },
            buttonBehaviours: Ka([
              gg.config({
                toggleClass: t.markers.toggledClass,
                aria: { mode: "expanded" },
                toggleOnExecute: !1,
              }),
            ]),
          };
        },
      }),
      uf({
        factory: n_,
        schema: ZO(),
        name: "toolbar",
        overrides (n) {
          return {
            toolbarBehaviours: Ka([
              Gm.config({
                mode: "cyclic",
                onEscape (t) {
                  return yf(t, n, "button").each(eg.focus), st.none();
                },
              }),
            ]),
          };
        },
      }),
    ]);
    const m_ = function (t, n) {
      const e = qy.getCoupled(t, "toolbarSandbox");
      cl.isOpen(e) ? cl.close(e) : cl.open(e, n.toolbar());
    };
    const g_ = function (t, n, e, o) {
      const r = e.getBounds.map(function (t) {
          return t();
        });
        const i = e.lazySink(t).getOrDie();
      Ns.positionWithinBounds(
        i,
        {
          anchor: "hotspot",
          hotspot: t,
          layouts: o,
          overrides: { maxWidthFunction: qO() },
        },
        n,
        r
      );
    };
    const p_ = function (t, n, e, o, r) {
      n_.setGroups(n, r), g_(t, n, e, o), gg.on(t);
    };
    const h_ = Vf({
      name: "FloatingToolbarButton",
      factory (u, t, a, n) {
        return {
          ...Qg.sketch(
              {...n.button(), action (t) {
                  m_(t, n);
                },
                buttonBehaviours: Fl({ dump: n.button().buttonBehaviours }, [
                  qy.config({
                    others: {
                      toolbarSandbox (t) {
                        return (
                          (o = t),
                          (e = a),
                          (r = u),
                          {
                            dom: {
                              tag: "div",
                              attributes: { id: (i = Uu()).id },
                            },
                            behaviours: Ka([
                              Gm.config({
                                mode: "special",
                                onEscape (t) {
                                  return cl.close(t), st.some(!0);
                                },
                              }),
                              cl.config({
                                onOpen (t, n) {
                                  r.fetch().get(function (t) {
                                    p_(o, n, r, e.layouts, t),
                                      i.link(o.element()),
                                      Gm.focusIn(n);
                                  });
                                },
                                onClose () {
                                  gg.off(o), eg.focus(o), i.unlink(o.element());
                                },
                                isPartOf (t, n, e) {
                                  return Gu(n, e) || Gu(o, e);
                                },
                                getAttachPoint () {
                                  return r.lazySink(o).getOrDie();
                                },
                              }),
                              oc.config({
                                channels: {
                                  ...ml(
                                      {
                                        isExtraPart: c,
                                        ...r.fireDismissalEventInstead
                                          .map(function (t) {
                                            return {
                                              fireEventInstead: {
                                                event: t.event,
                                              },
                                            };
                                          })
                                          .getOr({})
                                      }
                                    ),
                                  ...pl({
                                    doReposition () {
                                      cl.getState(
                                        qy.getCoupled(o, "toolbarSandbox")
                                      ).each(function (t) {
                                        g_(o, t, r, e.layouts);
                                      });
                                    },
                                  })
                                },
                              }),
                            ]),
                          }
                        );
                        let o; let e; let r; let i;
                      },
                    },
                  }),
                ]),}
            ),
          apis: {
              setGroups (n, e) {
                cl.getState(qy.getCoupled(n, "toolbarSandbox")).each(function (
                  t
                ) {
                  p_(n, t, u, a.layouts, e);
                });
              },
              reposition (n) {
                cl.getState(qy.getCoupled(n, "toolbarSandbox")).each(function (
                  t
                ) {
                  g_(n, t, u, a.layouts);
                });
              },
              toggle (t) {
                m_(t, n);
              },
              getToolbar (t) {
                return cl.getState(qy.getCoupled(t, "toolbarSandbox"));
              },
            },
        };
      },
      configFields: f_(),
      partFields: d_(),
      apis: {
        setGroups (t, n, e) {
          t.setGroups(n, e);
        },
        reposition (t, n) {
          t.reposition(n);
        },
        toggle (t, n) {
          t.toggle(n);
        },
        getToolbar (t, n) {
          return t.getToolbar(n);
        },
      },
    });
    const v_ = function (t) {
      return V(t, function (t) {
        return au(t);
      });
    };
    const b_ = function (t, e, o) {
      a_(t, o, function (n) {
        o.overflowGroups.set(n),
          e.getOpt(t).each(function (t) {
            h_.setGroups(t, v_(n));
          });
      });
    };
    const y_ = Vf({
      name: "SplitFloatingToolbar",
      configFields: s_(),
      partFields: l_(),
      factory (e, t, n, o) {
        const r = Zg(
          h_.sketch({
            fetch () {
              return Iy(function (t) {
                t(v_(e.overflowGroups.get()));
              });
            },
            layouts: {
              onLtr () {
                return [Ma, Aa];
              },
              onRtl () {
                return [Aa, Ma];
              },
              onBottomLtr () {
                return [Ia, Fa];
              },
              onBottomRtl () {
                return [Fa, Ia];
              },
            },
            getBounds: n.getOverflowBounds,
            lazySink: e.lazySink,
            fireDismissalEventInstead: {},
            markers: { toggledClass: e.markers.overflowToggledClass },
            parts: { button: o["overflow-button"](), toolbar: o.overflow() },
          })
        );
        return {
          uid: e.uid,
          dom: e.dom,
          components: t,
          behaviours: Al(e.splitToolbarBehaviours, [
            qy.config({
              others: {
                overflowGroup () {
                  return QO.sketch(
                    {...o["overflow-group"](), items: [r.asSpec()]}
                  );
                },
              },
            }),
          ]),
          apis: {
            setGroups (t, n) {
              e.builtGroups.set(V(n, t.getSystem().build)), b_(t, r, e);
            },
            refresh (t) {
              return b_(t, r, e);
            },
            toggle (t) {
              r.getOpt(t).each(function (t) {
                h_.toggle(t);
              });
            },
            reposition (t) {
              r.getOpt(t).each(function (t) {
                h_.reposition(t);
              });
            },
            getOverflow (t) {
              return r.getOpt(t).bind(function (t) {
                return h_.getToolbar(t);
              });
            },
          },
          domModification: { attributes: { role: "group" } },
        };
      },
      apis: {
        setGroups (t, n, e) {
          t.setGroups(n, e);
        },
        refresh (t, n) {
          t.refresh(n);
        },
        reposition (t, n) {
          t.reposition(n);
        },
        toggle (t, n) {
          t.toggle(n);
        },
        getOverflow (t, n) {
          return t.getOverflow(n);
        },
      },
    });
    const x_ = function (n, t) {
      return t.getAnimationRoot.fold(
        function () {
          return n.element();
        },
        function (t) {
          return t(n);
        }
      );
    };
    const w_ = function (t) {
      return t.dimension.property;
    };
    const S_ = function (t, n) {
      return t.dimension.getDimension(n);
    };
    const k_ = function (t, n) {
      const e = x_(t, n);
      Ti(e, [n.shrinkingClass, n.growingClass]);
    };
    const C_ = function (t, n) {
      Ci(t.element(), n.openClass),
        Si(t.element(), n.closedClass),
        Ni(t.element(), w_(n), "0px"),
        qi(t.element());
    };
    const O_ = function (t, n) {
      Ci(t.element(), n.closedClass),
        Si(t.element(), n.openClass),
        Yi(t.element(), w_(n));
    };
    const __ = function (t, n, e, o) {
      e.setCollapsed(),
        Ni(t.element(), w_(n), S_(n, t.element())),
        qi(t.element()),
        k_(t, n),
        C_(t, n),
        n.onStartShrink(t),
        n.onShrunk(t);
    };
    const T_ = function (t, n, e, o) {
      const r = o.getOrThunk(function () {
        return S_(n, t.element());
      });
      e.setCollapsed(), Ni(t.element(), w_(n), r), qi(t.element());
      const i = x_(t, n);
      Ci(i, n.growingClass),
        Si(i, n.shrinkingClass),
        C_(t, n),
        n.onStartShrink(t);
    };
    const E_ = function (t, n, e) {
      const o = S_(n, t.element());
      (o === "0px" ? __ : T_)(t, n, e, st.some(o));
    };
    const B_ = function (t, n, e) {
      const o = x_(t, n);
        const r = Oi(o, n.shrinkingClass);
        const i = S_(n, t.element());
      O_(t, n);
      const u = S_(n, t.element());
      (r
        ? function () {
            Ni(t.element(), w_(n), i), qi(t.element());
          }
        : function () {
            C_(t, n);
          })(),
        Ci(o, n.shrinkingClass),
        Si(o, n.growingClass),
        O_(t, n),
        Ni(t.element(), w_(n), u),
        e.setExpanded(),
        n.onStartGrow(t);
    };
    const D_ = function (t, n, e) {
      const o = x_(t, n);
      return !0 === Oi(o, n.growingClass);
    };
    const A_ = function (t, n, e) {
      const o = x_(t, n);
      return !0 === Oi(o, n.shrinkingClass);
    };
    const M_ = /* */ Object.freeze({
      __proto__: null,
      refresh (t, n, e) {
        if (e.isExpanded()) {
          Yi(t.element(), w_(n));
          const o = S_(n, t.element());
          Ni(t.element(), w_(n), o);
        }
      },
      grow (t, n, e) {
        e.isExpanded() || B_(t, n, e);
      },
      shrink (t, n, e) {
        e.isExpanded() && E_(t, n, e);
      },
      immediateShrink (t, n, e) {
        e.isExpanded() && __(t, n, e, st.none());
      },
      hasGrown (t, n, e) {
        return e.isExpanded();
      },
      hasShrunk (t, n, e) {
        return e.isCollapsed();
      },
      isGrowing: D_,
      isShrinking: A_,
      isTransitioning (t, n, e) {
        return !0 === D_(t, n) || !0 === A_(t, n);
      },
      toggleGrow (t, n, e) {
        (e.isExpanded() ? E_ : B_)(t, n, e);
      },
      disableTransitions: k_,
    });
    const F_ = /* */ Object.freeze({
      __proto__: null,
      exhibit (t, n, e) {
        const o = n.expanded;
        return si(
          o
            ? { classes: [n.openClass], styles: {} }
            : {
                classes: [n.closedClass],
                styles: Jt(n.dimension.property, "0px"),
              }
        );
      },
      events (e, o) {
        return qo([
          or(go(), function (t, n) {
            n.event().raw().propertyName === e.dimension.property &&
              (k_(t, e),
              o.isExpanded() && Yi(t.element(), e.dimension.property),
              (o.isExpanded() ? e.onGrown : e.onShrunk)(t));
          }),
        ]);
      },
    });
    const I_ = [
      Nn("closedClass"),
      Nn("openClass"),
      Nn("shrinkingClass"),
      Nn("growingClass"),
      qn("getAnimationRoot"),
      aa("onShrunk"),
      aa("onStartShrink"),
      aa("onGrown"),
      aa("onStartGrow"),
      te("expanded", !1),
      Ln(
        "dimension",
        Dn("property", {
          width: [
            fa("property", "width"),
            fa("getDimension", function (t) {
              return `${bu(t)  }px`;
            }),
          ],
          height: [
            fa("property", "height"),
            fa("getDimension", function (t) {
              return `${lu(t)  }px`;
            }),
          ],
        })
      ),
    ];
    const R_ = $a({
      fields: I_,
      name: "sliding",
      active: F_,
      apis: M_,
      state: /* */ Object.freeze({
        __proto__: null,
        init (t) {
          const n = se(t.expanded);
          return ai({
            isExpanded () {
              return !0 === n.get();
            },
            isCollapsed () {
              return !1 === n.get();
            },
            setCollapsed: g(n.set, !1),
            setExpanded: g(n.set, !0),
            readState () {
              return `expanded: ${  n.get()}`;
            },
          });
        },
      }),
    });
    const V_ = at(
      [
        ia([
          "closedClass",
          "openClass",
          "shrinkingClass",
          "growingClass",
          "overflowToggledClass",
        ]),
        aa("onOpened"),
        aa("onClosed"),
      ].concat(c_())
    );
    const P_ = at([
      rf({ factory: n_, schema: ZO(), name: "primary" }),
      rf({
        factory: n_,
        schema: ZO(),
        name: "overflow",
        overrides (n) {
          return {
            toolbarBehaviours: Ka([
              R_.config({
                dimension: { property: "height" },
                closedClass: n.markers.closedClass,
                openClass: n.markers.openClass,
                shrinkingClass: n.markers.shrinkingClass,
                growingClass: n.markers.growingClass,
                onShrunk (t) {
                  yf(t, n, "overflow-button").each(function (t) {
                    gg.off(t), eg.focus(t);
                  }),
                    n.onClosed(t);
                },
                onGrown (t) {
                  Gm.focusIn(t), n.onOpened(t);
                },
                onStartGrow (t) {
                  yf(t, n, "overflow-button").each(gg.on);
                },
              }),
              Gm.config({
                mode: "acyclic",
                onEscape (t) {
                  return (
                    yf(t, n, "overflow-button").each(eg.focus), st.some(!0)
                  );
                },
              }),
            ]),
          };
        },
      }),
      uf({
        name: "overflow-button",
        overrides (t) {
          return {
            buttonBehaviours: Ka([
              gg.config({
                toggleClass: t.markers.overflowToggledClass,
                aria: { mode: "pressed" },
                toggleOnExecute: !1,
              }),
            ]),
          };
        },
      }),
      uf({ name: "overflow-group" }),
    ]);
    const H_ = function (t, n) {
      yf(t, n, "overflow").each(function (e) {
        a_(t, n, function (t) {
          const n = V(t, function (t) {
            return au(t);
          });
          n_.setGroups(e, n);
        }),
          yf(t, n, "overflow-button").each(function (t) {
            R_.hasGrown(e) && gg.on(t);
          }),
          R_.refresh(e);
      });
    };
    const z_ = Vf({
      name: "SplitSlidingToolbar",
      configFields: V_(),
      partFields: P_(),
      factory (o, t, n, e) {
        const r = "alloy.toolbar.toggle";
        return {
          uid: o.uid,
          dom: o.dom,
          components: t,
          behaviours: Al(o.splitToolbarBehaviours, [
            qy.config({
              others: {
                overflowGroup (n) {
                  return QO.sketch(
                    {...e["overflow-group"](), items: [
                        Qg.sketch(
                          {...e["overflow-button"](), action (t) {
                              jo(n, r);
                            },}
                        ),
                      ],}
                  );
                },
              },
            }),
            $m("toolbar-toggle-events", [
              $o(r, function (n) {
                yf(n, o, "overflow").each(function (t) {
                  H_(n, o), R_.toggleGrow(t);
                });
              }),
            ]),
          ]),
          apis: {
            setGroups (t, n) {
              let e;
              (e = V(n, t.getSystem().build)), o.builtGroups.set(e), H_(t, o);
            },
            refresh (t) {
              return H_(t, o);
            },
            toggle (t) {
              let n; let e;
              yf((n = t), (e = o), "overflow").each(function (t) {
                H_(n, e), R_.toggleGrow(t);
              });
            },
          },
          domModification: { attributes: { role: "group" } },
        };
      },
      apis: {
        setGroups (t, n, e) {
          t.setGroups(n, e);
        },
        refresh (t, n) {
          t.refresh(n);
        },
        toggle (t, n) {
          t.toggle(n);
        },
      },
    });
    const N_ = at(Wr("toolbar-height-change"));
    const L_ = function (t) {
      const n = t.title.fold(
        function () {
          return {};
        },
        function (t) {
          return { attributes: { title: t } };
        }
      );
      return {
        dom: {tag: "div", classes: ["tox-toolbar__group"], ...n},
        components: [QO.parts().items({})],
        items: t.items,
        markers: {
          itemSelector:
            "*:not(.tox-split-button) > .tox-tbtn:not([disabled]), .tox-split-button:not([disabled]), .tox-toolbar-nav-js:not([disabled])",
        },
        tgroupBehaviours: Ka([uy.config({}), eg.config({})]),
      };
    };
    const j_ = function (t) {
      return QO.sketch(L_(t));
    };
    const U_ = function (e, t) {
      const n = rr(function (t) {
        const n = V(e.initGroups, j_);
        n_.setGroups(t, n);
      });
      return Ka([
        iv(e.providers.isReadOnly),
        nv(),
        Gm.config({
          mode: t,
          onEscape: e.onEscape,
          selector: ".tox-toolbar__group",
        }),
        $m("toolbar-events", [n]),
      ]);
    };
    const W_ = function (t) {
      const n = t.cyclicKeying ? "cyclic" : "acyclic";
      return {
        uid: t.uid,
        dom: { tag: "div", classes: ["tox-toolbar-overlord"] },
        parts: {
          "overflow-group": L_({ title: st.none(), items: [] }),
          "overflow-button": Xk(
            {
              name: "more",
              icon: st.some("more-drawer"),
              disabled: !1,
              tooltip: st.some("More..."),
              primary: !1,
              borderless: !1,
            },
            st.none(),
            t.providers
          ),
        },
        splitToolbarBehaviours: U_(t, n),
      };
    };
    const G_ = function (i) {
      const t = W_(i);
        const n = y_
          .parts()
          .primary({ dom: { tag: "div", classes: ["tox-toolbar__primary"] } });
      return y_.sketch(
        {...t, lazySink: i.getSink,
          getOverflowBounds () {
            const t = i.moreDrawerData.lazyHeader().element();
              const n = Mu(t);
              const e = hr(t);
              const o = Mu(e);
              const r = Math.max(e.dom().scrollHeight, o.height);
            return Du(n.x + 4, o.y, n.width - 8, r);
          },
          parts: {...t.parts, overflow: {
              dom: {
                tag: "div",
                classes: ["tox-toolbar__overflow"],
                attributes: i.attributes,
              },
            },},
          components: [n],
          markers: { overflowToggledClass: "tox-tbtn--enabled" },}
      );
    };
    const X_ = function (t) {
      const n = z_
          .parts()
          .primary({ dom: { tag: "div", classes: ["tox-toolbar__primary"] } });
        const e = z_
          .parts()
          .overflow({
            dom: { tag: "div", classes: ["tox-toolbar__overflow"] },
          });
        const o = W_(t);
      return z_.sketch(
        {...o, components: [n, e],
          markers: {
            openClass: "tox-toolbar__overflow--open",
            closedClass: "tox-toolbar__overflow--closed",
            growingClass: "tox-toolbar__overflow--growing",
            shrinkingClass: "tox-toolbar__overflow--shrinking",
            overflowToggledClass: "tox-tbtn--enabled",
          },
          onOpened (t) {
            t.getSystem().broadcastOn([N_()], { type: "opened" });
          },
          onClosed (t) {
            t.getSystem().broadcastOn([N_()], { type: "closed" });
          },}
      );
    };
    const Y_ = function (t) {
      const n = t.cyclicKeying ? "cyclic" : "acyclic";
      return n_.sketch({
        uid: t.uid,
        dom: {
          tag: "div",
          classes: ["tox-toolbar"].concat(
            t.type === Bp.scrolling ? ["tox-toolbar--scrolling"] : []
          ),
        },
        components: [n_.parts().groups({})],
        toolbarBehaviours: U_(t, n),
      });
    };
    const q_ = [
      ie("disabled", !1),
      $n("tooltip"),
      $n("icon"),
      $n("text"),
      ue("onSetup", function () {
        return Z;
      }),
    ];
    const K_ = fn([jn("type"), Wn("onAction")].concat(q_));
    const J_ = function (t) {
      return On("toolbarbutton", K_, t);
    };
    const $_ = [
      $n("text"),
      $n("tooltip"),
      $n("icon"),
      Wn("fetch"),
      ue("onSetup", function () {
        return Z;
      }),
    ];
    const Q_ = fn(b([jn("type")], $_));
    const Z_ = function (t) {
      return On("menubutton", Q_, t);
    };
    const tT = fn([
      jn("type"),
      $n("tooltip"),
      $n("icon"),
      $n("text"),
      Qn("select"),
      Wn("fetch"),
      ue("onSetup", function () {
        return Z;
      }),
      re("presets", "normal", ["normal", "color", "listpreview"]),
      te("columns", 1),
      Wn("onAction"),
      Wn("onItemAction"),
    ]);
    const nT = [ie("active", !1)].concat(q_);
    const eT = fn(nT.concat([jn("type"), Wn("onAction")]));
    const oT = function (t) {
      return On("ToggleButton", eT, t);
    };
    const rT = fn(
      [
        jn("type"),
        Ln(
          "items",
          ((EC = [wn([jn("name"), Yn("items", In)]), In]),
          {
            extract (t, n, e) {
              for (var o = [], r = 0, i = EC; r < i.length; r++) {
                const u = i[r].extract(t, n, e);
                if (u.stype === a.Value) return u;
                o.push(u);
              }
              return nn(o);
            },
            toString () {
              return (
                `oneOf(${ 
                V(EC, function (t) {
                  return t.toString();
                }).join(", ") 
                })`
              );
            },
          })
        ),
      ].concat(q_)
    );
    const iT = [
      ue("predicate", function () {
        return !1;
      }),
      re("scope", "node", ["node", "editor"]),
      re("position", "selection", ["node", "selection", "line"]),
    ];
    const uT = q_.concat([
      te("type", "contextformbutton"),
      te("primary", !1),
      Wn("onAction"),
      ce("original", ct),
    ]);
    const aT = nT.concat([
      te("type", "contextformbutton"),
      te("primary", !1),
      Wn("onAction"),
      ce("original", ct),
    ]);
    const cT = q_.concat([te("type", "contextformbutton")]);
    const sT = nT.concat([te("type", "contextformtogglebutton")]);
    const lT = Dn("type", { contextformbutton: uT, contextformtogglebutton: aT });
    const fT = fn(
      [
        te("type", "contextform"),
        ue("initValue", function () {
          return "";
        }),
        $n("label"),
        Yn("commands", lT),
        Kn(
          "launch",
          Dn("type", { contextformbutton: cT, contextformtogglebutton: sT })
        ),
      ].concat(iT)
    );
    const dT = fn([te("type", "contexttoolbar"), jn("items")].concat(iT));
    const mT = /* */ Object.freeze({
      __proto__: null,
      getState (t, n, e) {
        return e;
      },
    });
    const gT = /* */ Object.freeze({
      __proto__: null,
      events (i, u) {
        const r = function (o, r) {
          i.updateState.each(function (t) {
            const n = t(o, r);
            u.set(n);
          }),
            i.renderComponents.each(function (t) {
              const n = t(r, u.get());
                const e = V(n, o.getSystem().build);
              Ws(o, e);
            });
        };
        return qo([
          $o(xo(), function (t, n) {
            const e = n;
              const o = i.channel;
            M(e.channels(), o) && r(t, e.data());
          }),
          rr(function (n, t) {
            i.initialData.each(function (t) {
              r(n, t);
            });
          }),
        ]);
      },
    });
    const pT = /* */ Object.freeze({
      __proto__: null,
      init () {
        const n = se(st.none());
        return {
          readState () {
            return n.get().fold(
              function () {
                return "none";
              },
              function (t) {
                return t;
              }
            );
          },
          get () {
            return n.get();
          },
          set (t) {
            return n.set(t);
          },
          clear () {
            return n.set(st.none());
          },
        };
      },
    });
    const hT = [
      Nn("channel"),
      qn("renderComponents"),
      qn("updateState"),
      qn("initialData"),
    ];
    const vT = $a({
      fields: hT,
      name: "reflecting",
      active: gT,
      apis: mT,
      state: pT,
    });
    const bT = at(
      [
        Nn("toggleClass"),
        Nn("fetch"),
        sa("onExecute"),
        te("getHotspot", st.some),
        te("getAnchorOverrides", at({})),
        Pc(),
        sa("onItemExecute"),
        qn("lazySink"),
        Nn("dom"),
        aa("onOpen"),
        Bl("splitDropdownBehaviours", [qy, Gm, eg]),
        te("matchWidth", !1),
        te("useMinWidth", !1),
        te("eventOrder", {}),
        qn("role"),
      ].concat(ux())
    );
    const yT = rf({
      factory: Qg,
      schema: [Nn("dom")],
      name: "arrow",
      defaults () {
        return { buttonBehaviours: Ka([eg.revoke()]) };
      },
      overrides (n) {
        return {
          dom: { tag: "span", attributes: { role: "presentation" } },
          action (t) {
            t.getSystem().getByUid(n.uid).each(Wo);
          },
          buttonBehaviours: Ka([
            gg.config({ toggleOnExecute: !1, toggleClass: n.toggleClass }),
          ]),
        };
      },
    });
    const xT = rf({
      factory: Qg,
      schema: [Nn("dom")],
      name: "button",
      defaults () {
        return { buttonBehaviours: Ka([eg.revoke()]) };
      },
      overrides (e) {
        return {
          dom: { tag: "span", attributes: { role: "presentation" } },
          action (n) {
            n.getSystem()
              .getByUid(e.uid)
              .each(function (t) {
                e.onExecute(t, n);
              });
          },
        };
      },
    });
    const wT = at([
      yT,
      xT,
      af({
        factory: {
          sketch (t) {
            return {
              uid: t.uid,
              dom: {
                tag: "span",
                styles: { display: "none" },
                attributes: { "aria-hidden": "true" },
                innerHtml: t.text,
              },
            };
          },
        },
        schema: [Nn("text")],
        name: "aria-descriptor",
      }),
      uf({
        schema: [ra()],
        name: "menu",
        defaults (o) {
          return {
            onExecute (n, e) {
              n.getSystem()
                .getByUid(o.uid)
                .each(function (t) {
                  o.onItemExecute(t, n, e);
                });
            },
          };
        },
      }),
      Jy(),
    ]);
    const ST = Vf({
      name: "SplitDropdown",
      configFields: bT(),
      partFields: wT(),
      factory (o, t, n, e) {
        const r = function (t) {
            Lf.getCurrent(t).each(function (t) {
              Qf.highlightFirst(t), Gm.focusIn(t);
            });
          };
          const i = function (t) {
            tx(
              o,
              function (t) {
                return t;
              },
              t,
              e,
              r,
              Ty.HighlightFirst
            ).get(Z);
          };
          const u = function (t) {
            const n = xf(t, o, "button");
            return Wo(n), st.some(!0);
          };
          const a = {
            ...qo([
                rr(function (e, t) {
                  yf(e, o, "aria-descriptor").each(function (t) {
                    const n = Wr("aria");
                    Fr(t.element(), "id", n),
                      Fr(e.element(), "aria-describedby", n);
                  });
                }),
              ]),
            ...hg(st.some(i))
          };
          const c = {
            repositionMenus (t) {
              gg.isOn(t) && ix(t);
            },
          };
        return {
          uid: o.uid,
          dom: o.dom,
          components: t,
          apis: c,
          eventOrder: {...o.eventOrder, "alloy.execute": ["disabling", "toggling", "alloy.base.behaviour"],},
          events: a,
          behaviours: Al(o.splitDropdownBehaviours, [
            qy.config({
              others: {
                sandbox (t) {
                  const n = xf(t, o, "arrow");
                  return rx(o, t, {
                    onOpen () {
                      gg.on(n), gg.on(t);
                    },
                    onClose () {
                      gg.off(n), gg.off(t);
                    },
                  });
                },
              },
            }),
            Gm.config({
              mode: "special",
              onSpace: u,
              onEnter: u,
              onDown (t) {
                return i(t), st.some(!0);
              },
            }),
            eg.config({}),
            gg.config({ toggleOnExecute: !1, aria: { mode: "expanded" } }),
          ]),
          domModification: {
            attributes: { role: o.role.getOr("button"), "aria-haspopup": !0 },
          },
        };
      },
      apis: {
        repositionMenus (t, n) {
          return t.repositionMenus(n);
        },
      },
    });
    const kT = function (n) {
      return {
        isDisabled () {
          return Dh.isDisabled(n);
        },
        setDisabled (t) {
          return Dh.set(n, t);
        },
      };
    };
    const CT = function (n) {
      return {
        setActive (t) {
          gg.set(n, t);
        },
        isActive () {
          return gg.isOn(n);
        },
        isDisabled () {
          return Dh.isDisabled(n);
        },
        setDisabled (t) {
          return Dh.set(n, t);
        },
      };
    };
    const OT = function (t, n) {
      return t
        .map(function (t) {
          return { "aria-label": n.translate(t), title: n.translate(t) };
        })
        .getOr({});
    };
    const _T = Wr("focus-button");
    const TT = ["checklist", "ordered-list"];
    const ET = [
      "indent",
      "outdent",
      "table-insert-column-after",
      "table-insert-column-before",
      "unordered-list",
    ];
    const BT = function (n, e, t, o, r, i) {
      let u;
        const a = function (t) {
          return hh.isRtl() && M(TT, t) ? `${t  }-rtl` : t;
        };
        const c =
          hh.isRtl() &&
          n.exists(function (t) {
            return M(ET, t);
          });
      return {
        dom: {
          tag: "button",
          classes: ["tox-tbtn"]
            .concat(e.isSome() ? ["tox-tbtn--select"] : [])
            .concat(c ? ["tox-tbtn__icon-rtl"] : []),
          attributes: OT(t, i),
        },
        components: lv([
          n.map(function (t) {
            return Ek(a(t), i.icons);
          }),
          e.map(function (t) {
            return Dk(t, "tox-tbtn", i);
          }),
        ]),
        eventOrder:
          (((u = {})[no()] = [
            "focusing",
            "alloy.base.behaviour",
            "common-button-display-events",
          ]),
          u),
        buttonBehaviours: Ka(
          [
            iv(i.isReadOnly),
            nv(),
            $m("common-button-display-events", [
              $o(no(), function (t, n) {
                n.event().prevent(), jo(t, _T);
              }),
            ]),
          ]
            .concat(
              o
                .map(function (t) {
                  return vT.config({
                    channel: t,
                    initialData: { icon: n, text: e },
                    renderComponents (t, n) {
                      return lv([
                        t.icon.map(function (t) {
                          return Ek(a(t), i.icons);
                        }),
                        t.text.map(function (t) {
                          return Dk(t, "tox-tbtn", i);
                        }),
                      ]);
                    },
                  });
                })
                .toArray()
            )
            .concat(r.getOr([]))
        ),
      };
    };
    const DT = function (t, n, e) {
      let o;
        const r = se(Z);
        const i = BT(t.icon, t.text, t.tooltip, st.none(), st.none(), e);
      return Qg.sketch({
        dom: i.dom,
        components: i.components,
        eventOrder: Mk,
        buttonBehaviours: Ka(
          [
            $m("toolbar-button-events", [
              ((o = { onAction: t.onAction, getApi: n.getApi }),
              ar(function (n, t) {
                uv(
                  o,
                  n
                )(function (t) {
                  Uo(n, Ak, { buttonApi: t }), o.onAction(t);
                });
              })),
              av(n, r),
              cv(n, r),
            ]),
            iv(function () {
              return t.disabled || e.isReadOnly();
            }),
            nv(),
          ].concat(n.toolbarButtonBehaviours)
        ),
      });
    };
    const AT = function (t, n, e) {
      return DT(
        t,
        {
          toolbarButtonBehaviours: [].concat(
            e.length > 0 ? [$m("toolbarButtonWith", e)] : []
          ),
          getApi: kT,
          onSetup: t.onSetup,
        },
        n
      );
    };
    const MT = function (t, n, e) {
      return zt(
        DT(
          t,
          {
            toolbarButtonBehaviours: [
              Jm.config({}),
              gg.config({
                toggleClass: "tox-tbtn--enabled",
                aria: { mode: "pressed" },
                toggleOnExecute: !1,
              }),
            ].concat(e.length > 0 ? [$m("toolbarToggleButtonWith", e)] : []),
            getApi: CT,
            onSetup: t.onSetup,
          },
          n
        )
      );
    };
    const FT = function (n, t) {
      let e;
        let o;
        let r;
        let i;
        const u = Wr("channel-update-split-dropdown-display");
        const a = function (e) {
          return {
            isDisabled () {
              return Dh.isDisabled(e);
            },
            setDisabled (t) {
              return Dh.set(e, t);
            },
            setIconFill (t, n) {
              Lu(
                e.element(),
                `svg path[id="${  t  }"], rect[id="${  t  }"]`
              ).each(function (t) {
                Fr(t, "fill", n);
              });
            },
            setIconStroke (t, n) {
              Lu(
                e.element(),
                `svg path[id="${  t  }"], rect[id="${  t  }"]`
              ).each(function (t) {
                Fr(t, "stroke", n);
              });
            },
            setActive (n) {
              Fr(e.element(), "aria-pressed", n),
                Lu(e.element(), "span").each(function (t) {
                  e.getSystem()
                    .getByDom(t)
                    .each(function (t) {
                      return gg.set(t, n);
                    });
                });
            },
            isActive () {
              return Lu(e.element(), "span").exists(function (t) {
                return e.getSystem().getByDom(t).exists(gg.isOn);
              });
            },
          };
        };
        const c = se(Z);
        const s = { getApi: a, onSetup: n.onSetup };
      return ST.sketch({
        dom: {
          tag: "div",
          classes: ["tox-split-button"],
          attributes: {"aria-pressed": !1, ...OT(n.tooltip, t.providers)},
        },
        onExecute (t) {
          n.onAction(a(t));
        },
        onItemExecute (t, n, e) {},
        splitDropdownBehaviours: Ka([
          rv(t.providers.isReadOnly),
          nv(),
          $m("split-dropdown-events", [$o(_T, eg.focus), av(s, c), cv(s, c)]),
          lx.config({}),
        ]),
        eventOrder:
          (((e = {})[Mo()] = ["alloy.base.behaviour", "split-dropdown-events"]),
          e),
        toggleClass: "tox-tbtn--enabled",
        lazySink: t.getSink,
        fetch:
          ((o = a),
          (r = n),
          (i = t.providers),
          function (n) {
            return Iy(function (t) {
              return r.fetch(t);
            }).map(function (t) {
              return st.from(
                _b(
                  zt(
                    fb(
                      Wr("menu-value"),
                      t,
                      function (t) {
                        r.onItemAction(o(n), t);
                      },
                      r.columns,
                      r.presets,
                      Ap.CLOSE_ON_EXECUTE,
                      r.select.getOr(function () {
                        return !1;
                      }),
                      i
                    ),
                    {
                      movement: mb(r.columns, r.presets),
                      menuBehaviours: uh(
                        r.columns !== "auto"
                          ? []
                          : [
                              rr(function (o, t) {
                                rh(o, 4, Np(r.presets)).each(function (t) {
                                  const n = t.numRows;
                                    const e = t.numColumns;
                                  Gm.setGridSize(o, n, e);
                                });
                              }),
                            ]
                      ),
                    }
                  )
                )
              );
            });
          }),
        parts: { menu: Wp(0, n.columns, n.presets) },
        components: [
          ST.parts().button(
            BT(
              n.icon,
              n.text,
              st.none(),
              st.some(u),
              st.some([
                gg.config({
                  toggleClass: "tox-tbtn--enabled",
                  toggleOnExecute: !1,
                }),
              ]),
              t.providers
            )
          ),
          ST.parts().arrow({
            dom: {
              tag: "button",
              classes: ["tox-tbtn", "tox-split-button__chevron"],
              innerHtml: np("chevron-down", t.providers.icons),
            },
            buttonBehaviours: Ka([rv(t.providers.isReadOnly), nv()]),
          }),
          ST.parts()["aria-descriptor"]({
            text: t.providers.translate("To open the popup, press Shift+Enter"),
          }),
        ],
      });
    };
    const IT = function (i, u) {
      return $o(Ak, function (t, n) {
        let e;
          const o = i.get(t);
          const r =
            ((e = o),
            {
              hide () {
                return jo(e, Oo());
              },
              getValue () {
                return El.getValue(e);
              },
            });
        u.onAction(r, n.event().buttonApi());
      });
    };
    const RT = function (t, n, e) {
      let o;
        let r;
        let i;
        let u;
        let a;
        let c;
        let s;
        let l;
        let f;
        let d;
        let m;
        let g;
        const p = { backstage: { shared: { providers: e } } };
      return n.type === "contextformtogglebutton"
        ? ((s = t),
          (f = p),
          (d = (l = n).original).primary,
          (m = y(d, ["primary"])),
          (g = _n(
            oT(
              {...m, type: "togglebutton", onAction () {}}
            )
          )),
          MT(g, f.backstage.shared.providers, [IT(s, l)]))
        : ((o = t),
          (i = p),
          (u = (r = n).original).primary,
          (a = y(u, ["primary"])),
          (c = _n(
            J_({...a, type: "button", onAction () {}})
          )),
          AT(c, i.backstage.shared.providers, [IT(o, r)]));
    };
    const VT = function (t, n) {
      let e;
        let o;
        let r;
        let i;
        const u = t.label.fold(
          function () {
            return {};
          },
          function (t) {
            return { "aria-label": t };
          }
        );
        const a = Zg(
          Cy.sketch({
            inputClasses: ["tox-toolbar-textfield", "tox-toolbar-nav-js"],
            data: t.initValue(),
            inputAttributes: u,
            selectOnFocus: !0,
            inputBehaviours: Ka([
              Gm.config({
                mode: "special",
                onEnter (t) {
                  return c.findPrimary(t).map(function (t) {
                    return Wo(t), !0;
                  });
                },
                onLeft (t, n) {
                  return n.cut(), st.none();
                },
                onRight (t, n) {
                  return n.cut(), st.none();
                },
              }),
            ]),
          })
        );
        var c =
          ((e = a),
          (o = t.commands),
          (r = n),
          (i = V(o, function (t) {
            return Zg(RT(e, t, r));
          })),
          {
            asSpecs () {
              return V(i, function (t) {
                return t.asSpec();
              });
            },
            findPrimary (e) {
              return $(o, function (t, n) {
                return t.primary
                  ? st
                      .from(i[n])
                      .bind(function (t) {
                        return t.getOpt(e);
                      })
                      .filter(x(Dh.isDisabled))
                  : st.none();
              });
            },
          });
      return [
        { title: st.none(), items: [a.asSpec()] },
        { title: st.none(), items: c.asSpecs() },
      ];
    };
    const PT = VT;
    const HT = function (t, n) {
      let e;
        let o;
        let r;
        let i;
        let u;
        const a = _u(nt.window);
        const c = Au(fe.fromDom(t.getContentAreaContainer()));
        const s = Hh(t) || zh(t) || Lh(t);
        const l =
          ((e = c),
          (o = a),
          (r = Math.max(o.x, e.x)),
          (i = e.right - r),
          (u = o.width - (r - o.x)),
          { x: r, width: Math.min(i, u) });
        const f = l.x;
        const d = l.width;
      if (t.inline && !s) return Du(f, a.y, d, a.height);
      const m = (function (t, n, e, o) {
          const r = fe.fromDom(t.getContainer());
            const i = Lu(r, ".tox-editor-header").getOr(r);
            const u = Au(i);
            const a = u.y >= n.bottom;
            const c = o && !a;
          if (t.inline && c)
            return { y: Math.max(u.bottom, e.y), bottom: e.bottom };
          if (t.inline && !c)
            return { y: e.y, bottom: Math.min(u.y, e.bottom) };
          const s = Au(r);
          return c
            ? {
                y: Math.max(u.bottom, e.y),
                bottom: Math.min(s.bottom, e.bottom),
              }
            : { y: Math.max(s.y, e.y), bottom: Math.min(u.y, e.bottom) };
        })(t, c, a, n.header.isPositionedAtTop());
        const g = m.y;
        const p = m.bottom;
      return Du(f, g, d, p - g);
    };
    const zT = function (n, t) {
      const e = H(t, function (t) {
          return t.predicate(n.dom());
        });
        const o = P(e, function (t) {
          return t.type === "contexttoolbar";
        });
      return { contextToolbars: o.pass, contextForms: o.fail };
    };
    const NT = function (t, n, e) {
      const o = zT(t, n);
      if (o.contextForms.length > 0)
        return st.some({ elem: t, toolbars: [o.contextForms[0]] });
      const r = zT(t, e);
      if (r.contextForms.length > 0)
        return st.some({ elem: t, toolbars: [r.contextForms[0]] });
      if (o.contextToolbars.length > 0 || r.contextToolbars.length > 0) {
        const i = (function (t) {
          if (t.length <= 1) return t;
          const n = function (n) {
              return F(t, function (t) {
                return t.position === n;
              });
            };
            const e = function (n) {
              return H(t, function (t) {
                return t.position === n;
              });
            };
            const o = n("selection");
            const r = n("node");
          if (o || r) {
            if (r && o) {
              const i = e("node");
                const u = V(e("selection"), function (t) {
                  return {...t, position: "node"};
                });
              return i.concat(u);
            }
            return e(o ? "selection" : "node");
          }
          return e("line");
        })(o.contextToolbars.concat(r.contextToolbars));
        return st.some({ elem: t, toolbars: i });
      }
      return st.none();
    };
    const LT = function (t, n, i) {
      return t(n)
        ? st.none()
        : Xe(
            n,
            function (t) {
              const n = zT(t, i.inNodeScope);
                const e = n.contextToolbars;
                const o = n.contextForms;
                const r =
                  o.length > 0
                    ? o
                    : (function (t) {
                        if (t.length <= 1) return t;
                        const n = function (n) {
                          return L(t, function (t) {
                            return t.position === n;
                          });
                        };
                        return n("selection")
                          .orThunk(function () {
                            return n("node");
                          })
                          .orThunk(function () {
                            return n("line");
                          })
                          .map(function (t) {
                            return t.position;
                          })
                          .fold(
                            function () {
                              return [];
                            },
                            function (n) {
                              return H(t, function (t) {
                                return t.position === n;
                              });
                            }
                          );
                      })(e);
              return r.length > 0
                ? st.some({ elem: t, toolbars: r })
                : st.none();
            },
            t
          );
    };
    const jT = function (e, r) {
      const t = {};
        const i = [];
        const u = [];
        const a = {};
        const c = {};
        const o = function (n, e) {
          const o = _n(On("ContextForm", fT, e));
          (t[n] = o).launch.map(function (t) {
            a[`form:${  n}`] = {...e.launch, type:
                t.type === "contextformtogglebutton"
                  ? "togglebutton"
                  : "button",
              onAction () {
                r(o);
              },};
          }),
            o.scope === "editor" ? u.push(o) : i.push(o),
            (c[n] = o);
        };
        const s = function (n, e) {
          On("ContextToolbar", dT, e).each(function (t) {
            e.scope === "editor" ? u.push(t) : i.push(t), (c[n] = t);
          });
        };
        const n = Ct(e);
      return (
        rt(n, function (t) {
          const n = e[t];
          n.type === "contextform"
            ? o(t, n)
            : n.type === "contexttoolbar" && s(t, n);
        }),
        {
          forms: t,
          inNodeScope: i,
          inEditorScope: u,
          lookupTable: c,
          formNavigators: a,
        }
      );
    };
    const UT = Wr("forward-slide");
    const WT = Wr("backward-slide");
    const GT = Wr("change-slide-event");
    const XT = "tox-pop--resizing";
    const YT = function (t, n, e) {
      let u;
        let a;
        let r;
        let c;
        let i;
        const o = e.dataset;
        const s =
          o.type === "basic"
            ? function () {
                return V(o.data, function (t) {
                  return bO(t, e.isSelectedFor, e.getPreviewFor);
                });
              }
            : o.getData;
      return {
        items:
          ((u = n),
          (a = e),
          (r = function (t, n, e, o) {
            const r = u.shared.providers.translate(t.title);
            if (t.type === "separator")
              return st.some({ type: "separator", text: r });
            if (t.type !== "submenu")
              return st.some(
                {
                  type: "togglemenuitem",
                    text: r,
                    icon: t.icon,
                    active: t.isSelected(o),
                    disabled: e,
                    onAction: a.onAction(t),
                  ...t.getStylePreview().fold(
                    function () {
                      return {};
                    },
                    function (t) {
                      return { meta: { style: t } };
                    }
                  )
                }
              );
            const i = U(t.getStyleItems(), function (t) {
              return c(t, n, o);
            });
            return n === 0 && i.length <= 0
              ? st.none()
              : st.some({
                  type: "nestedmenuitem",
                  text: r,
                  disabled: i.length <= 0,
                  getSubmenuItems () {
                    return U(t.getStyleItems(), function (t) {
                      return c(t, n, o);
                    });
                  },
                });
          }),
          (c = function (t, n, e) {
            const o = t.type === "formatter" && a.isInvalid(t);
            return n === 0
              ? o
                ? []
                : r(t, n, !1, e).toArray()
              : r(t, n, o, e).toArray();
          }),
          {
            validateItems: (i = function (t) {
              const n = a.getCurrentValue();
                const e = a.shouldHide ? 0 : 1;
              return U(t, function (t) {
                return c(t, e, n);
              });
            }),
            getFetch (o, r) {
              return function (t) {
                const n = r();
                  const e = i(n);
                t(Lk(e, Ap.CLOSE_ON_EXECUTE, o, !1));
              };
            },
          }),
        getStyleItems: s,
      };
    };
    const qT = function (o, t, n) {
      const e = YT(0, t, n);
        const r = e.items;
        const i = e.getStyleItems;
      return Rk(
        {
          text: n.icon.isSome() ? st.none() : st.some(""),
          icon: n.icon,
          tooltip: st.from(n.tooltip),
          role: st.none(),
          fetch: r.getFetch(t, i),
          onSetup (e) {
            return (
              n.setInitialValue.each(function (t) {
                return t(e.getComponent());
              }),
              n.nodeChangeHandler
                .map(function (t) {
                  const n = t(e.getComponent());
                  return (
                    o.on("NodeChange", n),
                    function () {
                      o.off("NodeChange", n);
                    }
                  );
                })
                .getOr(Z)
            );
          },
          getApi (t) {
            return {
              getComponent () {
                return t;
              },
            };
          },
          columns: 1,
          presets: "normal",
          classes: n.icon.isSome() ? [] : ["bespoke"],
          dropdownBehaviours: [],
        },
        "tox-tbtn",
        t.shared
      );
    };
  ((DC = BC = BC || {})[(DC.SemiColon = 0)] = "SemiColon"),
    (DC[(DC.Space = 1)] = "Space");
  let KT;
    let JT;
    const $T = function (t, n, e, o) {
      let r;
        let i;
        const u = t.getParam(n, e, "string");
      return {
        type: "basic",
        data:
          ((i = u),
          (r =
            o === BC.SemiColon ? i.replace(/;$/, "").split(";") : i.split(" ")),
          V(r, function (t) {
            let n = t;
              let e = t;
              const o = t.split("=");
            return (
              o.length > 1 && ((n = o[0]), (e = o[1])), { title: n, format: e }
            );
          })),
      };
    };
    const QT = [
      {
        title: "Left",
        icon: "align-left",
        format: "alignleft",
        command: "JustifyLeft",
      },
      {
        title: "Center",
        icon: "align-center",
        format: "aligncenter",
        command: "JustifyCenter",
      },
      {
        title: "Right",
        icon: "align-right",
        format: "alignright",
        command: "JustifyRight",
      },
      {
        title: "Justify",
        icon: "align-justify",
        format: "alignjustify",
        command: "JustifyFull",
      },
    ];
    const ZT = function (e) {
      const n = function (t) {
          const n = L(QT, function (t) {
            return e.formatter.match(t.format);
          }).fold(
            function () {
              return "left";
            },
            function (t) {
              return t.title.toLowerCase();
            }
          );
          Uo(t, Ik, { icon: `align-${  n}` });
        };
        const t = st.some(function (t) {
          return function () {
            return n(t);
          };
        });
        const o = st.some(function (t) {
          return n(t);
        });
        const r = { type: "basic", data: QT };
      return {
        tooltip: "Align",
        icon: st.some("align-left"),
        isSelectedFor (t) {
          return function () {
            return e.formatter.match(t);
          };
        },
        getCurrentValue: at(st.none()),
        getPreviewFor (t) {
          return function () {
            return st.none();
          };
        },
        onAction (n) {
          return function () {
            return L(QT, function (t) {
              return t.format === n.format;
            }).each(function (t) {
              return e.execCommand(t.command);
            });
          };
        },
        setInitialValue: o,
        nodeChangeHandler: t,
        dataset: r,
        shouldHide: !1,
        isInvalid (t) {
          return !e.formatter.canApply(t.format);
        },
      };
    };
    const tE = [
      "-apple-system",
      "Segoe UI",
      "Roboto",
      "Helvetica Neue",
      "sans-serif",
    ];
    const nE = function (t) {
      const n = t.split(/\s*,\s*/);
      return V(n, function (t) {
        return t.replace(/^['"]+|['"]+$/g, "");
      });
    };
    const eE = function (t) {
      let n;
      return (
        t.indexOf("-apple-system") === 0 &&
        ((n = nE(t.toLowerCase())),
        W(tE, function (t) {
          return n.indexOf(t.toLowerCase()) > -1;
        }))
      );
    };
    const oE = function (r) {
      const i = function () {
          const e = function (t) {
              return t ? nE(t)[0] : "";
            };
            const t = r.queryCommandValue("FontName");
            const n = u.data;
            const o = t ? t.toLowerCase() : "";
          return {
            matchOpt: L(n, function (t) {
              const n = t.format;
              return (
                n.toLowerCase() === o ||
                e(n).toLowerCase() === e(o).toLowerCase()
              );
            }).orThunk(function () {
              return eE(o)
                ? st.from({ title: "System Font", format: o })
                : st.none();
            }),
            font: t,
          };
        };
        const n = function (t) {
          const n = i();
            const e = n.matchOpt;
            const o = n.font;
            const r = e.fold(
              function () {
                return o;
              },
              function (t) {
                return t.title;
              }
            );
          Uo(t, Fk, { text: r });
        };
        const t = st.some(function (t) {
          return function () {
            return n(t);
          };
        });
        const e = st.some(function (t) {
          return n(t);
        });
        var u = $T(
          r,
          "font_formats",
          "Andale Mono=andale mono,monospace;Arial=arial,helvetica,sans-serif;Arial Black=arial black,sans-serif;Book Antiqua=book antiqua,palatino,serif;Comic Sans MS=comic sans ms,sans-serif;Courier New=courier new,courier,monospace;Georgia=georgia,palatino,serif;Helvetica=helvetica,arial,sans-serif;Impact=impact,sans-serif;Symbol=symbol;Tahoma=tahoma,arial,helvetica,sans-serif;Terminal=terminal,monaco,monospace;Times New Roman=times new roman,times,serif;Trebuchet MS=trebuchet ms,geneva,sans-serif;Verdana=verdana,geneva,sans-serif;Webdings=webdings;Wingdings=wingdings,zapf dingbats",
          BC.SemiColon
        );
      return {
        tooltip: "Fonts",
        icon: st.none(),
        isSelectedFor (n) {
          return function (t) {
            return t.exists(function (t) {
              return t.format === n;
            });
          };
        },
        getCurrentValue () {
          return i().matchOpt;
        },
        getPreviewFor (t) {
          return function () {
            return st.some({
              tag: "div",
              styles: t.indexOf("dings") === -1 ? { "font-family": t } : {},
            });
          };
        },
        onAction (t) {
          return function () {
            r.undoManager.transact(function () {
              r.focus(), r.execCommand("FontName", !1, t.format);
            });
          };
        },
        setInitialValue: e,
        nodeChangeHandler: t,
        dataset: u,
        shouldHide: !1,
        isInvalid () {
          return !1;
        },
      };
    };
    const rE = {
      "8pt": "1",
      "10pt": "2",
      "12pt": "3",
      "14pt": "4",
      "18pt": "5",
      "24pt": "6",
      "36pt": "7",
    };
    const iE = function (t, n) {
      return /[0-9.]+px$/.test(t)
        ? ((e = (72 * parseInt(t, 10)) / 96),
          (o = n || 0),
          (r = Math.pow(10, o)),
          `${Math.round(e * r) / r  }pt`)
        : t;
      let e; let o; let r;
    };
    const uE = function (e) {
      const i = function () {
          let o = st.none();
            const r = u.data;
            const i = e.queryCommandValue("FontSize");
          if (i)
            for (
              let t = function (t) {
                  const n = iE(i, t);
                    const e = Ft(rE, n).getOr("");
                  o = L(r, function (t) {
                    return t.format === i || t.format === n || t.format === e;
                  });
                },
                n = 3;
              o.isNone() && n >= 0;
              n--
            )
              t(n);
          return { matchOpt: o, size: i };
        };
        const t = at(at(st.none()));
        const n = function (t) {
          const n = i();
            const e = n.matchOpt;
            const o = n.size;
            const r = e.fold(
              function () {
                return o;
              },
              function (t) {
                return t.title;
              }
            );
          Uo(t, Fk, { text: r });
        };
        const o = st.some(function (t) {
          return function () {
            return n(t);
          };
        });
        const r = st.some(function (t) {
          return n(t);
        });
        var u = $T(
          e,
          "fontsize_formats",
          "8pt 10pt 12pt 14pt 18pt 24pt 36pt",
          BC.Space
        );
      return {
        tooltip: "Font sizes",
        icon: st.none(),
        isSelectedFor (n) {
          return function (t) {
            return t.exists(function (t) {
              return t.format === n;
            });
          };
        },
        getPreviewFor: t,
        getCurrentValue () {
          return i().matchOpt;
        },
        onAction (t) {
          return function () {
            e.undoManager.transact(function () {
              e.focus(), e.execCommand("FontSize", !1, t.format);
            });
          };
        },
        setInitialValue: r,
        nodeChangeHandler: o,
        dataset: u,
        shouldHide: !1,
        isInvalid () {
          return !1;
        },
      };
    };
    const aE = function (e, t, n) {
      const o = t();
      return $(n, function (n) {
        return L(o, function (t) {
          return e.formatter.matchNode(n, t.format);
        });
      }).orThunk(function () {
        return e.formatter.match("p")
          ? st.some({ title: "Paragraph", format: "p" })
          : st.none();
      });
    };
    const cE = function (t) {
      const n = t.selection.getStart(!0) || t.getBody();
      return t.dom.getParents(
        n,
        function () {
          return !0;
        },
        t.getBody()
      );
    };
    const sE = function (o, r) {
      return function (n) {
        const e = se(st.none());
          const t = function () {
            n.setActive(o.formatter.match(r));
            const t = o.formatter.formatChanged(r, n.setActive).unbind;
            e.set(st.some(t));
          };
        return (
          o.initialized ? t() : o.on("init", t),
          function () {
            return e.get().each(function (t) {
              return t();
            });
          }
        );
      };
    };
    const lE = function (n) {
      return function (t) {
        return function () {
          n.undoManager.transact(function () {
            n.focus(), n.execCommand("mceToggleFormat", !1, t.format);
          });
        };
      };
    };
    const fE = function (o) {
      const e = function (t, n) {
          const e = aE(
            o,
            function () {
              return r.data;
            },
            t
          ).fold(
            function () {
              return "Paragraph";
            },
            function (t) {
              return t.title;
            }
          );
          Uo(n, Fk, { text: e });
        };
        const t = st.some(function (n) {
          return function (t) {
            return e(t.parents, n);
          };
        });
        const n = st.some(function (t) {
          const n = cE(o);
          e(n, t);
        });
        var r = $T(
          o,
          "block_formats",
          "Paragraph=p;Heading 1=h1;Heading 2=h2;Heading 3=h3;Heading 4=h4;Heading 5=h5;Heading 6=h6;Preformatted=pre",
          BC.SemiColon
        );
      return {
        tooltip: "Blocks",
        icon: st.none(),
        isSelectedFor (t) {
          return function () {
            return o.formatter.match(t);
          };
        },
        getCurrentValue: at(st.none()),
        getPreviewFor (n) {
          return function () {
            const t = o.formatter.get(n);
            return st.some({
              tag: (t.length > 0 && (t[0].inline || t[0].block)) || "div",
              styles: o.dom.parseStyle(o.formatter.getCssText(n)),
            });
          };
        },
        onAction: lE(o),
        setInitialValue: n,
        nodeChangeHandler: t,
        dataset: r,
        shouldHide: !1,
        isInvalid (t) {
          return !o.formatter.canApply(t.format);
        },
      };
    };
    const dE = function (i, t) {
      const e = function (t, n) {
          var e = function (t) {
              const n = t.items;
              return n !== undefined && n.length > 0
                ? U(n, e)
                : [{ title: t.title, format: t.format }];
            };
            const o = U(vO(i), e);
            const r = aE(
              i,
              function () {
                return o;
              },
              t
            ).fold(
              function () {
                return "Paragraph";
              },
              function (t) {
                return t.title;
              }
            );
          Uo(n, Fk, { text: r });
        };
        const n = st.some(function (n) {
          return function (t) {
            return e(t.parents, n);
          };
        });
        const o = st.some(function (t) {
          const n = cE(i);
          e(n, t);
        });
      return {
        tooltip: "Formats",
        icon: st.none(),
        isSelectedFor (t) {
          return function () {
            return i.formatter.match(t);
          };
        },
        getCurrentValue: at(st.none()),
        getPreviewFor (n) {
          return function () {
            const t = i.formatter.get(n);
            return t !== undefined
              ? st.some({
                  tag: (t.length > 0 && (t[0].inline || t[0].block)) || "div",
                  styles: i.dom.parseStyle(i.formatter.getCssText(n)),
                })
              : st.none();
          };
        },
        onAction: lE(i),
        setInitialValue: o,
        nodeChangeHandler: n,
        shouldHide: i.getParam("style_formats_autohide", !1, "boolean"),
        isInvalid (t) {
          return !i.formatter.canApply(t.format);
        },
        dataset: t,
      };
    };
    const mE = [
      { name: "history", items: ["undo", "redo"] },
      { name: "styles", items: ["styleselect"] },
      { name: "formatting", items: ["bold", "italic"] },
      {
        name: "alignment",
        items: ["alignleft", "aligncenter", "alignright", "alignjustify"],
      },
      { name: "indentation", items: ["outdent", "indent"] },
      { name: "permanent pen", items: ["permanentpen"] },
      { name: "comments", items: ["addcomment"] },
    ];
    const gE = function (r, i) {
      return function (t, n, e) {
        const o = r(t)
          .mapError(function (t) {
            return En(t);
          })
          .getOrDie();
        return i(o, n, e);
      };
    };
    const pE = {
      button: gE(J_, function (t, n) {
        return (e = t), (o = n.backstage.shared.providers), AT(e, o, []);
        let e; let o;
      }),
      togglebutton: gE(oT, function (t, n) {
        return (e = t), (o = n.backstage.shared.providers), MT(e, o, []);
        let e; let o;
      }),
      menubutton: gE(Z_, function (t, n) {
        return Uk(t, "tox-tbtn", n.backstage, st.none());
      }),
      splitbutton: gE(
        function (t) {
          return On("SplitButton", tT, t);
        },
        function (t, n) {
          return FT(t, n.backstage.shared);
        }
      ),
      grouptoolbarbutton: gE(
        function (t) {
          return On("GroupToolbarButton", rT, t);
        },
        function (t, n, e) {
          let o;
            let r;
            let i;
            let u;
            let a;
            let c;
            const s = e.ui.registry.getAll().buttons;
            const l =
              (((o = {})[Rc] = n.backstage.shared.header.isPositionedAtTop()
                ? Yu.TopToBottom
                : Yu.BottomToTop),
              o);
          switch (Wh(e)) {
            case Bp.floating:
              return (
                (r = t),
                (i = n.backstage),
                (u = function (t) {
                  return yE(
                    e,
                    { buttons: s, toolbar: t, allowToolbarGroups: !1 },
                    n,
                    st.none()
                  );
                }),
                (a = l),
                (c = i.shared),
                h_.sketch({
                  lazySink: c.getSink,
                  fetch () {
                    return Iy(function (t) {
                      t(V(u(r.items), j_));
                    });
                  },
                  markers: { toggledClass: "tox-tbtn--enabled" },
                  parts: {
                    button: BT(
                      r.icon,
                      r.text,
                      r.tooltip,
                      st.none(),
                      st.none(),
                      c.providers
                    ),
                    toolbar: {
                      dom: {
                        tag: "div",
                        classes: ["tox-toolbar__overflow"],
                        attributes: a,
                      },
                    },
                  },
                })
              );
            default:
              throw new Error(
                "Toolbar groups are only supported when using floating toolbar mode"
              );
          }
        }
      ),
      styleSelectButton (t, n) {
        return (
          (e = t),
          (o = n.backstage),
          (r = {type: "advanced", ...o.styleselect}),
          qT(e, o, dE(e, r))
        );
        let e; let o; let r;
      },
      fontsizeSelectButton (t, n) {
        return (e = t), (o = n.backstage), qT(e, o, uE(e));
        let e; let o;
      },
      fontSelectButton (t, n) {
        return (e = t), (o = n.backstage), qT(e, o, oE(e));
        let e; let o;
      },
      formatButton (t, n) {
        return (e = t), (o = n.backstage), qT(e, o, fE(e));
        let e; let o;
      },
      alignMenuButton (t, n) {
        return (e = t), (o = n.backstage), qT(e, o, ZT(e));
        let e; let o;
      },
    };
    const hE = {
      styleselect: pE.styleSelectButton,
      fontsizeselect: pE.fontsizeSelectButton,
      fontselect: pE.fontSelectButton,
      formatselect: pE.formatButton,
      align: pE.alignMenuButton,
    };
    const vE = function (t) {
      let n;
        let e;
        let o;
        const r = t.toolbar;
        const i = t.buttons;
      return !1 === r
        ? []
        : r === undefined || !0 === r
        ? ((e = i),
          (o = V(mE, function (t) {
            const n = H(t.items, function (t) {
              return It(e, t) || It(hE, t);
            });
            return { name: t.name, items: n };
          })),
          H(o, function (t) {
            return t.items.length > 0;
          }))
        : w(r)
        ? ((n = r.split("|")),
          V(n, function (t) {
            return { items: t.trim().split(" ") };
          }))
        : T(r, function (t) {
            return It(t, "name") && It(t, "items");
          })
        ? r
        : (nt.console.error(
            "Toolbar type should be string, string[], boolean or ToolbarGroup[]"
          ),
          []);
    };
    const bE = function (r, n, i, u, a, t) {
      return Ft(n, i.toLowerCase())
        .orThunk(function () {
          return t.bind(function (t) {
            return $(t, function (t) {
              return Ft(n, t + i.toLowerCase());
            });
          });
        })
        .fold(
          function () {
            return Ft(hE, i.toLowerCase())
              .map(function (t) {
                return t(r, a);
              })
              .orThunk(function () {
                return st.none();
              });
          },
          function (t) {
            return t.type !== "grouptoolbarbutton" || u
              ? ((e = a),
                (o = r),
                Ft(pE, (n = t).type).fold(
                  function () {
                    return (
                      nt.console.error("skipping button defined by", n),
                      st.none()
                    );
                  },
                  function (t) {
                    return st.some(t(n, e, o));
                  }
                ))
              : (nt.console.warn(
                  `Ignoring the '${ 
                    i 
                    }' toolbar button. Group toolbar buttons are only supported when using floating toolbar mode and cannot be nested.`
                ),
                st.none());
            let n; let e; let o;
          }
        );
    };
    var yE = function (e, o, r, i) {
      const t = vE(o);
        const n = V(t, function (t) {
          const n = U(t.items, function (t) {
            return t.trim().length === 0
              ? []
              : bE(e, o.buttons, t, o.allowToolbarGroups, r, i).toArray();
          });
          return { title: st.from(e.translate(t.name)), items: n };
        });
      return H(n, function (t) {
        return t.items.length > 0;
      });
    };
    const xE = {
      valignCentre: [],
      alignCentre: [],
      alignLeft: ["tox-pop--align-left"],
      alignRight: ["tox-pop--align-right"],
      right: ["tox-pop--right"],
      left: ["tox-pop--left"],
      bottom: ["tox-pop--bottom"],
      top: ["tox-pop--top"],
    };
    const wE = { maxHeightFunction: _c(), maxWidthFunction: qO() };
    const SE = {
      onLtr () {
        return [Ra, Va, Fa, Aa, Ia, Ma, Kg, Jg, Yg, Gg, qg, Xg];
      },
      onRtl () {
        return [Ra, Va, Ia, Ma, Fa, Aa, Kg, Jg, qg, Xg, Yg, Gg];
      },
    };
    const kE = {
      onLtr () {
        return [Va, Aa, Ma, Fa, Ia, Ra, Kg, Jg, Yg, Gg, qg, Xg];
      },
      onRtl () {
        return [Va, Ma, Aa, Ia, Fa, Ra, Kg, Jg, qg, Xg, Yg, Gg];
      },
    };
    const CE = function (c, t, e, s) {
      let o;
        let r;
        const l = ze().deviceType.isTouch;
        const a = uu(
          ((o = {
            sink: e,
            onEscape () {
              return c.focus(), st.some(!0);
            },
          }),
          (r = se([])),
          zg.sketch({
            dom: { tag: "div", classes: ["tox-pop"] },
            fireDismissalEventInstead: { event: "doNotDismissYet" },
            onShow (t) {
              r.set([]),
                zg.getContent(t).each(function (t) {
                  Yi(t.element(), "visibility");
                }),
                Ci(t.element(), XT),
                Yi(t.element(), "width");
            },
            inlineBehaviours: Ka([
              $m("context-toolbar-events", [
                or(go(), function (t, n) {
                  Ci(t.element(), XT), Yi(t.element(), "width");
                }),
                $o(GT, function (n, e) {
                  Yi(n.element(), "width");
                  const t = bu(n.element());
                  zg.setContent(n, e.event().contents()), Si(n.element(), XT);
                  const o = bu(n.element());
                  Ni(n.element(), "width", `${t  }px`),
                    zg.getContent(n).each(function (t) {
                      e.event()
                        .focus()
                        .bind(function (t) {
                          return ic(t), ac(n.element());
                        })
                        .orThunk(function () {
                          return Gm.focusIn(t), uc();
                        });
                    }),
                    $g.setTimeout(function () {
                      Ni(n.element(), "width", `${o  }px`);
                    }, 0);
                }),
                $o(UT, function (t, n) {
                  zg.getContent(t).each(function (t) {
                    r.set(r.get().concat([{ bar: t, focus: uc() }]));
                  }),
                    Uo(t, GT, {
                      contents: n.event().forwardContents(),
                      focus: st.none(),
                    });
                }),
                $o(WT, function (n, t) {
                  K(r.get()).each(function (t) {
                    r.set(r.get().slice(0, r.get().length - 1)),
                      Uo(n, GT, { contents: au(t.bar), focus: t.focus });
                  });
                }),
              ]),
              Gm.config({
                mode: "special",
                onEscape (n) {
                  return K(r.get()).fold(
                    function () {
                      return o.onEscape();
                    },
                    function (t) {
                      return jo(n, WT), st.some(!0);
                    }
                  );
                },
              }),
            ]),
            lazySink () {
              return ut.value(o.sink);
            },
          }))
        );
        const f = function () {
          return HT(c, s.backstage.shared);
        };
        const u = function () {
          if (l() && s.backstage.isContextMenuOpen()) return !0;
          let t;
            let n;
            let e;
            let o;
            let r;
            let i;
            const u =
              ((t = m
                .get()
                .map(function (t) {
                  return t.getBoundingClientRect();
                })
                .getOrThunk(function () {
                  return c.selection.getRng().getBoundingClientRect();
                })),
              (n = c.inline ? ku().top() : Mu(fe.fromDom(c.getBody())).y),
              { y: t.top + n, bottom: t.bottom + n });
            const a = f();
          return (
            (e = u.y),
            (o = u.bottom),
            (r = a.y),
            (i = a.bottom),
            !(Math.max(e, r) <= Math.min(o, i))
          );
        };
        const n = function () {
          zg.hide(a);
        };
        const i = function () {
          d.get().each(function (t) {
            const n = a.element();
            Yi(n, "display"),
              u()
                ? Ni(n, "display", "none")
                : Ns.positionWithinBounds(e, t, a, st.some(f()));
          });
        };
        var d = se(st.none());
        var m = se(st.none());
        const g = se(null);
        const p = function (t) {
          return {
            dom: { tag: "div", classes: ["tox-pop__dialog"] },
            components: [t],
            behaviours: Ka([
              Gm.config({ mode: "acyclic" }),
              $m("pop-dialog-wrap-events", [
                rr(function (t) {
                  c.shortcuts.add("ctrl+F9", "focus statusbar", function () {
                    return Gm.focusIn(t);
                  });
                }),
                ir(function (t) {
                  c.shortcuts.remove("ctrl+F9");
                }),
              ]),
            ]),
          };
        };
        const h = Lt(function () {
          return jT(t, function (t) {
            const n = v([t]);
            Uo(a, UT, { forwardContents: p(n) });
          });
        });
        var v = function (t) {
          const n = c.ui.registry.getAll().buttons;
            const e = h();
            const o = {...n, ...e.formNavigators};
            const r = Wh(c) === Bp.scrolling ? Bp.scrolling : Bp.default;
            const i = it(
              V(t, function (t) {
                return t.type === "contexttoolbar"
                  ? yE(
                      c,
                      { buttons: o, toolbar: t.items, allowToolbarGroups: !1 },
                      s,
                      st.some(["form:"])
                    )
                  : ((n = t), (e = s.backstage.shared.providers), PT(n, e));
                let n; let e;
              })
            );
          return Y_({
            type: r,
            uid: Wr("context-toolbar"),
            initGroups: i,
            onEscape: st.none,
            cyclicKeying: !0,
            providers: s.backstage.shared.providers,
          });
        };
      c.on("contexttoolbar-show", function (n) {
        const t = h();
        Ft(t.lookupTable, n.toolbarKey).each(function (t) {
          y([t], n.target === c ? st.none() : st.some(n)),
            zg.getContent(a).each(Gm.focusIn);
        });
      });
      const b = function (t, n) {
          let e;
            let o;
            const r =
              t === "node"
                ? s.backstage.shared.anchors.node(n)
                : s.backstage.shared.anchors.cursor();
          return zt(
            r,
            ((e = t),
            (o = l()),
            e === "line"
              ? {
                  bubble: Ac(12, 0, xE),
                  layouts: {
                    onLtr () {
                      return [Pa];
                    },
                    onRtl () {
                      return [Ha];
                    },
                  },
                  overrides: wE,
                }
              : { bubble: Ac(0, 12, xE), layouts: o ? kE : SE, overrides: wE })
          );
        };
        var y = function (t, n) {
          if ((w(), !l() || !s.backstage.isContextMenuOpen())) {
            const e = v(t);
              const o = n.map(fe.fromDom);
              const r = b(t[0].position, o);
            d.set(st.some(r)), m.set(n);
            const i = a.element();
            Yi(i, "display"),
              zg.showWithinBounds(a, r, p(e), function () {
                return st.some(f());
              }),
              u() && Ni(i, "display", "none");
          }
        };
        const x = function () {
          if (c.hasFocus()) {
            let t;
              let n;
              let e;
              let o;
              let r;
              let i;
              const u = h();
            (t = u),
              (n = c),
              (o = fe.fromDom(n.getBody())),
              (r = function (t) {
                return je(t, o);
              }),
              (i = fe.fromDom(n.selection.getNode())),
              (r((e = i)) || We(o, e)
                ? NT(i, t.inNodeScope, t.inEditorScope).orThunk(function () {
                    return LT(r, i, t);
                  })
                : st.none()
              ).fold(
                function () {
                  d.set(st.none()), zg.hide(a);
                },
                function (t) {
                  y(t.toolbars, st.some(t.elem.dom()));
                }
              );
          }
        };
        var w = function () {
          const t = g.get();
          t !== null && ($g.clearTimeout(t), g.set(null));
        };
        const S = function (t) {
          w(), g.set(t);
        };
      c.on("init", function () {
        c.on(KO, n),
          c.on("ScrollContent ScrollWindow longpress", i),
          c.on(
            "click keyup focus SetContent ObjectResized ResizeEditor",
            function () {
              S($g.setEditorTimeout(c, x, 0));
            }
          ),
          c.on("focusout", function (t) {
            $g.setEditorTimeout(
              c,
              function () {
                ac(e.element()).isNone() &&
                  ac(a.element()).isNone() &&
                  (d.set(st.none()), zg.hide(a));
              },
              0
            );
          }),
          c.on("SwitchMode", function () {
            c.mode.isReadOnly() && (d.set(st.none()), zg.hide(a));
          }),
          c.on("NodeChange", function (t) {
            ac(a.element()).fold(
              function () {
                S($g.setEditorTimeout(c, x, 0));
              },
              function (t) {}
            );
          });
      });
    };
    const OE = Tf;
    const _E = lf;
    const TE = at([
      te("shell", !1),
      Nn("makeItem"),
      te("setupItem", Z),
      Ml("listBehaviours", [Jm]),
    ]);
    const EE = af({
      name: "items",
      overrides () {
        return { behaviours: Ka([Jm.config({})]) };
      },
    });
    const BE = at([EE]);
    const DE = Vf({
      name: at("CustomList")(),
      configFields: TE(),
      partFields: BE(),
      factory (s, t, n, e) {
        const o = s.shell
            ? { behaviours: [Jm.config({})], components: [] }
            : { behaviours: [], components: t };
          const r = function (t) {
            return s.shell ? st.some(t) : yf(t, s, "items");
          };
        return {
          uid: s.uid,
          dom: s.dom,
          components: o.components,
          behaviours: Al(s.listBehaviours, o.behaviours),
          apis: {
            setItems (a, c) {
              r(a).fold(
                function () {
                  throw (
                    (nt.console.error(
                      "Custom List was defined to not be a shell, but no item container was specified in components"
                    ),
                    new Error(
                      "Custom List was defined to not be a shell, but no item container was specified in components"
                    ))
                  );
                },
                function (n) {
                  const t = Jm.contents(n);
                    const e = c.length;
                    const o = e - t.length;
                    const r =
                      o > 0
                        ? I(o, function () {
                            return s.makeItem();
                          })
                        : [];
                    const i = t.slice(e);
                  rt(i, function (t) {
                    return Jm.remove(n, t);
                  }),
                    rt(r, function (t) {
                      return Jm.append(n, t);
                    });
                  const u = Jm.contents(n);
                  rt(u, function (t, n) {
                    s.setupItem(a, t, c[n], n);
                  });
                }
              );
            },
          },
        };
      },
      apis: {
        setItems (t, n, e) {
          t.setItems(n, e);
        },
      },
    });
    const AE = function (t) {
      return (Gi(t, "position").is("fixed") ? st.none() : yr(t)).orThunk(
        function () {
          const e = fe.fromTag("span");
          return br(t).bind(function (t) {
            Or(t, e);
            const n = yr(e);
            return Er(e), n;
          });
        }
      );
    };
    const ME = function (t) {
      return AE(t)
        .map(pu)
        .getOrThunk(function () {
          return mu(0, 0);
        });
    };
    const FE = Vt([
      { static: [] },
      { absolute: ["positionCss"] },
      { fixed: ["positionCss"] },
    ]);
    const IE = function (t, n) {
      const e = t.element();
      Si(e, n.transitionClass),
        Ci(e, n.fadeOutClass),
        Si(e, n.fadeInClass),
        n.onShow(t);
    };
    const RE = function (t, n) {
      const e = t.element();
      Si(e, n.transitionClass),
        Ci(e, n.fadeInClass),
        Si(e, n.fadeOutClass),
        n.onHide(t);
    };
    const VE = function (t, o, r) {
      return W(t, function (t) {
        switch (t) {
          case "bottom":
            return (e = r), o.bottom <= e.bottom;
          case "top":
            return (n = r), o.y >= n.y;
        }
        let n; let e;
      });
    };
    const PE = function (n, t) {
      return t.getInitialPosition().map(function (t) {
        return Du(t.bounds.x, t.bounds.y, bu(n), lu(n));
      });
    };
    const HE = function (t, n, e) {
      e.setInitialPosition(
        st.some({
          style: (function (t) {
            const n = {};
              const e = t.dom();
            if (Ei(e))
              for (let o = 0; o < e.style.length; o++) {
                const r = e.style.item(o);
                n[r] = e.style[r];
              }
            return n;
          })(t),
          position: Ui(t, "position") || "static",
          bounds: n,
        })
      );
    };
    const zE = function (e, o, r) {
      return r.getInitialPosition().bind(function (t) {
        switch ((r.setInitialPosition(st.none()), t.position)) {
          case "static":
            return st.some(FE.static());
          case "absolute":
            var n = AE(e)
              .map(Au)
              .getOrThunk(function () {
                return Au(Vi());
              });
            return st.some(
              FE.absolute(
                sc(
                  "absolute",
                  Ft(t.style, "left").map(function (t) {
                    return o.x - n.x;
                  }),
                  Ft(t.style, "top").map(function (t) {
                    return o.y - n.y;
                  }),
                  Ft(t.style, "right").map(function (t) {
                    return n.right - o.right;
                  }),
                  Ft(t.style, "bottom").map(function (t) {
                    return n.bottom - o.bottom;
                  })
                )
              )
            );
          default:
            return st.none();
        }
      });
    };
    const NE = function (t, n, e) {
      let o;
        let r;
        let i;
        const u = t.element();
      return Gi(u, "position").is("fixed")
        ? ((r = n),
          PE((o = u), (i = e))
            .filter(function (t) {
              return VE(i.getModes(), t, r);
            })
            .bind(function (t) {
              return zE(o, t, i);
            }))
        : (function (t, n, e) {
            const o = Au(t);
            if (VE(e.getModes(), o, n)) return st.none();
            HE(t, o, e);
            const r = Fu();
              const i = o.x - r.x;
              const u = n.y - r.y;
              const a = r.bottom - n.bottom;
              const c = o.y <= n.y;
            return st.some(
              FE.fixed(
                sc(
                  "fixed",
                  st.some(i),
                  c ? st.some(u) : st.none(),
                  st.none(),
                  c ? st.none() : st.some(a)
                )
              )
            );
          })(u, n, e);
    };
    const LE = function (n, t) {
      rt(["left", "right", "top", "bottom", "position"], function (t) {
        return Yi(n.element(), t);
      }),
        t.onUndocked(n);
    };
    const jE = function (t, n, e) {
      lc(t.element(), e),
        (e.position() === "fixed" ? n.onDocked : n.onUndocked)(t);
    };
    const UE = function (i, t, u, a, c) {
      void 0 === c && (c = !1),
        t.contextual.each(function (r) {
          r.lazyContext(i).each(function (t) {
            let n;
              let e;
              const o = ((e = a), (n = t).y < e.bottom && n.bottom > e.y);
            o !== u.isVisible() &&
              (u.setVisible(o),
              c && !o
                ? (_i(i.element(), [r.fadeOutClass]), r.onHide(i))
                : (o ? IE : RE)(i, r));
          });
        });
    };
    const WE = function (n, e, t) {
      let o;
        let r;
        const i = n.element();
      t.setDocked(!1),
        (o = t),
        (r = n.element()),
        PE(r, o)
          .bind(function (t) {
            return zE(r, t, o);
          })
          .each(function (t) {
            t.fold(
              function () {
                return LE(n, e);
              },
              function (t) {
                return jE(n, e, t);
              },
              Z
            );
          }),
        t.setVisible(!0),
        e.contextual.each(function (t) {
          Ti(i, [t.fadeInClass, t.fadeOutClass, t.transitionClass]),
            t.onShow(n);
        }),
        GE(n, e, t);
    };
    var GE = function (t, n, e) {
      let o; let r; let i; let u; let a;
      t.getSystem().isConnected() &&
        ((o = t),
        (i = e),
        (u = (r = n).lazyViewport(o)),
        (a = i.isDocked()) && UE(o, r, i, u),
        NE(o, u, i).each(function (t) {
          i.setDocked(!a),
            t.fold(
              function () {
                return LE(o, r);
              },
              function (t) {
                return jE(o, r, t);
              },
              function (t) {
                UE(o, r, i, u, !0), jE(o, r, t);
              }
            );
        }));
    };
    const XE = function (t, n, e) {
      e.isDocked() && WE(t, n, e);
    };
    const YE = /* */ Object.freeze({
      __proto__: null,
      refresh: GE,
      reset: XE,
      isDocked (t, n, e) {
        return e.isDocked();
      },
      getModes (t, n, e) {
        return e.getModes();
      },
      setModes (t, n, e, o) {
        return e.setModes(o);
      },
    });
    const qE = /* */ Object.freeze({
      __proto__: null,
      events (o, r) {
        return qo([
          or(go(), function (n, e) {
            o.contextual.each(function (t) {
              Oi(n.element(), t.transitionClass) &&
                (Ti(n.element(), [t.transitionClass, t.fadeInClass]),
                (r.isVisible() ? t.onShown : t.onHidden)(n));
              e.stop();
            });
          }),
          $o(Do(), function (t, n) {
            GE(t, o, r);
          }),
          $o(Ao(), function (t, n) {
            XE(t, o, r);
          }),
        ]);
      },
    });
    const KE = [
      Zn("contextual", [
        jn("fadeInClass"),
        jn("fadeOutClass"),
        jn("transitionClass"),
        Wn("lazyContext"),
        aa("onShow"),
        aa("onShown"),
        aa("onHide"),
        aa("onHidden"),
      ]),
      ue("lazyViewport", Fu),
      ne("modes", ["top", "bottom"], dn(In)),
      aa("onDocked"),
      aa("onUndocked"),
    ];
    const JE = $a({
      fields: KE,
      name: "docking",
      active: qE,
      apis: YE,
      state: /* */ Object.freeze({
        __proto__: null,
        init (t) {
          const n = se(!1);
            const e = se(!0);
            const o = se(st.none());
            const r = se(t.modes);
          return ai({
            isDocked: n.get,
            setDocked: n.set,
            getInitialPosition: o.get,
            setInitialPosition: o.set,
            isVisible: e.get,
            setVisible: e.set,
            getModes: r.get,
            setModes: r.set,
            readState () {
              return (
                `docked:  ${ 
                n.get() 
                }, visible: ${ 
                e.get() 
                }, modes: ${ 
                r.get().join(",")}`
              );
            },
          });
        },
      }),
    });
    const $E = {
      fadeInClass: "tox-editor-dock-fadein",
      fadeOutClass: "tox-editor-dock-fadeout",
      transitionClass: "tox-editor-dock-transition",
    };
    const QE = "tox-tinymce--toolbar-sticky-on";
    const ZE = "tox-tinymce--toolbar-sticky-off";
    const tB = function (r) {
      const i = r.element();
      br(i).each(function (t) {
        let n;
          const e = `padding-${  JE.getModes(r)[0]}`;
        if (JE.isDocked(r)) {
          const o = bu(t);
          Ni(i, "width", `${o  }px`),
            Ni(
              t,
              e,
              `${fu((n = i)) +
                (parseInt(Ui(n, "margin-top"), 10) || 0) +
                (parseInt(Ui(n, "margin-bottom"), 10) || 0) 
                }px`
            );
        } else Yi(i, "width"), Yi(t, e);
      });
    };
    const nB = function (t, n) {
      n
        ? (Ci(t, $E.fadeOutClass), _i(t, [$E.transitionClass, $E.fadeInClass]))
        : (Ci(t, $E.fadeInClass), _i(t, [$E.fadeOutClass, $E.transitionClass]));
    };
    const eB = function (t, n) {
      const e = fe.fromDom(t.getContainer());
      n ? (Si(e, QE), Ci(e, ZE)) : (Si(e, ZE), Ci(e, QE));
    };
    const oB = function (c, t) {
      let n;
        const i = se(st.none());
        const o = t.getSink;
        const u = function (n) {
          o().each(function (t) {
            return n(t.element());
          });
        };
        const e = function (t) {
          c.inline || tB(t),
            eB(c, JE.isDocked(t)),
            t.getSystem().broadcastOn([ll()], {}),
            o().each(function (t) {
              return t.getSystem().broadcastOn([ll()], {});
            });
        };
        const r = c.inline
          ? []
          : [
              oc.config({
                channels: (((n = {})[N_()] = { onReceive: tB }), n),
              }),
            ];
      return b(
        [
          eg.config({}),
          JE.config({
            contextual: {
              lazyContext (t) {
                  let n;
                    let e;
                    const o = fu(t.element());
                    const r = c.inline
                      ? c.getContentAreaContainer()
                      : c.getContainer();
                    const i = Au(fe.fromDom(r));
                    const u = i.height - o;
                    const a =
                      i.y +
                      ((n = t), (e = "top"), M(JE.getModes(n), e) ? 0 : o);
                  return st.some(Du(i.x, a, i.width, u));
                },
                onShow () {
                  u(function (t) {
                    return nB(t, !0);
                  });
                },
                onShown (r) {
                  u(function (t) {
                    return Ti(t, [$E.transitionClass, $E.fadeInClass]);
                  }),
                    i.get().each(function (t) {
                      let n; let e; let o;
                      (n = r.element()),
                        (o = gr((e = t))),
                        uc(o)
                          .filter(function (t) {
                            return !je(e, t);
                          })
                          .filter(function (t) {
                            return je(t, fe.fromDom(o.dom().body)) || We(n, t);
                          })
                          .each(function () {
                            return ic(e);
                          }),
                        i.set(st.none());
                    });
                },
                onHide (t) {
                  let n; let e;
                  i.set(
                    ((n = t.element()),
                    (e = o),
                    ac(n).orThunk(function () {
                      return e()
                        .toOption()
                        .bind(function (t) {
                          return ac(t.element());
                        });
                    }))
                  ),
                    u(function (t) {
                      return nB(t, !1);
                    });
                },
                onHidden () {
                  u(function (t) {
                    return Ti(t, [$E.transitionClass]);
                  });
                },
              ...$E
            },
            modes: [t.header.getDockingMode()],
            onDocked: e,
            onUndocked: e,
          }),
        ],
        r
      );
    };
    const rB = /* */ Object.freeze({
      __proto__: null,
      setup (t, n, o) {
        t.inline ||
          (n.header.isPositionedAtTop() ||
            t.on("ResizeEditor", function () {
              o().each(JE.reset);
            }),
          t.on("ResizeWindow ResizeEditor", function () {
            o().each(tB);
          }),
          t.on("SkinLoaded", function () {
            o().each(function (t) {
              JE.isDocked(t) ? JE.reset(t) : JE.refresh(t);
            });
          }),
          t.on("FullscreenStateChanged", function () {
            o().each(JE.reset);
          })),
          t.on("AfterScrollIntoView", function (e) {
            o().each(function (t) {
              JE.refresh(t);
              const n = t.element();
              zd(n) &&
                (function (t, n) {
                  const e = gr(n);
                    const o = e.dom().defaultView.innerHeight;
                    const r = ku(e);
                    const i = fe.fromDom(t.elm);
                    const u = Mu(i);
                    const a = lu(i);
                    const c = u.y;
                    const s = c + a;
                    const l = pu(n);
                    const f = lu(n);
                    const d = l.top();
                    const m = d + f;
                    const g = Math.abs(d - r.top()) < 2;
                    const p = Math.abs(m - (r.top() + o)) < 2;
                  if (g && c < m) Cu(r.left(), c - f, e);
                  else if (p && d < s) {
                    const h = c - o + a + f;
                    Cu(r.left(), h, e);
                  }
                })(e, n);
            });
          }),
          t.on("PostRender", function () {
            eB(t, !1);
          });
      },
      isDocked (t) {
        return t().map(JE.isDocked).getOr(!1);
      },
      getBehaviours: oB,
    });
    const iB = Z;
    const uB = c;
    const aB = at([]);
    const cB = /* */ Object.freeze({
      __proto__: null,
      setup: iB,
      isDocked: uB,
      getBehaviours: aB,
    });
    const sB = Rf({
      factory (n, o) {
        const t = {
          focus: Gm.focusIn,
          setMenus (t, n) {
            const e = V(n, function (n) {
              const t = {
                  type: "menubutton",
                  text: n.text,
                  fetch (t) {
                    t(n.getItems());
                  },
                };
                const e = Z_(t)
                  .mapError(function (t) {
                    return En(t);
                  })
                  .getOrDie();
              return Uk(e, "tox-mbtn", o.backstage, st.some("menuitem"));
            });
            Jm.set(t, e);
          },
        };
        return {
          uid: n.uid,
          dom: n.dom,
          components: [],
          behaviours: Ka([
            Jm.config({}),
            $m("menubar-events", [
              rr(function (t) {
                n.onSetup(t);
              }),
              $o(io(), function (e, t) {
                Lu(e.element(), ".tox-mbtn--active").each(function (n) {
                  ju(t.event().target(), ".tox-mbtn").each(function (t) {
                    je(n, t) ||
                      e
                        .getSystem()
                        .getByDom(n)
                        .each(function (n) {
                          e.getSystem()
                            .getByDom(t)
                            .each(function (t) {
                              sx.expand(t), sx.close(n), eg.focus(t);
                            });
                        });
                  });
                });
              }),
              $o(Vo(), function (e, t) {
                t.event()
                  .prevFocus()
                  .bind(function (t) {
                    return e.getSystem().getByDom(t).toOption();
                  })
                  .each(function (n) {
                    t.event()
                      .newFocus()
                      .bind(function (t) {
                        return e.getSystem().getByDom(t).toOption();
                      })
                      .each(function (t) {
                        sx.isOpen(n) && (sx.expand(t), sx.close(n));
                      });
                  });
              }),
            ]),
            Gm.config({
              mode: "flow",
              selector: ".tox-mbtn",
              onEscape (t) {
                return n.onEscape(t), st.some(!0);
              },
            }),
            uy.config({}),
          ]),
          apis: t,
          domModification: { attributes: { role: "menubar" } },
        };
      },
      name: "silver.Menubar",
      configFields: [
        Nn("dom"),
        Nn("uid"),
        Nn("onEscape"),
        Nn("backstage"),
        te("onSetup", Z),
      ],
      apis: {
        focus (t, n) {
          t.focus(n);
        },
        setMenus (t, n, e) {
          t.setMenus(n, e);
        },
      },
    });
    const lB = "container";
    const fB = [Bl("slotBehaviours", [])];
    const dB = function (t) {
      return `<alloy.field.${  t  }>`;
    };
    const mB = function (r, t) {
      let e;
        const n = function (t) {
          return kf(r);
        };
        const o = function (e, o) {
          return function (t, n) {
            return yf(t, r, n)
              .map(function (t) {
                return e(t, n);
              })
              .getOr(o);
          };
        };
        const i = function (t, n) {
          return Ir(t.element(), "aria-hidden") !== "true";
        };
        const u = o(i, !1);
        const a = o(function (t, n) {
          if (i(t)) {
            const e = t.element();
            Ni(e, "display", "none"),
              Fr(e, "aria-hidden", "true"),
              Uo(t, Po(), { name: n, visible: !1 });
          }
        });
        const c = function (n, t) {
          rt(t, function (t) {
            return e(n, t);
          });
        };
        const s = o(function (t, n) {
          if (!i(t)) {
            const e = t.element();
            Yi(e, "display"),
              Pr(e, "aria-hidden"),
              Uo(t, Po(), { name: n, visible: !0 });
          }
        });
        const l = {
          getSlotNames: n,
          getSlot (t, n) {
            return yf(t, r, n);
          },
          isShowing: u,
          hideSlot: (e = a),
          hideAllSlots (t) {
            return c(t, n());
          },
          showSlot: s,
        };
      return {
        uid: r.uid,
        dom: r.dom,
        components: t,
        behaviours: Dl(r.slotBehaviours),
        apis: l,
      };
    };
    const gB = Tt(
      {
        getSlotNames (t, n) {
          return t.getSlotNames(n);
        },
        getSlot (t, n, e) {
          return t.getSlot(n, e);
        },
        isShowing (t, n, e) {
          return t.isShowing(n, e);
        },
        hideSlot (t, n, e) {
          return t.hideSlot(n, e);
        },
        hideAllSlots (t, n) {
          return t.hideAllSlots(n);
        },
        showSlot (t, n, e) {
          return t.showSlot(n, e);
        },
      },
      function (t) {
        return ii(t);
      }
    );
    const pB = {...gB, sketch (t) {
        let e;
          const n =
            ((e = []),
            {
              slot (t, n) {
                return e.push(t), gf(lB, dB(t), n);
              },
              record () {
                return e;
              },
            });
          const o = t(n);
          const r = n.record();
          const i = V(r, function (t) {
            return rf({ name: t, pname: dB(t) });
          });
        return Bf(lB, fB, i, mB, o);
      },};
    const hB = fn([
      $n("icon"),
      $n("tooltip"),
      ue("onShow", Z),
      ue("onHide", Z),
      ue("onSetup", function () {
        return Z;
      }),
    ]);
    const vB = function (t) {
      return {
        element () {
          return t.element().dom();
        },
      };
    };
    const bB = function (e, o) {
      const r = V(Ct(o), function (t) {
        const n = o[t];
          const e = _n(On("sidebar", hB, n));
        return {
          name: t,
          getApi: vB,
          onSetup: e.onSetup,
          onShow: e.onShow,
          onHide: e.onHide,
        };
      });
      return V(r, function (t) {
        const n = se(Z);
        return e.slot(t.name, {
          dom: { tag: "div", classes: ["tox-sidebar__pane"] },
          behaviours: uh([
            av(t, n),
            cv(t, n),
            $o(Po(), function (n, t) {
              const e = t.event();
              L(r, function (t) {
                return t.name === e.name();
              }).each(function (t) {
                (e.visible() ? t.onShow : t.onHide)(t.getApi(n));
              });
            }),
          ]),
        });
      });
    };
    const yB = function (t, e) {
      Lf.getCurrent(t).each(function (t) {
        return Jm.set(t, [
          ((n = e),
          pB.sketch(function (t) {
            return {
              dom: { tag: "div", classes: ["tox-sidebar__pane-container"] },
              components: bB(t, n),
              slotBehaviours: uh([
                rr(function (t) {
                  return pB.hideAllSlots(t);
                }),
              ]),
            };
          })),
        ]);
        let n;
      });
    };
    const xB = function (t) {
      return Lf.getCurrent(t).bind(function (t) {
        return R_.isGrowing(t) || R_.hasGrown(t)
          ? Lf.getCurrent(t).bind(function (n) {
              return L(pB.getSlotNames(n), function (t) {
                return pB.isShowing(n, t);
              });
            })
          : st.none();
      });
    };
    const wB = Wr("FixSizeEvent");
    const SB = Wr("AutoSizeEvent");
    const kB = function (t) {
      let n;
        let e;
        let o;
        const r = fe.fromHtml(t);
        const i = xr(r);
        const u =
          ((e =
            (n = r).dom().attributes !== undefined ? n.dom().attributes : []),
          N(
            e,
            function (t, n) {
              let e;
              return n.name === "class"
                ? t
                : ({...t, ...(((e = {})[n.name] = n.value), e)});
            },
            {}
          ));
        const a = ((o = r), Array.prototype.slice.call(o.dom().classList, 0));
        const c = i.length === 0 ? {} : { innerHtml: Dr(r) };
      return {tag: cr(r), classes: a, attributes: u, ...c};
    };
    const CB = function (t, n, e) {
      const o = t.element();
      !0 === n
        ? (Jm.set(t, [
            {
              dom: {
                tag: "div",
                attributes: { "aria-label": e.translate("Loading...") },
                classes: ["tox-throbber__busy-spinner"],
              },
              components: [
                {
                  dom: kB(
                    '<div class="tox-spinner"><div></div><div></div><div></div></div>'
                  ),
                },
              ],
              behaviours: Ka([
                Gm.config({
                  mode: "special",
                  onTab () {
                    return st.some(!0);
                  },
                  onShiftTab () {
                    return st.some(!0);
                  },
                }),
                eg.config({}),
              ]),
            },
          ]),
          Yi(o, "display"),
          Pr(o, "aria-hidden"))
        : (Jm.set(t, []),
          Ni(o, "display", "none"),
          Fr(o, "aria-hidden", "true"));
    };
    const OB = _E.optional({
      factory: sB,
      name: "menubar",
      schema: [Nn("backstage")],
    });
    const _B = _E.optional({
      factory: {
        sketch (t) {
          return DE.sketch({
            uid: t.uid,
            dom: t.dom,
            listBehaviours: Ka([
              Gm.config({ mode: "acyclic", selector: ".tox-toolbar" }),
            ]),
            makeItem () {
              return Y_({
                type: t.type,
                uid: Wr("multiple-toolbar-item"),
                cyclicKeying: !1,
                initGroups: [],
                providers: t.providers,
                onEscape () {
                  return st.none();
                },
              });
            },
            setupItem (t, n, e, o) {
              n_.setGroups(n, e);
            },
            shell: !0,
          });
        },
      },
      name: "multiple-toolbar",
      schema: [Nn("dom"), Nn("onEscape")],
    });
    const TB = _E.optional({
      factory: {
        sketch (t) {
          let n;
          return ((n = t).type === Bp.sliding
            ? X_
            : n.type === Bp.floating
            ? G_
            : Y_)({
            type: t.type,
            uid: t.uid,
            onEscape () {
              return t.onEscape(), st.some(!0);
            },
            cyclicKeying: !1,
            initGroups: [],
            getSink: t.getSink,
            providers: t.providers,
            moreDrawerData: {
              lazyToolbar: t.lazyToolbar,
              lazyMoreButton: t.lazyMoreButton,
              lazyHeader: t.lazyHeader,
            },
            attributes: t.attributes,
          });
        },
      },
      name: "toolbar",
      schema: [Nn("dom"), Nn("onEscape"), Nn("getSink")],
    });
    const EB = _E.optional({
      factory: {
        sketch (t) {
          const n = t.editor;
            const e = t.sticky ? oB : aB;
          return {
            uid: t.uid,
            dom: t.dom,
            components: t.components,
            behaviours: Ka(e(n, t.sharedBackstage)),
          };
        },
      },
      name: "header",
      schema: [Nn("dom")],
    });
    const BB = _E.optional({ name: "socket", schema: [Nn("dom")] });
    const DB = _E.optional({
      factory: {
        sketch (t) {
          return {
            uid: t.uid,
            dom: {
              tag: "div",
              classes: ["tox-sidebar"],
              attributes: { role: "complementary" },
            },
            components: [
              {
                dom: { tag: "div", classes: ["tox-sidebar__slider"] },
                components: [],
                behaviours: Ka([
                  uy.config({}),
                  eg.config({}),
                  R_.config({
                    dimension: { property: "width" },
                    closedClass: "tox-sidebar--sliding-closed",
                    openClass: "tox-sidebar--sliding-open",
                    shrinkingClass: "tox-sidebar--sliding-shrinking",
                    growingClass: "tox-sidebar--sliding-growing",
                    onShrunk (t) {
                      Lf.getCurrent(t).each(pB.hideAllSlots), jo(t, SB);
                    },
                    onGrown (t) {
                      jo(t, SB);
                    },
                    onStartGrow (t) {
                      Uo(t, wB, { width: Gi(t.element(), "width").getOr("") });
                    },
                    onStartShrink (t) {
                      Uo(t, wB, { width: `${bu(t.element())  }px` });
                    },
                  }),
                  Jm.config({}),
                  Lf.config({
                    find (t) {
                      const n = Jm.contents(t);
                      return q(n);
                    },
                  }),
                ]),
              },
            ],
            behaviours: Ka([
              dS(0),
              $m("sidebar-sliding-events", [
                $o(wB, function (t, n) {
                  Ni(t.element(), "width", n.event().width());
                }),
                $o(SB, function (t, n) {
                  Yi(t.element(), "width");
                }),
              ]),
            ]),
          };
        },
      },
      name: "sidebar",
      schema: [Nn("dom")],
    });
    const AB = _E.optional({
      factory: {
        sketch (t) {
          return {
            uid: t.uid,
            dom: {
              tag: "div",
              attributes: { "aria-hidden": "true" },
              classes: ["tox-throbber"],
              styles: { display: "none" },
            },
            behaviours: Ka([Jm.config({})]),
            components: [],
          };
        },
      },
      name: "throbber",
      schema: [Nn("dom")],
    });
    const MB = Vf({
      name: "OuterContainer",
      factory (e, t, n) {
        const o = {
          getSocket (t) {
            return OE.getPart(t, e, "socket");
          },
          setSidebar (t, n) {
            OE.getPart(t, e, "sidebar").each(function (t) {
              return yB(t, n);
            });
          },
          toggleSidebar (t, o) {
            OE.getPart(t, e, "sidebar").each(function (t) {
              return (
                (n = t),
                (e = o),
                void Lf.getCurrent(n).each(function (n) {
                  Lf.getCurrent(n).each(function (t) {
                    R_.hasGrown(n)
                      ? pB.isShowing(t, e)
                        ? R_.shrink(n)
                        : (pB.hideAllSlots(t), pB.showSlot(t, e))
                      : (pB.hideAllSlots(t), pB.showSlot(t, e), R_.grow(n));
                  });
                })
              );
              let n; let e;
            });
          },
          whichSidebar (t) {
            return OE.getPart(t, e, "sidebar").bind(xB).getOrNull();
          },
          getHeader (t) {
            return OE.getPart(t, e, "header");
          },
          getToolbar (t) {
            return OE.getPart(t, e, "toolbar");
          },
          setToolbar (t, n) {
            OE.getPart(t, e, "toolbar").each(function (t) {
              t.getApis().setGroups(t, n);
            });
          },
          setToolbars (t, n) {
            OE.getPart(t, e, "multiple-toolbar").each(function (t) {
              DE.setItems(t, n);
            });
          },
          refreshToolbar (t) {
            OE.getPart(t, e, "toolbar").each(function (t) {
              return t.getApis().refresh(t);
            });
          },
          getThrobber (t) {
            return OE.getPart(t, e, "throbber");
          },
          focusToolbar (t) {
            OE.getPart(t, e, "toolbar")
              .orThunk(function () {
                return OE.getPart(t, e, "multiple-toolbar");
              })
              .each(function (t) {
                Gm.focusIn(t);
              });
          },
          setMenubar (t, n) {
            OE.getPart(t, e, "menubar").each(function (t) {
              sB.setMenus(t, n);
            });
          },
          focusMenubar (t) {
            OE.getPart(t, e, "menubar").each(function (t) {
              sB.focus(t);
            });
          },
        };
        return {
          uid: e.uid,
          dom: e.dom,
          components: t,
          apis: o,
          behaviours: e.behaviours,
        };
      },
      configFields: [Nn("dom"), Nn("behaviours")],
      partFields: [EB, OB, TB, _B, BB, DB, AB],
      apis: {
        getSocket (t, n) {
          return t.getSocket(n);
        },
        setSidebar (t, n, e) {
          t.setSidebar(n, e);
        },
        toggleSidebar (t, n, e) {
          t.toggleSidebar(n, e);
        },
        whichSidebar (t, n) {
          return t.whichSidebar(n);
        },
        getHeader (t, n) {
          return t.getHeader(n);
        },
        getToolbar (t, n) {
          return t.getToolbar(n);
        },
        setToolbar (t, n, e) {
          const o = V(e, function (t) {
            return j_(t);
          });
          t.setToolbar(n, o);
        },
        setToolbars (t, n, e) {
          const o = V(e, function (t) {
            return V(t, j_);
          });
          t.setToolbars(n, o);
        },
        refreshToolbar (t, n) {
          return t.refreshToolbar(n);
        },
        getThrobber (t, n) {
          return t.getThrobber(n);
        },
        setMenubar (t, n, e) {
          t.setMenubar(n, e);
        },
        focusMenubar (t, n) {
          t.focusMenubar(n);
        },
        focusToolbar (t, n) {
          t.focusToolbar(n);
        },
      },
    });
    const FB = {
      file: {
        title: "File",
        items:
          "newdocument restoredraft | preview | print | deleteallconversations",
      },
      edit: {
        title: "Edit",
        items:
          "undo redo | cut copy paste pastetext | selectall | searchreplace",
      },
      view: {
        title: "View",
        items:
          "code | visualaid visualchars visualblocks | spellchecker | preview fullscreen | showcomments",
      },
      insert: {
        title: "Insert",
        items:
          "image link media addcomment pageembed template codesample inserttable | charmap emoticons hr | pagebreak nonbreaking anchor toc | insertdatetime",
      },
      format: {
        title: "Format",
        items:
          "bold italic underline strikethrough superscript subscript codeformat | formats blockformats fontformats fontsizes align | forecolor backcolor | removeformat",
      },
      tools: {
        title: "Tools",
        items: "spellchecker spellcheckerlanguage | a11ycheck code wordcount",
      },
      table: {
        title: "Table",
        items:
          "inserttable | cell row column | advtablesort | tableprops deletetable",
      },
      help: { title: "Help", items: "help" },
    };
    const IB = function (t) {
      return typeof t === "string" ? t.split(" ") : t;
    };
    const RB = function (i, u) {
      const a = {...FB, ...u.menus};
        const n = Ct(u.menus).length > 0;
        const t =
          u.menubar === undefined || !0 === u.menubar
            ? IB("file edit view insert format tools table help")
            : IB(!1 === u.menubar ? "" : u.menubar);
        const e = H(t, function (t) {
          return (
            (n &&
              u.menus.hasOwnProperty(t) &&
              u.menus[t].hasOwnProperty("items")) ||
            FB.hasOwnProperty(t)
          );
        });
        const o = V(e, function (t) {
          let n;
            let e;
            let o;
            const r = a[t];
          return (
            (n = { title: r.title, items: IB(r.items) }),
            (e = u),
            (o = i.getParam("removed_menuitems", "").split(/[ ,]/)),
            {
              text: n.title,
              getItems () {
                return U(n.items, function (t) {
                  const n = t.toLowerCase();
                  return n.trim().length === 0 ||
                    F(o, function (t) {
                      return t === n;
                    })
                    ? []
                    : n === "separator" || n === "|"
                    ? [{ type: "separator" }]
                    : e.menuItems[n]
                    ? [e.menuItems[n]]
                    : [];
                });
              },
            }
          );
        });
      return H(o, function (t) {
        return (
          t.getItems().length > 0 &&
          F(t.getItems(), function (t) {
            return t.type !== "separator";
          })
        );
      });
    };
    const VB = function (t) {
      const n = function () {
        (t._skinLoaded = !0), t.fire("SkinLoaded");
      };
      return function () {
        t.initialized ? n() : t.on("init", n);
      };
    };
    const PB = function (n, e) {
      return function () {
        return (t = { message: e }), n.fire("SkinLoadError", t);
        let t;
      };
    };
    const HB = function (t, n) {
      let e;
        const o = (function (t) {
          const n = t.getParam("skin");
            let e = t.getParam("skin_url");
          if (!1 !== n) {
            const o = n || "oxide";
            e = e
              ? t.documentBaseURI.toAbsolute(e)
              : `${Ah.baseURL  }/skins/ui/${  o}`;
          }
          return e;
        })(n);
      o &&
        ((e = `${o  }/skin.min.css`),
        n.contentCSS.push(
          `${o + (t ? "/content.inline" : "/content")  }.min.css`
        )),
        !1 == (!1 === n.getParam("skin")) && e
          ? n.ui.styleSheetLoader.load(
              e,
              VB(n),
              PB(n, "Skin could not be loaded")
            )
          : VB(n)();
    };
    const zB = g(HB, !1);
    const NB = g(HB, !0);
    const LB = function (e, t, o, r) {
      const n = t.outerContainer;
        const i = o.toolbar;
        const u = o.buttons;
      if (T(i, w)) {
        const a = i.map(function (t) {
          const n = {
            toolbar: t,
            buttons: u,
            allowToolbarGroups: o.allowToolbarGroups,
          };
          return yE(e, n, { backstage: r }, st.none());
        });
        MB.setToolbars(n, a);
      } else MB.setToolbar(n, yE(e, o, { backstage: r }, st.none()));
    };
    const jB = ph.DOM;
    const UB = ze();
    const WB = UB.os.isiOS() && UB.os.version.major <= 12;
    const GB = function (o) {
      const e = o.getWin();
        const t = o.getDoc().documentElement;
        const r = se(mu(e.innerWidth, e.innerHeight));
        const i = se(mu(t.offsetWidth, t.offsetHeight));
        const n = function (t) {
          const n = r.get();
          (n.left() === e.innerWidth && n.top() === e.innerHeight) ||
            (r.set(mu(e.innerWidth, e.innerHeight)), Yv(o, t));
        };
        const u = function (t) {
          const n = o.getDoc().documentElement;
            const e = i.get();
          (e.left() === n.offsetWidth && e.top() === n.offsetHeight) ||
            (i.set(mu(n.offsetWidth, n.offsetHeight)), Yv(o, t));
        };
        const a = function (t) {
          return (n = t), o.fire("ScrollContent", n);
          let n;
        };
      jB.bind(e, "resize", n), jB.bind(e, "scroll", a);
      const c = Db(fe.fromDom(o.getBody()), "load", u);
      o.on("NodeChange", u),
        o.on("remove", function () {
          c.unbind(), jB.unbind(e, "resize", n), jB.unbind(e, "scroll", a);
        });
    };
    const XB = /* */ Object.freeze({
      __proto__: null,
      render (e, o, t, n, r) {
        const i = se(0);
        zB(e);
        let u;
          let a;
          let c;
          const s = fe.fromDom(r.targetNode);
          const l = ((u = Mi(s)), Bi(u) ? u : fe.fromDom(pr(u).dom().body));
        (a = s),
          (c = o.mothership),
          $s(a, c, kr),
          Js(l, o.uiMothership),
          e.on("PostRender", function () {
            LB(e, o, t, n),
              i.set(e.getWin().innerWidth),
              MB.setMenubar(o.outerContainer, RB(e, t)),
              MB.setSidebar(o.outerContainer, t.sidebar),
              GB(e);
          });
        let f;
          let d;
          let m;
          const g = MB.getSocket(o.outerContainer).getOrDie(
            "Could not find expected socket element"
          );
        if (!0 === WB) {
          Li(g.element(), {
            overflow: "scroll",
            "-webkit-overflow-scrolling": "touch",
          });
          const p =
            ((f = function () {
              e.fire("ScrollContent");
            }),
            (d = 20),
            (m = null),
            {
              cancel () {
                m !== null && (nt.clearTimeout(m), (m = null));
              },
              throttle () {
                for (var t = [], n = 0; n < arguments.length; n++)
                  t[n] = arguments[n];
                m === null &&
                  (m = nt.setTimeout(function () {
                    f.apply(null, t), (m = null);
                  }, d));
              },
            });
          Bb(g.element(), "scroll", p.throttle);
        }
        tv(e, o),
          e.addCommand("ToggleSidebar", function (t, n) {
            MB.toggleSidebar(o.outerContainer, n), e.fire("ToggleSidebar");
          }),
          e.addQueryValueHandler("ToggleSidebar", function () {
            return MB.whichSidebar(o.outerContainer);
          });
        const h = Wh(e);
        return (
          (h !== Bp.sliding && h !== Bp.floating) ||
            e.on("ResizeWindow ResizeEditor ResizeContent", function () {
              const t = e.getWin().innerWidth;
              t !== i.get() && (MB.refreshToolbar(o.outerContainer), i.set(t));
            }),
          {
            iframeContainer: g.element().dom(),
            editorContainer: o.outerContainer.element().dom(),
          }
        );
      },
    });
    const YB = function () {
      return (
        (t = function (t) {
          t.unbind();
        }),
        (n = se(st.none())),
        (e = function () {
          n.get().each(t);
        }),
        {
          clear () {
            e(), n.set(st.none());
          },
          isSet () {
            return n.get().isSome();
          },
          set (t) {
            e(), n.set(st.some(t));
          },
        }
      );
      let t; let n; let e;
    };
    const qB = function (t) {
      return /^[0-9\.]+(|px)$/i.test(`${  t}`)
        ? st.some(parseInt(`${  t}`, 10))
        : st.none();
    };
    const KB = function (t) {
      return ot(t) ? `${t  }px` : t;
    };
    const JB = function (n, t, e) {
      const o = t.filter(function (t) {
          return n < t;
        });
        const r = e.filter(function (t) {
          return t < n;
        });
      return o.or(r).getOr(n);
    };
    const $B = function (t) {
      let n; let e; let o; let r;
      return ((e = Mh((n = t))),
      (o = Rh(n)),
      (r = Ph(n)),
      qB(e).map(function (t) {
        return JB(t, o, r);
      })).getOr(Mh(t));
    };
    const QB = function (t) {
      const n = Fh(t);
        const e = Ih(t);
        const o = Vh(t);
      return qB(n).map(function (t) {
        return JB(t, e, o);
      });
    };
    const ZB = function (a, c, t, n, s) {
      const e = t.uiMothership;
        const l = t.outerContainer;
        const o = ph.DOM;
        const f = qh(a);
        const d = Jh(a);
        const m = Vh(a).or(QB(a));
        const r = n.shared.header;
        const g = r.isPositionedAtTop;
        const i = Wh(a);
        const p = i === Bp.sliding || i === Bp.floating;
        const u = se(!1);
        const h = function () {
          return u.get() && !a.removed;
        };
        const v = function (t) {
          return p
            ? t.fold(
                function () {
                  return 0;
                },
                function (t) {
                  return t.components().length > 1
                    ? lu(t.components()[1].element())
                    : 0;
                }
              )
            : 0;
        };
        const b = function () {
          e.broadcastOn([ll()], {});
        };
        const y = function (t) {
          if ((void 0 === t && (t = !1), h())) {
            let n; let e; let o; let r; let i;
            if (
              (f ||
                ((n = m.getOrThunk(function () {
                  const t = qB(Ui(Vi(), "margin-left")).getOr(0);
                  return bu(Vi()) - pu(c).left() + t;
                })),
                Ni(s.get().element(), "max-width", `${n  }px`)),
              p && MB.refreshToolbar(l),
              f ||
                ((e = MB.getToolbar(l)),
                (o = v(e)),
                (r = Au(c)),
                (i = g()
                  ? Math.max(r.y - lu(s.get().element()) + o, 0)
                  : r.bottom),
                Li(l.element(), {
                  position: "absolute",
                  top: `${Math.round(i)  }px`,
                  left: `${Math.round(r.x)  }px`,
                })),
              d)
            ) {
              const u = s.get();
              t ? JE.reset(u) : JE.refresh(u);
            }
            b();
          }
        };
        const x = function (t) {
          if ((void 0 === t && (t = !0), !f && d && h())) {
            const n = r.getDockingMode();
              const e = (function (t) {
                switch (Gh(a)) {
                  case jh.auto:
                    var n = MB.getToolbar(l);
                      var e = v(n);
                      var o = lu(t.element()) - e;
                      var r = Au(c);
                    if (r.y > o) return "top";
                    var i = hr(c);
                      var u = Math.max(i.dom().scrollHeight, lu(i));
                    return r.bottom < u - o || Fu().bottom < r.bottom - o
                      ? "bottom"
                      : "top";
                  case jh.bottom:
                    return "bottom";
                  case jh.top:
                  default:
                    return "top";
                }
              })(s.get());
            e !== n &&
              ((function (t) {
                const n = s.get();
                JE.setModes(n, [t]), r.setDockingMode(t);
                const e = g() ? Yu.TopToBottom : Yu.BottomToTop;
                Fr(n.element(), Rc, e);
              })(e),
              t && y(!0));
          }
        };
      return {
        isVisible: h,
        isPositionedAtTop: g,
        show () {
          u.set(!0),
            Ni(l.element(), "display", "flex"),
            o.addClass(a.getBody(), "mce-edit-focus"),
            Yi(e.element(), "display"),
            x(!1),
            y();
        },
        hide () {
          u.set(!1),
            t.outerContainer &&
              (Ni(l.element(), "display", "none"),
              o.removeClass(a.getBody(), "mce-edit-focus")),
            Ni(e.element(), "display", "none");
        },
        update: y,
        updateMode: x,
        repositionPopups: b,
      };
    };
    const tD = function (t, n) {
      const e = Au(t);
      return { pos: n ? e.y : e.bottom, bounds: e };
    };
    const nD = /* */ Object.freeze({
      __proto__: null,
      render (n, e, o, r, t) {
        const i = e.mothership;
          const u = e.uiMothership;
          const a = e.outerContainer;
          const c = se(null);
          const s = fe.fromDom(t.targetNode);
          const l = ZB(n, s, e, r, c);
        NB(n);
        const f = function () {
          if (c.get()) l.show();
          else {
            c.set(MB.getHeader(a).getOrDie());
            const t = Yh(n).getOr(Vi());
            Js(t, i),
              Js(t, u),
              LB(n, e, o, r),
              MB.setMenubar(a, RB(n, o)),
              l.show(),
              (function (c, s, l) {
                const f = se(tD(s, l.isPositionedAtTop()));
                  const n = function (t) {
                    const n = tD(s, l.isPositionedAtTop());
                      const e = n.pos;
                      const o = n.bounds;
                      const r = f.get();
                      const i = r.pos;
                      const u = r.bounds;
                      const a = o.height !== u.height || o.width !== u.width;
                    f.set({ pos: e, bounds: o }),
                      a && Yv(c, t),
                      l.isVisible() &&
                        (i !== e
                          ? l.update(!0)
                          : a && (l.updateMode(), l.repositionPopups()));
                  };
                c.on("activate", l.show),
                  c.on("deactivate", l.hide),
                  c.on("SkinLoaded ResizeWindow", function () {
                    return l.update(!0);
                  }),
                  c.on("NodeChange keydown", function (t) {
                    $g.requestAnimationFrame(function () {
                      return n(t);
                    });
                  }),
                  c.on("ScrollWindow", function () {
                    return l.updateMode();
                  });
                const t = YB();
                t.set(Db(fe.fromDom(c.getBody()), "load", n)),
                  c.on("remove", function () {
                    t.clear();
                  });
              })(n, s, l),
              n.nodeChanged();
          }
        };
        return (
          n.on("focus", f),
          n.on("blur hide", l.hide),
          n.on("init", function () {
            n.hasFocus() && f();
          }),
          tv(n, e),
          { editorContainer: a.element().dom() }
        );
      },
    });
    const eD = function (t, n) {
      return function () {
        t.execCommand("mceToggleFormat", !1, n);
      };
    };
    const oD = function (t) {
      let n; let e;
      !(function (e) {
        vC.each(
          [
            { name: "bold", text: "Bold", icon: "bold" },
            { name: "italic", text: "Italic", icon: "italic" },
            { name: "underline", text: "Underline", icon: "underline" },
            {
              name: "strikethrough",
              text: "Strikethrough",
              icon: "strike-through",
            },
            { name: "subscript", text: "Subscript", icon: "subscript" },
            { name: "superscript", text: "Superscript", icon: "superscript" },
          ],
          function (t, n) {
            e.ui.registry.addToggleButton(t.name, {
              tooltip: t.text,
              icon: t.icon,
              onSetup: sE(e, t.name),
              onAction: eD(e, t.name),
            });
          }
        );
        for (let t = 1; t <= 6; t++) {
          const n = `h${  t}`;
          e.ui.registry.addToggleButton(n, {
            text: n.toUpperCase(),
            tooltip: `Heading ${  t}`,
            onSetup: sE(e, n),
            onAction: eD(e, n),
          });
        }
      })(t),
        (n = t),
        vC.each(
          [
            { name: "cut", text: "Cut", action: "Cut", icon: "cut" },
            { name: "copy", text: "Copy", action: "Copy", icon: "copy" },
            { name: "paste", text: "Paste", action: "Paste", icon: "paste" },
            { name: "help", text: "Help", action: "mceHelp", icon: "help" },
            {
              name: "selectall",
              text: "Select all",
              action: "SelectAll",
              icon: "select-all",
            },
            {
              name: "newdocument",
              text: "New document",
              action: "mceNewDocument",
              icon: "new-document",
            },
            {
              name: "removeformat",
              text: "Clear formatting",
              action: "RemoveFormat",
              icon: "remove-formatting",
            },
            {
              name: "remove",
              text: "Remove",
              action: "Delete",
              icon: "remove",
            },
          ],
          function (t) {
            n.ui.registry.addButton(t.name, {
              tooltip: t.text,
              icon: t.icon,
              onAction () {
                return n.execCommand(t.action);
              },
            });
          }
        ),
        (e = t),
        vC.each(
          [
            {
              name: "blockquote",
              text: "Blockquote",
              action: "mceBlockQuote",
              icon: "quote",
            },
          ],
          function (t) {
            e.ui.registry.addToggleButton(t.name, {
              tooltip: t.text,
              icon: t.icon,
              onAction () {
                return e.execCommand(t.action);
              },
              onSetup: sE(e, t.name),
            });
          }
        );
    };
    const rD = function (t) {
      let n;
      oD(t),
        (n = t),
        vC.each(
          [
            {
              name: "bold",
              text: "Bold",
              action: "Bold",
              icon: "bold",
              shortcut: "Meta+B",
            },
            {
              name: "italic",
              text: "Italic",
              action: "Italic",
              icon: "italic",
              shortcut: "Meta+I",
            },
            {
              name: "underline",
              text: "Underline",
              action: "Underline",
              icon: "underline",
              shortcut: "Meta+U",
            },
            {
              name: "strikethrough",
              text: "Strikethrough",
              action: "Strikethrough",
              icon: "strike-through",
              shortcut: "",
            },
            {
              name: "subscript",
              text: "Subscript",
              action: "Subscript",
              icon: "subscript",
              shortcut: "",
            },
            {
              name: "superscript",
              text: "Superscript",
              action: "Superscript",
              icon: "superscript",
              shortcut: "",
            },
            {
              name: "removeformat",
              text: "Clear formatting",
              action: "RemoveFormat",
              icon: "remove-formatting",
              shortcut: "",
            },
            {
              name: "newdocument",
              text: "New document",
              action: "mceNewDocument",
              icon: "new-document",
              shortcut: "",
            },
            {
              name: "cut",
              text: "Cut",
              action: "Cut",
              icon: "cut",
              shortcut: "Meta+X",
            },
            {
              name: "copy",
              text: "Copy",
              action: "Copy",
              icon: "copy",
              shortcut: "Meta+C",
            },
            {
              name: "paste",
              text: "Paste",
              action: "Paste",
              icon: "paste",
              shortcut: "Meta+V",
            },
            {
              name: "selectall",
              text: "Select all",
              action: "SelectAll",
              icon: "select-all",
              shortcut: "Meta+A",
            },
          ],
          function (t) {
            n.ui.registry.addMenuItem(t.name, {
              text: t.text,
              icon: t.icon,
              shortcut: t.shortcut,
              onAction () {
                return n.execCommand(t.action);
              },
            });
          }
        ),
        n.ui.registry.addMenuItem("codeformat", {
          text: "Code",
          icon: "sourcecode",
          onAction: eD(n, "code"),
        });
    };
    const iD = function (t, n, e) {
      const o = function () {
          return !!n.undoManager && n.undoManager[e]();
        };
        const r = function () {
          t.setDisabled(n.mode.isReadOnly() || !o());
        };
      return (
        t.setDisabled(!o()),
        n.on("Undo Redo AddUndo TypingUndo ClearUndos SwitchMode", r),
        function () {
          return n.off("Undo Redo AddUndo TypingUndo ClearUndos SwitchMode", r);
        }
      );
    };
    const uD = function (t) {
      let n; let e;
      (n = t).ui.registry.addMenuItem("undo", {
        text: "Undo",
        icon: "undo",
        shortcut: "Meta+Z",
        onSetup (t) {
          return iD(t, n, "hasUndo");
        },
        onAction () {
          return n.execCommand("undo");
        },
      }),
        n.ui.registry.addMenuItem("redo", {
          text: "Redo",
          icon: "redo",
          shortcut: "Meta+Y",
          onSetup (t) {
            return iD(t, n, "hasRedo");
          },
          onAction () {
            return n.execCommand("redo");
          },
        }),
        (e = t).ui.registry.addButton("undo", {
          tooltip: "Undo",
          icon: "undo",
          onSetup (t) {
            return iD(t, e, "hasUndo");
          },
          onAction () {
            return e.execCommand("undo");
          },
        }),
        e.ui.registry.addButton("redo", {
          tooltip: "Redo",
          icon: "redo",
          onSetup (t) {
            return iD(t, e, "hasRedo");
          },
          onAction () {
            return e.execCommand("redo");
          },
        });
    };
    const aD = function (t, n) {
      let e; let o; let r; let i; let u; let a; let c; let s; let l; let f; let d; let m; let g; let p;
      (r = YT(0, (o = n), ZT((e = t)))),
        e.ui.registry.addNestedMenuItem("align", {
          text: o.shared.providers.translate("Align"),
          getSubmenuItems () {
            return r.items.validateItems(r.getStyleItems());
          },
        }),
        (a = YT(0, (u = n), oE((i = t)))),
        i.ui.registry.addNestedMenuItem("fontformats", {
          text: u.shared.providers.translate("Fonts"),
          getSubmenuItems () {
            return a.items.validateItems(a.getStyleItems());
          },
        }),
        (c = t),
        (l = {type: "advanced", ...(s = n).styleselect}),
        (f = YT(0, s, dE(c, l))),
        c.ui.registry.addNestedMenuItem("formats", {
          text: "Formats",
          getSubmenuItems () {
            return f.items.validateItems(f.getStyleItems());
          },
        }),
        (m = YT(0, n, fE((d = t)))),
        d.ui.registry.addNestedMenuItem("blockformats", {
          text: "Blocks",
          getSubmenuItems () {
            return m.items.validateItems(m.getStyleItems());
          },
        }),
        (p = YT(0, n, uE((g = t)))),
        g.ui.registry.addNestedMenuItem("fontsizes", {
          text: "Font sizes",
          getSubmenuItems () {
            return p.items.validateItems(p.getStyleItems());
          },
        });
    };
    const cD = function (t, n) {
      let e; let o; let r; let i;
      !(function (n) {
        vC.each(
          [
            {
              name: "alignleft",
              text: "Align left",
              cmd: "JustifyLeft",
              icon: "align-left",
            },
            {
              name: "aligncenter",
              text: "Align center",
              cmd: "JustifyCenter",
              icon: "align-center",
            },
            {
              name: "alignright",
              text: "Align right",
              cmd: "JustifyRight",
              icon: "align-right",
            },
            {
              name: "alignjustify",
              text: "Justify",
              cmd: "JustifyFull",
              icon: "align-justify",
            },
          ],
          function (t) {
            n.ui.registry.addToggleButton(t.name, {
              tooltip: t.text,
              onAction () {
                return n.execCommand(t.cmd);
              },
              icon: t.icon,
              onSetup: sE(n, t.name),
            });
          }
        );
        const t = "alignnone";
          const e = "No alignment";
          const o = "JustifyNone";
          const r = "align-none";
        n.ui.registry.addButton(t, {
          tooltip: e,
          onAction () {
            return n.execCommand(o);
          },
          icon: r,
        });
      })(t),
        rD(t),
        aD(t, n),
        uD(t),
        (function (t) {
          eb(t);
          const n = se(null);
            const e = se(null);
          cb(t, "forecolor", "forecolor", "Text color", n),
            cb(t, "backcolor", "hilitecolor", "Background color", e),
            sb(t, "forecolor", "forecolor", "Text color"),
            sb(t, "backcolor", "hilitecolor", "Background color");
        })(t),
        (o = e = t).ui.registry.addButton("visualaid", {
          tooltip: "Visual aids",
          text: "Visual aids",
          onAction () {
            return o.execCommand("mceToggleVisualAid");
          },
        }),
        (r = e).ui.registry.addToggleMenuItem("visualaid", {
          text: "Visual aids",
          onSetup (t) {
            return (function (n, t) {
              n.setActive(t.hasVisual);
              const e = function (t) {
                n.setActive(t.hasVisual);
              };
              return (
                t.on("VisualAid", e),
                function () {
                  return t.off("VisualAid", e);
                }
              );
            })(t, r);
          },
          onAction () {
            r.execCommand("mceToggleVisualAid");
          },
        }),
        (i = t).ui.registry.addButton("outdent", {
          tooltip: "Decrease indent",
          icon: "outdent",
          onSetup (t) {
            return (function (t, n) {
              t.setDisabled(!n.queryCommandState("outdent"));
              const e = function () {
                t.setDisabled(!n.queryCommandState("outdent"));
              };
              return (
                n.on("NodeChange", e),
                function () {
                  return n.off("NodeChange", e);
                }
              );
            })(t, i);
          },
          onAction () {
            return i.execCommand("outdent");
          },
        }),
        i.ui.registry.addButton("indent", {
          tooltip: "Increase indent",
          icon: "indent",
          onAction () {
            return i.execCommand("indent");
          },
        });
    };
    const sD = function (t, n) {
      return { anchor: "makeshift", x: t, y: n };
    };
    const lD = function (t) {
      return t.type === "longpress" || t.type.indexOf("touch") === 0;
    };
    const fD = function (t, n) {
      let e;
        let o;
        let r;
        const i = ph.DOM.getPos(t);
      return (e = n), (o = i.x), (r = i.y), sD(e.x + o, e.y + r);
    };
    const dD = function (t, n) {
      return n.type === "contextmenu" || n.type === "longpress"
        ? t.inline
          ? (function (t) {
              if (lD(t)) {
                const n = t.touches[0];
                return sD(n.pageX, n.pageY);
              }
              return sD(t.pageX, t.pageY);
            })(n)
          : fD(
              t.getContentAreaContainer(),
              (function (t) {
                if (lD(t)) {
                  const n = t.touches[0];
                  return sD(n.clientX, n.clientY);
                }
                return sD(t.clientX, t.clientY);
              })(n)
            )
        : mD(t);
    };
    var mD = function (t) {
      return { anchor: "selection", root: fe.fromDom(t.selection.getNode()) };
    };
    const gD = function (t) {
      return {
        anchor: "node",
        node: st.some(fe.fromDom(t.selection.getNode())),
        root: fe.fromDom(t.getBody()),
      };
    };
    const pD = function (t, n, e, o, r, i) {
      let u;
        let a;
        const c = e();
        const s = ((u = t), (a = n), i ? gD(u) : dD(u, a));
      Lk(c, Ap.CLOSE_ON_EXECUTE, o, !1).map(function (t) {
        n.preventDefault(),
          zg.showMenuAt(r, s, { menu: { markers: jp("normal") }, data: t });
      });
    };
    const hD = {
      onLtr () {
        return [Va, Aa, Ma, Fa, Ia, Ra, Kg, Jg, Yg, Gg, qg, Xg];
      },
      onRtl () {
        return [Va, Ma, Aa, Ia, Fa, Ra, Kg, Jg, qg, Xg, Yg, Gg];
      },
    };
    const vD = {
      valignCentre: [],
      alignCentre: [],
      alignLeft: ["tox-pop--align-left"],
      alignRight: ["tox-pop--align-right"],
      right: ["tox-pop--right"],
      left: ["tox-pop--left"],
      bottom: ["tox-pop--bottom"],
      top: ["tox-pop--top"],
    };
    const bD = function (n, e, t, o, r, i, u) {
      let a;
        let c;
        let s;
        const l =
          ((a = n),
          (c = e),
          (s = i ? gD(a) : dD(a, c)),
          ({
            bubble: Ac(0, 12, vD),
              layouts: hD,
              overrides: { maxWidthFunction: qO(), maxHeightFunction: _c() },
            ...s
          }));
      Lk(t, Ap.CLOSE_ON_EXECUTE, o, !0).map(function (t) {
        e.preventDefault(),
          zg.showMenuWithinBounds(
            r,
            l,
            {
              menu: { markers: jp("normal"), highlightImmediately: u },
              data: t,
              type: "horizontal",
            },
            function () {
              return st.some(HT(n, o.shared));
            }
          ),
          n.fire(KO);
      });
    };
    const yD = function (n, e, o, r, i, u) {
      const t = ze();
        const a = t.os.isiOS();
        const c = t.os.isOSX();
        const s = t.os.isAndroid();
        const l = t.deviceType.isTouch();
        const f = function () {
          const t = o();
          bD(n, e, t, r, i, u, !(s || a || (c && l)));
        };
      if ((!c && !a) || u)
        s && !u && n.selection.setCursorLocation(e.target, 0), f();
      else {
        const d = function () {
          !(function (t) {
            const n = t.selection.getRng();
              const e = function () {
                $g.setEditorTimeout(
                  t,
                  function () {
                    t.selection.setRng(n);
                  },
                  10
                ),
                  i();
              };
            t.once("touchend", e);
            const o = function (t) {
              t.preventDefault(), t.stopImmediatePropagation();
            };
            t.on("mousedown", o, !0);
            const r = function () {
              return i();
            };
            t.once("longpresscancel", r);
            var i = function () {
              t.off("touchend", e),
                t.off("longpresscancel", r),
                t.off("mousedown", o);
            };
          })(n),
            f();
        };
        !(function (t, n) {
          const e = t.selection;
          if (e.isCollapsed() || n.touches.length < 1) return !1;
          const o = n.touches[0];
            const r = e.getRng();
          return us(t.getWin(), Gc.domRange(r)).exists(function (t) {
            return (
              t.left() <= o.clientX &&
              t.right() >= o.clientX &&
              t.top() <= o.clientY &&
              t.bottom() >= o.clientY
            );
          });
        })(n, e)
          ? (n.once("selectionchange", d),
            n.once("touchend", function () {
              return n.off("selectionchange", d);
            }))
          : d();
      }
    };
    const xD = function (t) {
      return typeof t === "string" ? t.split(/[ ,]/) : t;
    };
    const wD = function (t) {
      return t.getParam("contextmenu_never_use_native", !1, "boolean");
    };
    const SD = function (t) {
      return (
        (e = "contextmenu"),
        (o =
          "link linkchecker image imagetools table spellchecker configurepermanentpen"),
        (r = (n = t).ui.registry.getAll().contextMenus),
        st
          .from(n.getParam(e))
          .map(xD)
          .getOrThunk(function () {
            return H(xD(o), function (t) {
              return It(r, t);
            });
          })
      );
      let n; let e; let o; let r;
    };
    const kD = function (t) {
      return w(t) ? t === "|" : t.type === "separator";
    };
    const CD = { type: "separator" };
    var OD = function (n) {
      if (w(n)) return n;
      switch (n.type) {
        case "separator":
          return CD;
        case "submenu":
          return {
            type: "nestedmenuitem",
            text: n.text,
            icon: n.icon,
            getSubmenuItems () {
              const t = n.getSubmenuItems();
              return w(t) ? t : V(t, OD);
            },
          };
        default:
          return {
            type: "menuitem",
            text: n.text,
            icon: n.icon,
            onAction:
              ((t = n.onAction),
              function () {
                return t();
              }),
          };
      }
      let t;
    };
    const _D = function (t, n) {
      if (n.length === 0) return t;
      const e = K(t)
        .filter(function (t) {
          return !kD(t);
        })
        .fold(
          function () {
            return [];
          },
          function (t) {
            return [CD];
          }
        );
      return t.concat(e).concat(n).concat([CD]);
    };
    const TD = function (c, t, o) {
      const r = ze().deviceType.isTouch;
        const i = uu(
          zg.sketch({
            dom: { tag: "div" },
            lazySink: t,
            onEscape () {
              return c.focus();
            },
            onShow () {
              return o.setContextMenuState(!0);
            },
            onHide () {
              return o.setContextMenuState(!1);
            },
            fireDismissalEventInstead: {},
            inlineBehaviours: Ka([
              $m("dismissContextMenu", [
                $o(Io(), function (t, n) {
                  cl.close(t), c.focus();
                }),
              ]),
            ]),
          })
        );
        const n = function (t) {
          return zg.hide(i);
        };
        const e = function (u) {
          if (
            (wD(c) && u.preventDefault(),
            (t = c),
            (!u.ctrlKey || wD(t)) && !1 !== c.getParam("contextmenu"))
          ) {
            var t;
              let n;
              let e;
              const a =
                ((n = c),
                (e = u).type !== "longpress" &&
                  (e.button !== 2 ||
                    (e.target === n.getBody() && e.pointerType === "")));
            (r() ? yD : pD)(
              c,
              u,
              function () {
                let r;
                  let i;
                  let t;
                  const n = a ? c.selection.getStart(!0) : u.target;
                  const e = c.ui.registry.getAll();
                  const o = SD(c);
                return (
                  (r = e.contextMenus),
                  (i = n),
                  (t = N(
                      o,
                      function (t, n) {
                        if (It(r, n)) {
                          const e = r[n].update(i);
                          if (w(e)) return _D(t, e.split(" "));
                          if (e.length > 0) {
                            const o = V(e, OD);
                            return _D(t, o);
                          }
                          return t;
                        }
                        return t.concat([n]);
                      },
                      []
                    )).length >
                    0 &&
                    kD(t[t.length - 1]) &&
                    t.pop(),
                  t
                );
              },
              o,
              i,
              a
            );
          }
        };
      c.on("init", function () {
        const t =
          `ResizeEditor ScrollContent ScrollWindow longpresscancel${ 
          r() ? "" : " ResizeWindow"}`;
        c.on(t, n), c.on("longpress contextmenu", e);
      });
    };
    const ED = Vt([
      { offset: ["x", "y"] },
      { absolute: ["x", "y"] },
      { fixed: ["x", "y"] },
    ]);
    const BD = function (n) {
      return function (t) {
        return t.translate(-n.left(), -n.top());
      };
    };
    const DD = function (n) {
      return function (t) {
        return t.translate(n.left(), n.top());
      };
    };
    const AD = function (e) {
      return function (t, n) {
        return N(
          e,
          function (t, n) {
            return n(t);
          },
          mu(t, n)
        );
      };
    };
    const MD = function (t, n, e) {
      return t.fold(AD([DD(e), BD(n)]), AD([BD(n)]), AD([]));
    };
    const FD = function (t, n, e) {
      return t.fold(AD([DD(e)]), AD([]), AD([DD(n)]));
    };
    const ID = function (t, n, e) {
      return t.fold(AD([]), AD([BD(e)]), AD([DD(n), BD(e)]));
    };
    const RD = function (t, n, e) {
      const o = t.fold(
        function (t, n) {
          return {
            position: st.some("absolute"),
            left: st.some(`${t  }px`),
            top: st.some(`${n  }px`),
          };
        },
        function (t, n) {
          return {
            position: st.some("absolute"),
            left: st.some(`${t - e.left()  }px`),
            top: st.some(`${n - e.top()  }px`),
          };
        },
        function (t, n) {
          return {
            position: st.some("fixed"),
            left: st.some(`${t  }px`),
            top: st.some(`${n  }px`),
          };
        }
      );
      return {right: st.none(), bottom: st.none(), ...o};
    };
    const VD = function (t, i, u, a) {
      const n = function (o, r) {
        return function (t, n) {
          const e = o(i, u, a);
          return r(t.getOr(e.left()), n.getOr(e.top()));
        };
      };
      return t.fold(n(ID, PD), n(FD, HD), n(MD, zD));
    };
    var PD = ED.offset;
    var HD = ED.absolute;
    var zD = ED.fixed;
    const ND = function (t, n) {
      const e = Ir(t, n);
      return C(e) ? NaN : parseInt(e, 10);
    };
    const LD = function (t, n, e, o) {
      return (
        (r = n),
        (i = t.element()),
        (u = ND(i, r.leftAttr)),
        (a = ND(i, r.topAttr)),
        (isNaN(u) || isNaN(a) ? st.none() : st.some(mu(u, a))).fold(
          function () {
            return e;
          },
          function (t) {
            return zD(t.left() + o.left(), t.top() + o.top());
          }
        )
      );
      let r; let i; let u; let a;
    };
    const jD = function (t, n, e, o, r, i) {
      let u;
        let a;
        let c;
        const s = LD(t, n, e, o);
        const l = (n.mustSnap ? GD : XD)(t, n, s, r, i);
        const f = MD(s, r, i);
      return (
        (u = n),
        (a = f),
        (c = t.element()),
        Fr(c, u.leftAttr, `${a.left()  }px`),
        Fr(c, u.topAttr, `${a.top()  }px`),
        l.fold(
          function () {
            return { coord: zD(f.left(), f.top()), extra: st.none() };
          },
          function (t) {
            return { coord: t.output, extra: t.extra };
          }
        )
      );
    };
    const UD = function (t, n) {
      let e; let o;
      (e = n), (o = t.element()), Pr(o, e.leftAttr), Pr(o, e.topAttr);
    };
    const WD = function (t, l, f, d) {
      return $(t, function (t) {
        let n;
          let e;
          let o;
          let r;
          let i;
          let u;
          let a;
          let c;
          const s = t.sensor;
        return ((n = l),
        (e = s),
        (o = t.range.left()),
        (r = t.range.top()),
        (a = FD(n, (i = f), (u = d))),
        (c = FD(e, i, u)),
        Math.abs(a.left() - c.left()) <= o && Math.abs(a.top() - c.top()) <= r)
          ? st.some({ output: VD(t.output, l, f, d), extra: t.extra })
          : st.none();
      });
    };
    var GD = function (t, n, d, m, g) {
      const e = n.getSnapPoints(t);
      return WD(e, d, m, g).orThunk(function () {
        return N(
          e,
          function (n, e) {
            let t;
              let o;
              let r;
              let i;
              let u;
              let a;
              let c;
              let s;
              const l = e.sensor;
              const f =
                ((t = d),
                (o = l),
                e.range.left(),
                e.range.top(),
                (u = FD(t, (r = m), (i = g))),
                (a = FD(o, r, i)),
                (c = Math.abs(u.left() - a.left())),
                (s = Math.abs(u.top() - a.top())),
                mu(c, s));
            return n.deltas.fold(
              function () {
                return { deltas: st.some(f), snap: st.some(e) };
              },
              function (t) {
                return (f.left() + f.top()) / 2 <= (t.left() + t.top()) / 2
                  ? { deltas: st.some(f), snap: st.some(e) }
                  : n;
              }
            );
          },
          { deltas: st.none(), snap: st.none() }
        ).snap.map(function (t) {
          return { output: VD(t.output, d, m, g), extra: t.extra };
        });
      });
    };
    var XD = function (t, n, e, o, r) {
      const i = n.getSnapPoints(t);
      return WD(i, e, o, r);
    };
    const YD = /* */ Object.freeze({
      __proto__: null,
      snapTo (t, n, e, o) {
        let r;
          let i;
          let u;
          const a = n.getTarget(t.element());
        if (n.repositionTarget) {
          const c = gr(t.element());
            const s = ku(c);
            const l = ME(a);
            const f =
              ((i = s),
              (u = l),
              { coord: VD((r = o).output, r.output, i, u), extra: r.extra });
            const d = RD(f.coord, 0, l);
          ji(a, d);
        }
      },
    });
    const qD = "data-initial-z-index";
    const KD = function (t, n) {
      let e;
      t.getSystem().addToGui(n),
        br((e = n).element())
          .filter(lr)
          .each(function (n) {
            Gi(n, "z-index").each(function (t) {
              Fr(n, qD, t);
            }),
              Ni(n, "z-index", Ui(e.element(), "z-index"));
          });
    };
    const JD = function (t) {
      br(t.element())
        .filter(lr)
        .each(function (n) {
          Rr(n, qD).fold(
            function () {
              return Yi(n, "z-index");
            },
            function (t) {
              return Ni(n, "z-index", t);
            }
          ),
            Pr(n, qD);
        }),
        t.getSystem().removeFromGui(t);
    };
    const $D = function (t, n, e) {
      return t
        .getSystem()
        .build(
          Zb.sketch({
            dom: {
              styles: {
                left: "0px",
                top: "0px",
                width: "100%",
                height: "100%",
                position: "fixed",
                "z-index": "1000000000000000",
              },
              classes: [n],
            },
            events: e,
          })
        );
    };
    const QD = Zn("snaps", [
      Nn("getSnapPoints"),
      aa("onSensor"),
      Nn("leftAttr"),
      Nn("topAttr"),
      te("lazyViewport", Fu),
      te("mustSnap", !1),
    ]);
    const ZD = [
      te("useFixed", c),
      Nn("blockerClass"),
      te("getTarget", ct),
      te("onDrag", Z),
      te("repositionTarget", !0),
      te("onDrop", Z),
      ue("getBounds", Fu),
      QD,
    ];
    const tA = function (n) {
      return (
        (t = Gi(n, "left")),
        (e = Gi(n, "top")),
        (o = Gi(n, "position")),
        (r = function (t, n, e) {
          return (e === "fixed" ? zD : PD)(parseInt(t, 10), parseInt(n, 10));
        }),
        (t.isSome() && e.isSome() && o.isSome()
          ? st.some(r(t.getOrDie(), e.getOrDie(), o.getOrDie()))
          : st.none()
        ).getOrThunk(function () {
          const t = pu(n);
          return HD(t.left(), t.top());
        })
      );
      let t; let e; let o; let r;
    };
    const nA = function (e, t, i, u, a, c, n) {
      let o;
        let r;
        let s;
        let l;
        let f;
        let d;
        let m;
        let g;
        let p;
        const h = t.fold(
          function () {
            let t;
              let e;
              let o;
              const n =
                ((t = i),
                (e = c.left()),
                (o = c.top()),
                t.fold(
                  function (t, n) {
                    return PD(t + e, n + o);
                  },
                  function (t, n) {
                    return HD(t + e, n + o);
                  },
                  function (t, n) {
                    return zD(t + e, n + o);
                  }
                ));
              const r = MD(n, u, a);
            return zD(r.left(), r.top());
          },
          function (n) {
            const t = jD(e, n, i, c, u, a);
            return (
              t.extra.each(function (t) {
                n.onSensor(e, t);
              }),
              t.coord
            );
          }
        );
      return (
        (o = h),
        (r = u),
        (s = a),
        (f = (l = n).bounds),
        (d = FD(o, r, s)),
        (m = yc(d.left(), f.x, f.x + f.width - l.width)),
        (g = yc(d.top(), f.y, f.y + f.height - l.height)),
        (p = HD(m, g)),
        o.fold(
          function () {
            const t = ID(p, r, s);
            return PD(t.left(), t.top());
          },
          function () {
            return p;
          },
          function () {
            const t = MD(p, r, s);
            return zD(t.left(), t.top());
          }
        )
      );
    };
    const eA = function (t, n) {
      return {
        bounds: t.getBounds(),
        height: fu(n.element()),
        width: yu(n.element()),
      };
    };
    const oA = function (n, e, t, o, r) {
      const i = t.update(o, r);
        const u = t.getStartData().getOrThunk(function () {
          return eA(e, n);
        });
      i.each(function (t) {
        !(function (t, n, e, o) {
          const r = n.getTarget(t.element());
          if (n.repositionTarget) {
            const i = gr(t.element());
              const u = ku(i);
              const a = ME(r);
              const c = tA(r);
              const s = nA(t, n.snaps, c, u, a, o, e);
              const l = RD(s, 0, a);
            ji(r, l);
          }
          n.onDrag(t, r, o);
        })(n, e, u, t);
      });
    };
    const rA = function (n, t, e, o) {
      t.each(JD),
        e.snaps.each(function (t) {
          UD(n, t);
        });
      const r = e.getTarget(n.element());
      o.reset(), e.onDrop(n, r);
    };
    const iA = function (t) {
      return function (n, e) {
        const o = function (t) {
          e.setStartData(eA(n, t));
        };
        return qo(
          b(
            [
              $o(Do(), function (t) {
                e.getStartData().each(function () {
                  return o(t);
                });
              }),
            ],
            t(n, e, o)
          )
        );
      };
    };
    const uA = /* */ Object.freeze({
      __proto__: null,
      getData (t) {
        return st.from(mu(t.x(), t.y()));
      },
      getDelta (t, n) {
        return mu(n.left() - t.left(), n.top() - t.top());
      },
    });
    const aA = function (a, c, s) {
      return [
        $o(no(), function (n, t) {
          if (t.event().raw().button === 0) {
            t.stop();
            let e;
              const o = function () {
                return rA(n, st.some(u), a, c);
              };
              const r = Fb(o, 200);
              const i = {
                drop: o,
                delayDrop: r.schedule,
                forceDrop: o,
                move (t) {
                  r.cancel(), oA(n, a, c, uA, t);
                },
              };
              var u = $D(
                n,
                a.blockerClass,
                ((e = i),
                qo([
                  $o(no(), e.forceDrop),
                  $o(ro(), e.drop),
                  $o(eo(), function (t, n) {
                    e.move(n.event());
                  }),
                  $o(oo(), e.delayDrop),
                ]))
              );
            s(n), KD(n, u);
          }
        }),
      ];
    };
    const cA = b(ZD, [fa("dragger", { handlers: iA(aA) })]);
    const sA = /* */ Object.freeze({
      __proto__: null,
      getData (t) {
        let n;
          const e = t.raw().touches;
        return e.length === 1
          ? ((n = e[0]), st.some(mu(n.clientX, n.clientY)))
          : st.none();
      },
      getDelta (t, n) {
        return mu(n.left() - t.left(), n.top() - t.top());
      },
    });
    const lA = function (u, a, c) {
      const s = se(st.none());
      return [
        $o($e(), function (n, t) {
          t.stop();
          let e;
            const o = function () {
              rA(n, s.get(), u, a), s.set(st.none());
            };
            const r = {
              drop: o,
              delayDrop () {},
              forceDrop: o,
              move (t) {
                oA(n, u, a, sA, t);
              },
            };
            const i = $D(
              n,
              u.blockerClass,
              ((e = r),
              qo([
                $o($e(), e.forceDrop),
                $o(Ze(), e.drop),
                $o(to(), e.drop),
                $o(Qe(), function (t, n) {
                  e.move(n.event());
                }),
              ]))
            );
          s.set(st.some(i));
          c(n), KD(n, i);
        }),
        $o(Qe(), function (t, n) {
          n.stop(), oA(t, u, a, sA, n.event());
        }),
        $o(Ze(), function (t, n) {
          n.stop(), rA(t, s.get(), u, a), s.set(st.none());
        }),
        $o(to(), function (t) {
          rA(t, s.get(), u, a), s.set(st.none());
        }),
      ];
    };
    const fA = cA;
    const dA = b(ZD, [fa("dragger", { handlers: iA(lA) })]);
    const mA = b(ZD, [
      fa("dragger", {
        handlers: iA(function (t, n, e) {
          return b(aA(t, n, e), lA(t, n, e));
        }),
      }),
    ]);
    const gA = Za({
      branchKey: "mode",
      branches: /* */ Object.freeze({
        __proto__: null,
        mouse: fA,
        touch: dA,
        mouseOrTouch: mA,
      }),
      name: "dragging",
      active: {
        events (t, n) {
          return t.dragger.handlers(t, n);
        },
      },
      extra: {
        snap (t) {
          return {
            sensor: t.sensor,
            range: t.range,
            output: t.output,
            extra: st.from(t.extra),
          };
        },
      },
      state: /* */ Object.freeze({
        __proto__: null,
        init () {
          let i = st.none();
            let n = st.none();
            const t = at({});
          return ai({
            readState: t,
            reset () {
              (i = st.none()), (n = st.none());
            },
            update (r, t) {
              return r.getData(t).bind(function (t) {
                return (
                  (n = r),
                  (e = t),
                  (o = i.map(function (t) {
                    return n.getDelta(t, e);
                  })),
                  (i = st.some(e)),
                  o
                );
                let n; let e; let o;
              });
            },
            getStartData () {
              return n;
            },
            setStartData (t) {
              n = st.some(t);
            },
          });
        },
      }),
      apis: YD,
    });
    const pA = function (t, r, i, u, n, e) {
      return t.fold(
        function () {
          return gA.snap({
            sensor: HD(i - 20, u - 20),
            range: mu(n, e),
            output: HD(st.some(i), st.some(u)),
            extra: { td: r },
          });
        },
        function (t) {
          const n = i - 20;
            const e = u - 20;
            const o = t.element().dom().getBoundingClientRect();
          return gA.snap({
            sensor: HD(n, e),
            range: mu(40, 40),
            output: HD(st.some(i - o.width / 2), st.some(u - o.height / 2)),
            extra: { td: r },
          });
        }
      );
    };
    const hA = function (t, i, u) {
      return {
        getSnapPoints: t,
        leftAttr: "data-drag-left",
        topAttr: "data-drag-top",
        onSensor (t, n) {
          let e;
            let o;
            const r = n.td;
          (e = i.get()),
            (o = r),
            e.exists(function (t) {
              return je(t, o);
            }) || (i.set(st.some(r)), u(r));
        },
        mustSnap: !0,
      };
    };
    const vA = function (t) {
      return Zg(
        Qg.sketch({
          dom: { tag: "div", classes: ["tox-selector"] },
          buttonBehaviours: Ka([
            gA.config({
              mode: "mouseOrTouch",
              blockerClass: "blocker",
              snaps: t,
            }),
            lx.config({}),
          ]),
          eventOrder: {
            mousedown: ["dragging", "alloy.base.behaviour"],
            touchstart: ["dragging", "alloy.base.behaviour"],
          },
        })
      );
    };
    const bA = function (c, e) {
      const o = se([]);
        const r = se([]);
        const t = se(!1);
        const i = se(st.none());
        const u = se(st.none());
        const n = function (t) {
          const n = Mu(t);
          return pA(f.getOpt(e), t, n.x, n.y, n.width, n.height);
        };
        const a = function (t) {
          const n = Mu(t);
          return pA(d.getOpt(e), t, n.right, n.bottom, n.width, n.height);
        };
        const s = hA(
          function () {
            return V(o.get(), function (t) {
              return n(t);
            });
          },
          i,
          function (n) {
            u.get().each(function (t) {
              c.fire("TableSelectorChange", { start: n, finish: t });
            });
          }
        );
        const l = hA(
          function () {
            return V(r.get(), function (t) {
              return a(t);
            });
          },
          u,
          function (n) {
            i.get().each(function (t) {
              c.fire("TableSelectorChange", { start: t, finish: n });
            });
          }
        );
        var f = vA(s);
        var d = vA(l);
        const m = uu(f.asSpec());
        const g = uu(d.asSpec());
        const p = function (t, n, e, o) {
          const r = e(n);
          gA.snapTo(t, r);
          !(function (t, n, e, o) {
            const r = n.dom().getBoundingClientRect();
            Yi(t.element(), "display");
            const i = vr(fe.fromDom(c.getBody())).dom().innerHeight;
              const u = e(r);
              const a = o(r, i);
            (u || a) && Ni(t.element(), "display", "none");
          })(
            t,
            n,
            function (t) {
              return t[o] < 0;
            },
            function (t, n) {
              return t[o] > n;
            }
          );
        };
        const h = function (t) {
          return p(m, t, n, "top");
        };
        const v = function (t) {
          return p(g, t, a, "bottom");
        };
      ze().deviceType.isTouch() &&
        (c.on("TableSelectionChange", function (n) {
          t.get() || (Gs(e, m), Gs(e, g), t.set(!0)),
            i.set(st.some(n.start)),
            u.set(st.some(n.finish)),
            n.otherCells.each(function (t) {
              o.set(t.upOrLeftCells),
                r.set(t.downOrRightCells),
                h(n.start),
                v(n.finish);
            });
        }),
        c.on("ResizeEditor ResizeWindow ScrollContent", function () {
          i.get().each(h), u.get().each(v);
        }),
        c.on("TableSelectionClear", function () {
          t.get() && (qs(m), qs(g), t.set(!1)),
            i.set(st.none()),
            u.set(st.none());
        }));
    };
  ((JT = KT = KT || {})[(JT.None = 0)] = "None"),
    (JT[(JT.Both = 1)] = "Both"),
    (JT[(JT.Vertical = 2)] = "Vertical");
  let yA;
    const xA = function (t, n, e) {
      let o;
        let r;
        let i;
        let u;
        let a;
        let c;
        const s = fe.fromDom(t.getContainer());
        const l =
          ((o = t),
          (r = n),
          (i = e),
          (u = lu(s)),
          (a = bu(s)),
          ((c = {}).height = JB(u + r.top(), Rh(o), Ph(o))),
          i === KT.Both && (c.width = JB(a + r.left(), Ih(o), Vh(o))),
          c);
      _t(l, function (t, n) {
        return Ni(s, n, KB(t));
      }),
        t.fire("ResizeEditor");
    };
    const wA = function (t) {
      if (t.nodeType === 1) {
        if (t.nodeName === "BR" || t.getAttribute("data-mce-bogus")) return !0;
        if (t.getAttribute("data-mce-type") === "bookmark") return !0;
      }
      return !1;
    };
    const SA = function (i, u, a) {
      u.delimiter || (u.delimiter = "\xbb");
      return {
        dom: {
          tag: "div",
          classes: ["tox-statusbar__path"],
          attributes: { role: "navigation" },
        },
        behaviours: Ka([
          Gm.config({ mode: "flow", selector: "div[role=button]" }),
          Dh.config({ disabled: a.isReadOnly }),
          nv(),
          uy.config({}),
          Jm.config({}),
          $m("elementPathEvents", [
            rr(function (r, t) {
              i.shortcuts.add(
                "alt+F11",
                "focus statusbar elementpath",
                function () {
                  return Gm.focusIn(r);
                }
              ),
                i.on("NodeChange", function (t) {
                  let n;
                    let o;
                    const e = (function (t) {
                      for (var n = [], e = t.length; e-- > 0; ) {
                        const o = t[e];
                        if (o.nodeType === 1 && !wA(o)) {
                          const r = i.fire("ResolveName", {
                            name: o.nodeName.toLowerCase(),
                            target: o,
                          });
                          if (
                            (r.isDefaultPrevented() ||
                              n.push({ name: r.name, element: o }),
                            r.isPropagationStopped())
                          )
                            break;
                        }
                      }
                      return n;
                    })(t.parents);
                  e.length > 0
                    ? Jm.set(
                        r,
                        ((n = V(e || [], function (n, t) {
                          return Qg.sketch({
                            dom: {
                              tag: "div",
                              classes: ["tox-statusbar__path-item"],
                              attributes: {
                                role: "button",
                                "data-index": t,
                                "tab-index": -1,
                                "aria-level": t + 1,
                              },
                              innerHtml: n.name,
                            },
                            action (t) {
                              i.focus(),
                                i.selection.select(n.element),
                                i.nodeChanged();
                            },
                            buttonBehaviours: Ka([ov(a.isReadOnly), nv()]),
                          });
                        })),
                        (o = {
                          dom: {
                            tag: "div",
                            classes: ["tox-statusbar__path-divider"],
                            attributes: { "aria-hidden": !0 },
                            innerHtml: ` ${  u.delimiter  } `,
                          },
                        }),
                        N(
                          n.slice(1),
                          function (t, n) {
                            const e = t;
                            return e.push(o), e.push(n), e;
                          },
                          [n[0]]
                        ))
                      )
                    : Jm.set(r, []);
                });
            }),
          ]),
        ]),
        components: [],
      };
    };
    const kA = function (i, u) {
      let t; let n; let e; let o; let r; let a;
      return {
        dom: { tag: "div", classes: ["tox-statusbar"] },
        components:
          ((r = (function () {
            let t;
              let o;
              let r;
              let n;
              const e = [];
            return (
              i.getParam("elementpath", !0, "boolean") && e.push(SA(i, {}, u)),
              Be(i.getParam("plugins", "", "string"), "wordcount") &&
                e.push(
                  ((t = i),
                  (o = u),
                  (r = function (t, n, e) {
                    return Jm.set(t, [ou(o.translate([`{0} ${  e}`, n[e]]))]);
                  }),
                  Qg.sketch({
                    dom: {
                      tag: "button",
                      classes: ["tox-statusbar__wordcount"],
                    },
                    components: [],
                    buttonBehaviours: Ka([
                      ov(o.isReadOnly),
                      nv(),
                      uy.config({}),
                      Jm.config({}),
                      El.config({
                        store: {
                          mode: "memory",
                          initialValue: {
                            mode: "words",
                            count: { words: 0, characters: 0 },
                          },
                        },
                      }),
                      $m("wordcount-events", [
                        ar(function (t) {
                          const n = El.getValue(t);
                            const e = n.mode === "words" ? "characters" : "words";
                          El.setValue(t, { mode: e, count: n.count }),
                            r(t, n.count, e);
                        }),
                        rr(function (e) {
                          t.on("wordCountUpdate", function (t) {
                            const n = El.getValue(e).mode;
                            El.setValue(e, { mode: n, count: t.wordCount }),
                              r(e, t.wordCount, n);
                          });
                        }),
                      ]),
                    ]),
                    eventOrder: {
                      "alloy.execute": [
                        "disabling",
                        "alloy.base.behaviour",
                        "wordcount-events",
                      ],
                    },
                  }))
                ),
              i.getParam("branding", !0, "boolean") &&
                e.push({
                  dom: {
                    tag: "span",
                    classes: ["tox-statusbar__branding"],
                    innerHtml:
                      `<a href="https://www.tiny.cloud/?utm_campaign=editor_referral&amp;utm_medium=poweredby&amp;utm_source=tinymce&amp;utm_content=v5" rel="noopener" target="_blank" tabindex="-1" aria-label="${ 
                      n = hh.translate(["Powered by {0}", "Tiny"]) 
                      }">${ 
                      n 
                      }</a>`,
                  },
                }),
              e.length > 0
                ? [
                    {
                      dom: {
                        tag: "div",
                        classes: ["tox-statusbar__text-container"],
                      },
                      components: e,
                    },
                  ]
                : []
            );
          })()),
          (n = !Be((t = i).getParam("plugins", "", "string"), "autoresize")),
          (a =
            !1 === (e = t.getParam("resize", n))
              ? KT.None
              : e === "both"
              ? KT.Both
              : KT.Vertical) !== KT.None &&
            r.push(
              ((o = a),
              {
                dom: {
                  tag: "div",
                  classes: ["tox-statusbar__resize-handle"],
                  attributes: {
                    title: u.translate("Resize"),
                    "aria-hidden": "true",
                  },
                  innerHtml: np("resize-handle", u.icons),
                },
                behaviours: Ka([
                  gA.config({
                    mode: "mouse",
                    repositionTarget: !1,
                    onDrag (t, n, e) {
                      xA(i, e, o);
                    },
                    blockerClass: "tox-blocker",
                  }),
                ]),
              })
            ),
          r),
      };
    };
    const CA = function (x) {
      let t;
        const n = x.inline;
        const w = n ? nD : XB;
        const S = Jh(x) ? rB : cB;
        let e = st.none();
        const o = ze();
        const r = o.browser.isIE() ? ["tox-platform-ie"] : [];
        const i = o.deviceType.isTouch() ? ["tox-platform-touch"] : [];
        const u = Xh(x);
        const a = hh.isRtl() ? { attributes: { dir: "rtl" } } : {};
        const c = {
          attributes: (((t = {})[Rc] = u ? Yu.BottomToTop : Yu.TopToBottom), t),
        };
        const k = function () {
          return e.bind(MB.getHeader);
        };
        const C = uu({
          dom: {
            tag: "div",
              classes: ["tox", "tox-silver-sink", "tox-tinymce-aux"]
                .concat(r)
                .concat(i),
            ...a
          },
          behaviours: Ka([
            Ns.config({
              useFixed () {
                return S.isDocked(k);
              },
            }),
          ]),
        });
        const O = function () {
          return ut.value(C);
        };
        const s = Zg({ dom: { tag: "div", classes: ["tox-anchorbar"] } });
        const _ = function () {
          return e
            .bind(function (t) {
              return MB.getThrobber(t);
            })
            .getOrDie("Could not find throbber element");
        };
        const T = YO(C, x, function () {
          return e
            .bind(function (t) {
              return s.getOpt(t);
            })
            .getOrDie("Could not find a anchor bar element");
        });
        const l = MB.parts().menubar({
          dom: { tag: "div", classes: ["tox-menubar"] },
          backstage: T,
          onEscape () {
            x.focus();
          },
        });
        const E = Wh(x);
        const f = MB.parts().toolbar(
          {
            dom: { tag: "div", classes: ["tox-toolbar"] },
              getSink: O,
              providers: T.shared.providers,
              onEscape () {
                x.focus();
              },
              type: E,
              lazyToolbar () {
                return e
                  .bind(function (t) {
                    return MB.getToolbar(t);
                  })
                  .getOrDie("Could not find more toolbar element");
              },
              lazyHeader () {
                return k().getOrDie("Could not find header element");
              },
            ...c
          }
        );
        const d = MB.parts()["multiple-toolbar"]({
          dom: { tag: "div", classes: ["tox-toolbar-overlord"] },
          providers: T.shared.providers,
          onEscape () {},
          type: E,
        });
        const m = MB.parts().socket({
          dom: { tag: "div", classes: ["tox-edit-area"] },
        });
        const g = MB.parts().sidebar({
          dom: { tag: "div", classes: ["tox-sidebar"] },
        });
        const p = MB.parts().throbber({
          dom: { tag: "div", classes: ["tox-throbber"] },
          backstage: T,
        });
        const h =
          x.getParam("statusbar", !0, "boolean") && !n
            ? st.some(kA(x, T.shared.providers))
            : st.none();
        const v = {
          dom: { tag: "div", classes: ["tox-sidebar-wrap"] },
          components: [m, g],
        };
        const b = Lh(x);
        const y = zh(x);
        const B = Hh(x);
        const D = MB.parts().header({
          dom: {tag: "div", classes: ["tox-editor-header"], ...c},
          components: it([
            B ? [l] : [],
            b ? [d] : y ? [f] : [],
            qh(x) ? [] : [s.asSpec()],
          ]),
          sticky: Jh(x),
          editor: x,
          sharedBackstage: T.shared,
        });
        const A = it([u ? [] : [D], n ? [] : [v], u ? [D] : []]);
        const M = it([
          [
            {
              dom: { tag: "div", classes: ["tox-editor-container"] },
              components: A,
            },
          ],
          n ? [] : h.toArray(),
          [p],
        ]);
        const F = Kh(x);
        const I = {
          role: "application", ...(hh.isRtl() ? { dir: "rtl" } : {}),
          ...(F ? { "aria-hidden": "true" } : {})
        };
        const R = uu(
          MB.sketch({
            dom: {
              tag: "div",
              classes: ["tox", "tox-tinymce"]
                .concat(n ? ["tox-tinymce-inline"] : [])
                .concat(u ? ["tox-tinymce--toolbar-bottom"] : [])
                .concat(i)
                .concat(r),
              styles: {
                visibility: "hidden",
                ...(F ? { opacity: "0", border: "0" } : {})
              },
              attributes: I,
            },
            components: M,
            behaviours: Ka([
              Gm.config({
                mode: "cyclic",
                selector:
                  ".tox-menubar, .tox-toolbar, .tox-toolbar__primary, .tox-toolbar__overflow--open, .tox-sidebar__overflow--open, .tox-statusbar__path, .tox-statusbar__wordcount, .tox-statusbar__branding a",
              }),
            ]),
          })
        );
      (e = st.some(R)),
        x.shortcuts.add("alt+F9", "focus menubar", function () {
          MB.focusMenubar(R);
        }),
        x.shortcuts.add("alt+F10", "focus toolbar", function () {
          MB.focusToolbar(R);
        });
      let V;
        let P;
        let H;
        let z;
        let N;
        let L;
        let j;
        let U;
        let W;
        let G;
        let X;
        let Y;
        let q;
        let K;
        let J;
        let $;
        const Q = ty(R);
        const Z = ty(C);
      (V = x),
        (P = Q),
        (H = Z),
        (z = function (n, e) {
          rt([P, H], function (t) {
            t.broadcastEvent(n, e);
          });
        }),
        (N = function (n, e) {
          rt([P, H], function (t) {
            t.broadcastOn([n], e);
          });
        }),
        (L = function (t) {
          return N(sl(), { target: t.target() });
        }),
        (j = Bb(fe.fromDom(nt.document), "touchstart", L)),
        (U = Bb(fe.fromDom(nt.document), "touchmove", function (t) {
          return z(Eo(), t);
        })),
        (W = Bb(fe.fromDom(nt.document), "touchend", function (t) {
          return z(Bo(), t);
        })),
        (G = Bb(fe.fromDom(nt.document), "mousedown", L)),
        (X = Bb(fe.fromDom(nt.document), "mouseup", function (t) {
          t.raw().button === 0 && N(fl(), { target: t.target() });
        })),
        (Y = function (t) {
          return N(sl(), { target: fe.fromDom(t.target) });
        }),
        (q = function (t) {
          t.button === 0 && N(fl(), { target: fe.fromDom(t.target) });
        }),
        (K = function (t) {
          return z(Do(), Ab(t));
        }),
        (J = function (t) {
          N(ll(), {}), z(Ao(), Ab(t));
        }),
        ($ = function () {
          return N(ll(), {});
        }),
        V.on("PostRender", function () {
          V.on("click", Y),
            V.on("tap", Y),
            V.on("mouseup", q),
            V.on("ScrollWindow", K),
            V.on("ResizeWindow", J),
            V.on("ResizeEditor", $);
        }),
        V.on("remove", function () {
          V.off("click", Y),
            V.off("tap", Y),
            V.off("mouseup", q),
            V.off("ScrollWindow", K),
            V.off("ResizeWindow", J),
            V.off("ResizeEditor", $),
            G.unbind(),
            j.unbind(),
            U.unbind(),
            W.unbind(),
            X.unbind();
        }),
        V.on("detach", function () {
          Qs(P), Qs(H), P.destroy(), H.destroy();
        });
      const tt = function () {
        let t;
          const n = KB($B(x));
          const e = KB(QB((t = x)).getOr(Fh(t)));
        return (
          x.inline ||
            (Xi("div", "width", e) && Ni(R.element(), "width", e),
            Xi("div", "height", n)
              ? Ni(R.element(), "height", n)
              : Ni(R.element(), "height", "200px")),
          n
        );
      };
      return {
        mothership: Q,
        uiMothership: Z,
        backstage: T,
        renderUI () {
          let o; let r; let e; let n; let i; let u; let a; let c;
          S.setup(x, T.shared, k),
            cD(x, T),
            TD(x, O, T),
            (r = (o = x).ui.registry.getAll().sidebars),
            rt(Ct(r), function (n) {
              const t = r[n];
                const e = function () {
                  return st.from(o.queryCommandValue("ToggleSidebar")).is(n);
                };
              o.ui.registry.addToggleButton(n, {
                icon: t.icon,
                tooltip: t.tooltip,
                onAction (t) {
                  o.execCommand("ToggleSidebar", !1, n), t.setActive(e());
                },
                onSetup (t) {
                  const n = function () {
                    return t.setActive(e());
                  };
                  return (
                    o.on("ToggleSidebar", n),
                    function () {
                      o.off("ToggleSidebar", n);
                    }
                  );
                },
              });
            }),
            (e = x),
            (n = _),
            (i = T.shared),
            (u = se(!1)),
            (a = se(st.none())),
            (c = function (t) {
              t !== u.get() && (CB(n(), t, i.providers), u.set(t));
            }),
            e.on("ProgressState", function (t) {
              if ((a.get().each($g.clearTimeout), ot(t.time))) {
                const n = $g.setEditorTimeout(
                  e,
                  function () {
                    return c(t.state);
                  },
                  t.time
                );
                a.set(st.some(n));
              } else c(t.state), a.set(st.none());
            }),
            Tt(x.getParam("toolbar_groups", {}, "object"), function (t, n) {
              x.ui.registry.addGroupToolbarButton(n, t);
            });
          let t;
            const s = x.ui.registry.getAll();
            const l = s.buttons;
            const f = s.menuItems;
            const d = s.contextToolbars;
            const m = s.sidebars;
            const g = Nh(x);
            const p = {
              menuItems: f,
              menus: (t = x.getParam("menu"))
                ? Tt(t, function (t) {
                    return {...t, items: t.items};
                  })
                : {},
              menubar: x.getParam("menubar"),
              toolbar: g.getOrThunk(function () {
                return x.getParam("toolbar", !0);
              }),
              allowToolbarGroups: E === Bp.floating,
              buttons: l,
              sidebar: m,
            };
          CE(x, d, C, { backstage: T }), bA(x, C);
          const h = x.getElement();
            const v = tt();
            const b = { mothership: Q, uiMothership: Z, outerContainer: R };
            const y = { targetNode: h, height: v };
          return w.render(x, b, p, T, y);
        },
        getUi () {
          return {
            channels: {
              broadcastAll: Z.broadcast,
              broadcastOn: Z.broadcastOn,
              register () {},
            },
          };
        },
      };
    };
    const OA = at([
      Nn("lazySink"),
      qn("dragBlockClass"),
      ue("getBounds", Fu),
      te("useTabstopAt", at(!0)),
      te("eventOrder", {}),
      Bl("modalBehaviours", [Gm]),
      ca("onExecute"),
      la("onEscape"),
    ]);
    const _A = { sketch: ct };
    const TA = at([
      af({
        name: "draghandle",
        overrides (t, n) {
          return {
            behaviours: Ka([
              gA.config({
                mode: "mouse",
                getTarget (t) {
                  return Nu(t, '[role="dialog"]').getOr(t);
                },
                blockerClass: t.dragBlockClass.getOrDie(
                  new Error(
                    `The drag blocker class was not specified for a dialog with a drag handle: \n${ 
                      JSON.stringify(n, null, 2)}`
                  ).message
                ),
                getBounds: t.getDragBounds,
              }),
            ]),
          };
        },
      }),
      rf({ schema: [Nn("dom")], name: "title" }),
      rf({ factory: _A, schema: [Nn("dom")], name: "close" }),
      rf({ factory: _A, schema: [Nn("dom")], name: "body" }),
      af({ factory: _A, schema: [Nn("dom")], name: "footer" }),
      uf({
        factory: {
          sketch (t, n) {
            return {...t, dom: n.dom, components: n.components};
          },
        },
        schema: [
          te("dom", {
            tag: "div",
            styles: {
              position: "fixed",
              left: "0px",
              top: "0px",
              right: "0px",
              bottom: "0px",
            },
          }),
          te("components", []),
        ],
        name: "blocker",
      }),
    ]);
    const EA = Vf({
      name: "ModalDialog",
      configFields: OA(),
      partFields: TA(),
      factory (a, t, n, o) {
        const r = Wr("alloy.dialog.busy");
          const c = Wr("alloy.dialog.idle");
          const s = Ka([
            Gm.config({
              mode: "special",
              onTab () {
                return st.some(!0);
              },
              onShiftTab () {
                return st.some(!0);
              },
            }),
            eg.config({}),
          ]);
          const e = Wr("modal-events");
          const i = {...a.eventOrder, "alloy.system.attached": [e].concat(
              a.eventOrder["alloy.system.attached"] || []
            ),};
        return {
          uid: a.uid,
          dom: a.dom,
          components: t,
          apis: {
            show (i) {
              const t = a.lazySink(i).getOrDie();
                const u = se(st.none());
                const n = o.blocker();
                const e = t.getSystem().build(
                  {...n, components: n.components.concat([au(i)]),
                    behaviours: Ka([
                      eg.config({}),
                      $m("dialog-blocker-events", [
                        or(uo(), function () {
                          Gm.focusIn(i);
                        }),
                        $o(c, function (t, n) {
                          Vr(i.element(), "aria-busy") &&
                            (Pr(i.element(), "aria-busy"),
                            u.get().each(function (t) {
                              return Jm.remove(i, t);
                            }));
                        }),
                        $o(r, function (t, n) {
                          Fr(i.element(), "aria-busy", "true");
                          const e = n.event().getBusySpec();
                          u.get().each(function (t) {
                            Jm.remove(i, t);
                          });
                          const o = e(i, s);
                            const r = t.getSystem().build(o);
                          u.set(st.some(r)),
                            Jm.append(i, au(r)),
                            r.hasConfigured(Gm) && Gm.focusIn(r);
                        }),
                      ]),
                    ]),}
                );
              Gs(t, e), Gm.focusIn(i);
            },
            hide (n) {
              br(n.element()).each(function (t) {
                n.getSystem()
                  .getByDom(t)
                  .each(function (t) {
                    qs(t);
                  });
              });
            },
            getBody (t) {
              return xf(t, a, "body");
            },
            getFooter (t) {
              return xf(t, a, "footer");
            },
            setIdle (t) {
              jo(t, c);
            },
            setBusy (t, n) {
              Uo(t, r, { getBusySpec: n });
            },
          },
          eventOrder: i,
          domModification: {
            attributes: { role: "dialog", "aria-modal": "true" },
          },
          behaviours: Al(a.modalBehaviours, [
            Jm.config({}),
            Gm.config({
              mode: "cyclic",
              onEnter: a.onExecute,
              onEscape: a.onEscape,
              useTabstopAt: a.useTabstopAt,
            }),
            $m(e, [
              rr(function (t) {
                let n; let e; let o; let r; let i; let u;
                (n = t.element()),
                  (e = xf(t, a, "title").element()),
                  (o = st.from(Ir(n, "id")).fold(function () {
                    const t = Wr("dialog-label");
                    return Fr(e, "id", t), t;
                  }, ct)),
                  Fr(n, "aria-labelledby", o),
                  (r = t.element()),
                  (i = xf(t, a, "body").element()),
                  (u = st.from(Ir(r, "id")).fold(function () {
                    const t = Wr("dialog-describe");
                    return Fr(i, "id", t), t;
                  }, ct)),
                  Fr(r, "aria-describedby", u);
              }),
            ]),
          ]),
        };
      },
      apis: {
        show (t, n) {
          t.show(n);
        },
        hide (t, n) {
          t.hide(n);
        },
        getBody (t, n) {
          return t.getBody(n);
        },
        getFooter (t, n) {
          return t.getFooter(n);
        },
        setBusy (t, n, e) {
          t.setBusy(n, e);
        },
        setIdle (t, n) {
          t.setIdle(n);
        },
      },
    });
    const BA = fn([jn("type"), jn("name")].concat(Qp));
    const DA = Rn;
    const AA = [
      vn(
        "name",
        "name",
        Xt(function () {
          return Wr("button-name");
        }),
        In
      ),
      $n("icon"),
      re("align", "end", ["start", "end"]),
      ie("primary", !1),
      ie("disabled", !1),
    ];
    const MA = b(AA, [jn("text")]);
    const FA = b([Un("type", ["submit", "cancel", "custom"])], MA);
    const IA = b(
      [
        Un("type", ["menu"]),
        $n("text"),
        $n("tooltip"),
        $n("icon"),
        Yn("items", BA),
      ],
      AA
    );
    const RA = Dn("type", { submit: FA, cancel: FA, custom: FA, menu: IA });
    const VA = [
      jn("type"),
      jn("text"),
      Un("level", ["info", "warn", "error", "success"]),
      jn("icon"),
      te("url", ""),
    ];
    const PA = fn(VA);
    const HA = [
      jn("type"),
      jn("text"),
      ie("disabled", !1),
      ie("primary", !1),
      vn(
        "name",
        "name",
        Xt(function () {
          return Wr("button-name");
        }),
        In
      ),
      $n("icon"),
      ie("borderless", !1),
    ];
    const zA = fn(HA);
    const NA = [jn("type"), jn("name"), jn("label"), ie("disabled", !1)];
    const LA = fn(NA);
    const jA = Rn;
    const UA = [jn("type"), jn("name")];
    const WA = UA.concat([$n("label")]);
    const GA = fn(WA);
    const XA = In;
    const YA = fn(WA);
    const qA = In;
    const KA = fn(WA);
    const JA = dn(xn);
    const $A = function (t) {
      return [jn("type"), Ln("columns", Fn), t];
    };
    const QA = WA.concat([ie("sandboxed", !0)]);
    const ZA = fn(QA);
    const tM = In;
    const nM = WA.concat([
      $n("inputMode"),
      $n("placeholder"),
      ie("maximized", !1),
      ie("disabled", !1),
    ]);
    const eM = fn(nM);
    const oM = In;
    const rM = WA.concat([
      Xn("items", [jn("text"), jn("value")]),
      ee("size", 1),
      ie("disabled", !1),
    ]);
    const iM = fn(rM);
    const uM = In;
    const aM = WA.concat([ie("constrain", !0), ie("disabled", !1)]);
    const cM = fn(aM);
    const sM = fn([jn("width"), jn("height")]);
    const lM = WA.concat([
      $n("placeholder"),
      ie("maximized", !1),
      ie("disabled", !1),
    ]);
    const fM = fn(lM);
    const dM = In;
    const mM = WA.concat([
      re("filetype", "file", ["image", "media", "file"]),
      te("disabled", !1),
    ]);
    const gM = fn(mM);
    const pM = fn([jn("value"), te("meta", {})]);
    const hM = UA.concat([
      oe("tag", "textarea"),
      jn("scriptId"),
      jn("scriptUrl"),
      ((yA = undefined), ne("settings", yA, Hn)),
    ]);
    const vM = UA.concat([oe("tag", "textarea"), Wn("init")]);
    const bM = kn(function (t) {
      return On("customeditor.old", ln(vM), t).orThunk(function () {
        return On("customeditor.new", ln(hM), t);
      });
    });
    const yM = In;
    const xM = [
      jn("type"),
      jn("html"),
      re("presets", "presentation", ["presentation", "document"]),
    ];
    const wM = fn(xM);
    const SM = WA.concat([Ln("currentState", fn([Nn("blob"), jn("url")]))]);
    const kM = fn(SM);
    const CM = WA.concat([te("columns", "auto")]);
    const OM = fn(CM);
    const _M = wn([jn("value"), jn("text"), jn("icon")]);
    const TM = [jn("type"), Yn("header", In), Yn("cells", dn(In))];
    const EM = fn(TM);
    const BM = function (n) {
      return vn(
        "items",
        "items",
        Wt(),
        dn(
          kn(function (t) {
            return On(`Checking item of ${  n}`, DM, t).fold(
              function (t) {
                return ut.error(En(t));
              },
              function (t) {
                return ut.value(t);
              }
            );
          })
        )
      );
    };
    var DM = Sn(function () {
      return Bn("type", {
        alertbanner: PA,
        bar: fn(((n = BM("bar")), [jn("type"), n])),
        button: zA,
        checkbox: LA,
        colorinput: GA,
        colorpicker: YA,
        dropzone: KA,
        grid: fn($A(BM("grid"))),
        iframe: ZA,
        input: eM,
        selectbox: iM,
        sizeinput: cM,
        textarea: fM,
        urlinput: gM,
        customeditor: bM,
        htmlpanel: wM,
        imagetools: kM,
        collection: OM,
        label: fn(((t = BM("label")), [jn("type"), jn("label"), t])),
        table: EM,
        panel: MM,
      });
      let t; let n;
    });
    const AM = [jn("type"), te("classes", []), Yn("items", DM)];
    var MM = fn(AM);
    const FM = [
      vn(
        "name",
        "name",
        Xt(function () {
          return Wr("tab-name");
        }),
        In
      ),
      jn("title"),
      Yn("items", DM),
    ];
    const IM = [jn("type"), Xn("tabs", FM)];
    const RM = fn(IM);
    const VM = MA;
    const PM = RA;
    const HM = fn([
      jn("title"),
      Ln("body", Bn("type", { panel: MM, tabpanel: RM })),
      oe("size", "normal"),
      Yn("buttons", PM),
      te("initialData", {}),
      ue("onAction", Z),
      ue("onChange", Z),
      ue("onSubmit", Z),
      ue("onClose", Z),
      ue("onCancel", Z),
      te("onTabChange", Z),
    ]);
    var zM = function (t) {
      return S(t) ? [t].concat(U(Mt(t), zM)) : v(t) ? U(t, zM) : [];
    };
    const NM = function (t) {
      return w(t.type) && w(t.name);
    };
    const LM = {
      checkbox: jA,
      colorinput: XA,
      colorpicker: qA,
      dropzone: JA,
      input: oM,
      iframe: tM,
      sizeinput: sM,
      selectbox: uM,
      size: sM,
      textarea: dM,
      urlinput: pM,
      customeditor: yM,
      collection: _M,
      togglemenuitem: DA,
    };
    const jM = function (t) {
      const n = H(zM(t), NM);
        const e = U(n, function (n) {
          return (
            (t = n),
            st.from(LM[t.type]).fold(
              function () {
                return [];
              },
              function (t) {
                return [Ln(n.name, t)];
              }
            )
          );
          let t;
        });
      return fn(e);
    };
    const UM = fn(b([Un("type", ["cancel", "custom"])], VM));
    const WM = fn([
      jn("title"),
      jn("url"),
      Jn("height"),
      Jn("width"),
      Kn("buttons", dn(UM)),
      ue("onAction", Z),
      ue("onCancel", Z),
      ue("onClose", Z),
      ue("onMessage", Z),
    ]);
    const GM = function (t) {
      return {
        internalDialog: _n(On("dialog", HM, t)),
        dataValidator: jM(t),
        initialData: t.initialData,
      };
    };
    const XM = {
      open (t, n) {
        const e = GM(n);
        return t(e.internalDialog, e.initialData, e.dataValidator);
      },
      openUrl (t, n) {
        return t(_n(On("dialog", WM, n)));
      },
      redial (t) {
        return GM(t);
      },
    };
    const YM = function (t) {
      const e = [];
        const o = {};
      return (
        _t(t, function (t, n) {
          t.fold(
            function () {
              e.push(n);
            },
            function (t) {
              o[n] = t;
            }
          );
        }),
        e.length > 0 ? ut.error(e) : ut.value(o)
      );
    };
    const qM = Rf({
      name: "TabButton",
      configFields: [
        te("uid", undefined),
        Nn("value"),
        vn(
          "dom",
          "dom",
          Yt(function () {
            return {
              attributes: {
                role: "tab",
                id: Wr("aria"),
                "aria-selected": "false",
              },
            };
          }),
          An()
        ),
        qn("action"),
        te("domModification", {}),
        Bl("tabButtonBehaviours", [eg, Gm, El]),
        Nn("view"),
      ],
      factory (t, n) {
        return {
          uid: t.uid,
          dom: t.dom,
          components: t.components,
          events: hg(t.action),
          behaviours: Al(t.tabButtonBehaviours, [
            eg.config({}),
            Gm.config({ mode: "execution", useSpace: !0, useEnter: !0 }),
            El.config({ store: { mode: "memory", initialValue: t.value } }),
          ]),
          domModification: t.domModification,
        };
      },
    });
    const KM = at([
      Nn("tabs"),
      Nn("dom"),
      te("clickToDismiss", !1),
      Bl("tabbarBehaviours", [Qf, Gm]),
      ia(["tabClass", "selectedClass"]),
    ]);
    const JM = cf({
      factory: qM,
      name: "tabs",
      unit: "tab",
      overrides (o) {
        const r = function (t, n) {
            Qf.dehighlight(t, n), Uo(t, zo(), { tabbar: t, button: n });
          };
          const i = function (t, n) {
            Qf.highlight(t, n), Uo(t, Ho(), { tabbar: t, button: n });
          };
        return {
          action (t) {
            const n = t.getSystem().getByUid(o.uid).getOrDie();
              const e = Qf.isHighlighted(n, t);
            (e && o.clickToDismiss ? r : e ? Z : i)(n, t);
          },
          domModification: { classes: [o.markers.tabClass] },
        };
      },
    });
    const $M = at([JM]);
    const QM = Vf({
      name: "Tabbar",
      configFields: KM(),
      partFields: $M(),
      factory (t, n, e, o) {
        return {
          uid: t.uid,
          dom: t.dom,
          components: n,
          "debug.sketcher": "Tabbar",
          domModification: { attributes: { role: "tablist" } },
          behaviours: Al(t.tabbarBehaviours, [
            Qf.config({
              highlightClass: t.markers.selectedClass,
              itemClass: t.markers.tabClass,
              onHighlight (t, n) {
                Fr(n.element(), "aria-selected", "true");
              },
              onDehighlight (t, n) {
                Fr(n.element(), "aria-selected", "false");
              },
            }),
            Gm.config({
              mode: "flow",
              getInitial (t) {
                return Qf.getHighlighted(t).map(function (t) {
                  return t.element();
                });
              },
              selector: `.${  t.markers.tabClass}`,
              executeOnMove: !0,
            }),
          ]),
        };
      },
    });
    const ZM = Rf({
      name: "Tabview",
      configFields: [Bl("tabviewBehaviours", [Jm])],
      factory (t, n) {
        return {
          uid: t.uid,
          dom: t.dom,
          behaviours: Al(t.tabviewBehaviours, [Jm.config({})]),
          domModification: { attributes: { role: "tabpanel" } },
        };
      },
    });
    const tF = at([
      te("selectFirst", !0),
      aa("onChangeTab"),
      aa("onDismissTab"),
      te("tabs", []),
      Bl("tabSectionBehaviours", []),
    ]);
    const nF = rf({
      factory: QM,
      schema: [Nn("dom"), Gn("markers", [Nn("tabClass"), Nn("selectedClass")])],
      name: "tabbar",
      defaults (t) {
        return { tabs: t.tabs };
      },
    });
    const eF = rf({ factory: ZM, name: "tabview" });
    const oF = at([nF, eF]);
    const rF = Vf({
      name: "TabSection",
      configFields: tF(),
      partFields: oF(),
      factory (i, t, n, e) {
        const o = function (t, n) {
          yf(t, i, "tabbar").each(function (t) {
            n(t).each(Wo);
          });
        };
        return {
          uid: i.uid,
          dom: i.dom,
          components: t,
          behaviours: Dl(i.tabSectionBehaviours),
          events: qo(
            it([
              i.selectFirst
                ? [
                    rr(function (t, n) {
                      o(t, Qf.getFirst);
                    }),
                  ]
                : [],
              [
                $o(Ho(), function (t, n) {
                  let o;
                    let r;
                    const e = n.event().button();
                  (o = e),
                    (r = El.getValue(o)),
                    yf(o, i, "tabview").each(function (e) {
                      L(i.tabs, function (t) {
                        return t.value === r;
                      }).each(function (t) {
                        const n = t.view();
                        Rr(o.element(), "id").each(function (t) {
                          Fr(e.element(), "aria-labelledby", t);
                        }),
                          Jm.set(e, n),
                          i.onChangeTab(e, o, n);
                      });
                    });
                }),
                $o(zo(), function (t, n) {
                  const e = n.event().button();
                  i.onDismissTab(t, e);
                }),
              ],
            ])
          ),
          apis: {
            getViewItems (t) {
              return yf(t, i, "tabview")
                .map(function (t) {
                  return Jm.contents(t);
                })
                .getOr([]);
            },
            showTab (t, e) {
              o(t, function (n) {
                const t = Qf.getCandidates(n);
                return L(t, function (t) {
                  return El.getValue(t) === e;
                }).filter(function (t) {
                  return !Qf.isHighlighted(n, t);
                });
              });
            },
          },
        };
      },
      apis: {
        getViewItems (t, n) {
          return t.getViewItems(n);
        },
        showTab (t, n, e) {
          t.showTab(n, e);
        },
      },
    });
    const iF = function (t, n) {
      Ni(t, "height", `${n  }px`),
        ze().browser.isIE()
          ? Yi(t, "flex-basis")
          : Ni(t, "flex-basis", `${n  }px`);
    };
    const uF = function (t, o, r) {
      Nu(t, '[role="dialog"]').each(function (e) {
        Lu(e, '[role="tablist"]').each(function (n) {
          r.get()
            .map(function (t) {
              return (
                Ni(o, "height", "0"),
                Ni(o, "flex-basis", "0"),
                Math.min(
                  t,
                  (function (t, n, e) {
                    let o;
                      const r = hr(t).dom();
                      const i = Nu(t, ".tox-dialog-wrap").getOr(t);
                    o =
                      Ui(i, "position") === "fixed"
                        ? Math.max(r.clientHeight, nt.window.innerHeight)
                        : Math.max(r.offsetHeight, r.scrollHeight);
                    const u = lu(n);
                      const a =
                        n.dom().offsetLeft >= e.dom().offsetLeft + bu(e)
                          ? Math.max(lu(e), u)
                          : u;
                      const c = parseInt(Ui(t, "margin-top"), 10) || 0;
                      const s = parseInt(Ui(t, "margin-bottom"), 10) || 0;
                    return o - (lu(t) + c + s - a);
                  })(e, o, n)
                )
              );
            })
            .each(function (t) {
              iF(o, t);
            });
        });
      });
    };
    const aF = function (t) {
      return Lu(t, '[role="tabpanel"]');
    };
    const cF = function (a) {
      let c;
      return {
        smartTabHeight:
          ((c = se(st.none())),
          {
            extraEvents: [
              rr(function (t) {
                const e = t.element();
                aF(e).each(function (u) {
                  let n;
                  Ni(u, "visibility", "hidden"),
                    t
                      .getSystem()
                      .getByDom(u)
                      .toOption()
                      .each(function (t) {
                        let o;
                          let r;
                          let i;
                          const n =
                            ((r = u),
                            (i = t),
                            V((o = a), function (t, n) {
                              Jm.set(i, o[n].view());
                              const e = r.dom().getBoundingClientRect();
                              return Jm.set(i, []), e.height;
                            }));
                          const e = q(
                            Y(n, function (t, n) {
                              return n < t ? -1 : t < n ? 1 : 0;
                            })
                          );
                        c.set(e);
                      }),
                    uF(e, u, c),
                    Yi(u, "visibility"),
                    (n = t),
                    q(a).each(function (t) {
                      return rF.showTab(n, t.value);
                    }),
                    $g.requestAnimationFrame(function () {
                      uF(e, u, c);
                    });
                });
              }),
              $o(Ao(), function (t) {
                const n = t.element();
                aF(n).each(function (t) {
                  uF(n, t, c);
                });
              }),
              $o(yy, function (t, n) {
                const r = t.element();
                aF(r).each(function (n) {
                  const t = uc();
                  Ni(n, "visibility", "hidden");
                  const e = Gi(n, "height").map(function (t) {
                    return parseInt(t, 10);
                  });
                  Yi(n, "height"), Yi(n, "flex-basis");
                  const o = n.dom().getBoundingClientRect().height;
                  e.forall(function (t) {
                    return t < o;
                  })
                    ? (c.set(st.from(o)), uF(r, n, c))
                    : e.each(function (t) {
                        iF(n, t);
                      }),
                    Yi(n, "visibility"),
                    t.each(ic);
                });
              }),
            ],
            selectFirst: !1,
          }),
        naiveTabHeight: { extraEvents: [], selectFirst: !0 },
      };
    };
    const sF = "send-data-to-section";
    const lF = "send-data-to-view";
    const fF = Wr("update-dialog");
    const dF = Wr("update-title");
    const mF = Wr("update-body");
    const gF = Wr("update-footer");
    const pF = Wr("body-send-message");
    const hF = function (t, n, d, e) {
      return {
        dom: {
          tag: "div",
          classes: ["tox-dialog__content-js"],
          attributes: {
            ...n
                .map(function (t) {
                  return { id: t };
                })
                .getOr({}),
            ...(e ? { "aria-live": "polite" } : {})
          },
        },
        components: [],
        behaviours: Ka([
          dS(0),
          vT.config({
            channel: mF,
            updateState (t, n) {
              return st.some({
                isTabPanel () {
                  return n.body.type === "tabpanel";
                },
              });
            },
            renderComponents (t) {
              switch (t.body.type) {
                case "tabpanel":
                  return [
                    ((r = t.body),
                    (i = d),
                    (u = se({})),
                    (a = function (t) {
                      const n = El.getValue(t);
                        const e = YM(n).getOr({});
                        const o = u.get();
                        const r = zt(o, e);
                      u.set(r);
                    }),
                    (c = function (t) {
                      const n = u.get();
                      El.setValue(t, n);
                    }),
                    (s = se(null)),
                    (l = V(r.tabs, function (t) {
                      return {
                        value: t.name,
                        dom: {
                          tag: "div",
                          classes: ["tox-dialog__body-nav-item"],
                          innerHtml: i.shared.providers.translate(t.title),
                        },
                        view () {
                          return [
                            eS.sketch(function (n) {
                              return {
                                dom: { tag: "div", classes: ["tox-form"] },
                                components: V(t.items, function (t) {
                                  return cO(n, t, i);
                                }),
                                formBehaviours: Ka([
                                  Gm.config({
                                    mode: "acyclic",
                                    useTabstopAt: x(DS),
                                  }),
                                  $m("TabView.form.events", [rr(c), ir(a)]),
                                  oc.config({
                                    channels: $t([
                                      { key: sF, value: { onReceive: a } },
                                      { key: lF, value: { onReceive: c } },
                                    ]),
                                  }),
                                ]),
                              };
                            }),
                          ];
                        },
                      };
                    })),
                    (f = cF(l).smartTabHeight),
                    rF.sketch({
                      dom: { tag: "div", classes: ["tox-dialog__body"] },
                      onChangeTab (t, n, e) {
                        const o = El.getValue(n);
                        Uo(t, by, { name: o, oldName: s.get() }), s.set(o);
                      },
                      tabs: l,
                      components: [
                        rF
                          .parts()
                          .tabbar({
                            dom: {
                              tag: "div",
                              classes: ["tox-dialog__body-nav"],
                            },
                            components: [QM.parts().tabs({})],
                            markers: {
                              tabClass: "tox-tab",
                              selectedClass:
                                "tox-dialog__body-nav-item--active",
                            },
                            tabbarBehaviours: Ka([uy.config({})]),
                          }),
                        rF
                          .parts()
                          .tabview({
                            dom: {
                              tag: "div",
                              classes: ["tox-dialog__body-content"],
                            },
                          }),
                      ],
                      selectFirst: f.selectFirst,
                      tabSectionBehaviours: Ka([
                        $m("tabpanel", f.extraEvents),
                        Gm.config({ mode: "acyclic" }),
                        Lf.config({
                          find (t) {
                            return q(rF.getViewItems(t));
                          },
                        }),
                        El.config({
                          store: {
                            mode: "manual",
                            getValue (t) {
                              return (
                                t.getSystem().broadcastOn([sF], {}), u.get()
                              );
                            },
                            setValue (t, n) {
                              u.set(n), t.getSystem().broadcastOn([lF], {});
                            },
                          },
                        }),
                      ]),
                    })),
                  ];
                default:
                  return [
                    ((e = t.body),
                    (o = d),
                    {
                      dom: { tag: "div", classes: ["tox-dialog__body"] },
                      components: [
                        {
                          dom: {
                            tag: "div",
                            classes: ["tox-dialog__body-content"],
                          },
                          components: [
                            (n = Zg(
                              eS.sketch(function (n) {
                                return {
                                  dom: {
                                    tag: "div",
                                    classes: ["tox-form"].concat(e.classes),
                                  },
                                  components: V(e.items, function (t) {
                                    return cO(n, t, o);
                                  }),
                                };
                              })
                            )).asSpec(),
                          ],
                        },
                      ],
                      behaviours: Ka([
                        Gm.config({ mode: "acyclic", useTabstopAt: x(DS) }),
                        fS(n),
                        yS(n, {
                          postprocess (t) {
                            return YM(t).fold(
                              function (t) {
                                return nt.console.error(t), {};
                              },
                              function (t) {
                                return t;
                              }
                            );
                          },
                        }),
                      ]),
                    }),
                  ];
              }
              let e; let o; let n; let r; let i; let u; let a; let c; let s; let l; let f;
            },
            initialData: t,
          }),
        ]),
      };
    };
    const vF = mv.deviceType.isTouch();
    const bF = function (t, n) {
      return {
        dom: {
          tag: "div",
          styles: { display: "none" },
          classes: ["tox-dialog__header"],
        },
        components: [t, n],
      };
    };
    const yF = function (t, n) {
      return EA.parts().close(
        Qg.sketch({
          dom: {
            tag: "button",
            classes: ["tox-button", "tox-button--icon", "tox-button--naked"],
            attributes: { type: "button", "aria-label": n.translate("Close") },
          },
          action: t,
          buttonBehaviours: Ka([uy.config({})]),
        })
      );
    };
    const xF = function () {
      return EA.parts().title({
        dom: {
          tag: "div",
          classes: ["tox-dialog__title"],
          innerHtml: "",
          styles: { display: "none" },
        },
      });
    };
    const wF = function (t, n) {
      return EA.parts().body({
        dom: { tag: "div", classes: ["tox-dialog__body"] },
        components: [
          {
            dom: { tag: "div", classes: ["tox-dialog__body-content"] },
            components: [{ dom: kB(`<p>${  n.translate(t)  }</p>`) }],
          },
        ],
      });
    };
    const SF = function (t) {
      return EA.parts().footer({
        dom: { tag: "div", classes: ["tox-dialog__footer"] },
        components: t,
      });
    };
    const kF = function (t, n) {
      return [
        Zb.sketch({
          dom: { tag: "div", classes: ["tox-dialog__footer-start"] },
          components: t,
        }),
        Zb.sketch({
          dom: { tag: "div", classes: ["tox-dialog__footer-end"] },
          components: n,
        }),
      ];
    };
    const CF = function (n) {
      let t;
        const e = "tox-dialog";
        const o = `${e  }-wrap`;
        const r = `${o  }__backdrop`;
        const i = `${e  }__disable-scroll`;
      return EA.sketch({
        lazySink: n.lazySink,
        onEscape (t) {
          return n.onEscape(t), st.some(!0);
        },
        useTabstopAt (t) {
          return !DS(t);
        },
        dom: {
          tag: "div",
          classes: [e].concat(n.extraClasses),
          styles: {position: "relative", ...n.extraStyles},
        },
        components: b([n.header, n.body], n.footer.toArray()),
        parts: {
          blocker: {
            dom: kB(`<div class="${  o  }"></div>`),
            components: [
              { dom: { tag: "div", classes: vF ? [r, `${r  }--opaque`] : [r] } },
            ],
          },
        },
        dragBlockClass: o,
        modalBehaviours: Ka(
          b(
            [
              eg.config({}),
              $m(
                "dialog-events",
                n.dialogEvents.concat([
                  or(uo(), function (t, n) {
                    Gm.focusIn(t);
                  }),
                ])
              ),
              $m("scroll-lock", [
                rr(function () {
                  Si(Vi(), i);
                }),
                ir(function () {
                  Ci(Vi(), i);
                }),
              ]),
            ],
            n.extraBehaviours
          )
        ),
        eventOrder: et(
          (((t = {})[wo()] = ["dialog-events"]),
          (t[Mo()] = ["scroll-lock", "dialog-events", "alloy.base.behaviour"]),
          (t[Fo()] = ["alloy.base.behaviour", "dialog-events", "scroll-lock"]),
          t),
          n.eventOrder
        ),
      });
    };
    const OF = function (t) {
      return Qg.sketch({
        dom: {
          tag: "button",
          classes: ["tox-button", "tox-button--icon", "tox-button--naked"],
          attributes: {
            type: "button",
            "aria-label": t.translate("Close"),
            title: t.translate("Close"),
          },
        },
        components: [
          {
            dom: {
              tag: "div",
              classes: ["tox-icon"],
              innerHtml:
                '<svg width="24" height="24" xmlns="http://www.w3.org/2000/svg"><path d="M17.953 7.453L13.422 12l4.531 4.547-1.406 1.406L12 13.422l-4.547 4.531-1.406-1.406L10.578 12 6.047 7.453l1.406-1.406L12 10.578l4.547-4.531z" fill-rule="evenodd"></path></svg>',
            },
          },
        ],
        action (t) {
          jo(t, my);
        },
      });
    };
    const _F = function (t, n, e) {
      const o = function (t) {
        return [ou(e.translate(t.title))];
      };
      return {
        dom: {
          tag: "div",
          classes: ["tox-dialog__title"],
          attributes: {
            
            ...n
              .map(function (t) {
                return { id: t };
              })
              .getOr({})
          },
        },
        components: o(t),
        behaviours: Ka([vT.config({ channel: dF, renderComponents: o })]),
      };
    };
    const TF = function () {
      return { dom: kB('<div class="tox-dialog__draghandle"></div>') };
    };
    const EF = function (t, n) {
      return (
        (e = {
          title: n.shared.providers.translate(t),
          draggable: n.dialog.isDraggableModal(),
        }),
        (o = n.shared.providers),
        (r = EA.parts().title(_F(e, st.none(), o))),
        (i = EA.parts().draghandle(TF())),
        (u = EA.parts().close(OF(o))),
        (a = [r].concat(e.draggable ? [i] : []).concat([u])),
        Zb.sketch({
          dom: kB('<div class="tox-dialog__header"></div>'),
          components: a,
        })
      );
      let e; let o; let r; let i; let u; let a;
    };
    const BF = function (t, n) {
      return {
        onClose () {
          return n.closeWindow();
        },
        onBlock (e) {
          EA.setBusy(t(), function (t, n) {
            return {
              dom: {
                tag: "div",
                classes: ["tox-dialog__busy-spinner"],
                attributes: { "aria-label": e.message() },
                styles: {
                  left: "0px",
                  right: "0px",
                  bottom: "0px",
                  top: "0px",
                  position: "absolute",
                },
              },
              behaviours: n,
              components: [
                {
                  dom: kB(
                    '<div class="tox-spinner"><div></div><div></div><div></div></div>'
                  ),
                },
              ],
            };
          });
        },
        onUnblock () {
          EA.setIdle(t());
        },
      };
    };
    const DF = function (t, n, e, o) {
      let r;
      return uu(
        CF(
          {...t, lazySink: o.shared.getSink,
            extraBehaviours: b(
              [
                vT.config({
                  channel: fF,
                  updateState (t, n) {
                    return st.some(n);
                  },
                  initialData: n,
                }),
                SS({}),
              ],
              t.extraBehaviours
            ),
            onEscape (t) {
              jo(t, my);
            },
            dialogEvents: e,
            eventOrder:
              (((r = {})[xo()] = ["reflecting", "receiving"]),
              (r[Mo()] = [
                "scroll-lock",
                "reflecting",
                "messages",
                "dialog-events",
                "alloy.base.behaviour",
              ]),
              (r[Fo()] = [
                "alloy.base.behaviour",
                "dialog-events",
                "messages",
                "reflecting",
                "scroll-lock",
              ]),
              r),}
        )
      );
    };
    const AF = function (t) {
      return V(t, function (t) {
        return t.type === "menu"
          ? ((e = V((n = t).items, function (t) {
              const n = se(!1);
              return {...t, storage: n};
            })),
            ({...n, items: e}))
          : t;
        let n; let e;
      });
    };
    const MF = function (t) {
      return N(
        t,
        function (t, n) {
          return n.type !== "menu"
            ? t
            : N(
                n.items,
                function (t, n) {
                  return (t[n.name] = n.storage), t;
                },
                t
              );
        },
        {}
      );
    };
    const FF = function (t, e) {
      return [
        nr(uo(), BS),
        t(dy, function (t, n) {
          e.onClose(), n.onClose();
        }),
        t(my, function (t, n, e, o) {
          n.onCancel(t), jo(o, dy);
        }),
        $o(vy, function (t, n) {
          return e.onUnblock();
        }),
        $o(hy, function (t, n) {
          return e.onBlock(n.event());
        }),
      ];
    };
    const IF = function (i, t) {
      const n = function (t, r) {
          return $o(t, function (e, o) {
            u(e, function (t, n) {
              r(i(), t, o.event(), e);
            });
          });
        };
        var u = function (n, e) {
          vT.getState(n)
            .get()
            .each(function (t) {
              e(t, n);
            });
        };
      return b(FF(n, t), [
        n(gy, function (t, n, e) {
          n.onAction(t, { name: e.name() });
        }),
      ]);
    };
    const RF = function (i, t, a) {
      const n = function (t, r) {
          return $o(t, function (e, o) {
            u(e, function (t, n) {
              r(i(), t, o.event(), e);
            });
          });
        };
        var u = function (n, e) {
          vT.getState(n)
            .get()
            .each(function (t) {
              e(t.internalDialog, n);
            });
        };
      return b(FF(n, t), [
        n(py, function (t, n) {
          return n.onSubmit(t);
        }),
        n(fy, function (t, n, e) {
          n.onChange(t, { name: e.name() });
        }),
        n(gy, function (t, n, e, o) {
          const r = function () {
              return Gm.focusIn(o);
            };
            const i = function (t) {
              return (
                Vr(t, "disabled") ||
                Rr(t, "aria-disabled").exists(function (t) {
                  return t === "true";
                })
              );
            };
            const u = uc();
          n.onAction(t, { name: e.name(), value: e.value() }),
            uc().fold(r, function (n) {
              i(n) ||
              u.exists(function (t) {
                return We(n, t) && i(t);
              })
                ? r()
                : a()
                    .toOption()
                    .filter(function (t) {
                      return !We(t.element(), n);
                    })
                    .each(r);
            });
        }),
        n(by, function (t, n, e) {
          n.onTabChange(t, { newTabName: e.name(), oldTabName: e.oldName() });
        }),
        ir(function (t) {
          const n = i();
          El.setValue(t, n.getData());
        }),
      ]);
    };
    const VF = function (t, n) {
      const e = n
          .map(function (t) {
            return t.footerButtons;
          })
          .getOr([]);
        const o = P(e, function (t) {
          return t.align === "start";
        });
        const r = function (t, n) {
          return Zb.sketch({
            dom: { tag: "div", classes: [`tox-dialog__footer-${  t}`] },
            components: V(n, function (t) {
              return t.memento.asSpec();
            }),
          });
        };
      return [r("start", o.pass), r("end", o.fail)];
    };
    const PF = function (t, i) {
      return {
        dom: kB('<div class="tox-dialog__footer"></div>'),
        components: [],
        behaviours: Ka([
          vT.config({
            channel: gF,
            initialData: t,
            updateState (t, n) {
              const r = V(n.buttons, function (t) {
                let n;
                  let e;
                  const o = Zg(((e = i), $k((n = t), n.type, e)));
                return { name: t.name, align: t.align, memento: o };
              });
              return st.some({
                lookupByName (t, n) {
                  return (
                    (e = t),
                    (o = n),
                    L(r, function (t) {
                      return t.name === o;
                    }).bind(function (t) {
                      return t.memento.getOpt(e);
                    })
                  );
                  let e; let o;
                },
                footerButtons: r,
              });
            },
            renderComponents: VF,
          }),
        ]),
      };
    };
    const HF = function (t, n) {
      return EA.parts().footer(PF(t, n));
    };
    const zF = function (n, e) {
      if (n.getRoot().getSystem().isConnected()) {
        const o = Lf.getCurrent(n.getFormWrapper()).getOr(n.getFormWrapper());
        return eS.getField(o, e).fold(
          function () {
            const t = n.getFooter();
            return vT
              .getState(t)
              .get()
              .bind(function (t) {
                return t.lookupByName(o, e);
              });
          },
          function (t) {
            return st.some(t);
          }
        );
      }
      return st.none();
    };
    const NF = function (c, o, s) {
      const t = function (t) {
          const n = c.getRoot();
          n.getSystem().isConnected() && t(n);
        };
        var l = {
          getData () {
            const t = c.getRoot();
              const n = t.getSystem().isConnected() ? c.getFormWrapper() : t;
              const e = El.getValue(n);
              const o = Tt(s, function (t) {
                return t.get();
              });
            return {...e, ...o};
          },
          setData (a) {
            t(function (t) {
              let n;
                let e;
                const o = l.getData();
                const r = {...o, ...a};
                const i =
                  ((n = r),
                  (e = c.getRoot()),
                  vT
                    .getState(e)
                    .get()
                    .map(function (t) {
                      return _n(On("data", t.dataValidator, n));
                    })
                    .getOr(n));
                const u = c.getFormWrapper();
              El.setValue(u, i),
                _t(s, function (t, n) {
                  It(r, n) && t.set(r[n]);
                });
            });
          },
          disable (t) {
            zF(c, t).each(Dh.disable);
          },
          enable (t) {
            zF(c, t).each(Dh.enable);
          },
          focus (t) {
            zF(c, t).each(eg.focus);
          },
          block (n) {
            if (!w(n))
              throw new Error(
                "The dialogInstanceAPI.block function should be passed a blocking message of type string as an argument"
              );
            t(function (t) {
              Uo(t, hy, { message: n });
            });
          },
          unblock () {
            t(function (t) {
              jo(t, vy);
            });
          },
          showTab (e) {
            t(function (t) {
              const n = c.getBody();
              vT
                .getState(n)
                .get()
                .exists(function (t) {
                  return t.isTabPanel();
                }) &&
                Lf.getCurrent(n).each(function (t) {
                  rF.showTab(t, e);
                });
            });
          },
          redial (e) {
            t(function (t) {
              const n = o(e);
              t.getSystem().broadcastOn([fF], n),
                t.getSystem().broadcastOn([dF], n.internalDialog),
                t.getSystem().broadcastOn([mF], n.internalDialog),
                t.getSystem().broadcastOn([gF], n.internalDialog),
                l.setData(n.initialData);
            });
          },
          close () {
            t(function (t) {
              jo(t, dy);
            });
          },
        };
      return l;
    };
    const LF = function (t, n, e) {
      let o;
        let r;
        let i;
        const u = EF(t.internalDialog.title, e);
        const a =
          ((o = { body: t.internalDialog.body }),
          (r = e),
          (i = hF(o, st.none(), r, !1)),
          EA.parts().body(i));
        const c = AF(t.internalDialog.buttons);
        const s = MF(c);
        const l = HF({ buttons: c }, e);
        const f = RF(
          function () {
            return p;
          },
          BF(function () {
            return g;
          }, n),
          e.shared.getSink
        );
        const d =
          t.internalDialog.size !== "normal"
            ? t.internalDialog.size === "large"
              ? ["tox-dialog--width-lg"]
              : ["tox-dialog--width-md"]
            : [];
        const m = {
          header: u,
          body: a,
          footer: st.some(l),
          extraClasses: d,
          extraBehaviours: [],
          extraStyles: {},
        };
        var g = DF(m, t, f, e);
        var p = NF(
          {
            getRoot () {
              return g;
            },
            getBody () {
              return EA.getBody(g);
            },
            getFooter () {
              return EA.getFooter(g);
            },
            getFormWrapper () {
              const t = EA.getBody(g);
              return Lf.getCurrent(t).getOr(t);
            },
          },
          n.redial,
          s
        );
      return { dialog: g, instanceApi: p };
    };
    const jF = function (t, n, e, o) {
      let r;
        let i;
        let u;
        let a;
        let c;
        let s;
        let l;
        let f;
        let d;
        const m = Wr("dialog-label");
        const g = Wr("dialog-content");
        const p = Zg(
          ((u = { title: t.internalDialog.title, draggable: !0 }),
          (a = m),
          (c = e.shared.providers),
          Zb.sketch({
            dom: kB('<div class="tox-dialog__header"></div>'),
            components: [_F(u, st.some(a), c), TF(), OF(c)],
            containerBehaviours: Ka([
              gA.config({
                mode: "mouse",
                blockerClass: "blocker",
                getTarget (t) {
                  return ju(t, '[role="dialog"]').getOrDie();
                },
                snaps: {
                  getSnapPoints () {
                    return [];
                  },
                  leftAttr: "data-drag-left",
                  topAttr: "data-drag-top",
                },
              }),
            ]),
          }))
        );
        const h = Zg(
          ((s = { body: t.internalDialog.body }),
          (l = g),
          (f = e),
          (d = o),
          hF(s, st.some(l), f, d))
        );
        const v = AF(t.internalDialog.buttons);
        const b = MF(v);
        const y = Zg(PF({ buttons: v }, e));
        const x = RF(
          function () {
            return S;
          },
          {
            onBlock () {},
            onUnblock () {},
            onClose () {
              return n.closeWindow();
            },
          },
          e.shared.getSink
        );
        const w = uu({
          dom: {
            tag: "div",
            classes: ["tox-dialog", "tox-dialog-inline"],
            attributes:
              (((r = { role: "dialog" })["aria-labelledby"] = m),
              (r["aria-describedby"] = `${  g}`),
              r),
          },
          eventOrder:
            (((i = {})[xo()] = [vT.name(), oc.name()]),
            (i[wo()] = ["execute-on-form"]),
            (i[Mo()] = ["reflecting", "execute-on-form"]),
            i),
          behaviours: Ka([
            Gm.config({
              mode: "cyclic",
              onEscape (t) {
                return jo(t, dy), st.some(!0);
              },
              useTabstopAt (t) {
                return (
                  !DS(t) &&
                  (cr(t) !== "button" || Ir(t, "disabled") !== "disabled")
                );
              },
            }),
            vT.config({
              channel: fF,
              updateState (t, n) {
                return st.some(n);
              },
              initialData: t,
            }),
            eg.config({}),
            $m(
              "execute-on-form",
              x.concat([
                or(uo(), function (t, n) {
                  Gm.focusIn(t);
                }),
              ])
            ),
            SS({}),
          ]),
          components: [p.asSpec(), h.asSpec(), y.asSpec()],
        });
        var S = NF(
          {
            getRoot () {
              return w;
            },
            getFooter () {
              return y.get(w);
            },
            getBody () {
              return h.get(w);
            },
            getFormWrapper () {
              const t = h.get(w);
              return Lf.getCurrent(t).getOr(t);
            },
          },
          n.redial,
          b
        );
      return { dialog: w, instanceApi: S };
    };
    const UF = tinymce.util.Tools.resolve("tinymce.util.URI");
    const WF = [
      "insertContent",
      "setContent",
      "execCommand",
      "close",
      "block",
      "unblock",
    ];
    const GF = function (t) {
      return S(t) && WF.indexOf(t.mceAction) !== -1;
    };
    const XF = function (o, t, r, n) {
      let e;
        let i;
        let u;
        let a;
        const c = EF(o.title, n);
        const s =
          ((i = {
            dom: { tag: "div", classes: ["tox-dialog__content-js"] },
            components: [
              {
                dom: { tag: "div", classes: ["tox-dialog__body-iframe"] },
                components: [
                  TS({
                    dom: { tag: "iframe", attributes: { src: o.url } },
                    behaviours: Ka([uy.config({}), eg.config({})]),
                  }),
                ],
              },
            ],
            behaviours: Ka([
              Gm.config({ mode: "acyclic", useTabstopAt: x(DS) }),
            ]),
          }),
          EA.parts().body(i));
        const l = o.buttons.bind(function (t) {
          return t.length === 0 ? st.none() : st.some(HF({ buttons: t }, n));
        });
        const f = IF(
          function () {
            return y;
          },
          BF(function () {
            return b;
          }, t)
        );
        const d = {
          ...o.height.fold(
              function () {
                return {};
              },
              function (t) {
                return { height: `${t  }px`, "max-height": `${t  }px` };
              }
            ),
          ...o.width.fold(
            function () {
              return {};
            },
            function (t) {
              return { width: `${t  }px`, "max-width": `${t  }px` };
            }
          )
        };
        const m =
          o.width.isNone() && o.height.isNone() ? ["tox-dialog--width-lg"] : [];
        const g = new UF(o.url, { base_uri: new UF(nt.window.location.href) });
        const p = `${g.protocol  }://${  g.host  }${g.port ? `:${  g.port}` : ""}`;
        const h = se(st.none());
        const v = [
          $m("messages", [
            rr(function () {
              const t = Bb(fe.fromDom(nt.window), "message", function (t) {
                if (g.isSameOrigin(new UF(t.raw().origin))) {
                  const n = t.raw().data;
                  GF(n)
                    ? (function (t, n, e) {
                        switch (e.mceAction) {
                          case "insertContent":
                            t.insertContent(e.content);
                            break;
                          case "setContent":
                            t.setContent(e.content);
                            break;
                          case "execCommand":
                            var o = !!k(e.ui) && e.ui;
                            t.execCommand(e.cmd, o, e.value);
                            break;
                          case "close":
                            n.close();
                            break;
                          case "block":
                            n.block(e.message);
                            break;
                          case "unblock":
                            n.unblock();
                        }
                      })(r, y, n)
                    : !GF((e = n)) &&
                      S(e) &&
                      It(e, "mceAction") &&
                      o.onMessage(y, n);
                }
                let e;
              });
              h.set(st.some(t));
            }),
            ir(function () {
              h.get().each(function (t) {
                return t.unbind();
              });
            }),
          ]),
          oc.config({
            channels:
              (((e = {})[pF] = {
                onReceive (t, n) {
                  Lu(t.element(), "iframe").each(function (t) {
                    t.dom().contentWindow.postMessage(n, p);
                  });
                },
              }),
              e),
          }),
        ];
        var b = DF(
          {
            header: c,
            body: s,
            footer: l,
            extraClasses: m,
            extraBehaviours: v,
            extraStyles: d,
          },
          o,
          f,
          n
        );
        var y =
          ((a = function (t) {
            u.getSystem().isConnected() && t(u);
          }),
          {
            block (n) {
              if (!w(n))
                throw new Error(
                  "The urlDialogInstanceAPI.block function should be passed a blocking message of type string as an argument"
                );
              a(function (t) {
                Uo(t, hy, { message: n });
              });
            },
            unblock () {
              a(function (t) {
                jo(t, vy);
              });
            },
            close () {
              a(function (t) {
                jo(t, dy);
              });
            },
            sendMessage (n) {
              a(function (t) {
                t.getSystem().broadcastOn([pF], n);
              });
            },
          });
      return { dialog: (u = b), instanceApi: y };
    };
    const YF = function (t) {
      let c;
        let s;
        let l;
        let f;
        const p = t.backstage;
        const h = t.editor;
        const v = Jh(h);
        const e =
          ((s = (c = t).backstage.shared),
          {
            open (t, n) {
              const e = function () {
                  EA.hide(u), n();
                };
                const o = Zg(
                  $k(
                    {
                      name: "close-alert",
                      text: "OK",
                      primary: !0,
                      align: "end",
                      disabled: !1,
                      icon: st.none(),
                    },
                    "cancel",
                    c.backstage
                  )
                );
                const r = xF();
                const i = yF(e, s.providers);
                var u = uu(
                  CF({
                    lazySink () {
                      return s.getSink();
                    },
                    header: bF(r, i),
                    body: wF(t, s.providers),
                    footer: st.some(SF(kF([], [o.asSpec()]))),
                    onEscape: e,
                    extraClasses: ["tox-alert-dialog"],
                    extraBehaviours: [],
                    extraStyles: {},
                    dialogEvents: [$o(my, e)],
                    eventOrder: {},
                  })
                );
              EA.show(u);
              const a = o.get(u);
              eg.focus(a);
            },
          });
        const o =
          ((f = (l = t).backstage.shared),
          {
            open (t, n) {
              const e = function (t) {
                  EA.hide(a), n(t);
                };
                const o = Zg(
                  $k(
                    {
                      name: "yes",
                      text: "Yes",
                      primary: !0,
                      align: "end",
                      disabled: !1,
                      icon: st.none(),
                    },
                    "submit",
                    l.backstage
                  )
                );
                const r = $k(
                  {
                    name: "no",
                    text: "No",
                    primary: !1,
                    align: "end",
                    disabled: !1,
                    icon: st.none(),
                  },
                  "cancel",
                  l.backstage
                );
                const i = xF();
                const u = yF(function () {
                  return e(!1);
                }, f.providers);
                var a = uu(
                  CF({
                    lazySink () {
                      return f.getSink();
                    },
                    header: bF(i, u),
                    body: wF(t, f.providers),
                    footer: st.some(SF(kF([], [r, o.asSpec()]))),
                    onEscape () {
                      return e(!1);
                    },
                    extraClasses: ["tox-confirm-dialog"],
                    extraBehaviours: [],
                    extraStyles: {},
                    dialogEvents: [
                      $o(my, function () {
                        return e(!1);
                      }),
                      $o(py, function () {
                        return e(!0);
                      }),
                    ],
                    eventOrder: {},
                  })
                );
              EA.show(a);
              const c = o.get(a);
              eg.focus(c);
            },
          });
        const r = function (t, e) {
          return XM.openUrl(function (t) {
            var n = XF(
              t,
              {
                closeWindow () {
                  EA.hide(n.dialog), e(n.instanceApi);
                },
              },
              h,
              p
            );
            return EA.show(n.dialog), n.instanceApi;
          }, t);
        };
        const i = function (t, i) {
          return XM.open(function (t, n, e) {
            const o = n;
              var r = LF(
                { dataValidator: e, initialData: o, internalDialog: t },
                {
                  redial: XM.redial,
                  closeWindow () {
                    EA.hide(r.dialog), i(r.instanceApi);
                  },
                },
                p
              );
            return EA.show(r.dialog), r.instanceApi.setData(o), r.instanceApi;
          }, t);
        };
        const u = function (t, d, m, g) {
          return XM.open(function (t, n, e) {
            let o;
              let r;
              let i;
              const u = _n(On("data", e, n));
              const a =
                ((o = se(st.none())),
                {
                  clear () {
                    o.set(st.none());
                  },
                  set (t) {
                    o.set(st.some(t));
                  },
                  isSet () {
                    return o.get().isSome();
                  },
                  on (t) {
                    o.get().each(t);
                  },
                });
              const c = p.shared.header.isPositionedAtTop();
              const s = function () {
                return a.on(function (t) {
                  zg.reposition(t), JE.refresh(t);
                });
              };
              var l = jF(
                { dataValidator: e, initialData: u, internalDialog: t },
                {
                  redial: XM.redial,
                  closeWindow () {
                    a.on(zg.hide),
                      h.off("ResizeEditor", s),
                      a.clear(),
                      m(l.instanceApi);
                  },
                },
                p,
                g
              );
              const f = uu(
                zg.sketch(
                  {
                    lazySink: p.shared.getSink,
                        dom: { tag: "div", classes: [] },
                        fireDismissalEventInstead: {},
                      ...(c ? {} : { fireRepositionEventInstead: {} }),
                    inlineBehaviours: Ka(
                        b(
                          [
                            $m("window-manager-inline-events", [
                              $o(Io(), function (t, n) {
                                jo(l.dialog, my);
                              }),
                            ]),
                          ],
                          ((r = h),
                          (i = c),
                          v && i
                            ? []
                            : [
                                JE.config({
                                  contextual: {
                                    lazyContext () {
                                      return st.some(
                                        Au(
                                          fe.fromDom(
                                            r.getContentAreaContainer()
                                          )
                                        )
                                      );
                                    },
                                    fadeInClass: "tox-dialog-dock-fadein",
                                    fadeOutClass: "tox-dialog-dock-fadeout",
                                    transitionClass:
                                      "tox-dialog-dock-transition",
                                  },
                                  modes: ["top"],
                                }),
                              ])
                        )
                      ),
                      isExtraPart (t, n) {
                        return (
                          Mb((e = n), ".tox-alert-dialog") ||
                          Mb(e, ".tox-confirm-dialog")
                        );
                        let e;
                      },
                  }
                )
              );
            return (
              a.set(f),
              zg.showWithin(f, d, au(l.dialog), st.some(Vi())),
              (v && c) || (JE.refresh(f), h.on("ResizeEditor", s)),
              l.instanceApi.setData(u),
              Gm.focusIn(l.dialog),
              l.instanceApi
            );
          }, t);
        };
      return {
        open (t, n, e) {
          return n !== undefined && n.inline === "toolbar"
            ? u(t, p.shared.anchors.inlineDialog(), e, n.ariaAttrs)
            : n !== undefined && n.inline === "cursor"
            ? u(t, p.shared.anchors.cursor(), e, n.ariaAttrs)
            : i(t, e);
        },
        openUrl (t, n) {
          return r(t, n);
        },
        alert (t, n) {
          e.open(t, function () {
            n();
          });
        },
        close (t) {
          t.close();
        },
        confirm (t, n) {
          o.open(t, function (t) {
            n(t);
          });
        },
      };
    };
  !(function eI() {
    t.add("silver", function (t) {
      const n = CA(t);
        const e = n.uiMothership;
        const o = n.backstage;
        const r = n.renderUI;
        const i = n.getUi;
      Tb(t, o.shared);
      const u = YF({ editor: t, backstage: o });
      return {
        renderUI: r,
        getWindowManagerImpl: at(u),
        getNotificationManagerImpl () {
          return rp(0, { backstage: o }, e);
        },
        ui: i(),
      };
    });
  })();
})(window);
