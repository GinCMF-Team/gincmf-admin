/**
 * Copyright (c) Tiny Technologies, Inc. All rights reserved.
 * Licensed under the LGPL or a commercial license.
 * For LGPL see License.txt in the project root for license information.
 * For commercial licenses see https://www.tiny.cloud/
 *
 * Version: 5.4.1 (2020-07-08)
 */
!(function (h) {
  
  const n = tinymce.util.Tools.resolve("tinymce.PluginManager");
    const w = function () {};
    const b = function (n) {
      return function () {
        return n;
      };
    };
    const u = function (n) {
      return n;
    };
  function y(r) {
    for (var o = [], n = 1; n < arguments.length; n++) o[n - 1] = arguments[n];
    return function () {
      for (var n = [], e = 0; e < arguments.length; e++) n[e] = arguments[e];
      const t = o.concat(n);
      return r.apply(null, t);
    };
  }
  let e;
    let t;
    let r;
    let o;
    const d = function (e) {
      return function (n) {
        return !e(n);
      };
    };
    const f = b(!1);
    const C = b(!0);
    const i = function () {
      return c;
    };
    var c =
      ((e = function (n) {
        return n.isNone();
      }),
      {
        fold (n, e) {
          return n();
        },
        is: f,
        isSome: f,
        isNone: C,
        getOr: (r = function (n) {
          return n;
        }),
        getOrThunk: (t = function (n) {
          return n();
        }),
        getOrDie (n) {
          throw new Error(n || "error: getOrDie called on none.");
        },
        getOrNull: b(null),
        getOrUndefined: b(undefined),
        or: r,
        orThunk: t,
        map: i,
        each: w,
        bind: i,
        exists: f,
        forall: C,
        filter: i,
        equals: e,
        equals_: e,
        toArray () {
          return [];
        },
        toString: b("none()"),
      });
    var a = function (t) {
      const n = b(t);
        const e = function () {
          return o;
        };
        const r = function (n) {
          return n(t);
        };
        var o = {
          fold (n, e) {
            return e(t);
          },
          is (n) {
            return t === n;
          },
          isSome: C,
          isNone: f,
          getOr: n,
          getOrThunk: n,
          getOrDie: n,
          getOrNull: n,
          getOrUndefined: n,
          or: e,
          orThunk: e,
          map (n) {
            return a(n(t));
          },
          each (n) {
            n(t);
          },
          bind: r,
          exists: r,
          forall: r,
          filter (n) {
            return n(t) ? o : c;
          },
          toArray () {
            return [t];
          },
          toString () {
            return `some(${  t  })`;
          },
          equals (n) {
            return n.is(t);
          },
          equals_ (n, e) {
            return n.fold(f, function (n) {
              return e(t, n);
            });
          },
        };
      return o;
    };
    const S = {
      some: a,
      none: i,
      from (n) {
        return n === null || n === undefined ? c : a(n);
      },
    };
    const l = function (r) {
      return function (n) {
        return (
          (t = typeof (e = n)),
          (e === null
            ? "null"
            : t == "object" &&
              (Array.prototype.isPrototypeOf(e) ||
                (e.constructor && e.constructor.name === "Array"))
            ? "array"
            : t == "object" &&
              (String.prototype.isPrototypeOf(e) ||
                (e.constructor && e.constructor.name === "String"))
            ? "string"
            : t) === r
        );
        let e; let t;
      };
    };
    const s = function (e) {
      return function (n) {
        return typeof n === e;
      };
    };
    const m = l("string");
    const g = l("object");
    const p = l("array");
    const v = s("boolean");
    const x = function (n) {
      return !((e = n) === null || e === undefined);
      let e;
    };
    const T = s("function");
    const R = s("number");
    const O = Array.prototype.slice;
    const D = Array.prototype.indexOf;
    const A = Array.prototype.push;
    const B = function (n, e) {
      return (t = n), (r = e), D.call(t, r) > -1;
      let t; let r;
    };
    const I = function (n, e) {
      for (let t = 0, r = n.length; t < r; t++) {
        if (e(n[t], t)) return !0;
      }
      return !1;
    };
    const P = function (n, e) {
      for (var t = [], r = 0; r < n; r++) t.push(e(r));
      return t;
    };
    const k = function (n, e) {
      for (var t = n.length, r = new Array(t), o = 0; o < t; o++) {
        const u = n[o];
        r[o] = e(u, o);
      }
      return r;
    };
    const E = function (n, e) {
      for (let t = 0, r = n.length; t < r; t++) {
        e(n[t], t);
      }
    };
    const M = function (n, e) {
      for (var t = [], r = 0, o = n.length; r < o; r++) {
        const u = n[r];
        e(u, r) && t.push(u);
      }
      return t;
    };
    const N = function (n, e, t) {
      return (
        (function (n, e) {
          for (let t = n.length - 1; t >= 0; t--) {
            e(n[t], t);
          }
        })(n, function (n) {
          t = e(t, n);
        }),
        t
      );
    };
    const _ = function (n, e, t) {
      return (
        E(n, function (n) {
          t = e(t, n);
        }),
        t
      );
    };
    const W = function (n, e) {
      return (function (n, e, t) {
        for (let r = 0, o = n.length; r < o; r++) {
          const u = n[r];
          if (e(u, r)) return S.some(u);
          if (t(u, r)) break;
        }
        return S.none();
      })(n, e, f);
    };
    const j = function (n, e) {
      for (let t = 0, r = n.length; t < r; t++) {
        if (e(n[t], t)) return S.some(t);
      }
      return S.none();
    };
    const z = function (n) {
      for (var e = [], t = 0, r = n.length; t < r; ++t) {
        if (!p(n[t]))
          throw new Error(
            `Arr.flatten item ${  t  } was not an array, input: ${  n}`
          );
        A.apply(e, n[t]);
      }
      return e;
    };
    const F = function (n, e) {
      return z(k(n, e));
    };
    const L = function (n, e) {
      for (let t = 0, r = n.length; t < r; ++t) {
        if (!0 !== e(n[t], t)) return !1;
      }
      return !0;
    };
    const H = function (n) {
      return n.length === 0 ? S.none() : S.some(n[n.length - 1]);
    };
    const q = function (n, e) {
      for (let t = 0; t < n.length; t++) {
        const r = e(n[t], t);
        if (r.isSome()) return r;
      }
      return S.none();
    };
    const V = Object.keys;
    const U = Object.hasOwnProperty;
    const K = function (n, e) {
      for (let t = V(n), r = 0, o = t.length; r < o; r++) {
        const u = t[r];
        e(n[u], u);
      }
    };
    const $ = function (n, t) {
      return X(n, function (n, e) {
        return { k: e, v: t(n, e) };
      });
    };
    var X = function (n, r) {
      const o = {};
      return (
        K(n, function (n, e) {
          const t = r(n, e);
          o[t.k] = t.v;
        }),
        o
      );
    };
    const G = function (n, e) {
      let t;
        let r;
        let o;
        let u;
        const i = {};
      return (
        (t = e),
        (u = i),
        (r = function (n, e) {
          u[e] = n;
        }),
        (o = w),
        K(n, function (n, e) {
          (t(n, e) ? r : o)(n, e);
        }),
        i
      );
    };
    const Y = function (n, e) {
      return J(n, e) ? S.from(n[e]) : S.none();
    };
    var J = function (n, e) {
      return U.call(n, e);
    };
    const Q =
      (typeof h.window !== "undefined" ? h.window : Function("return this;")(),
      function (n) {
        return n.dom().nodeName.toLowerCase();
      });
    const Z = function (n) {
      return n.dom().nodeType;
    };
    const nn = function (e) {
      return function (n) {
        return Z(n) === e;
      };
    };
    const en = function (n) {
      return Z(n) === 8 || Q(n) === "#comment";
    };
    const tn = nn(1);
    const rn = nn(3);
    const on = nn(9);
    const un = nn(11);
    const cn = function (n, e, t) {
      if (!(m(t) || v(t) || R(t)))
        throw (
          (h.console.error(
            "Invalid call to Attr.set. Key ",
            e,
            ":: Value ",
            t,
            ":: Element ",
            n
          ),
          new Error("Attribute value was not simple"))
        );
      n.setAttribute(e, `${t  }`);
    };
    const an = function (n, e, t) {
      cn(n.dom(), e, t);
    };
    const ln = function (n, e) {
      const t = n.dom();
      K(e, function (n, e) {
        cn(t, e, n);
      });
    };
    const fn = function (n, e) {
      const t = n.dom().getAttribute(e);
      return t === null ? undefined : t;
    };
    const sn = function (n, e) {
      return S.from(fn(n, e));
    };
    const dn = function (n, e) {
      const t = n.dom();
      return !(!t || !t.hasAttribute) && t.hasAttribute(e);
    };
    const mn = function (n, e) {
      n.dom().removeAttribute(e);
    };
    const gn = function (n) {
      return _(
        n.dom().attributes,
        function (n, e) {
          return (n[e.name] = e.value), n;
        },
        {}
      );
    };
    const pn = function (n, e, t) {
      return (
        e === "" || (n.length >= e.length && n.substr(t, t + e.length) === e)
      );
    };
    const hn = function (n, e) {
      return n.indexOf(e) !== -1;
    };
    const vn = function (n, e) {
      return pn(n, e, n.length - e.length);
    };
    const bn =
      ((o = /^\s+|\s+$/g),
      function (n) {
        return n.replace(o, "");
      });
    const wn = function (n) {
      return n.length > 0;
    };
    const yn = function (n) {
      return n.style !== undefined && T(n.style.getPropertyValue);
    };
    const Cn = function (n) {
      if (n === null || n === undefined)
        throw new Error("Node cannot be null or undefined");
      return { dom: b(n) };
    };
    const Sn = {
      fromHtml (n, e) {
        const t = (e || h.document).createElement("div");
        if (((t.innerHTML = n), !t.hasChildNodes() || t.childNodes.length > 1))
          throw (
            (h.console.error("HTML does not have a single root node", n),
            new Error("HTML must have a single root node"))
          );
        return Cn(t.childNodes[0]);
      },
      fromTag (n, e) {
        const t = (e || h.document).createElement(n);
        return Cn(t);
      },
      fromText (n, e) {
        const t = (e || h.document).createTextNode(n);
        return Cn(t);
      },
      fromDom: Cn,
      fromPoint (n, e, t) {
        const r = n.dom();
        return S.from(r.elementFromPoint(e, t)).map(Cn);
      },
    };
    var xn = function () {
      return (xn =
        Object.assign ||
        function (n) {
          for (var e, t = 1, r = arguments.length; t < r; t++)
            for (const o in (e = arguments[t]))
              Object.prototype.hasOwnProperty.call(e, o) && (n[o] = e[o]);
          return n;
        }).apply(this, arguments);
    };
    const Tn = function (t) {
      let r;
        let o = !1;
      return function () {
        for (var n = [], e = 0; e < arguments.length; e++) n[e] = arguments[e];
        return o || ((o = !0), (r = t.apply(null, n))), r;
      };
    };
    const Rn = function (n, e) {
      const t = (function (n, e) {
        for (let t = 0; t < n.length; t++) {
          const r = n[t];
          if (r.test(e)) return r;
        }
        return undefined;
      })(n, e);
      if (!t) return { major: 0, minor: 0 };
      const r = function (n) {
        return Number(e.replace(t, `$${  n}`));
      };
      return Dn(r(1), r(2));
    };
    const On = function () {
      return Dn(0, 0);
    };
    var Dn = function (n, e) {
      return { major: n, minor: e };
    };
    const An = {
      nu: Dn,
      detect (n, e) {
        const t = String(e).toLowerCase();
        return n.length === 0 ? On() : Rn(n, t);
      },
      unknown: On,
    };
    const Bn = "Firefox";
    const In = function (n) {
      const e = n.current;
        const t = n.version;
        const r = function (n) {
          return function () {
            return e === n;
          };
        };
      return {
        current: e,
        version: t,
        isEdge: r("Edge"),
        isChrome: r("Chrome"),
        isIE: r("IE"),
        isOpera: r("Opera"),
        isFirefox: r(Bn),
        isSafari: r("Safari"),
      };
    };
    const Pn = {
      unknown () {
        return In({ current: undefined, version: An.unknown() });
      },
      nu: In,
      edge: b("Edge"),
      chrome: b("Chrome"),
      ie: b("IE"),
      opera: b("Opera"),
      firefox: b(Bn),
      safari: b("Safari"),
    };
    const kn = "Windows";
    const En = "Android";
    const Mn = "Solaris";
    const Nn = "FreeBSD";
    const _n = "ChromeOS";
    const Wn = function (n) {
      const e = n.current;
        const t = n.version;
        const r = function (n) {
          return function () {
            return e === n;
          };
        };
      return {
        current: e,
        version: t,
        isWindows: r(kn),
        isiOS: r("iOS"),
        isAndroid: r(En),
        isOSX: r("OSX"),
        isLinux: r("Linux"),
        isSolaris: r(Mn),
        isFreeBSD: r(Nn),
        isChromeOS: r(_n),
      };
    };
    const jn = {
      unknown () {
        return Wn({ current: undefined, version: An.unknown() });
      },
      nu: Wn,
      windows: b(kn),
      ios: b("iOS"),
      android: b(En),
      linux: b("Linux"),
      osx: b("OSX"),
      solaris: b(Mn),
      freebsd: b(Nn),
      chromeos: b(_n),
    };
    const zn = function (n, e) {
      const t = String(e).toLowerCase();
      return W(n, function (n) {
        return n.search(t);
      });
    };
    const Fn = function (n, t) {
      return zn(n, t).map(function (n) {
        const e = An.detect(n.versionRegexes, t);
        return { current: n.name, version: e };
      });
    };
    const Ln = function (n, t) {
      return zn(n, t).map(function (n) {
        const e = An.detect(n.versionRegexes, t);
        return { current: n.name, version: e };
      });
    };
    const Hn = /.*?version\/\ ?([0-9]+)\.([0-9]+).*/;
    const qn = function (e) {
      return function (n) {
        return hn(n, e);
      };
    };
    const Vn = [
      {
        name: "Edge",
        versionRegexes: [/.*?edge\/ ?([0-9]+)\.([0-9]+)$/],
        search (n) {
          return (
            hn(n, "edge/") &&
            hn(n, "chrome") &&
            hn(n, "safari") &&
            hn(n, "applewebkit")
          );
        },
      },
      {
        name: "Chrome",
        versionRegexes: [/.*?chrome\/([0-9]+)\.([0-9]+).*/, Hn],
        search (n) {
          return hn(n, "chrome") && !hn(n, "chromeframe");
        },
      },
      {
        name: "IE",
        versionRegexes: [
          /.*?msie\ ?([0-9]+)\.([0-9]+).*/,
          /.*?rv:([0-9]+)\.([0-9]+).*/,
        ],
        search (n) {
          return hn(n, "msie") || hn(n, "trident");
        },
      },
      {
        name: "Opera",
        versionRegexes: [Hn, /.*?opera\/([0-9]+)\.([0-9]+).*/],
        search: qn("opera"),
      },
      {
        name: "Firefox",
        versionRegexes: [/.*?firefox\/\ ?([0-9]+)\.([0-9]+).*/],
        search: qn("firefox"),
      },
      {
        name: "Safari",
        versionRegexes: [Hn, /.*?cpu os ([0-9]+)_([0-9]+).*/],
        search (n) {
          return (hn(n, "safari") || hn(n, "mobile/")) && hn(n, "applewebkit");
        },
      },
    ];
    const Un = [
      {
        name: "Windows",
        search: qn("win"),
        versionRegexes: [/.*?windows\ nt\ ?([0-9]+)\.([0-9]+).*/],
      },
      {
        name: "iOS",
        search (n) {
          return hn(n, "iphone") || hn(n, "ipad");
        },
        versionRegexes: [
          /.*?version\/\ ?([0-9]+)\.([0-9]+).*/,
          /.*cpu os ([0-9]+)_([0-9]+).*/,
          /.*cpu iphone os ([0-9]+)_([0-9]+).*/,
        ],
      },
      {
        name: "Android",
        search: qn("android"),
        versionRegexes: [/.*?android\ ?([0-9]+)\.([0-9]+).*/],
      },
      {
        name: "OSX",
        search: qn("mac os x"),
        versionRegexes: [/.*?mac\ os\ x\ ?([0-9]+)_([0-9]+).*/],
      },
      { name: "Linux", search: qn("linux"), versionRegexes: [] },
      { name: "Solaris", search: qn("sunos"), versionRegexes: [] },
      { name: "FreeBSD", search: qn("freebsd"), versionRegexes: [] },
      {
        name: "ChromeOS",
        search: qn("cros"),
        versionRegexes: [/.*?chrome\/([0-9]+)\.([0-9]+).*/],
      },
    ];
    const Kn = { browsers: b(Vn), oses: b(Un) };
    const $n = function (n, e) {
      let t;
        let r;
        let o;
        let u;
        let i;
        let c;
        let a;
        let l;
        let f;
        let s;
        let d;
        let m;
        const g = Kn.browsers();
        const p = Kn.oses();
        const h = Fn(g, n).fold(Pn.unknown, Pn.nu);
        const v = Ln(p, n).fold(jn.unknown, jn.nu);
      return {
        browser: h,
        os: v,
        deviceType:
          ((r = h),
          (o = n),
          (u = e),
          (i = (t = v).isiOS() && !0 === /ipad/i.test(o)),
          (c = t.isiOS() && !i),
          (a = t.isiOS() || t.isAndroid()),
          (l = a || u("(pointer:coarse)")),
          (f = i || (!c && a && u("(min-device-width:768px)"))),
          (s = c || (a && !f)),
          (d = r.isSafari() && t.isiOS() && !1 === /safari/i.test(o)),
          (m = !s && !f && !d),
          {
            isiPad: b(i),
            isiPhone: b(c),
            isTablet: b(f),
            isPhone: b(s),
            isTouch: b(l),
            isAndroid: t.isAndroid,
            isiOS: t.isiOS,
            isWebView: b(d),
            isDesktop: b(m),
          }),
      };
    };
    const Xn = function (n) {
      return h.window.matchMedia(n).matches;
    };
    const Gn = Tn(function () {
      return $n(h.navigator.userAgent, Xn);
    });
    const Yn = function () {
      return Gn();
    };
    const Jn = function (n, e) {
      const t = n.dom();
      if (t.nodeType !== 1) return !1;
      const r = t;
      if (r.matches !== undefined) return r.matches(e);
      if (r.msMatchesSelector !== undefined) return r.msMatchesSelector(e);
      if (r.webkitMatchesSelector !== undefined)
        return r.webkitMatchesSelector(e);
      if (r.mozMatchesSelector !== undefined) return r.mozMatchesSelector(e);
      throw new Error("Browser lacks native selectors");
    };
    const Qn = function (n) {
      return (
        (n.nodeType !== 1 && n.nodeType !== 9 && n.nodeType !== 11) ||
        n.childElementCount === 0
      );
    };
    const Zn = function (n, e) {
      return n.dom() === e.dom();
    };
    const ne = function (n, e) {
      return (
        (t = n.dom()),
        (r = e.dom()),
        (o = t),
        (u = r),
        (i = h.Node.DOCUMENT_POSITION_CONTAINED_BY),
        (o.compareDocumentPosition(u) & i) != 0
      );
      let t; let r; let o; let u; let i;
    };
    const ee = function (n, e) {
      return Yn().browser.isIE()
        ? ne(n, e)
        : ((t = e), (r = n.dom()), (o = t.dom()), r !== o && r.contains(o));
      let t; let r; let o;
    };
    const te = Jn;
    const re = function (n) {
      return Sn.fromDom(n.dom().ownerDocument);
    };
    const oe = function (n) {
      return S.from(n.dom().parentNode).map(Sn.fromDom);
    };
    const ue = function (n, e) {
      for (
        var t = T(e) ? e : f, r = n.dom(), o = [];
        r.parentNode !== null && r.parentNode !== undefined;

      ) {
        const u = r.parentNode;
          const i = Sn.fromDom(u);
        if ((o.push(i), !0 === t(i))) break;
        r = u;
      }
      return o;
    };
    const ie = function (n) {
      return S.from(n.dom().previousSibling).map(Sn.fromDom);
    };
    const ce = function (n) {
      return S.from(n.dom().nextSibling).map(Sn.fromDom);
    };
    const ae = function (n) {
      return k(n.dom().childNodes, Sn.fromDom);
    };
    const le = function (n, e) {
      const t = n.dom().childNodes;
      return S.from(t[e]).map(Sn.fromDom);
    };
    const fe = T(h.Element.prototype.attachShadow) && T(h.Node.prototype.getRootNode);
    const se = b(fe);
    const de = fe
      ? function (n) {
          return Sn.fromDom(n.dom().getRootNode());
        }
      : function (n) {
          return on(n) ? n : re(n);
        };
    const me = function (n) {
      const e = de(n);
      return un(e) ? S.some(e) : S.none();
    };
    const ge = function (n) {
      return Sn.fromDom(n.dom().host);
    };
    const pe = function (n) {
      if (se() && x(n.target)) {
        const e = Sn.fromDom(n.target);
        if (tn(e) && he(Sn.fromDom(n.target))) {
          if (n.composed && n.composedPath) {
            const t = n.composedPath();
            if (t) return (r = t).length === 0 ? S.none() : S.some(r[0]);
          }
        }
      }
      let r;
      return S.from(n.target);
    };
    var he = function (n) {
      return x(n.dom().shadowRoot);
    };
    var ve = function (n) {
      let e;
        let t;
        const r = rn(n) ? n.dom().parentNode : n.dom();
      return (
        r !== undefined &&
        r !== null &&
        r.ownerDocument !== null &&
        me(Sn.fromDom(r)).fold(
          function () {
            return r.ownerDocument.body.contains(r);
          },
          ((e = ve),
          (t = ge),
          function (n) {
            return e(t(n));
          })
        )
      );
    };
    const be = function (n) {
      const e = n.dom().body;
      if (e === null || e === undefined)
        throw new Error("Body is not available yet");
      return Sn.fromDom(e);
    };
    const we = function (n, e, t) {
      if (!m(t))
        throw (
          (h.console.error(
            "Invalid call to CSS.set. Property ",
            e,
            ":: Value ",
            t,
            ":: Element ",
            n
          ),
          new Error(`CSS value must be a string: ${  t}`))
        );
      yn(n) && n.style.setProperty(e, t);
    };
    const ye = function (n, e, t) {
      const r = n.dom();
      we(r, e, t);
    };
    const Ce = function (n, e) {
      const t = n.dom();
      K(e, function (n, e) {
        we(t, e, n);
      });
    };
    const Se = function (n, e) {
      const t = n.dom();
        const r = h.window.getComputedStyle(t).getPropertyValue(e);
      return r !== "" || ve(n) ? r : xe(t, e);
    };
    var xe = function (n, e) {
      return yn(n) ? n.style.getPropertyValue(e) : "";
    };
    const Te = function (n, e) {
      const t = n.dom();
        const r = xe(t, e);
      return S.from(r).filter(function (n) {
        return n.length > 0;
      });
    };
    const Re = function (n, e) {
      let t;
        let r;
        const o = n.dom();
      (r = e),
        yn((t = o)) && t.style.removeProperty(r),
        sn(n, "style").map(bn).is("") && mn(n, "style");
    };
    const Oe = function (e, t) {
      oe(e).each(function (n) {
        n.dom().insertBefore(t.dom(), e.dom());
      });
    };
    const De = function (n, e) {
      ce(n).fold(
        function () {
          oe(n).each(function (n) {
            Be(n, e);
          });
        },
        function (n) {
          Oe(n, e);
        }
      );
    };
    const Ae = function (e, t) {
      le(e, 0).fold(
        function () {
          Be(e, t);
        },
        function (n) {
          e.dom().insertBefore(t.dom(), n.dom());
        }
      );
    };
    var Be = function (n, e) {
      n.dom().appendChild(e.dom());
    };
    const Ie = function (n, e) {
      Oe(n, e), Be(e, n);
    };
    const Pe = function (r, o) {
      E(o, function (n, e) {
        const t = e === 0 ? r : o[e - 1];
        De(t, n);
      });
    };
    const ke = function (e, n) {
      E(n, function (n) {
        Be(e, n);
      });
    };
    const Ee = function (n) {
      (n.dom().textContent = ""),
        E(ae(n), function (n) {
          Me(n);
        });
    };
    var Me = function (n) {
      const e = n.dom();
      e.parentNode !== null && e.parentNode.removeChild(e);
    };
    const Ne = function (n) {
      let e;
        const t = ae(n);
      t.length > 0 &&
        ((e = n),
        E(t, function (n) {
          Oe(e, n);
        })),
        Me(n);
    };
    const _e = function (n, e, t) {
      return { element: b(n), rowspan: b(e), colspan: b(t) };
    };
    const We = function (n, e, t) {
      return { element: b(n), cells: b(e), section: b(t) };
    };
    const je = function (n, e) {
      return { element: b(n), isNew: b(e) };
    };
    const ze = function (n, e) {
      return { cells: b(n), section: b(e) };
    };
    var Fe = function (n, e) {
      let t = [];
      return (
        E(ae(n), function (n) {
          e(n) && (t = t.concat([n])), (t = t.concat(Fe(n, e)));
        }),
        t
      );
    };
    const Le = function (n, e, t) {
      return (
        (r = function (n) {
          return Jn(n, e);
        }),
        M(ue(n, t), r)
      );
      let r;
    };
    const He = function (n, e) {
      return (
        (t = function (n) {
          return Jn(n, e);
        }),
        M(ae(n), t)
      );
      let t;
    };
    const qe = function (n, e) {
      return (
        (t = e),
        (o = (r = n) === undefined ? h.document : r.dom()),
        Qn(o) ? [] : k(o.querySelectorAll(t), Sn.fromDom)
      );
      let t; let r; let o;
    };
  function Ve(n, e, t, r, o) {
    return n(t, r) ? S.some(t) : T(o) && o(t) ? S.none() : e(t, r, o);
  }
  const Ue = function (n, e, t) {
      for (let r = n.dom(), o = T(t) ? t : b(!1); r.parentNode; ) {
        r = r.parentNode;
        const u = Sn.fromDom(r);
        if (e(u)) return S.some(u);
        if (o(u)) break;
      }
      return S.none();
    };
    const Ke = function (n, e, t) {
      return Ue(
        n,
        function (n) {
          return Jn(n, e);
        },
        t
      );
    };
    const $e = function (n, e) {
      return (
        (t = function (n) {
          return Jn(n, e);
        }),
        W(n.dom().childNodes, function (n) {
          return t(Sn.fromDom(n));
        }).map(Sn.fromDom)
      );
      let t;
    };
    const Xe = function (n, e) {
      return (
        (t = e),
        (o = (r = n) === undefined ? h.document : r.dom()),
        Qn(o) ? S.none() : S.from(o.querySelector(t)).map(Sn.fromDom)
      );
      let t; let r; let o;
    };
    const Ge = function (n, e, t) {
      return Ve(
        function (n, e) {
          return Jn(n, e);
        },
        Ke,
        n,
        e,
        t
      );
    };
    const Ye = function (n, e, t) {
      return (
        void 0 === t && (t = 0),
        sn(n, e)
          .map(function (n) {
            return parseInt(n, 10);
          })
          .getOr(t)
      );
    };
    const Je = function (n, e) {
      return Ye(n, e, 1);
    };
    const Qe = function (n) {
      return Je(n, "colspan") > 1;
    };
    const Ze = function (n) {
      return Je(n, "rowspan") > 1;
    };
    const nt = function (n, e) {
      return parseInt(Se(n, e), 10);
    };
    const et = b(10);
    const tt = b(10);
    const rt = function (n, e) {
      return ot(n, e, b(!0));
    };
    var ot = function (n, e, t) {
      return F(ae(n), function (n) {
        return Jn(n, e) ? (t(n) ? [n] : []) : ot(n, e, t);
      });
    };
    const ut = function (n, e) {
      return (function (n, e, t) {
        if ((void 0 === t && (t = f), t(e))) return S.none();
        if (B(n, Q(e))) return S.some(e);
        return Ke(e, n.join(","), function (n) {
          return Jn(n, "table") || t(n);
        });
      })(["td", "th"], n, e);
    };
    const it = function (n) {
      return rt(n, "th,td");
    };
    const ct = function (n, e) {
      return Ge(n, "table", e);
    };
    const at = function (n) {
      return rt(n, "tr");
    };
    const lt = function (n) {
      const e = at(n);
      return k(e, function (n) {
        const e = n;
          const t = oe(e)
            .map(function (n) {
              const e = Q(n);
              return e === "tfoot" || e === "thead" || e === "tbody"
                ? e
                : "tbody";
            })
            .getOr("tbody");
          const r = k(it(n), function (n) {
            const e = Ye(n, "rowspan", 1);
              const t = Ye(n, "colspan", 1);
            return _e(n, e, t);
          });
        return We(e, r, t);
      });
    };
    const ft = function (n, e) {
      return `${n  },${  e}`;
    };
    const st = function (n, e) {
      const t = F(n.all, function (n) {
        return n.cells();
      });
      return M(t, e);
    };
    const dt = function (n) {
      const d = {};
        const e = [];
        const t = n.length;
        let m = 0;
      return (
        E(n, function (n, f) {
          const s = [];
          E(n.cells(), function (n) {
            for (var e = 0; d[ft(f, e)] !== undefined; ) e++;
            for (
              var t,
                r,
                o,
                u =
                  ((t = n.element()),
                  (r = n.rowspan()),
                  (o = n.colspan()),
                  {
                    element: b(t),
                    rowspan: b(r),
                    colspan: b(o),
                    row: b(f),
                    column: b(e),
                  }),
                i = 0;
              i < n.colspan();
              i++
            )
              for (let c = 0; c < n.rowspan(); c++) {
                const a = e + i;
                  const l = ft(f + c, a);
                (d[l] = u), (m = Math.max(m, a + 1));
              }
            s.push(u);
          }),
            e.push(We(n.element(), s, n.section()));
        }),
        { grid: { rows: b(t), columns: b(m) }, access: d, all: e }
      );
    };
    const mt = {
      fromTable (n) {
        const e = lt(n);
        return dt(e);
      },
      generate: dt,
      getAt (n, e, t) {
        const r = n.access[ft(e, t)];
        return r !== undefined ? S.some(r) : S.none();
      },
      findItem (n, e, t) {
        const r = st(n, function (n) {
          return t(e, n.element());
        });
        return r.length > 0 ? S.some(r[0]) : S.none();
      },
      filterItems: st,
      justCells (n) {
        const e = k(n.all, function (n) {
          return n.cells();
        });
        return z(e);
      },
    };
    const gt = function (n, e) {
      let t;
        let u;
        let r;
        let i;
        let c;
        let a;
        let l;
        let o;
        let f;
        let s;
        const d = function (n) {
          return Jn(n.element(), e);
        };
        const m = lt(n);
        const g = mt.generate(m);
        const p =
          ((u = d),
          (r = (t = g).grid.columns()),
          (i = t.grid.rows()),
          (c = r),
          (l = a = 0),
          K(t.access, function (n) {
            if (u(n)) {
              const e = n.row();
                const t = e + n.rowspan() - 1;
                const r = n.column();
                const o = r + n.colspan() - 1;
              e < i ? (i = e) : a < t && (a = t),
                r < c ? (c = r) : l < o && (l = o);
            }
          }),
          { minRow: i, minCol: c, maxRow: a, maxCol: l });
        const h = `th:not(${  e  }),td:not(${  e  })`;
        const v = ot(n, "th,td", function (n) {
          return Jn(n, h);
        });
      return (
        E(v, Me),
        (function (n, e, t, r) {
          for (
            var o, u, i, c = e.grid.columns(), a = e.grid.rows(), l = 0;
            l < a;
            l++
          )
            for (let f = !1, s = 0; s < c; s++) {
              if (
                !(l < t.minRow || l > t.maxRow || s < t.minCol || s > t.maxCol)
              )
                mt.getAt(e, l, s).filter(r).isNone()
                  ? ((o = f),
                    0,
                    (u = n[l].element()),
                    (i = Sn.fromTag("td")),
                    Be(i, Sn.fromTag("br")),
                    (o ? Be : Ae)(u, i))
                  : (f = !0);
            }
        })(m, g, p, d),
        (f = p),
        (s = M(rt((o = n), "tr"), function (n) {
          return n.dom().childElementCount === 0;
        })),
        E(s, Me),
        (f.minCol !== f.maxCol && f.minRow !== f.maxRow) ||
          E(rt(o, "th,td"), function (n) {
            mn(n, "rowspan"), mn(n, "colspan");
          }),
        mn(o, "width"),
        mn(o, "height"),
        Re(o, "width"),
        Re(o, "height"),
        n
      );
    };
  const pt = (function zs(t, r) {
      const e = function (n) {
        return t(n) ? S.from(n.dom().nodeValue) : S.none();
      };
      return {
        get (n) {
          if (!t(n))
            throw new Error(`Can only get ${  r  } value of a ${  r  } node`);
          return e(n).getOr("");
        },
        getOption: e,
        set (n, e) {
          if (!t(n))
            throw new Error(
              `Can only set raw ${  r  } value of a ${  r  } node`
            );
          n.dom().nodeValue = e;
        },
      };
    })(rn, "text");
    const ht = function (n) {
      return pt.get(n);
    };
    const vt = function (n) {
      return pt.getOption(n);
    };
    const bt = function (n, e) {
      return pt.set(n, e);
    };
    const wt = function (n) {
      return Q(n) === "img"
        ? 1
        : vt(n).fold(
            function () {
              return ae(n).length;
            },
            function (n) {
              return n.length;
            }
          );
    };
    const yt = ["img", "br"];
    const Ct = function (n) {
      return (
        vt(n)
          .filter(function (n) {
            return n.trim().length !== 0 || n.indexOf("\xa0") > -1;
          })
          .isSome() || B(yt, Q(n))
      );
    };
    const St = function (n) {
      return (
        (o = Ct),
        (u = function (n) {
          for (let e = 0; e < n.childNodes.length; e++) {
            const t = Sn.fromDom(n.childNodes[e]);
            if (o(t)) return S.some(t);
            const r = u(n.childNodes[e]);
            if (r.isSome()) return r;
          }
          return S.none();
        })(n.dom())
      );
      let o; let u;
    };
    const xt = function (n) {
      return Tt(n, Ct);
    };
    var Tt = function (n, u) {
      var i = function (n) {
        for (let e = ae(n), t = e.length - 1; t >= 0; t--) {
          const r = e[t];
          if (u(r)) return S.some(r);
          const o = i(r);
          if (o.isSome()) return o;
        }
        return S.none();
      };
      return i(n);
    };
    const Rt = function (n, e) {
      return Sn.fromDom(n.dom().cloneNode(e));
    };
    const Ot = function (n) {
      return Rt(n, !1);
    };
    const Dt = function (n) {
      return Rt(n, !0);
    };
    const At = function (n, e) {
      let t;
        let r;
        let o;
        let u;
        const i = ((t = n), (r = e), (o = Sn.fromTag(r)), (u = gn(t)), ln(o, u), o);
        const c = ae(Dt(n));
      return ke(i, c), i;
    };
    const Bt = function () {
      const n = Sn.fromTag("td");
      return Be(n, Sn.fromTag("br")), n;
    };
    const It = function (n, e, t) {
      const r = At(n, e);
      return (
        K(t, function (n, e) {
          n === null ? mn(r, e) : an(r, e, n);
        }),
        r
      );
    };
    const Pt = function (n) {
      return n;
    };
    const kt = function (n) {
      return function () {
        return Sn.fromTag("tr", n.dom());
      };
    };
    const Et = function (d, n, m) {
      return {
        row: kt(n),
        cell (n) {
          let r;
            let o;
            let u;
            let e;
            let t;
            let i;
            let c;
            const a = re(n.element());
            const l = Sn.fromTag(Q(n.element()), a.dom());
            const f = m.getOr([
              "strong",
              "em",
              "b",
              "i",
              "span",
              "font",
              "h1",
              "h2",
              "h3",
              "h4",
              "h5",
              "h6",
              "p",
              "div",
            ]);
            const s =
              f.length > 0
                ? ((r = n.element()),
                  (o = l),
                  (u = f),
                  St(r)
                    .map(function (n) {
                      const e = u.join(",");
                        const t = Le(n, e, function (n) {
                          return Zn(n, r);
                        });
                      return N(
                        t,
                        function (n, e) {
                          const t = Ot(e);
                          return mn(t, "contenteditable"), Be(n, t), t;
                        },
                        o
                      );
                    })
                    .getOr(o))
                : l;
          return (
            Be(s, Sn.fromTag("br")),
            (e = n.element()),
            (t = l),
            (i = e.dom()),
            (c = t.dom()),
            yn(i) && yn(c) && (c.style.cssText = i.style.cssText),
            Re(l, "height"),
            n.colspan() !== 1 && Re(n.element(), "width"),
            d(n.element(), l),
            l
          );
        },
        replace: It,
        gap: Bt,
      };
    };
    const Mt = function (n) {
      return { row: kt(n), cell: Bt, replace: Pt, gap: Bt };
    };
    const Nt = function (n, e) {
      const t = e.column();
        const r = e.column() + e.colspan() - 1;
        const o = e.row();
        const u = e.row() + e.rowspan() - 1;
      return (
        t <= n.finishCol() &&
        r >= n.startCol() &&
        o <= n.finishRow() &&
        u >= n.startRow()
      );
    };
    const _t = function (n, e) {
      return (
        e.column() >= n.startCol() &&
        e.column() + e.colspan() - 1 <= n.finishCol() &&
        e.row() >= n.startRow() &&
        e.row() + e.rowspan() - 1 <= n.finishRow()
      );
    };
    const Wt = function (n, e) {
      return (
        (t = Math.min(n.row(), e.row())),
        (r = Math.min(n.column(), e.column())),
        (o = Math.max(n.row() + n.rowspan() - 1, e.row() + e.rowspan() - 1)),
        (u = Math.max(
          n.column() + n.colspan() - 1,
          e.column() + e.colspan() - 1
        )),
        { startRow: b(t), startCol: b(r), finishRow: b(o), finishCol: b(u) }
      );
      let t; let r; let o; let u;
    };
    const jt = function (n, e, t) {
      const r = mt.findItem(n, e, Zn);
        const o = mt.findItem(n, t, Zn);
      return r.bind(function (e) {
        return o.map(function (n) {
          return Wt(e, n);
        });
      });
    };
    const zt = function (e, n, t) {
      return jt(e, n, t).bind(function (n) {
        return (function (n, e) {
          for (
            var t = !0, r = y(_t, e), o = e.startRow();
            o <= e.finishRow();
            o++
          )
            for (let u = e.startCol(); u <= e.finishCol(); u++)
              t = t && mt.getAt(n, o, u).exists(r);
          return t ? S.some(e) : S.none();
        })(e, n);
      });
    };
    const Ft = function (t, n, e) {
      return jt(t, n, e).map(function (n) {
        const e = mt.filterItems(t, y(Nt, n));
        return k(e, function (n) {
          return n.element();
        });
      });
    };
    const Lt = function (n, e) {
      return mt
        .findItem(n, e, function (n, e) {
          return ee(e, n);
        })
        .map(function (n) {
          return n.element();
        });
    };
    const Ht = function (i, c, a) {
      return ct(i).bind(function (n) {
        let r;
          let e;
          let o;
          let u;
          const t = Vt(n);
        return (
          (r = t),
          (e = i),
          (o = c),
          (u = a),
          mt.findItem(r, e, Zn).bind(function (n) {
            const e = o > 0 ? n.row() + n.rowspan() - 1 : n.row();
              const t = u > 0 ? n.column() + n.colspan() - 1 : n.column();
            return mt.getAt(r, e + o, t + u).map(function (n) {
              return n.element();
            });
          })
        );
      });
    };
    const qt = function (n, e, t, r, o) {
      const u = Vt(n);
        const i = Zn(n, t) ? S.some(e) : Lt(u, e);
        const c = Zn(n, o) ? S.some(r) : Lt(u, r);
      return i.bind(function (e) {
        return c.bind(function (n) {
          return Ft(u, e, n);
        });
      });
    };
    var Vt = mt.fromTable;
    const Ut = [
      "body",
      "p",
      "div",
      "article",
      "aside",
      "figcaption",
      "figure",
      "footer",
      "header",
      "nav",
      "section",
      "ol",
      "ul",
      "li",
      "table",
      "thead",
      "tbody",
      "tfoot",
      "caption",
      "tr",
      "td",
      "th",
      "h1",
      "h2",
      "h3",
      "h4",
      "h5",
      "h6",
      "blockquote",
      "pre",
      "address",
    ];
  function Kt() {
    return {
      up: b({ selector: Ke, closest: Ge, predicate: Ue, all: ue }),
      down: b({ selector: qe, predicate: Fe }),
      styles: b({ get: Se, getRaw: Te, set: ye, remove: Re }),
      attrs: b({
        get: fn,
        set: an,
        remove: mn,
        copyTo (n, e) {
          const t = gn(n);
          ln(e, t);
        },
      }),
      insert: b({
        before: Oe,
        after: De,
        afterAll: Pe,
        append: Be,
        appendAll: ke,
        prepend: Ae,
        wrap: Ie,
      }),
      remove: b({ unwrap: Ne, remove: Me }),
      create: b({
        nu: Sn.fromTag,
        clone (n) {
          return Sn.fromDom(n.dom().cloneNode(!1));
        },
        text: Sn.fromText,
      }),
      query: b({
        comparePosition (n, e) {
          return n.dom().compareDocumentPosition(e.dom());
        },
        prevSibling: ie,
        nextSibling: ce,
      }),
      property: b({
        children: ae,
        name: Q,
        parent: oe,
        document (n) {
          return n.dom().ownerDocument;
        },
        isText: rn,
        isComment: en,
        isElement: tn,
        getText: ht,
        setText: bt,
        isBoundary (n) {
          return !!tn(n) && (Q(n) === "body" || B(Ut, Q(n)));
        },
        isEmptyTag (n) {
          return !!tn(n) && B(["br", "img", "hr", "input"], Q(n));
        },
        isNonEditable (n) {
          return tn(n) && fn(n, "contenteditable") === "false";
        },
      }),
      eq: Zn,
      is: te,
    };
  }
  const $t = function (r, o, n, e) {
      const t = o(r, n);
      return N(
        e,
        function (n, e) {
          const t = o(r, e);
          return Xt(r, n, t);
        },
        t
      );
    };
    var Xt = function (e, n, t) {
      return n.bind(function (n) {
        return t.filter(y(e.eq, n));
      });
    };
    const Gt = function (n, e, t) {
      return t.length > 0 ? $t(n, e, (r = t)[0], r.slice(1)) : S.none();
      let r;
    };
    const Yt = function (t, n, e, r) {
      void 0 === r && (r = f);
      const o = [n].concat(t.up().all(n));
        const u = [e].concat(t.up().all(e));
        const i = function (e) {
          return j(e, r).fold(
            function () {
              return e;
            },
            function (n) {
              return e.slice(0, n + 1);
            }
          );
        };
        const c = i(o);
        const a = i(u);
        const l = W(c, function (n) {
          return I(a, ((e = n), y(t.eq, e)));
          let e;
        });
      return { firstpath: b(c), secondpath: b(a), shared: b(l) };
    };
    const Jt = Kt();
    const Qt = function (t, n) {
      return Gt(
        Jt,
        function (n, e) {
          return t(e);
        },
        n
      );
    };
    const Zt = function (n) {
      return Ke(n, "table");
    };
    const nr = function (l, f, s) {
      const d = function (e) {
        return function (n) {
          return (s !== undefined && s(n)) || Zn(n, e);
        };
      };
      return Zn(l, f)
        ? S.some({ boxes: S.some([l]), start: l, finish: f })
        : Zt(l).bind(function (a) {
            return Zt(f).bind(function (u) {
              if (Zn(a, u))
                return S.some({
                  boxes: ((o = l), (i = f), (c = Vt(a)), Ft(c, o, i)),
                  start: l,
                  finish: f,
                });
              if (ee(a, u)) {
                const n =
                  (e = Le(f, "td,th", d(a))).length > 0 ? e[e.length - 1] : f;
                return S.some({
                  boxes: qt(a, l, a, f, u),
                  start: l,
                  finish: n,
                });
              }
              if (ee(u, a)) {
                var e;
                  const t =
                    (e = Le(l, "td,th", d(u))).length > 0 ? e[e.length - 1] : l;
                return S.some({
                  boxes: qt(u, l, a, f, u),
                  start: l,
                  finish: t,
                });
              }
              return Yt(Jt, l, f, r)
                .shared()
                .bind(function (n) {
                  return Ge(n, "table", s).bind(function (n) {
                    const e = Le(f, "td,th", d(n));
                      const t = e.length > 0 ? e[e.length - 1] : f;
                      const r = Le(l, "td,th", d(n));
                      const o = r.length > 0 ? r[r.length - 1] : l;
                    return S.some({
                      boxes: qt(n, l, a, f, u),
                      start: o,
                      finish: t,
                    });
                  });
                });
              let r; let o; let i; let c;
            });
          });
    };
    const er = function (n, e) {
      const t = qe(n, e);
      return t.length > 0 ? S.some(t) : S.none();
    };
    const tr = function (n, e, r) {
      return Xe(n, e).bind(function (t) {
        return Xe(n, r).bind(function (e) {
          return Qt(Zt, [t, e]).map(function (n) {
            return { first: b(t), last: b(e), table: b(n) };
          });
        });
      });
    };
    const rr = function (n, e, t, r, o) {
      return (
        (u = o),
        W(n, function (n) {
          return Jn(n, u);
        }).bind(function (n) {
          return Ht(n, e, t).bind(function (n) {
            return (
              (t = r),
              Ke((e = n), "table").bind(function (n) {
                return Xe(n, t).bind(function (n) {
                  return nr(n, e).bind(function (e) {
                    return e.boxes.map(function (n) {
                      return { boxes: n, start: e.start, finish: e.finish };
                    });
                  });
                });
              })
            );
            let e; let t;
          });
        })
      );
      let u;
    };
    const or = function (r, n, e) {
      return tr(r, n, e).bind(function (i) {
        const n = function (n) {
            return Zn(r, n);
          };
          const e = Ke(i.first(), "thead,tfoot,tbody,table", n);
          const t = Ke(i.last(), "thead,tfoot,tbody,table", n);
        return e.bind(function (u) {
          return t.bind(function (n) {
            return Zn(u, n)
              ? ((e = i.table()),
                (t = i.first()),
                (r = i.last()),
                (o = Vt(e)),
                zt(o, t, r))
              : S.none();
            let e; let t; let r; let o;
          });
        });
      });
    };
    const ur = "data-mce-selected";
    const ir = "data-mce-first-selected";
    const cr = "data-mce-last-selected";
    const ar = ur;
    const lr = "td[data-mce-selected],th[data-mce-selected]";
    const fr = "[data-mce-selected]";
    const sr = ir;
    const dr = "td[data-mce-first-selected],th[data-mce-first-selected]";
    const mr = cr;
    const gr = "td[data-mce-last-selected],th[data-mce-last-selected]";
    const pr = /* */ Object.freeze({
      __proto__: null,
      selected: ar,
      selectedSelector: lr,
      attributeSelector: fr,
      firstSelected: sr,
      firstSelectedSelector: dr,
      lastSelected: mr,
      lastSelectedSelector: gr,
    });
    const hr = function (i) {
      if (!p(i)) throw new Error("cases must be an array");
      if (i.length === 0) throw new Error("there must be at least one case");
      const c = [];
        const t = {};
      return (
        E(i, function (n, r) {
          const e = V(n);
          if (e.length !== 1) throw new Error("one and only one name per case");
          const o = e[0];
            const u = n[o];
          if (t[o] !== undefined)
            throw new Error(`duplicate key detected:${  o}`);
          if (o === "cata")
            throw new Error("cannot have a case named cata (sorry)");
          if (!p(u)) throw new Error("case arguments must be an array");
          c.push(o),
            (t[o] = function () {
              const n = arguments.length;
              if (n !== u.length)
                throw new Error(
                  `Wrong number of arguments to case ${ 
                    o 
                    }. Expected ${ 
                    u.length 
                    } (${ 
                    u 
                    }), got ${ 
                    n}`
                );
              for (var t = new Array(n), e = 0; e < t.length; e++)
                t[e] = arguments[e];
              return {
                fold () {
                  if (arguments.length !== i.length)
                    throw new Error(
                      `Wrong number of arguments to fold. Expected ${ 
                        i.length 
                        }, got ${ 
                        arguments.length}`
                    );
                  return arguments[r].apply(null, t);
                },
                match (n) {
                  const e = V(n);
                  if (c.length !== e.length)
                    throw new Error(
                      `Wrong number of arguments to match. Expected: ${ 
                        c.join(",") 
                        }\nActual: ${ 
                        e.join(",")}`
                    );
                  if (
                    !L(c, function (n) {
                      return B(e, n);
                    })
                  )
                    throw new Error(
                      `Not all branches were specified when using match. Specified: ${ 
                        e.join(", ") 
                        }\nRequired: ${ 
                        c.join(", ")}`
                    );
                  return n[o].apply(null, t);
                },
                log (n) {
                  h.console.log(n, {
                    constructors: c,
                    constructor: o,
                    params: t,
                  });
                },
              };
            });
        }),
        t
      );
    };
    const vr = hr([
      { none: [] },
      { multiple: ["elements"] },
      { single: ["selection"] },
    ]);
    const br = function (n, e, t, r) {
      return n.fold(e, t, r);
    };
    const wr = vr.none;
    const yr = vr.multiple;
    const Cr = vr.single;
    const Sr = function (n, e) {
      return br(e.get(), b([]), u, b([n]));
    };
    const xr = function (n) {
      return {
        element: b(n),
        mergable: S.none,
        unmergable: S.none,
        selection: b([n]),
      };
    };
    const Tr = function (n, e, t) {
      return {
        element: b(t),
        mergable: b(
          ((o = e),
          br(
            n.get(),
            S.none,
            function (e, n) {
              return e.length === 0
                ? S.none()
                : or(o, dr, gr).bind(function (n) {
                    return e.length > 1
                      ? S.some({ bounds: b(n), cells: b(e) })
                      : S.none();
                  });
            },
            S.none
          ))
        ),
        unmergable: b(
          (r = Sr(t, n)).length > 0 &&
            L(r, function (n) {
              return (
                (dn(n, "rowspan") && parseInt(fn(n, "rowspan"), 10) > 1) ||
                (dn(n, "colspan") && parseInt(fn(n, "colspan"), 10) > 1)
              );
            })
            ? S.some(r)
            : S.none()
        ),
        selection: b(Sr(t, n)),
      };
      let r; let o;
    };
    const Rr = function (m, n, g, p) {
      m.on("BeforeGetContent", function (t) {
        !0 === t.selection &&
          br(
            n.get(),
            w,
            function (n) {
              t.preventDefault(),
                ct(n[0])
                  .map(Dt)
                  .map(function (n) {
                    return [gt(n, fr)];
                  })
                  .each(function (n) {
                    let e;
                    t.content =
                      t.format === "text"
                        ? k(n, function (n) {
                            return n.dom().innerText;
                          }).join("")
                        : ((e = m),
                          k(n, function (n) {
                            return e.selection.serializer.serialize(
                              n.dom(),
                              {}
                            );
                          }).join(""));
                  });
            },
            w
          );
      }),
        m.on("BeforeSetContent", function (d) {
          !0 === d.selection &&
            !0 === d.paste &&
            S.from(m.dom.getParent(m.selection.getStart(), "th,td")).each(
              function (n) {
                const s = Sn.fromDom(n);
                ct(s).each(function (e) {
                  let n;
                    let t;
                    let r;
                    let o;
                    let u;
                    let i;
                    const c = M(
                      ((n = d.content),
                      ((r = (t || h.document).createElement(
                        "div"
                      )).innerHTML = n),
                      ae(Sn.fromDom(r))),
                      function (n) {
                        return Q(n) !== "meta";
                      }
                    );
                  if (c.length === 1 && ((i = c[0]), Q(i) === "table")) {
                    d.preventDefault();
                    const a = Sn.fromDom(m.getDoc());
                      const l = Mt(a);
                      const f =
                        ((o = s),
                        (u = c[0]),
                        { element: b(o), clipboard: b(u), generators: b(l) });
                    g.pasteCells(e, f).each(function (n) {
                      m.selection.setRng(n), m.focus(), p.clear(e);
                    });
                  }
                });
              }
            );
        });
    };
    var Or = function (t, r) {
      return {
        left: b(t),
        top: b(r),
        translate (n, e) {
          return Or(t + n, r + e);
        },
      };
    };
    const Dr = Or;
    const Ar = function (n, e) {
      return n !== undefined ? n : e !== undefined ? e : 0;
    };
    const Br = function (n) {
      const e = n.dom().ownerDocument;
        const t = e.body;
        const r = e.defaultView;
        const o = e.documentElement;
      if (t === n.dom()) return Dr(t.offsetLeft, t.offsetTop);
      const u = Ar(r.pageYOffset, o.scrollTop);
        const i = Ar(r.pageXOffset, o.scrollLeft);
        const c = Ar(o.clientTop, t.clientTop);
        const a = Ar(o.clientLeft, t.clientLeft);
      return Ir(n).translate(i - a, u - c);
    };
    var Ir = function (n) {
      let e;
        const t = n.dom();
        const r = t.ownerDocument.body;
      return r === t
        ? Dr(r.offsetLeft, r.offsetTop)
        : ve(n)
        ? ((e = t.getBoundingClientRect()), Dr(e.left, e.top))
        : Dr(0, 0);
    };
    const Pr = function (n) {
      const e = S.from(n.dom().documentElement).map(Sn.fromDom).getOr(n);
      return { parent: b(e), view: b(n), origin: b(Dr(0, 0)) };
    };
    const kr = function (n, e) {
      return { parent: b(e), view: b(n), origin: b(Dr(0, 0)) };
    };
  function Er(r, o) {
    const n = function (n) {
        const e = o(n);
        if (e <= 0 || e === null) {
          const t = Se(n, r);
          return parseFloat(t) || 0;
        }
        return e;
      };
      const u = function (o, n) {
        return _(
          n,
          function (n, e) {
            const t = Se(o, e);
              const r = t === undefined ? 0 : parseInt(t, 10);
            return isNaN(r) ? n : n + r;
          },
          0
        );
      };
    return {
      set (n, e) {
        if (!R(e) && !e.match(/^[0-9]+$/))
          throw new Error(
            `${r  }.set accepts only positive integer values. Value was ${  e}`
          );
        const t = n.dom();
        yn(t) && (t.style[r] = `${e  }px`);
      },
      get: n,
      getOuter: n,
      aggregate: u,
      max (n, e, t) {
        const r = u(n, t);
        return r < e ? e - r : 0;
      },
    };
  }
  const Mr = Er("height", function (n) {
      const e = n.dom();
      return ve(n) ? e.getBoundingClientRect().height : e.offsetHeight;
    });
    const Nr = function (n) {
      return Mr.get(n);
    };
    const _r = function (n) {
      return Mr.getOuter(n);
    };
    const Wr = Er("width", function (n) {
      return n.dom().offsetWidth;
    });
    const jr = function (n) {
      return Wr.get(n);
    };
    const zr = function (n) {
      return Wr.getOuter(n);
    };
    const Fr = function (n, e) {
      return { row: n, y: e };
    };
    const Lr = function (n, e) {
      return { col: n, x: e };
    };
    const Hr = function (n) {
      return Br(n).left() + zr(n);
    };
    const qr = function (n) {
      return Br(n).left();
    };
    const Vr = function (n, e) {
      return Lr(n, qr(e));
    };
    const Ur = function (n, e) {
      return Lr(n, Hr(e));
    };
    const Kr = function (n) {
      return Br(n).top();
    };
    const $r = function (n, e) {
      return Fr(n, Kr(e));
    };
    const Xr = function (n, e) {
      return Fr(n, Kr(e) + _r(e));
    };
    const Gr = function (t, e, r) {
      if (r.length === 0) return [];
      const n = k(r.slice(1), function (n, e) {
          return n.map(function (n) {
            return t(e, n);
          });
        });
        const o = r[r.length - 1].map(function (n) {
          return e(r.length - 1, n);
        });
      return n.concat([o]);
    };
    const Yr = {
      delta: u,
      positions (n) {
        return Gr($r, Xr, n);
      },
      edge: Kr,
    };
    const Jr = {
      delta: u,
      edge: qr,
      positions (n) {
        return Gr(Vr, Ur, n);
      },
    };
    const Qr = {
      delta (n) {
        return -n;
      },
      edge: Hr,
      positions (n) {
        return Gr(Ur, Vr, n);
      },
    };
    const Zr = function (t) {
      const n = t.grid;
        const e = P(n.columns(), u);
        const r = P(n.rows(), u);
      return k(e, function (e) {
        return no(
          function () {
            return F(r, function (n) {
              return mt
                .getAt(t, n, e)
                .filter(function (n) {
                  return n.column() === e;
                })
                .fold(b([]), function (n) {
                  return [n];
                });
            });
          },
          function (n) {
            return n.colspan() === 1;
          },
          function () {
            return mt.getAt(t, 0, e);
          }
        );
      });
    };
    var no = function (n, e, t) {
      const r = n();
      return W(r, e)
        .orThunk(function () {
          return S.from(r[0]).orThunk(t);
        })
        .map(function (n) {
          return n.element();
        });
    };
    const eo = function (t) {
      const n = t.grid;
        const e = P(n.rows(), u);
        const r = P(n.columns(), u);
      return k(e, function (e) {
        return no(
          function () {
            return F(r, function (n) {
              return mt
                .getAt(t, e, n)
                .filter(function (n) {
                  return n.row() === e;
                })
                .fold(b([]), function (n) {
                  return [n];
                });
            });
          },
          function (n) {
            return n.rowspan() === 1;
          },
          function () {
            return mt.getAt(t, e, 0);
          }
        );
      });
    };
    const to = function (r, o) {
      if (o < 0 || o >= r.length - 1) return S.none();
      const n = r[o].fold(
          function () {
            let n;
              let e;
              const t = ((n = r.slice(0, o)), (e = O.call(n, 0)).reverse(), e);
            return q(t, function (n, e) {
              return n.map(function (n) {
                return { value: n, delta: e + 1 };
              });
            });
          },
          function (n) {
            return S.some({ value: n, delta: 0 });
          }
        );
        const e = r[o + 1].fold(
          function () {
            const n = r.slice(o + 1);
            return q(n, function (n, e) {
              return n.map(function (n) {
                return { value: n, delta: e + 1 };
              });
            });
          },
          function (n) {
            return S.some({ value: n, delta: 1 });
          }
        );
      return n.bind(function (t) {
        return e.map(function (n) {
          const e = n.delta + t.delta;
          return Math.abs(n.value - t.value) / e;
        });
      });
    };
    const ro = function () {
      const n = Yn().browser;
      return n.isIE() || n.isEdge();
    };
    const oo = function (n, e, t) {
      return (r = Se(n, e)), (o = t), (u = parseFloat(r)), isNaN(u) ? o : u;
      let r; let o; let u;
    };
    const uo = function (n) {
      return ro()
        ? ((t = (e = n).dom().getBoundingClientRect().height),
          Se(e, "box-sizing") === "border-box"
            ? t
            : t -
              oo(e, "padding-top", 0) -
              oo(e, "padding-bottom", 0) -
              (oo(e, "border-top-width", 0) + oo(e, "border-bottom-width", 0)))
        : oo(n, "height", Nr(n));
      let e; let t;
    };
    const io = function (n) {
      return ro()
        ? ((t = (e = n).dom().getBoundingClientRect().width),
          Se(e, "box-sizing") === "border-box"
            ? t
            : t -
              oo(e, "padding-left", 0) -
              oo(e, "padding-right", 0) -
              (oo(e, "border-left-width", 0) + oo(e, "border-right-width", 0)))
        : oo(n, "width", jr(n));
      let e; let t;
    };
    const co = /(\d+(\.\d+)?)(\w|%)*/;
    const ao = /(\d+(\.\d+)?)%/;
    const lo = /(\d+(\.\d+)?)px|em/;
    const fo = function (n, e) {
      let t;
        const r =
          ((t = n),
          S.from(t.dom().offsetParent)
            .map(Sn.fromDom)
            .getOr(be(re(n))));
      return (e(n) / e(r)) * 100;
    };
    const so = function (n, e) {
      ye(n, "width", `${e  }px`);
    };
    const mo = function (n, e) {
      ye(n, "width", `${e  }%`);
    };
    const go = function (n, e) {
      ye(n, "height", `${e  }px`);
    };
    const po = function (n, e, t, r) {
      let o;
        let u;
        let i;
        let c;
        let a;
        const l = parseInt(n, 10);
      return vn(n, "%") && Q(e) !== "table"
        ? ((u = l),
          (i = t),
          (c = r),
          (a = ct((o = e))
            .map(function (n) {
              const e = i(n);
              return Math.floor((u / 100) * e);
            })
            .getOr(u)),
          c(o, a),
          a)
        : l;
    };
    const ho = function (n) {
      let e;
        const t = Te((e = n), "height").getOrThunk(function () {
          return `${uo(e)  }px`;
        });
      return t ? po(t, n, Nr, go) : Nr(n);
    };
    const vo = function (n) {
      return Te(n, "width").fold(
        function () {
          return S.from(fn(n, "width"));
        },
        function (n) {
          return S.some(n);
        }
      );
    };
    const bo = function (n, e) {
      return (n / e.pixelWidth()) * 100;
    };
    const wo = function (e, t) {
      return vo(e).fold(
        function () {
          const n = jr(e);
          return bo(n, t);
        },
        function (n) {
          return (function (n, e, t) {
            const r = ao.exec(e);
            if (r !== null) return parseFloat(r[1]);
            const o = io(n);
            return bo(o, t);
          })(e, n, t);
        }
      );
    };
    const yo = function (e, t) {
      return vo(e).fold(
        function () {
          return io(e);
        },
        function (n) {
          return (function (n, e, t) {
            const r = lo.exec(e);
            if (r !== null) return parseInt(r[1], 10);
            const o = ao.exec(e);
            if (o === null) return io(n);
            const u = parseFloat(o[1]);
            return (u / 100) * t.pixelWidth();
          })(e, n, t);
        }
      );
    };
    const Co = function (n) {
      return (t = "rowspan"), ho((e = n)) / Je(e, t);
      let e; let t;
    };
    const So = function (n, e, t) {
      ye(n, "width", e + t);
    };
    const xo = function (n) {
      return `${fo(n, jr)  }%`;
    };
    const To = b(ao);
    const Ro = b(lo);
    const Oo = function (n, e, t) {
      return Te(n, e).fold(
        function () {
          return `${t(n)  }px`;
        },
        function (n) {
          return n;
        }
      );
    };
    const Do = function (n, e) {
      return Oo(n, "width", function (n) {
        return yo(n, e);
      });
    };
    const Ao = function (n) {
      return Oo(n, "height", Co);
    };
    const Bo = function (n, e, t, r, o) {
      const u = Zr(n);
        const i = k(u, function (n) {
          return n.map(e.edge);
        });
      return k(u, function (n, e) {
        return n.filter(d(Qe)).fold(
          function () {
            const n = to(i, e);
            return r(n);
          },
          function (n) {
            return t(n, o);
          }
        );
      });
    };
    const Io = function (n) {
      return n
        .map(function (n) {
          return `${n  }px`;
        })
        .getOr("");
    };
    const Po = function (n, e, t) {
      return Bo(
        n,
        e,
        wo,
        function (n) {
          return n.fold(
            function () {
              return t.minCellWidth();
            },
            function (n) {
              return (n / t.pixelWidth()) * 100;
            }
          );
        },
        t
      );
    };
    const ko = function (n, e, t) {
      return Bo(
        n,
        e,
        yo,
        function (n) {
          return n.getOrThunk(t.minCellWidth);
        },
        t
      );
    };
    const Eo = function (n, e, t, r) {
      const o = eo(n);
        const u = k(o, function (n) {
          return n.map(e.edge);
        });
      return k(o, function (n, e) {
        return n.filter(d(Ze)).fold(
          function () {
            const n = to(u, e);
            return r(n);
          },
          function (n) {
            return t(n);
          }
        );
      });
    };
    const Mo = hr([
      { invalid: ["raw"] },
      { pixels: ["value"] },
      { percent: ["value"] },
    ]);
    const No = function (n, e, t) {
      const r = t.substring(0, t.length - n.length);
        const o = parseFloat(r);
      return r === o.toString() ? e(o) : Mo.invalid(t);
    };
    const _o = {...Mo, from (n) {
        return vn(n, "%")
          ? No("%", Mo.percent, n)
          : vn(n, "px")
          ? No("px", Mo.pixels, n)
          : Mo.invalid(n);
      },};
    const Wo = function (n, r, o) {
      return n.fold(
        function () {
          return r;
        },
        function (n) {
          return (
            (t = (e = n) / o),
            k(r, function (n) {
              return _o.from(n).fold(
                function () {
                  return n;
                },
                function (n) {
                  return `${n * t  }px`;
                },
                function (n) {
                  return `${(n / 100) * e  }px`;
                }
              );
            })
          );
          let e; let t;
        },
        function (n) {
          return (
            (e = o),
            k(r, function (n) {
              return _o.from(n).fold(
                function () {
                  return n;
                },
                function (n) {
                  return `${(n / e) * 100  }%`;
                },
                function (n) {
                  return `${n  }%`;
                }
              );
            })
          );
          let e;
        }
      );
    };
    const jo = function (n, e, t) {
      let r;
        let o;
        let u;
        const i = _o.from(t);
        const c = L(n, function (n) {
          return n === "0px";
        })
          ? ((r = i),
            (o = n.length),
            (u = r.fold(
              function () {
                return b("");
              },
              function (n) {
                return b(`${n / o  }px`);
              },
              function (n) {
                return b(`${n / o  }px`);
              }
            )),
            P(o, u))
          : Wo(i, n, e);
      return Fo(c);
    };
    const zo = function (n, e) {
      return n.length === 0
        ? e
        : N(
            n,
            function (n, e) {
              return _o.from(e).fold(b(0), u, u) + n;
            },
            0
          );
    };
    var Fo = function (n) {
      if (n.length === 0) return n;
      let e;
        let t;
        const r = N(
          n,
          function (n, e) {
            const t = _o.from(e).fold(
              function () {
                return { value: e, remainder: 0 };
              },
              function (n) {
                return (
                  (e = n),
                  (t = "px"),
                  { value: (r = Math.floor(e)) + t, remainder: e - r }
                );
                let e; let t; let r;
              },
              function (n) {
                return { value: `${n  }%`, remainder: 0 };
              }
            );
            return {
              output: [t.value].concat(n.output),
              remainder: n.remainder + t.remainder,
            };
          },
          { output: [], remainder: 0 }
        );
        const o = r.output;
      return o.slice(0, o.length - 1).concat([
        ((e = o[o.length - 1]),
        (t = Math.round(r.remainder)),
        _o.from(e).fold(
          b(e),
          function (n) {
            return `${n + t  }px`;
          },
          function (n) {
            return `${n + t  }%`;
          }
        )),
      ]);
    };
    const Lo = _o.from;
    const Ho = function (n) {
      return Lo(n).fold(b("px"), b("px"), b("%"));
    };
    const qo = function (a, n, e, c, l) {
      const f = mt.fromTable(a);
        const s = f.all;
        const d = mt.justCells(f);
      n.each(function (n) {
        let r;
          let o;
          const e = Ho(n);
          const t = jr(a);
          const u = Bo(f, c, Do, Io, l);
          const i = jo(u, t, n);
        (r = i),
          (o = e),
          E(d, function (n) {
            const e = r.slice(n.column(), n.colspan() + n.column());
              const t = zo(e, et());
            ye(n.element(), "width", t + o);
          }),
          ye(a, "width", n);
      }),
        e.each(function (n) {
          let r;
            let e;
            let o;
            const t = Ho(n);
            const u = Nr(a);
            const i = Eo(f, Yr, Ao, Io);
            const c = jo(i, u, n);
          (r = c),
            (e = s),
            (o = t),
            E(d, function (n) {
              const e = r.slice(n.row(), n.rowspan() + n.row());
                const t = zo(e, tt());
              ye(n.element(), "height", t + o);
            }),
            E(e, function (n, e) {
              ye(n.element(), "height", r[e]);
            }),
            ye(a, "height", n);
        });
    };
    const Vo = function (n) {
      return vo(n).exists(function (n) {
        return ao.test(n);
      });
    };
    const Uo = function (n) {
      return vo(n).exists(function (n) {
        return lo.test(n);
      });
    };
    const Ko = function (n) {
      return vo(n).isNone();
    };
    const $o = xo;
    const Xo = { ltr: Jr, rtl: Qr };
    const Go = function (e) {
      const t = function (n) {
        return e(n).isRtl() ? Xo.rtl : Xo.ltr;
      };
      return {
        delta (n, e) {
          return t(e).delta(n, e);
        },
        edge (n) {
          return t(n).edge(n);
        },
        positions (n, e) {
          return t(e).positions(n, e);
        },
      };
    };
    const Yo = function (n) {
      const r = function () {
          for (var e = [], n = 0; n < arguments.length; n++)
            e[n] = arguments[n];
          return function () {
            for (var t = [], n = 0; n < arguments.length; n++)
              t[n] = arguments[n];
            if (e.length !== t.length)
              throw new Error(
                `Wrong number of arguments to struct. Expected "[${ 
                  e.length 
                  }]", got ${ 
                  t.length 
                  } arguments`
              );
            const r = {};
            return (
              E(e, function (n, e) {
                r[n] = b(t[e]);
              }),
              r
            );
          };
        }.apply(null, n);
        let o = [];
      return {
        bind (n) {
          if (n === undefined)
            throw new Error("Event bind error: undefined handler");
          o.push(n);
        },
        unbind (e) {
          o = M(o, function (n) {
            return n !== e;
          });
        },
        trigger () {
          for (var n = [], e = 0; e < arguments.length; e++)
            n[e] = arguments[e];
          const t = r.apply(null, n);
          E(o, function (n) {
            n(t);
          });
        },
      };
    };
    const Jo = function (n) {
      return {
        registry: $(n, function (n) {
          return { bind: n.bind, unbind: n.unbind };
        }),
        trigger: $(n, function (n) {
          return n.trigger;
        }),
      };
    };
    const Qo = hr([
      { none: [] },
      { only: ["index"] },
      { left: ["index", "next"] },
      { middle: ["prev", "index", "next"] },
      { right: ["prev", "index"] },
    ]);
    const Zo = { ...Qo};
    const nu = function (n, e, u, i) {
      let t;
        let r;
        const c = n.slice(0);
        const o =
          ((r = e),
          (t = n).length === 0
            ? Zo.none()
            : t.length === 1
            ? Zo.only(0)
            : r === 0
            ? Zo.left(0, 1)
            : r === t.length - 1
            ? Zo.right(r - 1, r)
            : r > 0 && r < t.length - 1
            ? Zo.middle(r - 1, r, r + 1)
            : Zo.none());
        const a = function (n) {
          return k(n, b(0));
        };
        const l = b(a(c));
        const f = function (n, e) {
          if (u >= 0) {
            const t = Math.max(i.minCellWidth(), c[e] - u);
            return a(c.slice(0, n))
              .concat([u, t - c[e]])
              .concat(a(c.slice(e + 1)));
          }
          const r = Math.max(i.minCellWidth(), c[n] + u);
            const o = c[n] - r;
          return a(c.slice(0, n))
            .concat([r - c[n], o])
            .concat(a(c.slice(e + 1)));
        };
        const s = f;
      return o.fold(
        l,
        function (n) {
          return i.singleColumnWidth(c[n], u);
        },
        s,
        function (n, e, t) {
          return f(e, t);
        },
        function (n, e) {
          if (u >= 0) return a(c.slice(0, e)).concat([u]);
          const t = Math.max(i.minCellWidth(), c[e] + u);
          return a(c.slice(0, e)).concat([t - c[e]]);
        }
      );
    };
    const eu = function (n, e, t) {
      for (var r = 0, o = n; o < e; o++) r += t[o] !== undefined ? t[o] : 0;
      return r;
    };
    const tu = function (n, t) {
      const e = mt.justCells(n);
      return k(e, function (n) {
        const e = eu(n.column(), n.column() + n.colspan(), t);
        return { element: n.element(), width: e, colspan: n.colspan() };
      });
    };
    const ru = function (n, t, r, e) {
      let o;
        let u;
        let i;
        let c;
        const a = mt.fromTable(n);
        const l = Eo(a, e, Co, function (n) {
          return n.getOrThunk(tt);
        });
        const f = k(l, function (n, e) {
          return r === e ? Math.max(t + n, tt()) : n;
        });
        const s =
          ((o = a),
          (u = f),
          (i = mt.justCells(o)),
          k(i, function (n) {
            const e = eu(n.row(), n.row() + n.rowspan(), u);
            return { element: n.element, height: b(e), rowspan: n.rowspan };
          }));
        const d =
          ((c = f),
          k(a.all, function (n, e) {
            return { element: n.element, height: b(c[e]) };
          }));
      E(d, function (n) {
        go(n.element(), n.height());
      }),
        E(s, function (n) {
          go(n.element(), n.height());
        });
      const m = N(
        f,
        function (n, e) {
          return n + e;
        },
        0
      );
      go(n, m);
    };
    const ou = function (n) {
      let t;
        let r;
        let e;
        let o;
        let u;
        const i = Sn.fromDom(pe(n).getOr(n.target));
        const c = function () {
          return n.stopPropagation();
        };
        const a = function () {
          return n.preventDefault();
        };
        const l =
          ((t = a),
          (r = c),
          function () {
            for (var n = [], e = 0; e < arguments.length; e++)
              n[e] = arguments[e];
            return t(r.apply(null, n));
          });
      return (
        (e = i),
        (o = n.clientX),
        (u = n.clientY),
        {
          target: b(e),
          x: b(o),
          y: b(u),
          stop: c,
          prevent: a,
          kill: l,
          raw: b(n),
        }
      );
    };
    const uu = function (n, e, t, r, o) {
      let u;
        let i;
        const c =
          ((u = t),
          (i = r),
          function (n) {
            u(n) && i(ou(n));
          });
      return n.dom().addEventListener(e, c, o), { unbind: y(iu, n, e, c, o) };
    };
    var iu = function (n, e, t, r) {
      n.dom().removeEventListener(e, t, r);
    };
    const cu = b(!0);
    const au = function (n, e, t) {
      return uu(n, e, cu, t, !1);
    };
    const lu = ou;
    const fu = function (n, e) {
      const t = fn(n, e);
      return t === undefined || t === "" ? [] : t.split(" ");
    };
    const su = function (n) {
      return n.dom().classList !== undefined;
    };
    const du = function (n, e) {
      return (
        (o = e),
        (u = fu((t = n), (r = "class")).concat([o])),
        an(t, r, u.join(" ")),
        !0
      );
      let t; let r; let o; let u;
    };
    const mu = function (n, e) {
      return (
        (o = e),
        (u = M(fu((t = n), (r = "class")), function (n) {
          return n !== o;
        })).length >
        0
          ? an(t, r, u.join(" "))
          : mn(t, r),
        !1
      );
      let t; let r; let o; let u;
    };
    const gu = function (n, e) {
      su(n) ? n.dom().classList.add(e) : du(n, e);
    };
    const pu = function (n) {
      (su(n) ? n.dom().classList : fu(n, "class")).length === 0 &&
        mn(n, "class");
    };
    const hu = function (n, e) {
      return su(n) && n.dom().classList.contains(e);
    };
    const vu = function (n) {
      const e = n.replace(/\./g, "-");
      return {
        resolve (n) {
          return `${e  }-${  n}`;
        },
      };
    };
    const bu = vu("ephox-dragster").resolve;
    const wu = function (n) {
      return n.slice(0).sort();
    };
    const yu = function (r, o, u) {
      if (o.length === 0)
        throw new Error("You must specify at least one required field.");
      let t;
      return (
        (function (e, n) {
          if (!p(n))
            throw new Error(
              `The ${  e  } fields must be an array. Was: ${  n  }.`
            );
          E(n, function (n) {
            if (!m(n))
              throw new Error(
                `The value ${  n  } in the ${  e  } fields was not a string.`
              );
          });
        })("required", o),
        (t = wu(o)),
        W(t, function (n, e) {
          return e < t.length - 1 && n === t[e + 1];
        }).each(function (n) {
          throw new Error(
            `The field: ${ 
              n 
              } occurs more than once in the combined fields: [${ 
              t.join(", ") 
              }].`
          );
        }),
        function (e) {
          const t = V(e);
          L(o, function (n) {
            return B(t, n);
          }) ||
            (function (n, e) {
              throw new Error(
                `All required keys (${ 
                  wu(n).join(", ") 
                  }) were not specified. Specified keys were: ${ 
                  wu(e).join(", ") 
                  }.`
              );
            })(o, t),
            r(o, t);
          const n = M(o, function (n) {
            return !u.validate(e[n], n);
          });
          return (
            n.length > 0 &&
              (function (n, e) {
                throw new Error(
                  `All values need to be of type: ${ 
                    e 
                    }. Keys (${ 
                    wu(n).join(", ") 
                    }) were not.`
                );
              })(n, u.label),
            e
          );
        }
      );
    };
    const Cu = function (e, n) {
      const t = M(n, function (n) {
        return !B(e, n);
      });
      t.length > 0 &&
        (function (n) {
          throw new Error(`Unsupported keys for object: ${  wu(n).join(", ")}`);
        })(t);
    };
    const Su = function (n) {
      return yu(Cu, n, { validate: T, label: "function" });
    };
    const xu = Su(["compare", "extract", "mutate", "sink"]);
    const Tu = Su(["element", "start", "stop", "destroy"]);
    const Ru = Su(["forceDrop", "drop", "move", "delayDrop"]);
    const Ou = xu({
      compare (n, e) {
        return Dr(e.left() - n.left(), e.top() - n.top());
      },
      extract (n) {
        return S.some(Dr(n.x(), n.y()));
      },
      sink (n, e) {
        const t = (function (n) {
            const e = {layerClass: bu("blocker"), ...n};
              const t = Sn.fromTag("div");
            an(t, "role", "presentation"),
              Ce(t, {
                position: "fixed",
                left: "0px",
                top: "0px",
                width: "100%",
                height: "100%",
              }),
              gu(t, bu("blocker")),
              gu(t, e.layerClass);
            return {
              element () {
                return t;
              },
              destroy () {
                Me(t);
              },
            };
          })(e);
          const r = au(t.element(), "mousedown", n.forceDrop);
          const o = au(t.element(), "mouseup", n.drop);
          const u = au(t.element(), "mousemove", n.move);
          const i = au(t.element(), "mouseout", n.delayDrop);
        return Tu({
          element: t.element,
          start (n) {
            Be(n, t.element());
          },
          stop () {
            Me(t.element());
          },
          destroy () {
            t.destroy(), o.unbind(), u.unbind(), i.unbind(), r.unbind();
          },
        });
      },
      mutate (n, e) {
        n.mutate(e.left(), e.top());
      },
    });
  function Du() {
    let u = S.none();
      const i = Jo({ move: Yo(["info"]) });
    return {
      onEvent (n, o) {
        o.extract(n).each(function (n) {
          let e; let t; let r;
          ((e = o),
          (t = n),
          (r = u.map(function (n) {
            return e.compare(n, t);
          })),
          (u = S.some(t)),
          r).each(function (n) {
            i.trigger.move(n);
          });
        });
      },
      reset () {
        u = S.none();
      },
      events: i.registry,
    };
  }
  function Au() {
    const n = (function r() {
        return { onEvent: w, reset: w };
      })();
      const e = Du();
      let t = n;
    return {
      on () {
        t.reset(), (t = e);
      },
      off () {
        t.reset(), (t = n);
      },
      isOn () {
        return t === e;
      },
      onEvent (n, e) {
        t.onEvent(n, e);
      },
      events: e.events,
    };
  }
  const Bu = function (e, t, n) {
      let r;
        let o;
        let u;
        let i = !1;
        const c = Jo({ start: Yo([]), stop: Yo([]) });
        const a = Au();
        const l = function () {
          d.stop(), a.isOn() && (a.off(), c.trigger.stop());
        };
        const f =
          ((r = l),
          (o = 200),
          (u = null),
          {
            cancel () {
              u !== null && (h.clearTimeout(u), (u = null));
            },
            throttle () {
              for (var n = [], e = 0; e < arguments.length; e++)
                n[e] = arguments[e];
              u !== null && h.clearTimeout(u),
                (u = h.setTimeout(function () {
                  r.apply(null, n), (u = null);
                }, o));
            },
          });
      a.events.move.bind(function (n) {
        t.mutate(e, n.info());
      });
      const s = function (t) {
          return function () {
            for (var n = [], e = 0; e < arguments.length; e++)
              n[e] = arguments[e];
            i && t.apply(null, n);
          };
        };
        var d = t.sink(
          Ru({
            forceDrop: l,
            drop: s(l),
            move: s(function (n) {
              f.cancel(), a.onEvent(n, t);
            }),
            delayDrop: s(f.throttle),
          }),
          n
        );
      return {
        element: d.element,
        go (n) {
          d.start(n), a.on(), c.trigger.start();
        },
        on () {
          i = !0;
        },
        off () {
          i = !1;
        },
        destroy () {
          d.destroy();
        },
        events: c.registry,
      };
    };
    const Iu = function (n) {
      return fn(n, "contenteditable") === "true";
    };
    const Pu = vu("ephox-snooker").resolve;
    const ku = function () {
      let t;
        const r = Jo({ drag: Yo(["xDelta", "yDelta", "target"]) });
        let o = S.none();
        const n = {
          mutate (n, e) {
            t.trigger.drag(n, e);
          },
          events: (t = Jo({ drag: Yo(["xDelta", "yDelta"]) })).registry,
        };
      n.events.drag.bind(function (e) {
        o.each(function (n) {
          r.trigger.drag(e.xDelta(), e.yDelta(), n);
        });
      });
      return {
        assign (n) {
          o = S.some(n);
        },
        get () {
          return o;
        },
        mutate: n.mutate,
        events: r.registry,
      };
    };
    const Eu = Pu("resizer-bar");
    const Mu = Pu("resizer-rows");
    const Nu = Pu("resizer-cols");
    const _u = function (n) {
      const e = qe(n.parent(), `.${  Eu}`);
      E(e, Me);
    };
    const Wu = function (t, n, r) {
      const o = t.origin();
      E(n, function (n) {
        n.each(function (n) {
          const e = r(o, n);
          gu(e, Eu), Be(t.parent(), e);
        });
      });
    };
    const ju = function (n, e, l, f) {
      Wu(n, e, function (n, e) {
        let t;
          let r;
          let o;
          let u;
          let i;
          let c;
          const a =
            ((t = e.col),
            (r = e.x - n.left()),
            (o = l.top() - n.top()),
            (u = 7),
            (i = f),
            (c = Sn.fromTag("div")),
            Ce(c, {
              position: "absolute",
              left: `${r - u / 2  }px`,
              top: `${o  }px`,
              height: `${i  }px`,
              width: `${u  }px`,
            }),
            ln(c, { "data-column": t, role: "presentation" }),
            c);
        return gu(a, Nu), a;
      });
    };
    const zu = function (n, e, l, f) {
      Wu(n, e, function (n, e) {
        let t;
          let r;
          let o;
          let u;
          let i;
          let c;
          const a =
            ((t = e.row),
            (r = l.left() - n.left()),
            (o = e.y - n.top()),
            (u = f),
            (i = 7),
            (c = Sn.fromTag("div")),
            Ce(c, {
              position: "absolute",
              left: `${r  }px`,
              top: `${o - i / 2  }px`,
              height: `${i  }px`,
              width: `${u  }px`,
            }),
            ln(c, { "data-row": t, role: "presentation" }),
            c);
        return gu(a, Mu), a;
      });
    };
    const Fu = function (n, e, t, r) {
      _u(n);
      const o = mt.fromTable(e);
      !(function (n, e, t, r, o, u) {
        const i = Br(e);
          const c = t.length > 0 ? o.positions(t, e) : [];
        zu(n, c, i, zr(e));
        const a = r.length > 0 ? u.positions(r, e) : [];
        ju(n, a, i, _r(e));
      })(n, e, eo(o), Zr(o), t, r);
    };
    const Lu = function (n, e) {
      const t = qe(n.parent(), `.${  Eu}`);
      E(t, e);
    };
    const Hu = function (n) {
      Lu(n, function (n) {
        ye(n, "display", "none");
      });
    };
    const qu = function (n) {
      Lu(n, function (n) {
        ye(n, "display", "block");
      });
    };
    const Vu = Pu("resizer-bar-dragging");
    const Uu = function (o, e, u) {
      const t = ku();
        const r = (function (n, e) {
          void 0 === e && (e = {});
          const t = e.mode !== undefined ? e.mode : Ou;
          return Bu(n, t, e);
        })(t, {});
        let i = S.none();
        const n = function (n, e) {
          return S.from(fn(n, e));
        };
      t.events.drag.bind(function (t) {
        n(t.target(), "data-row").each(function (n) {
          const e = nt(t.target(), "top");
          ye(t.target(), "top", `${e + t.yDelta()  }px`);
        }),
          n(t.target(), "data-column").each(function (n) {
            const e = nt(t.target(), "left");
            ye(t.target(), "left", `${e + t.xDelta()  }px`);
          });
      });
      const c = function (n, e) {
        return nt(n, e) - Ye(n, `data-initial-${  e}`, 0);
      };
      r.events.stop.bind(function () {
        t.get().each(function (r) {
          i.each(function (t) {
            n(r, "data-row").each(function (n) {
              const e = c(r, "top");
              mn(r, "data-initial-top"),
                m.trigger.adjustHeight(t, e, parseInt(n, 10));
            }),
              n(r, "data-column").each(function (n) {
                const e = c(r, "left");
                mn(r, "data-initial-left"),
                  m.trigger.adjustWidth(t, e, parseInt(n, 10));
              }),
              Fu(o, t, u, e);
          });
        });
      });
      const a = function (n, e) {
          m.trigger.startAdjust(),
            t.assign(n),
            an(n, `data-initial-${  e}`, nt(n, e)),
            gu(n, Vu),
            ye(n, "opacity", "0.2"),
            r.go(o.parent());
        };
        const l = au(o.parent(), "mousedown", function (n) {
          let e; let t;
          (e = n.target()),
            hu(e, Mu) && a(n.target(), "top"),
            (t = n.target()),
            hu(t, Nu) && a(n.target(), "left");
        });
        const f = function (n) {
          return Zn(n, o.view());
        };
        const s = function (n) {
          return Ge(n, "table", f).filter(function (n) {
            return Ge(n, "[contenteditable]", f).exists(Iu);
          });
        };
        const d = au(o.view(), "mouseover", function (n) {
          s(n.target()).fold(
            function () {
              ve(n.target()) && _u(o);
            },
            function (n) {
              (i = S.some(n)), Fu(o, n, u, e);
            }
          );
        });
        var m = Jo({
          adjustHeight: Yo(["table", "delta", "row"]),
          adjustWidth: Yo(["table", "delta", "column"]),
          startAdjust: Yo([]),
        });
      return {
        destroy () {
          l.unbind(), d.unbind(), r.destroy(), _u(o);
        },
        refresh (n) {
          Fu(o, n, u, e);
        },
        on: r.on,
        off: r.off,
        hideBars: y(Hu, o),
        showBars: y(qu, o),
        events: m.registry,
      };
    };
    const Ku = function (n, p, h) {
      const r = Yr;
        const e = Uu(n, p, r);
        const v = Jo({
          beforeResize: Yo(["table"]),
          afterResize: Yo(["table"]),
          startDrag: Yo([]),
        });
      return (
        e.events.adjustHeight.bind(function (n) {
          const e = n.table();
          v.trigger.beforeResize(e);
          const t = r.delta(n.delta(), e);
          ru(e, t, n.row(), r), v.trigger.afterResize(e);
        }),
        e.events.startAdjust.bind(function (n) {
          v.trigger.startDrag();
        }),
        e.events.adjustWidth.bind(function (n) {
          const e = n.table();
          v.trigger.beforeResize(e);
          let t;
            let r;
            let o;
            let u;
            let i;
            let c;
            let a;
            let l;
            let f;
            let s;
            let d;
            const m = p.delta(n.delta(), e);
            const g = h(e);
          (t = e),
            (r = m),
            (o = n.column()),
            (u = p),
            (c = (i = g).getCellDelta(r)),
            (a = mt.fromTable(t)),
            (l = i.getWidths(a, u, i)),
            (f = nu(l, o, c, i)),
            (s = k(f, function (n, e) {
              return n + l[e];
            })),
            (d = tu(a, s)),
            E(d, function (n) {
              i.setElementWidth(n.element, n.width);
            }),
            o === a.grid.columns() - 1 && i.adjustTableWidth(c),
            v.trigger.afterResize(e);
        }),
        {
          on: e.on,
          off: e.off,
          hideBars: e.hideBars,
          showBars: e.showBars,
          destroy: e.destroy,
          events: v.registry,
        }
      );
    };
    const $u = function (n, e) {
      return n.fire("newrow", { node: e });
    };
    const Xu = function (n, e) {
      return n.fire("newcell", { node: e });
    };
    const Gu = function (n, e, t, r, o) {
      n.fire("TableSelectionChange", {
        cells: e,
        start: t,
        finish: r,
        otherCells: o,
      });
    };
    const Yu = function (n) {
      n.fire("TableSelectionClear");
    };
    const Ju = { "border-collapse": "collapse", width: "100%" };
    const Qu = { border: "1" };
    const Zu = function (n) {
      return n.getParam("table_sizing_mode", "auto");
    };
    const ni = function (n) {
      return n.getParam("table_responsive_width");
    };
    const ei = function (n) {
      return n.getParam("table_default_attributes", Qu, "object");
    };
    const ti = function (n) {
      return n.getParam(
        "table_default_styles",
        (function (n) {
          if (li(n)) {
            const e = n.getBody().offsetWidth;
            return {...Ju, width: `${e  }px`};
          }
          return fi(n)
            ? G(Ju, function (n, e) {
                return e !== "width";
              })
            : Ju;
        })(n),
        "object"
      );
    };
    const ri = function (n) {
      return n.getParam("table_tab_navigation", !0, "boolean");
    };
    const oi = function (n) {
      return n.getParam("table_cell_advtab", !0, "boolean");
    };
    const ui = function (n) {
      return n.getParam("table_row_advtab", !0, "boolean");
    };
    const ii = function (n) {
      return n.getParam("table_advtab", !0, "boolean");
    };
    const ci = function (n) {
      return n.getParam("table_style_by_css", !1, "boolean");
    };
    const ai = function (n) {
      return Zu(n) === "relative" || !0 === ni(n);
    };
    var li = function (n) {
      return Zu(n) === "fixed" || !1 === ni(n);
    };
    var fi = function (n) {
      return Zu(n) === "responsive";
    };
    const si = function (n) {
      const e = "section";
        const t = n.getParam("table_header_type", e, "string");
      return B(["section", "cells", "sectionCells", "auto"], t) ? t : e;
    };
    const di = function (n) {
      const e = n.getParam("table_clone_elements");
      return m(e)
        ? S.some(e.split(/[ ,]/))
        : Array.isArray(e)
        ? S.some(e)
        : S.none();
    };
    const mi = function (n) {
      return n.nodeName.toLowerCase();
    };
    const gi = function (n) {
      return Sn.fromDom(n.getBody());
    };
    const pi = function (n) {
      return n.getBoundingClientRect().width;
    };
    const hi = function (n) {
      return n.getBoundingClientRect().height;
    };
    const vi = function (e) {
      return function (n) {
        return Zn(n, gi(e));
      };
    };
    const bi = function (n) {
      return /^\d+(\.\d+)?$/.test(n) ? `${n  }px` : n;
    };
    const wi = function (n) {
      mn(n, "data-mce-style"),
        E(it(n), function (n) {
          return mn(n, "data-mce-style");
        });
    };
    const yi = function (n, e) {
      const t = n.dom.getStyle(e, "width") || n.dom.getAttrib(e, "width");
      return S.from(t).filter(wn);
    };
    const Ci = function (n) {
      return /^(\d+(\.\d+)?)%$/.test(n);
    };
    const Si = { isRtl: b(!1) };
    const xi = { isRtl: b(!0) };
    const Ti = function (n) {
      return (Se(n, "direction") === "rtl" ? "rtl" : "ltr") == "rtl" ? xi : Si;
    };
    const Ri = function (n) {
      let e = n;
      return {
        get () {
          return e;
        },
        set (n) {
          e = n;
        },
      };
    };
    const Oi = function (n) {
      const e = function () {
          return jr(n);
        };
        const t = b(0);
      return {
        width: e,
        pixelWidth: e,
        getWidths: ko,
        getCellDelta: t,
        singleColumnWidth: b([0]),
        minCellWidth: t,
        setElementWidth: w,
        adjustTableWidth: w,
        label: "none",
      };
    };
    const Di = function (n, r) {
      const o = Ri(parseFloat(n));
        const u = Ri(jr(r));
      return {
        width: o.get,
        pixelWidth: u.get,
        getWidths: Po,
        getCellDelta (n) {
          return (n / u.get()) * 100;
        },
        singleColumnWidth (n, e) {
          return [100 - n];
        },
        minCellWidth () {
          return (et() / u.get()) * 100;
        },
        setElementWidth: mo,
        adjustTableWidth (n) {
          const e = o.get();
            const t = e + (n / 100) * e;
          mo(r, t), o.set(t), u.set(jr(r));
        },
        label: "percent",
      };
    };
    const Ai = function (n, t) {
      const r = Ri(n);
        const o = r.get;
      return {
        width: o,
        pixelWidth: o,
        getWidths: ko,
        getCellDelta: u,
        singleColumnWidth (n, e) {
          return [Math.max(et(), n + e) - n];
        },
        minCellWidth: et,
        setElementWidth: so,
        adjustTableWidth (n) {
          const e = o() + n;
          so(t, e), r.set(e);
        },
        label: "pixel",
      };
    };
    const Bi = function (e) {
      return vo(e).fold(
        function () {
          return Oi(e);
        },
        function (n) {
          return (function (n, e) {
            const t = To().exec(e);
            if (t !== null) return Di(t[1], n);
            const r = Ro().exec(e);
            if (r !== null) {
              const o = parseInt(r[1], 10);
              return Ai(o, n);
            }
            const u = jr(n);
            return Ai(u, n);
          })(e, n);
        }
      );
    };
    const Ii = Ai;
    const Pi = Di;
    const ki = function (n, e) {
      if (ai(n)) {
        const t = yi(n, e.dom())
          .filter(Ci)
          .getOrThunk(function () {
            return $o(e);
          });
        return Pi(t, e);
      }
      return li(n) ? Ii(jr(e), e) : Bi(e);
    };
    const Ei = function (n) {
      mn(n, "width");
    };
    const Mi = function (n, e, t) {
      const r = `${jr(n)  }px`;
      qo(n, S.some(r), S.none(), e, t), Ei(n);
    };
    const Ni = function (n, e) {
      let t;
        let r;
        let o;
        let u;
        const i = Go(Ti);
        const c = ki(n, e);
      (r = i),
        (o = c),
        (u = xo((t = e))),
        qo(t, S.some(u), S.none(), r, o),
        Ei(t);
    };
    const _i = function (n, e) {
      const t = Go(Ti);
        const r = ki(n, e);
      Mi(e, t, r);
    };
    const Wi = function (n) {
      Re(n, "width"),
        E(it(n), function (n) {
          Re(n, "width"), Ei(n);
        }),
        Ei(n);
    };
    const ji = function () {
      const n = Sn.fromTag("div");
      return (
        Ce(n, {
          position: "static",
          height: "0",
          width: "0",
          padding: "0",
          margin: "0",
          border: "0",
        }),
        Be(be(Sn.fromDom(h.document)), n),
        n
      );
    };
    const zi = function (c) {
      let u;
        let i;
        let a = S.none();
        let l = S.none();
        let f = S.none();
        const s = function (n) {
          return n.nodeName === "TABLE";
        };
        const n = function () {
          return l;
        };
      return (
        c.on("init", function () {
          let n;
            let e;
            const t = Go(Ti);
            const r = (n = c).inline ? kr(gi(n), ji()) : Pr(Sn.fromDom(n.getDoc()));
          if (
            ((f = S.some(r)),
            (e = c.getParam("object_resizing", !0)),
            (m(e) ? e === "table" : e) &&
              c.getParam("table_resize_bars", !0, "boolean"))
          ) {
            const o = Ku(r, t, function (n) {
              return ki(c, n);
            });
            o.on(),
              o.events.startDrag.bind(function (n) {
                a = S.some(c.selection.getRng());
              }),
              o.events.beforeResize.bind(function (n) {
                let e;
                  let t;
                  let r;
                  let o;
                  const u = n.table().dom();
                (e = c),
                  (r = pi((t = u))),
                  (o = hi(u)),
                  e.fire("ObjectResizeStart", {
                    target: t,
                    width: r,
                    height: o,
                  });
              }),
              o.events.afterResize.bind(function (n) {
                let e;
                  let t;
                  let r;
                  let o;
                  const u = n.table();
                  const i = u.dom();
                wi(u),
                  a.each(function (n) {
                    c.selection.setRng(n), c.focus();
                  }),
                  (e = c),
                  (r = pi((t = i))),
                  (o = hi(i)),
                  e.fire("ObjectResized", { target: t, width: r, height: o }),
                  c.undoManager.add();
              }),
              (l = S.some(o));
          }
        }),
        c.on("ObjectResizeStart", function (n) {
          const e = n.target;
          if (s(e)) {
            const t = Sn.fromDom(e);
            !Uo(t) && li(c) ? _i(c, t) : !Vo(t) && ai(c) && Ni(c, t),
              (u = n.width),
              (i = yi(c, e).getOr(""));
          }
        }),
        c.on("ObjectResized", function (n) {
          const e = n.target;
          if (s(e)) {
            const t = Sn.fromDom(e);
            if (i === "" || (!Ci(i) && fi(c))) Ni(c, t);
            else if (Ci(i)) {
              const r = parseFloat(i.replace("%", ""));
                const o = (n.width * r) / u;
              ye(t, "width", `${o  }%`);
            } else
              E(it(t), function (n) {
                const e = Se(n, "width");
                ye(n, "width", e), mn(n, "width");
              });
            wi(t);
          }
        }),
        c.on("SwitchMode", function () {
          l.each(function (n) {
            c.mode.isReadOnly() ? n.hideBars() : n.showBars();
          });
        }),
        {
          lazyResize: n,
          lazyWire () {
            return f.getOr(Pr(Sn.fromDom(c.getBody())));
          },
          destroy () {
            l.each(function (n) {
              n.destroy();
            }),
              f.each(function (n) {
                let e;
                (e = n), c.inline && Me(e.parent());
              });
          },
        }
      );
    };
    const Fi = function (n, e) {
      return { element: b(n), offset: b(e) };
    };
    var Li = function (e, n, t) {
      return (e.property().isText(n) &&
        e.property().getText(n).trim().length === 0) ||
        e.property().isComment(n)
        ? t(n).bind(function (n) {
            return Li(e, n, t).orThunk(function () {
              return S.some(n);
            });
          })
        : S.none();
    };
    const Hi = function (n, e) {
      return n.property().isText(e)
        ? n.property().getText(e).length
        : n.property().children(e).length;
    };
    var qi = function (n, e) {
      const t = Li(n, e, n.query().prevSibling).getOr(e);
      if (n.property().isText(t)) return Fi(t, Hi(n, t));
      const r = n.property().children(t);
      return r.length > 0 ? qi(n, r[r.length - 1]) : Fi(t, Hi(n, t));
    };
    const Vi = qi;
    const Ui = Kt();
    const Ki = function (t, r) {
      vo(t)
        .bind(function (n) {
          const e = co.exec(n);
          return e !== null
            ? S.some({ width: b(parseFloat(e[1])), unit: b(e[3]) })
            : S.none();
        })
        .each(function (n) {
          const e = n.width() / 2;
          So(t, e, n.unit()), So(r, e, n.unit());
        });
    };
    const $i = function (n) {
      return mt.fromTable(n).grid;
    };
    const Xi = function (n) {
      for (
        var e = [],
          t = function (n) {
            e.push(n);
          },
          r = 0;
        r < n.length;
        r++
      )
        n[r].each(t);
      return e;
    };
    const Gi = function (n, e, t, r) {
      t === r ? mn(n, e) : an(n, e, t);
    };
    const Yi = function (o, n) {
      const u = [];
        const i = [];
        const c = H(He(o, "caption,colgroup")).fold(
          function () {
            return y(Ae, o);
          },
          function (n) {
            return y(De, n);
          }
        );
        const e = function (n, e) {
          n.length > 0
            ? (function (n, e) {
                const t = $e(o, e).getOrThunk(function () {
                  const n = Sn.fromTag(e, re(o).dom());
                  return e === "thead" ? c(n) : Be(o, n), n;
                });
                Ee(t);
                const r = k(n, function (n) {
                  n.isNew() && u.push(n.element());
                  const e = n.element();
                  return (
                    Ee(e),
                    E(n.cells(), function (n) {
                      n.isNew() && i.push(n.element()),
                        Gi(n.element(), "colspan", n.colspan(), 1),
                        Gi(n.element(), "rowspan", n.rowspan(), 1),
                        Be(e, n.element());
                    }),
                    e
                  );
                });
                ke(t, r);
              })(n, e)
            : $e(o, e).each(Me);
        };
        const t = [];
        const r = [];
        const a = [];
      return (
        E(n, function (n) {
          switch (n.section()) {
            case "thead":
              t.push(n);
              break;
            case "tbody":
              r.push(n);
              break;
            case "tfoot":
              a.push(n);
          }
        }),
        e(t, "thead"),
        e(r, "tbody"),
        e(a, "tfoot"),
        { newRows: u, newCells: i }
      );
    };
    const Ji = function (n, e, t) {
      n.cells()[e] = t;
    };
    const Qi = function (n, e) {
      return ze(e, n.section());
    };
    const Zi = function (n, e) {
      const t = n.cells();
        const r = k(t, e);
      return ze(r, n.section());
    };
    const nc = function (n, e) {
      return n.cells()[e];
    };
    const ec = function (n, e) {
      return nc(n, e).element();
    };
    const tc = function (n) {
      return n.cells().length;
    };
    const rc = function (n, e) {
      if (n.length === 0) return 0;
      const t = n[0];
      return j(n, function (n) {
        return !e(t.element(), n.element());
      }).fold(
        function () {
          return n.length;
        },
        function (n) {
          return n;
        }
      );
    };
    const oc = function (n, e, t, r) {
      let o;
        const u = n[e].cells().slice(t);
        const i = rc(u, r);
        const c =
          ((o = t),
          k(n, function (n) {
            return nc(n, o);
          }).slice(e));
      return { colspan: i, rowspan: rc(c, r) };
    };
    const uc = function (a, l) {
      const f = k(a, function (n) {
        return k(n.cells(), function () {
          return !1;
        });
      });
      return k(a, function (n, c) {
        let e;
          let t;
          const r = F(n.cells(), function (n, e) {
            if (!1 !== f[c][e]) return [];
            let t;
              let r;
              let o;
              let u;
              const i = oc(a, c, e, l);
            return (
              (function (n, e, t, r) {
                for (let o = n; o < n + t; o++)
                  for (let u = e; u < e + r; u++) f[o][u] = !0;
              })(c, e, i.rowspan, i.colspan),
              [
                ((t = n.element()),
                (r = i.rowspan),
                (o = i.colspan),
                (u = n.isNew()),
                { element: b(t), rowspan: b(r), colspan: b(o), isNew: b(u) }),
              ]
            );
          });
        return (e = r), (t = n.section()), { details: b(e), section: b(t) };
      });
    };
    const ic = function (n, e, t) {
      for (var r = [], o = 0; o < n.grid.rows(); o++) {
        for (var u = [], i = 0; i < n.grid.columns(); i++) {
          const c = mt
            .getAt(n, o, i)
            .map(function (n) {
              return je(n.element(), t);
            })
            .getOrThunk(function () {
              return je(e.gap(), !0);
            });
          u.push(c);
        }
        const a = ze(u, n.all[o].section());
        r.push(a);
      }
      return r;
    };
    const cc = function (n, c) {
      return k(n, function (n) {
        let e;
          let t;
          let r;
          let o;
          let u;
          const i =
            ((e = n.details()),
            q(e, function (n) {
              return oe(n.element()).map(function (n) {
                const e = oe(n).isNone();
                return je(n, e);
              });
            }).getOrThunk(function () {
              return je(c.row(), !0);
            }));
        return (
          (t = i.element()),
          (r = n.details()),
          (o = n.section()),
          (u = i.isNew()),
          { element: b(t), cells: b(r), section: b(o), isNew: b(u) }
        );
      });
    };
    const ac = function (n, e) {
      const t = uc(n, Zn);
      return cc(t, e);
    };
    const lc = function (n, e) {
      return q(n.all, function (n) {
        return W(n.cells(), function (n) {
          return Zn(e, n.element());
        });
      });
    };
    const fc = function (l, e, f, s, d) {
      return function (r, o, n, u, i, c) {
        const a = mt.fromTable(o);
        return e(a, n)
          .map(function (n) {
            const e = ic(a, u, !1);
              const t = l(e, n, Zn, d(u));
              const r = ac(t.grid(), u);
            return { grid: b(r), cursor: t.cursor };
          })
          .fold(
            function () {
              return S.none();
            },
            function (n) {
              const e = Yi(o, n.grid());
                const t = S.from(c).getOrThunk(function () {
                  return Bi(o);
                });
              return (
                f(o, n.grid(), i, t),
                s(o),
                Fu(r, o, Yr, i),
                S.some({
                  cursor: n.cursor,
                  newRows: b(e.newRows),
                  newCells: b(e.newCells),
                })
              );
            }
          );
      };
    };
    const sc = function (e, n) {
      return ut(n.element()).bind(function (n) {
        return lc(e, n);
      });
    };
    const dc = function (e, n) {
      const t = k(n.selection(), function (n) {
          return ut(n).bind(function (n) {
            return lc(e, n);
          });
        });
        const r = Xi(t);
      return r.length > 0
        ? S.some({ cells: r, generators: n.generators, clipboard: n.clipboard })
        : S.none();
    };
    const mc = function (e, n) {
      const t = k(n.selection(), function (n) {
          return ut(n).bind(function (n) {
            return lc(e, n);
          });
        });
        const r = Xi(t);
      return r.length > 0 ? S.some(r) : S.none();
    };
    const gc = function (n, e, t, r) {
      for (let o = !0, u = 0; u < n.length; u++)
        for (let i = 0; i < tc(n[0]); i++) {
          const c = t(ec(n[u], i), e);
          !0 === c && !1 === o
            ? Ji(n[u], i, je(r(), !0))
            : !0 === c && (o = !1);
        }
      return n;
    };
    const pc = function (u, t, i, c) {
      if (t > 0 && t < u.length) {
        const n = u[t - 1].cells();
          const e =
            ((r = i),
            _(
              n,
              function (n, e) {
                return I(n, function (n) {
                  return r(n.element(), e.element());
                })
                  ? n
                  : n.concat([e]);
              },
              []
            ));
        E(e, function (r) {
          for (
            var o = S.none(),
              n = function (t) {
                for (
                  let n = function (e) {
                      const n = u[t].cells()[e];
                      i(n.element(), r.element()) &&
                        (o.isNone() && (o = S.some(c())),
                        o.each(function (n) {
                          Ji(u[t], e, je(n, !0));
                        }));
                    },
                    e = 0;
                  e < tc(u[0]);
                  e++
                )
                  n(e);
              },
              e = t;
            e < u.length;
            e++
          )
            n(e);
        });
      }
      let r;
      return u;
    };
    var hc = function (t) {
      return {
        is (n) {
          return t === n;
        },
        isValue: C,
        isError: f,
        getOr: b(t),
        getOrThunk: b(t),
        getOrDie: b(t),
        or (n) {
          return hc(t);
        },
        orThunk (n) {
          return hc(t);
        },
        fold (n, e) {
          return e(t);
        },
        map (n) {
          return hc(n(t));
        },
        mapError (n) {
          return hc(t);
        },
        each (n) {
          n(t);
        },
        bind (n) {
          return n(t);
        },
        exists (n) {
          return n(t);
        },
        forall (n) {
          return n(t);
        },
        toOption () {
          return S.some(t);
        },
      };
    };
    var vc = function (t) {
      return {
        is: f,
        isValue: f,
        isError: C,
        getOr: u,
        getOrThunk (n) {
          return n();
        },
        getOrDie () {
          return (
            (n = String(t)),
            (function () {
              throw new Error(n);
            })()
          );
          let n;
        },
        or (n) {
          return n;
        },
        orThunk (n) {
          return n();
        },
        fold (n, e) {
          return n(t);
        },
        map (n) {
          return vc(t);
        },
        mapError (n) {
          return vc(n(t));
        },
        each: w,
        bind (n) {
          return vc(t);
        },
        exists: f,
        forall: C,
        toOption: S.none,
      };
    };
    const bc = {
      value: hc,
      error: vc,
      fromOption (n, e) {
        return n.fold(function () {
          return vc(e);
        }, hc);
      },
    };
    const wc = function (n, e) {
      return { rowDelta: 0, colDelta: tc(n[0]) - tc(e[0]) };
    };
    const yc = function (n, e) {
      return { rowDelta: n.length - e.length, colDelta: 0 };
    };
    const Cc = function (n, e) {
      return k(n, function () {
        return je(e.cell(), !0);
      });
    };
    const Sc = function (n, e, t) {
      return n.concat(
        P(e, function () {
          return Qi(n[n.length - 1], Cc(n[n.length - 1].cells(), t));
        })
      );
    };
    const xc = function (n, e, t) {
      return k(n, function (n) {
        return Qi(n, n.cells().concat(Cc(P(e, u), t)));
      });
    };
    const Tc = function (n, e, t) {
      const r = e.colDelta < 0 ? xc : u;
      return (e.rowDelta < 0 ? Sc : u)(
        r(n, Math.abs(e.colDelta), t),
        Math.abs(e.rowDelta),
        t
      );
    };
    const Rc = function (t, r, o, u, i) {
      return (function (n, e, t) {
        if (n.row() >= e.length || n.column() > tc(e[0]))
          return bc.error(
            `invalid start address out of table bounds, row: ${ 
              n.row() 
              }, column: ${ 
              n.column()}`
          );
        const r = e.slice(n.row());
          const o = r[0].cells().slice(n.column());
          const u = tc(t[0]);
          const i = t.length;
        return bc.value({ rowDelta: r.length - i, colDelta: o.length - u });
      })(t, r, o).map(function (n) {
        const e = Tc(r, n, u);
        return (function (n, e, t, r, o) {
          for (
            var u,
              i,
              c,
              a,
              l,
              f = n.row(),
              s = n.column(),
              d = f + t.length,
              m = s + tc(t[0]),
              g = f;
            g < d;
            g++
          )
            for (let p = s; p < m; p++) {
              (c = p),
                (l = a = void 0),
                (a = y(o, nc((u = e)[(i = g)], c).element())),
                (l = u[i]),
                u.length > 1 &&
                  tc(l) > 1 &&
                  ((c > 0 && a(ec(l, c - 1))) ||
                    (c < l.cells().length - 1 && a(ec(l, c + 1))) ||
                    (i > 0 && a(ec(u[i - 1], c))) ||
                    (i < u.length - 1 && a(ec(u[i + 1], c)))) &&
                  gc(e, ec(e[g], p), o, r.cell);
              const h = ec(t[g - f], p - s);
                const v = r.replace(h);
              Ji(e[g], p, je(v, !0));
            }
          return e;
        })(t, e, o, u, i);
      });
    };
    const Oc = function (r, n, e, t, o) {
      let u; let i; let c; let a;
      (u = n),
        (i = r),
        (c = o),
        (a = t.cell),
        i > 0 &&
          i < u[0].cells().length &&
          E(u, function (n) {
            const e = n.cells()[i - 1];
              const t = n.cells()[i];
            c(t.element(), e.element()) && Ji(n, i, je(a(), !0));
          });
      const l = yc(e, n);
        const f = Tc(e, l, t);
        const s = yc(n, f);
        const d = Tc(n, s, t);
      return k(d, function (n, e) {
        const t = n
          .cells()
          .slice(0, r)
          .concat(f[e].cells())
          .concat(n.cells().slice(r, n.cells().length));
        return Qi(n, t);
      });
    };
    const Dc = function (n, e, t, r, o) {
      pc(e, n, o, r.cell);
      const u = wc(t, e);
        const i = Tc(t, u, r);
        const c = wc(e, i);
        const a = Tc(e, c, r);
      return a.slice(0, n).concat(i).concat(a.slice(n, a.length));
    };
    const Ac = function (t, r, n, o, u) {
      const e = t.slice(0, r);
        const i = t.slice(r);
        const c = Zi(t[n], function (n, e) {
          return r > 0 && r < t.length && o(ec(t[r - 1], e), ec(t[r], e))
            ? nc(t[r], e)
            : je(u(n.element(), o), !0);
        });
      return e.concat([c]).concat(i);
    };
    const Bc = function (n, l, f, s, d) {
      return k(n, function (n) {
        let e;
          let t;
          let r;
          let o;
          let u;
          let i;
          let c;
          const a =
            l > 0 && l < tc(n) && s(ec(n, l - 1), ec(n, l))
              ? nc(n, l)
              : je(d(ec(n, f), s), !0);
        return (
          (t = l),
          (r = a),
          (o = (e = n).cells()),
          (u = o.slice(0, t)),
          (i = o.slice(t)),
          (c = u.concat([r]).concat(i)),
          Qi(e, c)
        );
      });
    };
    const Ic = function (n, t, r, o) {
      return k(n, function (n) {
        return Zi(n, function (n) {
          return (
            (e = n),
            I(t, function (n) {
              return r(e.element(), n.element());
            })
              ? je(o(n.element(), r), !0)
              : n
          );
          let e;
        });
      });
    };
    const Pc = function (n, e, t, r) {
      return (
        ec(n[e], t) !== undefined && e > 0 && r(ec(n[e - 1], t), ec(n[e], t))
      );
    };
    const kc = function (n, e, t) {
      return e > 0 && t(ec(n, e - 1), ec(n, e));
    };
    const Ec = function (t, r, o, n) {
      const e = F(t, function (n, e) {
        return Pc(t, e, r, o) || kc(n, r, o) ? [] : [nc(n, r)];
      });
      return Ic(t, e, o, n);
    };
    const Mc = function (t, r, o, n) {
      const u = t[r];
        const e = F(u.cells(), function (n, e) {
          return Pc(t, r, e, o) || kc(u, e, o) ? [] : [n];
        });
      return Ic(t, e, o, n);
    };
    const Nc = Su(["cell", "row", "replace", "gap"]);
    const _c = function (n) {
      const e = Ye(n, "colspan", 1);
        const t = Ye(n, "rowspan", 1);
      return { element: b(n), colspan: b(e), rowspan: b(t) };
    };
    const Wc = function (r, o) {
      void 0 === o && (o = _c), Nc(r);
      const t = Ri(S.none());
        const u = function (n) {
          let e;
            const t = o(n);
          return (e = t), r.cell(e);
        };
        const i = function (n) {
          const e = u(n);
          return (
            t.get().isNone() && t.set(S.some(e)),
            (c = S.some({ item: n, replacement: e })),
            e
          );
        };
        var c = S.none();
      return {
        getOrInit (e, t) {
          return c.fold(
            function () {
              return i(e);
            },
            function (n) {
              return t(e, n.item) ? n.replacement : i(e);
            }
          );
        },
        cursor: t.get,
      };
    };
    const jc = function (c, a) {
      return function (r) {
        const o = Ri(S.none());
        Nc(r);
        const u = [];
          const i = function (n) {
            const e = { scope: c };
              const t = r.replace(n, a, e);
            return (
              u.push({ item: n, sub: t }),
              o.get().isNone() && o.set(S.some(t)),
              t
            );
          };
        return {
          replaceOrInit (e, t) {
            return (
              (r = e),
              (o = t),
              W(u, function (n) {
                return o(n.item, r);
              }).fold(
                function () {
                  return i(e);
                },
                function (n) {
                  return t(e, n.item) ? n.sub : i(e);
                }
              )
            );
            let r; let o;
          },
          cursor: o.get,
        };
      };
    };
    const zc = function (t) {
      Nc(t);
      const n = Ri(S.none());
      return {
        combine (e) {
          return (
            n.get().isNone() && n.set(S.some(e)),
            function () {
              const n = t.cell({ element: b(e), colspan: b(1), rowspan: b(1) });
              return Re(n, "width"), Re(e, "width"), n;
            }
          );
        },
        cursor: n.get,
      };
    };
    const Fc = [
      "body",
      "p",
      "div",
      "article",
      "aside",
      "figcaption",
      "figure",
      "footer",
      "header",
      "nav",
      "section",
      "ol",
      "ul",
      "table",
      "thead",
      "tfoot",
      "tbody",
      "caption",
      "tr",
      "td",
      "th",
      "h1",
      "h2",
      "h3",
      "h4",
      "h5",
      "h6",
      "blockquote",
      "pre",
      "address",
    ];
    const Lc = Kt();
    const Hc = function (n) {
      return (e = n), (t = Lc.property().name(e)), B(Fc, t);
      let e; let t;
    };
    const qc = function (n) {
      return (e = n), (t = Lc.property().name(e)), B(["ol", "ul"], t);
      let e; let t;
    };
    const Vc = function (n) {
      return (e = n), B(["br", "img", "hr", "input"], Lc.property().name(e));
      let e;
    };
    const Uc = function (n) {
      let e;
        const u = function (n) {
          return Q(n) === "br";
        };
        const t = function (o) {
          return xt(o)
            .bind(function (t) {
              const r = ce(t)
                .map(function (n) {
                  return !!Hc(n) || (!!Vc(n) && Q(n) !== "img");
                })
                .getOr(!1);
              return oe(t).map(function (n) {
                return !0 === r ||
                  Q((e = n)) === "li" ||
                  Ue(e, qc).isSome() ||
                  u(t) ||
                  (Hc(n) && !Zn(o, n))
                  ? []
                  : [Sn.fromTag("br")];
                let e;
              });
            })
            .getOr([]);
        };
        const r =
          (e = F(n, function (n) {
            const e = ae(n);
            return L(e, function (n) {
              return u(n) || (rn(n) && ht(n).trim().length === 0);
            })
              ? []
              : e.concat(t(n));
          })).length ===
          0
            ? [Sn.fromTag("br")]
            : e;
      Ee(n[0]), ke(n[0], r);
    };
    const Kc = function (n) {
      it(n).length === 0 && Me(n);
    };
    const $c = function (n, e) {
      return { grid: b(n), cursor: b(e) };
    };
    const Xc = function (n, e, t) {
      return Gc(n, e, t).orThunk(function () {
        return Gc(n, 0, 0);
      });
    };
    var Gc = function (n, e, t) {
      return S.from(n[e]).bind(function (n) {
        return S.from(n.cells()[t]).bind(function (n) {
          return S.from(n.element());
        });
      });
    };
    const Yc = function (n, e, t) {
      return $c(n, Gc(n, e, t));
    };
    const Jc = function (n) {
      return _(
        n,
        function (n, e) {
          return I(n, function (n) {
            return n.row() === e.row();
          })
            ? n
            : n.concat([e]);
        },
        []
      ).sort(function (n, e) {
        return n.row() - e.row();
      });
    };
    const Qc = function (n) {
      return _(
        n,
        function (n, e) {
          return I(n, function (n) {
            return n.column() === e.column();
          })
            ? n
            : n.concat([e]);
        },
        []
      ).sort(function (n, e) {
        return n.column() - e.column();
      });
    };
    const Zc = function (n, e, t) {
      let r;
        const o =
          ((r = t),
          k(n, function (n) {
            const e = k(it(n), function (n) {
              const e = Ye(n, "rowspan", 1);
                const t = Ye(n, "colspan", 1);
              return _e(n, e, t);
            });
            return We(n, e, r.section());
          }));
        const u = mt.generate(o);
      return ic(u, e, !0);
    };
    const na = function (n, e) {
      const t = M(n, e);
      return t.length === 0
        ? S.some("td")
        : t.length === n.length
        ? S.some("th")
        : S.none();
    };
    const ea = function (n, e, t, r) {
      const o = mt.generate(e);
        const u = r.getWidths(o, t, r);
        const i = tu(o, u);
      E(i, function (n) {
        r.setElementWidth(n.element, n.width);
      });
    };
    const ta = fc(
      function (n, e, t, r) {
        const o = e[0].row();
          const u = e[0].row();
          const i = Jc(e);
          const c = _(
            i,
            function (n, e) {
              return Ac(n, u, o, t, r.getOrInit);
            },
            n
          );
        return Yc(c, u, e[0].column());
      },
      mc,
      w,
      w,
      Wc
    );
    const ra = fc(
      function (n, e, t, r) {
        const o = Jc(e);
          const u = o[o.length - 1].row();
          const i = o[o.length - 1].row() + o[o.length - 1].rowspan();
          const c = _(
            o,
            function (n, e) {
              return Ac(n, i, u, t, r.getOrInit);
            },
            n
          );
        return Yc(c, i, e[0].column());
      },
      mc,
      w,
      w,
      Wc
    );
    const oa = fc(
      function (n, e, t, r) {
        const o = Qc(e);
          const u = o[0].column();
          const i = o[0].column();
          const c = _(
            o,
            function (n, e) {
              return Bc(n, i, u, t, r.getOrInit);
            },
            n
          );
        return Yc(c, e[0].row(), i);
      },
      mc,
      ea,
      w,
      Wc
    );
    const ua = fc(
      function (n, e, t, r) {
        const o = e[e.length - 1].column();
          const u = e[e.length - 1].column() + e[e.length - 1].colspan();
          const i = Qc(e);
          const c = _(
            i,
            function (n, e) {
              return Bc(n, u, o, t, r.getOrInit);
            },
            n
          );
        return Yc(c, e[0].row(), u);
      },
      mc,
      ea,
      w,
      Wc
    );
    const ia = fc(
      function (n, e, t, r) {
        let o;
          let u;
          let i;
          let c;
          const a = Qc(e);
          const l =
            ((o = n),
            (u = a[0].column()),
            (i = a[a.length - 1].column()),
            (c = k(o, function (n) {
              const e = n
                .cells()
                .slice(0, u)
                .concat(n.cells().slice(i + 1));
              return ze(e, n.section());
            })),
            M(c, function (n) {
              return n.cells().length > 0;
            }));
          const f = Xc(l, e[0].row(), e[0].column());
        return $c(l, f);
      },
      mc,
      ea,
      Kc,
      Wc
    );
    const ca = fc(
      function (n, e, t, r) {
        let o;
          let u;
          let i;
          const c = Jc(e);
          const a =
            ((o = n),
            (u = c[0].row()),
            (i = c[c.length - 1].row()),
            o.slice(0, u).concat(o.slice(i + 1)));
          const l = Xc(a, e[0].row(), e[0].column());
        return $c(a, l);
      },
      mc,
      w,
      Kc,
      Wc
    );
    const aa = fc(
      function (n, e, t, r) {
        const o = Ec(n, e.column(), t, r.replaceOrInit);
        return Yc(o, e.row(), e.column());
      },
      sc,
      w,
      w,
      jc("row", "th")
    );
    const la = fc(
      function (n, e, t, r) {
        const o = Ec(n, e.column(), t, r.replaceOrInit);
        return Yc(o, e.row(), e.column());
      },
      sc,
      w,
      w,
      jc(null, "td")
    );
    const fa =
      (fc(
        function (n, e, t, r) {
          const o = Mc(n, e.row(), t, r.replaceOrInit);
          return Yc(o, e.row(), e.column());
        },
        sc,
        w,
        w,
        jc("col", "th")
      ),
      fc(
        function (n, e, t, r) {
          const o = Mc(n, e.row(), t, r.replaceOrInit);
          return Yc(o, e.row(), e.column());
        },
        sc,
        w,
        w,
        jc(null, "td")
      ),
      fc(
        function (n, e, t, r) {
          const o = e.cells();
          Uc(o);
          const u = (function (n, e, t) {
            if (n.length === 0) return n;
            for (let r = e.startRow(); r <= e.finishRow(); r++)
              for (let o = e.startCol(); o <= e.finishCol(); o++)
                Ji(n[r], o, je(t(), !1));
            return n;
          })(n, e.bounds(), b(o[0]));
          return $c(u, S.from(o[0]));
        },
        function (n, e) {
          return e.mergable();
        },
        w,
        w,
        zc
      ));
    const sa = fc(
      function (n, e, t, r) {
        const o = N(
          e,
          function (n, e) {
            return gc(n, e, t, r.combine(e));
          },
          n
        );
        return $c(o, S.from(e[0]));
      },
      function (n, e) {
        return e.unmergable();
      },
      ea,
      w,
      zc
    );
    const da = fc(
      function (n, t, e, r) {
        let o;
          let u;
          let i;
          let c;
          let a;
          const l =
            ((o = t.clipboard()),
            (u = t.generators()),
            (i = mt.fromTable(o)),
            ic(i, u, !0));
          const f = ((c = t.row()), (a = t.column()), { row: b(c), column: b(a) });
        return Rc(f, n, l, t.generators(), e).fold(
          function () {
            return $c(n, S.some(t.element()));
          },
          function (n) {
            const e = Xc(n, t.row(), t.column());
            return $c(n, e);
          }
        );
      },
      function (e, t) {
        return ut(t.element()).bind(function (n) {
          return lc(e, n).map(function (n) {
            return {...n, generators: t.generators,
              clipboard: t.clipboard,};
          });
        });
      },
      ea,
      w,
      Wc
    );
    const ma = fc(
      function (n, e, t, r) {
        const o = n[e.cells[0].row()];
          const u = e.cells[0].column();
          const i = Zc(e.clipboard(), e.generators(), o);
          const c = Oc(u, n, i, e.generators(), t);
          const a = Xc(c, e.cells[0].row(), e.cells[0].column());
        return $c(c, a);
      },
      dc,
      w,
      w,
      Wc
    );
    const ga = fc(
      function (n, e, t, r) {
        const o = n[e.cells[0].row()];
          const u =
            e.cells[e.cells.length - 1].column() +
            e.cells[e.cells.length - 1].colspan();
          const i = Zc(e.clipboard(), e.generators(), o);
          const c = Oc(u, n, i, e.generators(), t);
          const a = Xc(c, e.cells[0].row(), e.cells[0].column());
        return $c(c, a);
      },
      dc,
      w,
      w,
      Wc
    );
    const pa = fc(
      function (n, e, t, r) {
        const o = n[e.cells[0].row()];
          const u = e.cells[0].row();
          const i = Zc(e.clipboard(), e.generators(), o);
          const c = Dc(u, n, i, e.generators(), t);
          const a = Xc(c, e.cells[0].row(), e.cells[0].column());
        return $c(c, a);
      },
      dc,
      w,
      w,
      Wc
    );
    const ha = fc(
      function (n, e, t, r) {
        const o = n[e.cells[0].row()];
          const u =
            e.cells[e.cells.length - 1].row() +
            e.cells[e.cells.length - 1].rowspan();
          const i = Zc(e.clipboard(), e.generators(), o);
          const c = Dc(u, n, i, e.generators(), t);
          const a = Xc(c, e.cells[0].row(), e.cells[0].column());
        return $c(c, a);
      },
      dc,
      w,
      w,
      Wc
    );
    const va = function (n, e) {
      const u = mt.fromTable(n);
      return mc(u, e)
        .bind(function (n) {
          const e = n[n.length - 1];
            const t = n[0].column();
            const r = e.column() + e.colspan();
            const o = z(
              k(u.all, function (n) {
                return M(n.cells(), function (n) {
                  return n.column() >= t && n.column() < r;
                });
              })
            );
          return na(o, function (n) {
            return Q(n.element()) === "th";
          });
        })
        .getOr("");
    };
    const ba = function (n) {
      return mi(n.parentNode);
    };
    const wa = function (n, e) {
      const t = ba(e) === "thead";
        const r = !I(e.cells, function (n) {
          return mi(n) !== "th";
        });
      return t || r ? S.some({ thead: t, ths: r }) : S.none();
    };
    const ya = function (n, e) {
      return (t = wa(0, e).fold(
          function () {
            return ba(e);
          },
          function (n) {
            return "thead";
          }
        )) ===
        "thead"
        ? "header"
        : t === "tfoot"
        ? "footer"
        : "body";
      let t;
    };
    const Ca = function (e, n, t) {
      const r = e.getParent(n, "table");
        const o = n.parentNode;
        const u = mi(o);
      if (t !== u) {
        let i = e.select(t, r)[0];
        if (!i) {
          i = e.create(t);
          const c = r.firstChild;
          t === "thead"
            ? H(He(Sn.fromDom(r), "caption,colgroup")).fold(
                function () {
                  return r.insertBefore(i, c);
                },
                function (n) {
                  return e.insertAfter(i, n.dom());
                }
              )
            : r.appendChild(i);
        }
        t === "tbody" && u === "thead" && i.firstChild
          ? i.insertBefore(n, i.firstChild)
          : i.appendChild(n),
          o.hasChildNodes() || e.remove(o);
      }
    };
    const Sa = function (t, n, r, o) {
      return E(n, function (n) {
        const e = mi(n) !== r ? t.rename(n, r) : n;
        t.setAttrib(e, "scope", o);
      });
    };
    const xa = function (n, e, t) {
      let r;
        const o = n.dom;
      if (t === "header") {
        const u = si(n);
          const i =
            u === "auto"
              ? ((r = ct(Sn.fromDom(e.cells[0]))
                  .map(function (n) {
                    return at(n);
                  })
                  .getOr([])),
                q(r, function (n) {
                  return wa(0, n.dom());
                })
                  .map(function (n) {
                    return n.thead && n.ths
                      ? "sectionCells"
                      : n.thead
                      ? "section"
                      : "cells";
                  })
                  .getOr("section"))
              : u;
        Sa(o, e.cells, i === "section" ? "td" : "th", "col"),
          Ca(o, e, i === "cells" ? "tbody" : "thead");
      } else
        Sa(o, e.cells, "td", null),
          Ca(o, e, t === "footer" ? "tfoot" : "tbody");
    };
    const Ta = function (e) {
      return {
        get () {
          const n = gi(e);
          return er(n, lr).fold(
            function () {
              return e.selection.getStart() === undefined
                ? wr()
                : Cr(e.selection);
            },
            function (n) {
              return yr(n);
            }
          );
        },
      };
    };
    const Ra = function (e) {
      return function (n) {
        return S.from(n.dom.getParent(n.selection.getStart(), e)).map(function (
          n
        ) {
          return Sn.fromDom(n);
        });
      };
    };
    const Oa = Ra("th,td");
    const Da = Ra("th,td,caption");
    const Aa = function (e) {
      return Oa(e)
        .map(function (n) {
          return Sr(n, Ta(e));
        })
        .map(function (n) {
          return k(n, function (n) {
            return n.dom();
          });
        })
        .getOr([]);
    };
    const Ba = function (t) {
      let n;
        let e;
        let r;
        const o = Oa(t);
        const u = o
          .bind(function (n) {
            return ct(n);
          })
          .map(function (n) {
            return at(n);
          })
          .map(function (n) {
            return k(n, function (n) {
              return n.dom();
            });
          });
      return (
        (e = u),
        (r = function (e, n) {
          return M(n, function (n) {
            return I(n.cells, function (n) {
              return t.dom.getAttrib(n, ar) === "1" || n === e.dom();
            });
          });
        }),
        ((n = o).isSome() && e.isSome()
          ? S.some(r(n.getOrDie(), e.getOrDie()))
          : S.none()
        ).getOr([])
      );
    };
    const Ia = function (s, n) {
      const e = function (n) {
          return Q(gi(n)) === "table";
        };
        const d = di(s);
        const t = function (c, a, l, f) {
          return function (n, e) {
            wi(n);
            const t = f();
              const r = Sn.fromDom(s.getDoc());
              const o = Go(Ti);
              const u = Et(l, r, d);
              const i = ki(s, n);
            return a(n)
              ? c(t, n, e, u, o, i).bind(function (n) {
                  return (
                    E(n.newRows(), function (n) {
                      $u(s, n.dom());
                    }),
                    E(n.newCells(), function (n) {
                      Xu(s, n.dom());
                    }),
                    n.cursor().map(function (n) {
                      const e = Vi(Ui, n);
                        const t = s.dom.createRng();
                      return (
                        t.setStart(e.element().dom(), e.offset()),
                        t.setEnd(e.element().dom(), e.offset()),
                        t
                      );
                    })
                  );
                })
              : S.none();
          };
        };
        const r = t(
          ca,
          function (n) {
            return !1 === e(s) || $i(n).rows() > 1;
          },
          w,
          n
        );
        const o = t(
          ia,
          function (n) {
            return !1 === e(s) || $i(n).columns() > 1;
          },
          w,
          n
        );
        const u = t(ta, C, w, n);
        const i = t(ra, C, w, n);
        const c = t(oa, C, Ki, n);
        const a = t(ua, C, Ki, n);
        const l = t(fa, C, w, n);
        const f = t(sa, C, w, n);
        const m = t(ma, C, w, n);
        const g = t(ga, C, w, n);
        const p = t(pa, C, w, n);
        const h = t(ha, C, w, n);
        const v = t(da, C, w, n);
        const b = function (n, e) {
          return Y(n, "type").filter(function (n) {
            return B(e, n);
          });
        };
      return {
        deleteRow: r,
        deleteColumn: o,
        insertRowsBefore: u,
        insertRowsAfter: i,
        insertColumnsBefore: c,
        insertColumnsAfter: a,
        mergeCells: l,
        unmergeCells: f,
        pasteColsBefore: m,
        pasteColsAfter: g,
        pasteRowsBefore: p,
        pasteRowsAfter: h,
        pasteCells: v,
        setTableCellType (e, n) {
          return b(n, ["td", "th"]).each(function (n) {
            Sa(e.dom, Aa(e), n, null);
          });
        },
        setTableRowType (t, n) {
          return b(n, ["header", "body", "footer"]).each(function (e) {
            k(Ba(t), function (n) {
              return xa(t, n, e);
            });
          });
        },
        makeColumnHeader: t(aa, C, w, n),
        unmakeColumnHeader: t(la, C, w, n),
        getTableRowType (n) {
          const e = Ba(n);
          if (e.length > 0) {
            const t = k(e, function (n) {
                return ya(0, n);
              });
              const r = B(t, "header");
              const o = B(t, "footer");
            if (r || o) {
              const u = B(t, "body");
              return !r || u || o ? (r || u || !o ? "" : "footer") : "header";
            }
            return "body";
          }
        },
        getTableCellType (n) {
          return na(Aa(n), function (n) {
            return mi(n) === "th";
          }).getOr("");
        },
        getTableColType: va,
      };
    };
    const Pa = {
      styles: { "border-collapse": "collapse", width: "100%" },
      attributes: { border: "1" },
    };
    const ka = function (n, e, t, r) {
      return P(n, function (n) {
        return (function (n, e, t, r) {
          for (var o = Sn.fromTag("tr"), u = 0; u < n; u++) {
            const i = r < e || u < t ? Sn.fromTag("th") : Sn.fromTag("td");
            u < t && an(i, "scope", "row"),
              r < e && an(i, "scope", "col"),
              Be(i, Sn.fromTag("br")),
              Be(o, i);
          }
          return o;
        })(e, t, r, n);
      });
    };
    const Ea = function (n, e) {
      n.selection.select(e.dom(), !0), n.selection.collapse(!0);
    };
    const Ma = function (o, n, e, t, r) {
      const u = ti(o);
        const i = { styles: u, attributes: ei(o) };
        const c = (function (n, e, t, r, o, u) {
          void 0 === u && (u = Pa);
          const i = Sn.fromTag("table");
            const c = o !== "cells";
          Ce(i, u.styles), ln(i, u.attributes);
          const a = Math.min(n, t);
          if (c && t > 0) {
            const l = Sn.fromTag("thead");
            Be(i, l);
            const f = ka(t, e, o === "sectionCells" ? a : 0, r);
            ke(l, f);
          }
          const s = Sn.fromTag("tbody");
          Be(i, s);
          const d = ka(c ? n - a : n, e, c ? 0 : t, r);
          return ke(s, d), i;
        })(e, n, r, t, si(o), i);
      an(c, "data-mce-id", "__mce");
      let a;
        let l;
        let f;
        const s =
          ((a = c),
          (l = Sn.fromTag("div")),
          (f = Sn.fromDom(a.dom().cloneNode(!0))),
          Be(l, f),
          l.dom().innerHTML);
      return (
        o.insertContent(s),
        Xe(gi(o), 'table[data-mce-id="__mce"]')
          .map(function (n) {
            let e; let t; let r;
            return (
              li(o)
                ? _i(o, n)
                : fi(o)
                ? Wi(n)
                : (ai(o) || ((e = u.width), m(e) && e.indexOf("%") !== -1)) &&
                  Ni(o, n),
              wi(n),
              mn(n, "data-mce-id"),
              (t = o),
              E(qe(n, "tr"), function (n) {
                $u(t, n.dom()),
                  E(qe(n, "th,td"), function (n) {
                    Xu(t, n.dom());
                  });
              }),
              (r = o),
              Xe(n, "td,th").each(y(Ea, r)),
              n.dom()
            );
          })
          .getOr(null)
      );
    };
    const Na = function (n, e, t, r, o) {
      void 0 === r && (r = {});
      const u = function (n) {
        return R(n) && n > 0;
      };
      if (u(e) && u(t)) {
        const i = r.headerRows || 0;
          const c = r.headerColumns || 0;
        return Ma(n, t, e, c, i);
      }
      return console.error(o), null;
    };
    const _a = function (n) {
      return function () {
        return n().fold(
          function () {
            return [];
          },
          function (n) {
            return k(n, function (n) {
              return n.dom();
            });
          }
        );
      };
    };
    const Wa = function (t) {
      return function (n) {
        const e = n.length > 0 ? S.some(k(n, Sn.fromDom)) : S.none();
        t(e);
      };
    };
    const ja = function (r, n, e, t) {
      return {
        insertTable (n, e, t) {
          return (
            void 0 === t && (t = {}),
            Na(
              r,
              e,
              n,
              t,
              "Invalid values for insertTable - rows and columns values are required to insert a table."
            )
          );
        },
        setClipboardRows: Wa(n.setRows),
        getClipboardRows: _a(n.getRows),
        setClipboardCols: Wa(n.setColumns),
        getClipboardCols: _a(n.getColumns),
        resizeHandler: e,
        selectionTargets: t,
      };
    };
    const za = function (n, e) {
      const t = mt.fromTable(n);
      return mc(t, e).map(function (n) {
        const e = n[n.length - 1];
          const i = n[0].column();
          const c = e.column() + e.colspan();
        return k(t.all, function (n) {
          const e = M(n.cells(), function (n) {
              return n.column() >= i && n.column() < c;
            });
            const t = k(e, function (n) {
              let e;
                let t;
                let r;
                let o;
                const u = Dt(n.element());
              return (
                (r = c - i),
                (o = Je((e = u), (t = "colspan"))),
                r === 1 || o <= 1 ? mn(e, t) : an(e, t, Math.min(r, o)),
                u
              );
            });
            const r = Sn.fromTag("tr");
          return ke(r, t), r;
        });
      });
    };
    const Fa = function (n, e, r) {
      const o = mt.fromTable(n);
      return mc(o, e).map(function (n) {
        const e = ic(o, r, !1).slice(
            n[0].row(),
            n[n.length - 1].row() + n[n.length - 1].rowspan()
          );
          const t = ac(e, r);
        return k(t, function (n) {
          const t = Ot(n.element());
          return (
            E(n.cells(), function (n) {
              const e = Dt(n.element());
              Gi(e, "colspan", n.colspan(), 1),
                Gi(e, "rowspan", n.rowspan(), 1),
                Be(t, e);
            }),
            t
          );
        });
      });
    };
    const La = tinymce.util.Tools.resolve("tinymce.util.Tools");
    const Ha = function (o, n, u) {
      return (function (n, e) {
        for (let t = 0; t < e.length; t++) {
          const r = o.getStyle(e[t], u);
          if ((void 0 === n && (n = r), n !== r)) return "";
        }
        return n;
      })(void 0, o.select("td,th", n));
    };
    const qa = function (n, e, t) {
      t && n.formatter.apply(`align${  t}`, {}, e);
    };
    const Va = function (e, t) {
      La.each("left center right".split(" "), function (n) {
        e.formatter.remove(`align${  n}`, {}, t);
      });
    };
    const Ua = function (n, e) {
      return (e || []).concat(
        k(n, function (n) {
          return { text: n.text || n.title, value: n.value };
        })
      );
    };
    const Ka = function (e) {
      return function (n) {
        return pn(n, "rgb", 0) ? e.toHex(n) : n;
      };
    };
    const $a = function (n, e) {
      const t = Sn.fromDom(e);
      return {
        borderwidth: Te(t, "border-width").getOr(""),
        borderstyle: Te(t, "border-style").getOr(""),
        bordercolor: Te(t, "border-color").map(Ka(n)).getOr(""),
        backgroundcolor: Te(t, "background-color").map(Ka(n)).getOr(""),
      };
    };
    const Xa = function (n) {
      const o = n[0];
        const e = n.slice(1);
      return (
        E(e, function (n) {
          E(V(o), function (r) {
            K(n, function (n, e) {
              const t = o[r];
              t !== "" && r === e && t !== n && (o[r] = "");
            });
          });
        }),
        o
      );
    };
    const Ga = function (n) {
      const e = [
        {
          name: "borderstyle",
          type: "selectbox",
          label: "Border style",
          items: [
            { text: "Select...", value: "" },
            { text: "Solid", value: "solid" },
            { text: "Dotted", value: "dotted" },
            { text: "Dashed", value: "dashed" },
            { text: "Double", value: "double" },
            { text: "Groove", value: "groove" },
            { text: "Ridge", value: "ridge" },
            { text: "Inset", value: "inset" },
            { text: "Outset", value: "outset" },
            { text: "None", value: "none" },
            { text: "Hidden", value: "hidden" },
          ],
        },
        { name: "bordercolor", type: "colorinput", label: "Border color" },
        {
          name: "backgroundcolor",
          type: "colorinput",
          label: "Background color",
        },
      ];
      return {
        title: "Advanced",
        name: "advanced",
        items:
          n === "cell"
            ? [
                { name: "borderwidth", type: "input", label: "Border width" },
              ].concat(e)
            : e,
      };
    };
    const Ya = function (n, e, t, r) {
      return W(n, function (n) {
        return t.formatter.matchNode(r, e + n);
      }).getOr("");
    };
    const Ja = y(Ya, ["left", "center", "right"], "align");
    const Qa = y(Ya, ["top", "middle", "bottom"], "valign");
    const Za = function (n, e) {
      let t;
        let r;
        let o;
        let u;
        const i = ti(n);
        const c = ei(n);
        const a = e
          ? ((t = n.dom),
            {
              borderstyle: Y(i, "border-style").getOr(""),
              bordercolor: Ka(t)(Y(i, "border-color").getOr("")),
              backgroundcolor: Ka(t)(Y(i, "background-color").getOr("")),
            })
          : {};
      return {
        height: "",
                    width: "100%",
                    cellspacing: "",
                    cellpadding: "",
                    caption: !1,
                    class: "",
                    align: "",
                    border: "",
                ...i,
              ...c,
            ...a,
          ...((u = i["border-width"]),
          ci(n) && u
            ? { border: u }
            : Y(c, "border").fold(
                function () {
                  return {};
                },
                function (n) {
                  return { border: n };
                }
              )),
        ...((r = Y(i, "border-spacing")
          .or(Y(c, "cellspacing"))
          .fold(
            function () {
              return {};
            },
            function (n) {
              return { cellspacing: n };
            }
          )),
        (o = Y(i, "border-padding")
          .or(Y(c, "cellpadding"))
          .fold(
            function () {
              return {};
            },
            function (n) {
              return { cellpadding: n };
            }
          )),
        ({...r, ...o}))
      };
    };
    const nl = [
      { name: "width", type: "input", label: "Width" },
      { name: "height", type: "input", label: "Height" },
      {
        name: "celltype",
        type: "selectbox",
        label: "Cell type",
        items: [
          { text: "Cell", value: "td" },
          { text: "Header cell", value: "th" },
        ],
      },
      {
        name: "scope",
        type: "selectbox",
        label: "Scope",
        items: [
          { text: "None", value: "" },
          { text: "Row", value: "row" },
          { text: "Column", value: "col" },
          { text: "Row group", value: "rowgroup" },
          { text: "Column group", value: "colgroup" },
        ],
      },
      {
        name: "halign",
        type: "selectbox",
        label: "H Align",
        items: [
          { text: "None", value: "" },
          { text: "Left", value: "left" },
          { text: "Center", value: "center" },
          { text: "Right", value: "right" },
        ],
      },
      {
        name: "valign",
        type: "selectbox",
        label: "V Align",
        items: [
          { text: "None", value: "" },
          { text: "Top", value: "top" },
          { text: "Middle", value: "middle" },
          { text: "Bottom", value: "bottom" },
        ],
      },
    ];
    const el = function (n) {
      return ((e = Ua(n.getParam("table_cell_class_list", [], "array"))).length >
      0
        ? S.some({ name: "class", type: "selectbox", label: "Class", items: e })
        : S.none()
      ).fold(
        function () {
          return nl;
        },
        function (n) {
          return nl.concat(n);
        }
      );
      let e;
    };
    const tl = function (u) {
      return function (t, r) {
        const o = t.dom;
        return {
          setAttrib (n, e) {
            (u && !e) || o.setAttrib(r, n, e);
          },
          setStyle (n, e) {
            (u && !e) || o.setStyle(r, n, e);
          },
          setFormat (n, e) {
            (u && !e) ||
              (e === ""
                ? t.formatter.remove(n, { value: null }, r, !0)
                : t.formatter.apply(n, { value: e }, r));
          },
        };
      };
    };
    const rl = { normal: tl(!1), ifTruthy: tl(!0) };
    const ol = function (d, n, m) {
      const g = d.dom;
        const p = n.length === 1;
      E(n, function (n) {
        let e;
          let t;
          let r;
          let o;
          let u;
          let i;
          let c;
          let a;
          let l;
          const f = m.celltype && mi(n) !== m.celltype ? g.rename(n, m.celltype) : n;
          const s = p ? rl.normal(d, f) : rl.ifTruthy(d, f);
        (t = m),
          (e = s).setAttrib("scope", t.scope),
          e.setAttrib("class", t.class),
          e.setStyle("width", bi(t.width)),
          e.setStyle("height", bi(t.height)),
          oi(d) &&
            ((o = m),
            (r = s).setFormat("tablecellbackgroundcolor", o.backgroundcolor),
            r.setFormat("tablecellbordercolor", o.bordercolor),
            r.setFormat("tablecellborderstyle", o.borderstyle),
            r.setFormat("tablecellborderwidth", bi(o.borderwidth))),
          p &&
            (Va(d, f),
            (u = d),
            (i = f),
            La.each("top middle bottom".split(" "), function (n) {
              u.formatter.remove(`valign${  n}`, {}, i);
            })),
          m.halign && qa(d, f, m.halign),
          m.valign &&
            ((c = d),
            (a = f),
            (l = m.valign) && c.formatter.apply(`valign${  l}`, {}, a));
      });
    };
    const ul = function (n, e, t) {
      const r = t.getData();
      t.close(),
        n.undoManager.transact(function () {
          ol(n, e, r), n.focus();
        });
    };
    const il = function (u) {
      const n = Aa(u);
      if (n.length !== 0) {
        const e = k(n, function (n) {
            return (
              (t = n),
              (r = oi((e = u))),
              (o = e.dom),
              ({
                width: o.getStyle(t, "width") || o.getAttrib(t, "width"),
                  height: o.getStyle(t, "height") || o.getAttrib(t, "height"),
                  scope: o.getAttrib(t, "scope"),
                  celltype: mi(t),
                  class: o.getAttrib(t, "class", ""),
                  halign: Ja(e, t),
                  valign: Qa(e, t),
                ...(r ? $a(o, t) : {})
              })
            );
            let e; let t; let r; let o;
          });
          const t = Xa(e);
          const r = {
            type: "tabpanel",
            tabs: [
              { title: "General", name: "general", items: el(u) },
              Ga("cell"),
            ],
          };
          const o = {
            type: "panel",
            items: [{ type: "grid", columns: 2, items: el(u) }],
          };
        u.windowManager.open({
          title: "Cell Properties",
          size: "normal",
          body: oi(u) ? r : o,
          buttons: [
            { type: "cancel", name: "cancel", text: "Cancel" },
            { type: "submit", name: "save", text: "Save", primary: !0 },
          ],
          initialData: t,
          onSubmit: y(ul, u, n),
        });
      }
    };
    const cl = [
      {
        type: "selectbox",
        name: "type",
        label: "Row type",
        items: [
          { text: "Header", value: "header" },
          { text: "Body", value: "body" },
          { text: "Footer", value: "footer" },
        ],
      },
      {
        type: "selectbox",
        name: "align",
        label: "Alignment",
        items: [
          { text: "None", value: "" },
          { text: "Left", value: "left" },
          { text: "Center", value: "center" },
          { text: "Right", value: "right" },
        ],
      },
      { label: "Height", name: "height", type: "input" },
    ];
    const al = function (n) {
      return ((e = Ua(n.getParam("table_row_class_list", [], "array"))).length >
      0
        ? S.some({ name: "class", type: "selectbox", label: "Class", items: e })
        : S.none()
      ).fold(
        function () {
          return cl;
        },
        function (n) {
          return cl.concat(n);
        }
      );
      let e;
    };
    const ll = function (i, n, c, a) {
      const l = n.length === 1;
      E(n, function (n) {
        a.type !== mi(n.parentNode) && xa(i, n, a.type);
        let e;
          let t;
          let r;
          let o;
          const u = l ? rl.normal(i, n) : rl.ifTruthy(i, n);
        (t = a),
          (e = u).setAttrib("scope", t.scope),
          e.setAttrib("class", t.class),
          e.setStyle("height", bi(t.height)),
          ui(i) &&
            ((o = a),
            (r = u).setStyle("background-color", o.backgroundcolor),
            r.setStyle("border-color", o.bordercolor),
            r.setStyle("border-style", o.borderstyle)),
          a.align !== c.align && (Va(i, n), qa(i, n, a.align));
      });
    };
    const fl = function (n, e, t, r) {
      const o = r.getData();
      r.close(),
        n.undoManager.transact(function () {
          ll(n, e, t, o), n.focus();
        });
    };
    const sl = function (u) {
      const n = Ba(u);
      if (n.length !== 0) {
        const e = k(n, function (n) {
            return (
              (t = n),
              (r = ui((e = u))),
              (o = e.dom),
              ({
                height: o.getStyle(t, "height") || o.getAttrib(t, "height"),
                  scope: o.getAttrib(t, "scope"),
                  class: o.getAttrib(t, "class", ""),
                  type: ya(0, t),
                  align: Ja(e, t),
                ...(r ? $a(o, t) : {})
              })
            );
            let e; let t; let r; let o;
          });
          const t = Xa(e);
          const r = {
            type: "tabpanel",
            tabs: [
              { title: "General", name: "general", items: al(u) },
              Ga("row"),
            ],
          };
          const o = {
            type: "panel",
            items: [{ type: "grid", columns: 2, items: al(u) }],
          };
        u.windowManager.open({
          title: "Row Properties",
          size: "normal",
          body: ui(u) ? r : o,
          buttons: [
            { type: "cancel", name: "cancel", text: "Cancel" },
            { type: "submit", name: "save", text: "Save", primary: !0 },
          ],
          initialData: t,
          onSubmit: y(fl, u, n, t),
        });
      }
    };
    const dl = tinymce.util.Tools.resolve("tinymce.Env");
    var ml = function (n, e, t, r) {
      if (e.tagName === "TD" || e.tagName === "TH")
        m(t) ? n.setStyle(e, t, r) : n.setStyle(e, t);
      else if (e.children)
        for (let o = 0; o < e.children.length; o++) ml(n, e.children[o], t, r);
    };
    const gl = function (t, r, n) {
      let o;
        const u = t.dom;
        const i = n.getData();
      n.close(),
        i.class === "" && delete i.class,
        t.undoManager.transact(function () {
          if (!r) {
            const n = parseInt(i.cols, 10) || 1;
              const e = parseInt(i.rows, 10) || 1;
            r = Ma(t, n, e, 0, 0);
          }
          !(function (n, e, t) {
            let r;
              const o = n.dom;
              const u = {};
              const i = {};
            if (
              ((u.class = t.class),
              (i.height = bi(t.height)),
              o.getAttrib(e, "width") && !ci(n)
                ? (u.width = (r = t.width) ? r.replace(/px$/, "") : "")
                : (i.width = bi(t.width)),
              ci(n)
                ? ((i["border-width"] = bi(t.border)),
                  (i["border-spacing"] = bi(t.cellspacing)))
                : ((u.border = t.border),
                  (u.cellpadding = t.cellpadding),
                  (u.cellspacing = t.cellspacing)),
              ci(n) && e.children)
            )
              for (let c = 0; c < e.children.length; c++)
                ml(o, e.children[c], {
                  "border-width": bi(t.border),
                  padding: bi(t.cellpadding),
                }),
                  ii(n) &&
                    ml(o, e.children[c], { "border-color": t.bordercolor });
            ii(n) &&
              ((i["background-color"] = t.backgroundcolor),
              (i["border-color"] = t.bordercolor),
              (i["border-style"] = t.borderstyle)),
              (u.style = o.serializeStyle({...ti(n), ...i})),
              o.setAttribs(e, {...ei(n), ...u});
          })(t, r, i),
            (o = u.select("caption", r)[0]) && !i.caption && u.remove(o),
            !o &&
              i.caption &&
              (((o = u.create("caption")).innerHTML = dl.ie
                ? "\xa0"
                : '<br data-mce-bogus="1"/>'),
              r.insertBefore(o, r.firstChild)),
            i.align === "" ? Va(t, r) : qa(t, r, i.align),
            t.focus(),
            t.addVisual();
        });
    };
    const pl = function (n, e) {
      let t;
        let r;
        let o;
        let u;
        let i;
        let c;
        let a;
        let l;
        const f = n.dom;
        let s = Za(n, ii(n));
      !1 === e
        ? (t = f.getParent(n.selection.getStart(), "table"))
          ? ((o = t),
            (u = ii((r = n))),
            (l = r.dom),
            (s = {
              width: l.getStyle(o, "width") || l.getAttrib(o, "width"),
                height: l.getStyle(o, "height") || l.getAttrib(o, "height"),
                cellspacing:
                  l.getStyle(o, "border-spacing") ||
                  l.getAttrib(o, "cellspacing"),
                cellpadding:
                  l.getAttrib(o, "cellpadding") || Ha(r.dom, o, "padding"),
                border:
                  ((i = l),
                  (c = o),
                  (a = Te(Sn.fromDom(c), "border-width")),
                  ci(r) && a.isSome()
                    ? a.getOr("")
                    : i.getAttrib(c, "border") ||
                      Ha(r.dom, c, "border-width") ||
                      Ha(r.dom, c, "border")),
                caption: !!l.select("caption", o)[0],
                class: l.getAttrib(o, "class", ""),
                align: Ja(r, o),
              ...(u ? $a(l, o) : {})
            }))
          : ii(n) &&
            ((s.borderstyle = ""),
            (s.bordercolor = ""),
            (s.backgroundcolor = ""))
        : ((s.cols = "1"),
          (s.rows = "1"),
          ii(n) &&
            ((s.borderstyle = ""),
            (s.bordercolor = ""),
            (s.backgroundcolor = "")));
      const d = Ua(n.getParam("table_class_list", [], "array"));
      d.length > 0 &&
        s.class &&
        (s.class = s.class.replace(/\s*mce\-item\-table\s*/g, ""));
      let m;
        let g;
        let p;
        let h;
        const v = {
          type: "grid",
          columns: 2,
          items:
            ((m = d),
            (g = e
              ? [
                  {
                    type: "input",
                    name: "cols",
                    label: "Cols",
                    inputMode: "numeric",
                  },
                  {
                    type: "input",
                    name: "rows",
                    label: "Rows",
                    inputMode: "numeric",
                  },
                ]
              : []),
            (p = n.getParam("table_appearance_options", !0, "boolean")
              ? [
                  {
                    type: "input",
                    name: "cellspacing",
                    label: "Cell spacing",
                    inputMode: "numeric",
                  },
                  {
                    type: "input",
                    name: "cellpadding",
                    label: "Cell padding",
                    inputMode: "numeric",
                  },
                  { type: "input", name: "border", label: "Border width" },
                  {
                    type: "label",
                    label: "Caption",
                    items: [
                      {
                        type: "checkbox",
                        name: "caption",
                        label: "Show caption",
                      },
                    ],
                  },
                ]
              : []),
            (h =
              m.length > 0
                ? [
                    {
                      type: "selectbox",
                      name: "class",
                      label: "Class",
                      items: m,
                    },
                  ]
                : []),
            g
              .concat([
                { type: "input", name: "width", label: "Width" },
                { type: "input", name: "height", label: "Height" },
              ])
              .concat(p)
              .concat([
                {
                  type: "selectbox",
                  name: "align",
                  label: "Alignment",
                  items: [
                    { text: "None", value: "" },
                    { text: "Left", value: "left" },
                    { text: "Center", value: "center" },
                    { text: "Right", value: "right" },
                  ],
                },
              ])
              .concat(h)),
        };
        const b = ii(n)
          ? {
              type: "tabpanel",
              tabs: [
                { title: "General", name: "general", items: [v] },
                Ga("table"),
              ],
            }
          : { type: "panel", items: [v] };
      n.windowManager.open({
        title: "Table Properties",
        size: "normal",
        body: b,
        onSubmit: y(gl, n, t),
        buttons: [
          { type: "cancel", name: "cancel", text: "Cancel" },
          { type: "submit", name: "save", text: "Save", primary: !0 },
        ],
        initialData: s,
      });
    };
    const hl = function (a, t, l, f, e) {
      const r = vi(a);
        const o = function (n) {
          return ct(n, r);
        };
        const u = function (r) {
          return Oa(a).each(function (t) {
            o(t).each(function (e) {
              const n = Tr(f, e, t);
              r(e, n).each(function (n) {
                a.selection.setRng(n), a.focus(), l.clear(e), wi(e);
              });
            });
          });
        };
        const i = function () {
          return Oa(a).map(function (r) {
            return o(r).bind(function (n) {
              const e = Tr(f, n, r);
                const t = Et(w, Sn.fromDom(a.getDoc()), S.none());
              return Fa(n, e, t);
            });
          });
        };
        const c = function () {
          return Oa(a).map(function (t) {
            return o(t).bind(function (n) {
              const e = Tr(f, n, t);
              return za(n, e);
            });
          });
        };
        const s = function (c, n) {
          return n().each(function (n) {
            const i = k(n, function (n) {
              return Dt(n);
            });
            Oa(a).each(function (u) {
              return o(u).each(function (e) {
                let n;
                  let t;
                  const r = Mt(Sn.fromDom(a.getDoc()));
                  const o =
                    ((n = i),
                    (t = r),
                    {
                      selection: b(Sr(u, f)),
                      clipboard: b(n),
                      generators: b(t),
                    });
                c(e, o).each(function (n) {
                  a.selection.setRng(n), a.focus(), l.clear(e);
                });
              });
            });
          });
        };
      K(
        {
          mceTableSplitCells () {
            return u(t.unmergeCells);
          },
          mceTableMergeCells () {
            return u(t.mergeCells);
          },
          mceTableInsertRowBefore () {
            return u(t.insertRowsBefore);
          },
          mceTableInsertRowAfter () {
            return u(t.insertRowsAfter);
          },
          mceTableInsertColBefore () {
            return u(t.insertColumnsBefore);
          },
          mceTableInsertColAfter () {
            return u(t.insertColumnsAfter);
          },
          mceTableDeleteCol () {
            return u(t.deleteColumn);
          },
          mceTableDeleteRow () {
            return u(t.deleteRow);
          },
          mceTableCutCol (n) {
            return c().each(function (n) {
              e.setColumns(n), u(t.deleteColumn);
            });
          },
          mceTableCutRow (n) {
            return i().each(function (n) {
              e.setRows(n), u(t.deleteRow);
            });
          },
          mceTableCopyCol (n) {
            return c().each(function (n) {
              return e.setColumns(n);
            });
          },
          mceTableCopyRow (n) {
            return i().each(function (n) {
              return e.setRows(n);
            });
          },
          mceTablePasteColBefore (n) {
            return s(t.pasteColsBefore, e.getColumns);
          },
          mceTablePasteColAfter (n) {
            return s(t.pasteColsAfter, e.getColumns);
          },
          mceTablePasteRowBefore (n) {
            return s(t.pasteRowsBefore, e.getRows);
          },
          mceTablePasteRowAfter (n) {
            return s(t.pasteRowsAfter, e.getRows);
          },
          mceTableDelete () {
            return Da(a).each(function (n) {
              ct(n, r)
                .filter(d(r))
                .each(function (n) {
                  const e = Sn.fromText("");
                  if ((De(n, e), Me(n), a.dom.isEmpty(a.getBody())))
                    a.setContent(""), a.selection.setCursorLocation();
                  else {
                    const t = a.dom.createRng();
                    t.setStart(e.dom(), 0),
                      t.setEnd(e.dom(), 0),
                      a.selection.setRng(t),
                      a.nodeChanged();
                  }
                });
            });
          },
          mceTableSizingMode (n, e) {
            return (
              (t = e),
              Da(a).each(function (n) {
                fi(a) ||
                  li(a) ||
                  ai(a) ||
                  ct(n, r).each(function (n) {
                    t !== "relative" || Vo(n)
                      ? t !== "fixed" || Uo(n)
                        ? t !== "responsive" || Ko(n) || Wi(n)
                        : _i(a, n)
                      : Ni(a, n),
                      wi(n);
                  });
              })
            );
            let t;
          },
        },
        function (n, e) {
          return a.addCommand(e, n);
        }
      ),
        K(
          {
            mceTableCellType (n, e) {
              return t.setTableCellType(a, e);
            },
            mceTableRowType (n, e) {
              return t.setTableRowType(a, e);
            },
          },
          function (n, e) {
            return a.addCommand(e, n);
          }
        ),
        a.addCommand("mceTableColType", function (n, e) {
          return Y(e, "type").each(function (n) {
            return u(n === "th" ? t.makeColumnHeader : t.unmakeColumnHeader);
          });
        }),
        K(
          {
            mceTableProps: y(pl, a, !1),
            mceTableRowProps: y(sl, a),
            mceTableCellProps: y(il, a),
          },
          function (n, e) {
            return a.addCommand(e, function () {
              return n();
            });
          }
        ),
        a.addCommand("mceInsertTable", function (n, e) {
          g(e) && V(e).length > 0
            ? Na(
                a,
                e.rows,
                e.columns,
                e.options,
                "Invalid values for mceInsertTable - rows and columns values are required to insert a table."
              )
            : pl(a, !0);
        }),
        a.addCommand("mceTableApplyCellStyle", function (n, e) {
          if (g(e)) {
            const r = Aa(a);
            r.length !== 0 &&
              K(e, function (e, n) {
                const t = `tablecell${  n.toLowerCase().replace("-", "")}`;
                a.formatter.has(t) &&
                  m(e) &&
                  E(r, function (n) {
                    rl.normal(a, n).setFormat(t, e);
                  });
              });
          }
        });
    };
    const vl = function (t, r, o) {
      const n = vi(t);
      K(
        {
          mceTableRowType () {
            return r.getTableRowType(t);
          },
          mceTableCellType () {
            return r.getTableCellType(t);
          },
          mceTableColType () {
            return Oa(t)
              .bind(function (t) {
                return ct(t, n).map(function (n) {
                  const e = Tr(o, n, t);
                  return r.getTableColType(n, e);
                });
              })
              .getOr("");
          },
        },
        function (n, e) {
          return t.addQueryValueHandler(e, n);
        }
      );
    };
    const bl = function () {
      const e = Ri(S.none());
        const t = Ri(S.none());
        const r = function (n) {
          n.set(S.none());
        };
      return {
        getRows: e.get,
        setRows (n) {
          e.set(n), r(t);
        },
        clearRows () {
          return r(e);
        },
        getColumns: t.get,
        setColumns (n) {
          t.set(n), r(e);
        },
        clearColumns () {
          return r(t);
        },
      };
    };
    const wl = hr([
      { none: ["current"] },
      { first: ["current"] },
      { middle: ["current", "target"] },
      { last: ["current"] },
    ]);
    const yl = {...wl, none (n) {
        return void 0 === n && (n = undefined), wl.none(n);
      },};
    const Cl = function (t, n) {
      return ct(t, n).bind(function (n) {
        const e = it(n);
        return j(e, function (n) {
          return Zn(t, n);
        }).map(function (n) {
          return { index: n, all: e };
        });
      });
    };
    const Sl = function (n, e, t, r) {
      return { start: b(n), soffset: b(e), finish: b(t), foffset: b(r) };
    };
    const xl = hr([
      { before: ["element"] },
      { on: ["element", "offset"] },
      { after: ["element"] },
    ]);
    const Tl = {
      before: xl.before,
      on: xl.on,
      after: xl.after,
      cata (n, e, t, r) {
        return n.fold(e, t, r);
      },
      getStart (n) {
        return n.fold(u, u, u);
      },
    };
    const Rl = hr([
      { domRange: ["rng"] },
      { relative: ["startSitu", "finishSitu"] },
      { exact: ["start", "soffset", "finish", "foffset"] },
    ]);
    const Ol = {
      domRange: Rl.domRange,
      relative: Rl.relative,
      exact: Rl.exact,
      exactFromRange (n) {
        return Rl.exact(n.start(), n.soffset(), n.finish(), n.foffset());
      },
      getWin (n) {
        let e;
          const t = n.match({
            domRange (n) {
              return Sn.fromDom(n.startContainer);
            },
            relative (n, e) {
              return Tl.getStart(n);
            },
            exact (n, e, t, r) {
              return n;
            },
          });
        return (e = t), Sn.fromDom(e.dom().ownerDocument.defaultView);
      },
      range: Sl,
    };
    const Dl = function (n, e) {
      return n.selectNodeContents(e.dom());
    };
    const Al = function (n, e, t) {
      let r;
        let o;
        const u = n.document.createRange();
      return (
        (r = u),
        e.fold(
          function (n) {
            r.setStartBefore(n.dom());
          },
          function (n, e) {
            r.setStart(n.dom(), e);
          },
          function (n) {
            r.setStartAfter(n.dom());
          }
        ),
        (o = u),
        t.fold(
          function (n) {
            o.setEndBefore(n.dom());
          },
          function (n, e) {
            o.setEnd(n.dom(), e);
          },
          function (n) {
            o.setEndAfter(n.dom());
          }
        ),
        u
      );
    };
    const Bl = function (n, e, t, r, o) {
      const u = n.document.createRange();
      return u.setStart(e.dom(), t), u.setEnd(r.dom(), o), u;
    };
    const Il = function (n) {
      return {
        left: b(n.left),
        top: b(n.top),
        right: b(n.right),
        bottom: b(n.bottom),
        width: b(n.width),
        height: b(n.height),
      };
    };
    const Pl = hr([
      { ltr: ["start", "soffset", "finish", "foffset"] },
      { rtl: ["start", "soffset", "finish", "foffset"] },
    ]);
    const kl = function (n, e, t) {
      return e(
        Sn.fromDom(t.startContainer),
        t.startOffset,
        Sn.fromDom(t.endContainer),
        t.endOffset
      );
    };
    const El = function (n, e) {
      let o;
        let t;
        let r;
        const u =
          ((o = n),
          e.match({
            domRange (n) {
              return { ltr: b(n), rtl: S.none };
            },
            relative (n, e) {
              return {
                ltr: Tn(function () {
                  return Al(o, n, e);
                }),
                rtl: Tn(function () {
                  return S.some(Al(o, e, n));
                }),
              };
            },
            exact (n, e, t, r) {
              return {
                ltr: Tn(function () {
                  return Bl(o, n, e, t, r);
                }),
                rtl: Tn(function () {
                  return S.some(Bl(o, t, r, n, e));
                }),
              };
            },
          }));
      return (r = (t = u).ltr()).collapsed
        ? t
            .rtl()
            .filter(function (n) {
              return !1 === n.collapsed;
            })
            .map(function (n) {
              return Pl.rtl(
                Sn.fromDom(n.endContainer),
                n.endOffset,
                Sn.fromDom(n.startContainer),
                n.startOffset
              );
            })
            .getOrThunk(function () {
              return kl(0, Pl.ltr, r);
            })
        : kl(0, Pl.ltr, r);
    };
    const Ml = function (u, n) {
      return El(u, n).match({
        ltr (n, e, t, r) {
          const o = u.document.createRange();
          return o.setStart(n.dom(), e), o.setEnd(t.dom(), r), o;
        },
        rtl (n, e, t, r) {
          const o = u.document.createRange();
          return o.setStart(t.dom(), r), o.setEnd(n.dom(), e), o;
        },
      });
    };
    const Nl =
      (Pl.ltr,
      Pl.rtl,
      function (n, e, t) {
        return e >= n.left && e <= n.right && t >= n.top && t <= n.bottom;
      });
    const _l = function (t, r, n, e, o) {
      const u = function (n) {
          const e = t.dom().createRange();
          return e.setStart(r.dom(), n), e.collapse(!0), e;
        };
        const i = ht(r).length;
        const c = (function (n, e, t, r, o) {
          if (o === 0) return 0;
          if (e === r) return o - 1;
          for (let u = r, i = 1; i < o; i++) {
            const c = n(i);
              const a = Math.abs(e - c.left);
            if (t <= c.bottom) {
              if (t < c.top || u < a) return i - 1;
              u = a;
            }
          }
          return 0;
        })(
          function (n) {
            return u(n).getBoundingClientRect();
          },
          n,
          e,
          o.right,
          i
        );
      return u(c);
    };
    var Wl = function (n, e, t, r) {
      return rn(e)
        ? (function (e, t, r, o) {
            const n = e.dom().createRange();
            n.selectNode(t.dom());
            const u = n.getClientRects();
            return q(u, function (n) {
              return Nl(n, r, o) ? S.some(n) : S.none();
            }).map(function (n) {
              return _l(e, t, r, o, n);
            });
          })(n, e, t, r)
        : ((u = e),
          (i = t),
          (c = r),
          (a = (o = n).dom().createRange()),
          (l = ae(u)),
          q(l, function (n) {
            return (
              a.selectNode(n.dom()),
              Nl(a.getBoundingClientRect(), i, c) ? Wl(o, n, i, c) : S.none()
            );
          }));
      let o; let u; let i; let c; let a; let l;
    };
    const jl = function (n, e) {
      return e - n.left < n.right - e;
    };
    const zl = function (n, e, t) {
      const r = n.dom().createRange();
      return r.selectNode(e.dom()), r.collapse(t), r;
    };
    const Fl = function (e, n, t) {
      const r = e.dom().createRange();
      r.selectNode(n.dom());
      const o = r.getBoundingClientRect();
        const u = jl(o, t);
      return (!0 === u ? St : xt)(n).map(function (n) {
        return zl(e, n, u);
      });
    };
    const Ll = function (n, e, t) {
      const r = e.dom().getBoundingClientRect();
        const o = jl(r, t);
      return S.some(zl(n, e, o));
    };
    const Hl = function (n, e, t, r) {
      const o = n.dom().createRange();
      o.selectNode(e.dom());
      const u = o.getBoundingClientRect();
      return (function (n, e, t, r) {
        const o = n.dom().createRange();
        o.selectNode(e.dom());
        const u = o.getBoundingClientRect();
          const i = Math.max(u.left, Math.min(u.right, t));
          const c = Math.max(u.top, Math.min(u.bottom, r));
        return Wl(n, e, i, c);
      })(
        n,
        e,
        Math.max(u.left, Math.min(u.right, t)),
        Math.max(u.top, Math.min(u.bottom, r))
      );
    };
    const ql = document.caretPositionFromPoint
      ? function (t, n, e) {
          return S.from(t.dom().caretPositionFromPoint(n, e)).bind(function (
            n
          ) {
            if (n.offsetNode === null) return S.none();
            const e = t.dom().createRange();
            return e.setStart(n.offsetNode, n.offset), e.collapse(), S.some(e);
          });
        }
      : document.caretRangeFromPoint
      ? function (n, e, t) {
          return S.from(n.dom().caretRangeFromPoint(e, t));
        }
      : function (o, u, e) {
          return Sn.fromPoint(o, u, e).bind(function (r) {
            const n = function () {
              return (
                (n = o), (t = u), (ae((e = r)).length === 0 ? Ll : Fl)(n, e, t)
              );
              let n; let e; let t;
            };
            return ae(r).length === 0 ? n() : Hl(o, r, u, e).orThunk(n);
          });
        };
    const Vl = function (n, e) {
      const t = Q(n);
      return t === "input"
        ? Tl.after(n)
        : B(["br", "img"], t)
        ? e === 0
          ? Tl.before(n)
          : Tl.after(n)
        : Tl.on(n, e);
    };
    const Ul = function (n, e) {
      const t = n.fold(Tl.before, Vl, Tl.after);
        const r = e.fold(Tl.before, Vl, Tl.after);
      return Ol.relative(t, r);
    };
    const Kl = function (n, e, t, r) {
      const o = Vl(n, e);
        const u = Vl(t, r);
      return Ol.relative(o, u);
    };
    const $l = function (n, e, t, r) {
      let o;
        let u;
        let i;
        let c;
        let a;
        const l =
          ((u = e),
          (i = t),
          (c = r),
          (a = re((o = n))
            .dom()
            .createRange()).setStart(o.dom(), u),
          a.setEnd(i.dom(), c),
          a);
        const f = Zn(n, t) && e === r;
      return l.collapsed && !f;
    };
    const Xl = function (n, e) {
      S.from(n.getSelection()).each(function (n) {
        n.removeAllRanges(), n.addRange(e);
      });
    };
    const Gl = function (n, e, t, r, o) {
      const u = Bl(n, e, t, r, o);
      Xl(n, u);
    };
    const Yl = function (s, n) {
      return El(s, n).match({
        ltr (n, e, t, r) {
          Gl(s, n, e, t, r);
        },
        rtl (n, e, t, r) {
          let o;
            let u;
            let i;
            let c;
            let a;
            const l = s.getSelection();
          if (l.setBaseAndExtent) l.setBaseAndExtent(n.dom(), e, t.dom(), r);
          else if (l.extend)
            try {
              (u = n),
                (i = e),
                (c = t),
                (a = r),
                (o = l).collapse(u.dom(), i),
                o.extend(c.dom(), a);
            } catch (f) {
              Gl(s, t, r, n, e);
            }
          else Gl(s, t, r, n, e);
        },
      });
    };
    const Jl = function (n, e, t, r, o) {
      const u = Kl(e, t, r, o);
      Yl(n, u);
    };
    const Ql = function (n, e, t) {
      const r = Ul(e, t);
      Yl(n, r);
    };
    const Zl = function (n) {
      const o = Ol.getWin(n).dom();
        const e = function (n, e, t, r) {
          return Bl(o, n, e, t, r);
        };
        const t = n.match({
          domRange (n) {
            const e = Sn.fromDom(n.startContainer);
              const t = Sn.fromDom(n.endContainer);
            return Kl(e, n.startOffset, t, n.endOffset);
          },
          relative: Ul,
          exact: Kl,
        });
      return El(o, t).match({ ltr: e, rtl: e });
    };
    const nf = function (n) {
      const e = Sn.fromDom(n.anchorNode);
        const t = Sn.fromDom(n.focusNode);
      return $l(e, n.anchorOffset, t, n.focusOffset)
        ? S.some(Sl(e, n.anchorOffset, t, n.focusOffset))
        : (function (n) {
            if (n.rangeCount > 0) {
              const e = n.getRangeAt(0);
                const t = n.getRangeAt(n.rangeCount - 1);
              return S.some(
                Sl(
                  Sn.fromDom(e.startContainer),
                  e.startOffset,
                  Sn.fromDom(t.endContainer),
                  t.endOffset
                )
              );
            }
            return S.none();
          })(n);
    };
    const ef = function (n, e) {
      let t;
        let r;
        const o = ((t = e), (r = n.document.createRange()), Dl(r, t), r);
      Xl(n, o);
    };
    const tf = function (n) {
      return (
        (e = n),
        S.from(e.getSelection())
          .filter(function (n) {
            return n.rangeCount > 0;
          })
          .bind(nf)
          .map(function (n) {
            return Ol.exact(n.start(), n.soffset(), n.finish(), n.foffset());
          })
      );
      let e;
    };
    const rf = function (n, e) {
      let t;
        let r;
        let o;
        const u = Ml(n, e);
      return (
        (r = (t = u).getClientRects()),
        (o = r.length > 0 ? r[0] : t.getBoundingClientRect()).width > 0 ||
        o.height > 0
          ? S.some(o).map(Il)
          : S.none()
      );
    };
    const of = function (n, e, t) {
      return (
        (r = n),
        (o = e),
        (u = t),
        (i = Sn.fromDom(r.document)),
        ql(i, o, u).map(function (n) {
          return Sl(
            Sn.fromDom(n.startContainer),
            n.startOffset,
            Sn.fromDom(n.endContainer),
            n.endOffset
          );
        })
      );
      let r; let o; let u; let i;
    };
    const uf = tinymce.util.Tools.resolve("tinymce.util.VK");
    const cf = function (n, e, t, r) {
      return ff(
        n,
        e,
        Cl((o = t), u).fold(
          function () {
            return yl.none(o);
          },
          function (n) {
            return n.index + 1 < n.all.length
              ? yl.middle(o, n.all[n.index + 1])
              : yl.last(o);
          }
        ),
        r
      );
      let o; let u;
    };
    const af = function (n, e, t, r) {
      return ff(
        n,
        e,
        Cl((o = t), u).fold(
          function () {
            return yl.none();
          },
          function (n) {
            return n.index - 1 >= 0
              ? yl.middle(o, n.all[n.index - 1])
              : yl.first(o);
          }
        ),
        r
      );
      let o; let u;
    };
    const lf = function (n, e) {
      const t = Ol.exact(e, 0, e, 0);
      return Zl(t);
    };
    var ff = function (o, n, e, u, t) {
      return e.fold(
        S.none,
        S.none,
        function (n, e) {
          return St(e).map(function (n) {
            return lf(0, n);
          });
        },
        function (r) {
          return ct(r, n).bind(function (n) {
            let e;
              const t = xr(r);
            return (
              o.undoManager.transact(function () {
                u.insertRowsAfter(n, t);
              }),
              (e = qe(n, "tr")),
              H(e).bind(function (n) {
                return Xe(n, "td,th").map(function (n) {
                  return lf(0, n);
                });
              })
            );
          });
        }
      );
    };
    const sf = ["table", "li", "dl"];
    const df = function (e, t, r, o) {
      if (e.keyCode === uf.TAB) {
        const u = gi(t);
          const i = function (n) {
            const e = Q(n);
            return Zn(n, u) || B(sf, e);
          };
          const n = t.selection.getRng();
        if (n.collapsed) {
          const c = Sn.fromDom(n.startContainer);
          ut(c, i).each(function (n) {
            e.preventDefault(),
              (e.shiftKey ? af : cf)(t, i, n, r, o).each(function (n) {
                t.selection.setRng(n);
              });
          });
        }
      }
    };
    const mf = function (n, e) {
      return { selection: b(n), kill: b(e) };
    };
    const gf = function (n, e, t, r) {
      return { start: b(Tl.on(n, e)), finish: b(Tl.on(t, r)) };
    };
    const pf = function (n, e) {
      const t = Ml(n, e);
      return Sl(
        Sn.fromDom(t.startContainer),
        t.startOffset,
        Sn.fromDom(t.endContainer),
        t.endOffset
      );
    };
    const hf = gf;
    const vf = function (t, n, r, e, o) {
      return Zn(r, e)
        ? S.none()
        : nr(r, e, n).bind(function (n) {
            const e = n.boxes.getOr([]);
            return e.length > 0
              ? (o(t, e, n.start, n.finish),
                S.some(mf(S.some(hf(r, 0, r, wt(r))), !0)))
              : S.none();
          });
    };
    const bf = function (n, e) {
      return { item: b(n), mode: b(e) };
    };
    const wf = function (n, e, t, r) {
      return (
        void 0 === r && (r = yf),
        n
          .property()
          .parent(e)
          .map(function (n) {
            return bf(n, r);
          })
      );
    };
    var yf = function (n, e, t, r) {
      return (
        void 0 === r && (r = Cf),
        t.sibling(n, e).map(function (n) {
          return bf(n, r);
        })
      );
    };
    var Cf = function (n, e, t, r) {
      void 0 === r && (r = Cf);
      const o = n.property().children(e);
      return t.first(o).map(function (n) {
        return bf(n, r);
      });
    };
    const Sf = [
      { current: wf, next: yf, fallback: S.none() },
      { current: yf, next: Cf, fallback: S.some(wf) },
      { current: Cf, next: Cf, fallback: S.some(yf) },
    ];
    var xf = function (e, t, r, o, n) {
      return (
        void 0 === n && (n = Sf),
        W(n, function (n) {
          return n.current === r;
        }).bind(function (n) {
          return n.current(e, t, o, n.next).orThunk(function () {
            return n.fallback.bind(function (n) {
              return xf(e, t, n, o);
            });
          });
        })
      );
    };
    const Tf = function () {
      return {
        sibling (n, e) {
          return n.query().prevSibling(e);
        },
        first (n) {
          return n.length > 0 ? S.some(n[n.length - 1]) : S.none();
        },
      };
    };
    const Rf = function () {
      return {
        sibling (n, e) {
          return n.query().nextSibling(e);
        },
        first (n) {
          return n.length > 0 ? S.some(n[0]) : S.none();
        },
      };
    };
    var Of = function (e, n, t, r, o, u) {
      return xf(e, n, r, o).bind(function (n) {
        return u(n.item())
          ? S.none()
          : t(n.item())
          ? S.some(n.item())
          : Of(e, n.item(), t, n.mode(), o, u);
      });
    };
    const Df = function (e) {
      return function (n) {
        return e.property().children(n).length === 0;
      };
    };
    const Af = function (n, e, t, r) {
      return Of(n, e, t, yf, Tf(), r);
    };
    const Bf = function (n, e, t, r) {
      return Of(n, e, t, yf, Rf(), r);
    };
    const If = Kt();
    const Pf = function (n, e) {
      return Af((t = If), n, Df(t), e);
      let t;
    };
    const kf = function (n, e) {
      return Bf((t = If), n, Df(t), e);
      let t;
    };
    const Ef = hr([
      { none: ["message"] },
      { success: [] },
      { failedUp: ["cell"] },
      { failedDown: ["cell"] },
    ]);
    const Mf = function (n) {
      return Ge(n, "tr");
    };
    const Nf = {...Ef, verify (c, n, e, t, r, a, o) {
        return Ge(t, "td,th", o)
          .bind(function (i) {
            return Ge(n, "td,th", o).map(function (u) {
              return Zn(i, u)
                ? Zn(t, i) && wt(i) === r
                  ? a(u)
                  : Ef.none("in same cell")
                : Qt(Mf, [i, u]).fold(
                    function () {
                      return (
                        (e = u),
                        (t = i),
                        (r = (n = c).getRect(e)),
                        (o = n.getRect(t)).right > r.left && o.left < r.right
                          ? Ef.success()
                          : a(u)
                      );
                      let n; let e; let t; let r; let o;
                    },
                    function (n) {
                      return a(u);
                    }
                  );
            });
          })
          .getOr(Ef.none("default"));
      },
      cata (n, e, t, r, o) {
        return n.fold(e, t, r, o);
      },};
    const _f = function (r) {
      return oe(r).bind(function (e) {
        const t = ae(e);
        return Wf(t, r).map(function (n) {
          return { parent: b(e), children: b(t), element: b(r), index: b(n) };
        });
      });
    };
    var Wf = function (n, e) {
      return j(n, y(Zn, e));
    };
    const jf = function (n) {
      return Q(n) === "br";
    };
    var zf = function (n, e, t) {
      return e(n, t).bind(function (n) {
        return rn(n) && ht(n).trim().length === 0 ? zf(n, e, t) : S.some(n);
      });
    };
    const Ff = function (e, n, t, r) {
      return le((o = n), (u = t))
        .filter(jf)
        .orThunk(function () {
          return le(o, u - 1).filter(jf);
        })
        .bind(function (n) {
          return r.traverse(n).fold(
            function () {
              return zf(n, r.gather, e).map(r.relative);
            },
            function (n) {
              return _f(n).map(function (n) {
                return Tl.on(n.parent(), n.index());
              });
            }
          );
        });
      let o; let u;
    };
    const Lf = function (n, e, t, r) {
      let o; let u; let i;
      return (jf(e)
        ? ((o = n),
          (u = e),
          (i = r)
            .traverse(u)
            .orThunk(function () {
              return zf(u, i.gather, o);
            })
            .map(i.relative))
        : Ff(n, e, t, r)
      ).map(function (n) {
        return { start: b(n), finish: b(n) };
      });
    };
    const Hf = function (n, e) {
      return {
        left: n.left,
        top: n.top + e,
        right: n.right,
        bottom: n.bottom + e,
      };
    };
    const qf = function (n, e) {
      return {
        left: n.left,
        top: n.top - e,
        right: n.right,
        bottom: n.bottom - e,
      };
    };
    const Vf = function (n, e, t) {
      return {
        left: n.left + e,
        top: n.top + t,
        right: n.right + e,
        bottom: n.bottom + t,
      };
    };
    const Uf = function (n) {
      return { left: n.left, top: n.top, right: n.right, bottom: n.bottom };
    };
    const Kf = function (n, e) {
      return S.some(n.getRect(e));
    };
    const $f = function (n, e, t) {
      return tn(e)
        ? Kf(n, e).map(Uf)
        : rn(e)
        ? ((r = n),
          (o = e),
          ((u = t) >= 0 && u < wt(o)
            ? r.getRangedRect(o, u, o, u + 1)
            : u > 0
            ? r.getRangedRect(o, u - 1, o, u)
            : S.none()
          ).map(Uf))
        : S.none();
      let r; let o; let u;
    };
    const Xf = function (n, e) {
      return tn(e)
        ? Kf(n, e).map(Uf)
        : rn(e)
        ? n.getRangedRect(e, 0, e, wt(e)).map(Uf)
        : S.none();
    };
    const Gf = hr([{ none: [] }, { retry: ["caret"] }]);
    const Yf = function (e, n, r) {
      return Ve(
        function (n, e) {
          return e(n);
        },
        Ue,
        n,
        Hc,
        t
      ).fold(b(!1), function (n) {
        return Xf(e, n).exists(function (n) {
          return (
            (t = n),
            (e = r).left < t.left ||
              Math.abs(t.right - e.left) < 1 ||
              e.left > t.right
          );
          let e; let t;
        });
      });
      let t;
    };
    const Jf = {
      point (n) {
        return n.bottom;
      },
      adjuster (n, e, t, r, o) {
        const u = Hf(o, 5);
        return Math.abs(t.bottom - r.bottom) < 1 || t.top > o.bottom
          ? Gf.retry(u)
          : t.top === o.bottom
          ? Gf.retry(Hf(o, 1))
          : Yf(n, e, o)
          ? Gf.retry(Vf(u, 5, 0))
          : Gf.none();
      },
      move: Hf,
      gather: kf,
    };
    var Qf = function (t, r, o, u, i) {
      return i === 0
        ? S.some(u)
        : ((a = t),
          (l = u.left),
          (f = r.point(u)),
          a
            .elementFromPoint(l, f)
            .filter(function (n) {
              return Q(n) === "table";
            })
            .isSome()
            ? ((e = u), (c = i - 1), Qf(t, (n = r), o, n.move(e, 5), c))
            : t.situsFromPoint(u.left, r.point(u)).bind(function (n) {
                return n.start().fold(
                  S.none,
                  function (e) {
                    return Xf(t, e)
                      .bind(function (n) {
                        return r
                          .adjuster(t, e, n, o, u)
                          .fold(S.none, function (n) {
                            return Qf(t, r, o, n, i - 1);
                          });
                      })
                      .orThunk(function () {
                        return S.some(u);
                      });
                  },
                  S.none
                );
              }));
      let n; let e; let c; let a; let l; let f;
    };
    const Zf = function (e, t, n) {
      let r;
        let o;
        let u;
        const i = e.move(n, 5);
        const c = Qf(t, e, n, i, 100).getOr(i);
      return (
        (o = c),
        (u = t),
        ((r = e).point(o) > u.getInnerHeight()
          ? S.some(r.point(o) - u.getInnerHeight())
          : r.point(o) < 0
          ? S.some(-r.point(o))
          : S.none()
        ).fold(
          function () {
            return t.situsFromPoint(c.left, e.point(c));
          },
          function (n) {
            return t.scrollBy(0, n), t.situsFromPoint(c.left, e.point(c) - n);
          }
        )
      );
    };
    const ns = {
      tryUp: y(Zf, {
        point (n) {
          return n.top;
        },
        adjuster (n, e, t, r, o) {
          const u = qf(o, 5);
          return Math.abs(t.top - r.top) < 1 || t.bottom < o.top
            ? Gf.retry(u)
            : t.bottom === o.top
            ? Gf.retry(qf(o, 1))
            : Yf(n, e, o)
            ? Gf.retry(Vf(u, 5, 0))
            : Gf.none();
        },
        move: qf,
        gather: Pf,
      }),
      tryDown: y(Zf, Jf),
      ieTryUp (n, e) {
        return n.situsFromPoint(e.left, e.top - 5);
      },
      ieTryDown (n, e) {
        return n.situsFromPoint(e.left, e.bottom + 5);
      },
      getJumpSize: b(5),
    };
    const es = function (u, i, c) {
      return u.getSelection().bind(function (o) {
        return Lf(i, o.finish(), o.foffset(), c).fold(
          function () {
            return S.some(Fi(o.finish(), o.foffset()));
          },
          function (n) {
            let e;
              const t = u.fromSitus(n);
              const r = Nf.verify(
                u,
                o.finish(),
                o.foffset(),
                t.finish(),
                t.foffset(),
                c.failure,
                i
              );
            return (
              (e = r),
              Nf.cata(
                e,
                function (n) {
                  return S.none();
                },
                function () {
                  return S.none();
                },
                function (n) {
                  return S.some(Fi(n, 0));
                },
                function (n) {
                  return S.some(Fi(n, wt(n)));
                }
              )
            );
          }
        );
      });
    };
    var ts = function (r, o, u, i, c, a) {
      return a === 0
        ? S.none()
        : us(r, o, u, i, c).bind(function (n) {
            const e = r.fromSitus(n);
              const t = Nf.verify(r, u, i, e.finish(), e.foffset(), c.failure, o);
            return Nf.cata(
              t,
              function () {
                return S.none();
              },
              function () {
                return S.some(n);
              },
              function (n) {
                return Zn(u, n) && i === 0
                  ? rs(r, u, i, qf, c)
                  : ts(r, o, n, 0, c, a - 1);
              },
              function (n) {
                return Zn(u, n) && i === wt(n)
                  ? rs(r, u, i, Hf, c)
                  : ts(r, o, n, wt(n), c, a - 1);
              }
            );
          });
    };
    var rs = function (e, n, t, r, o) {
      return $f(e, n, t).bind(function (n) {
        return os(e, o, r(n, ns.getJumpSize()));
      });
    };
    var os = function (n, e, t) {
      const r = Yn().browser;
      return r.isChrome() || r.isSafari() || r.isFirefox() || r.isEdge()
        ? e.otherRetry(n, t)
        : r.isIE()
        ? e.ieRetry(n, t)
        : S.none();
    };
    var us = function (e, n, t, r, o) {
      return $f(e, t, r).bind(function (n) {
        return os(e, o, n);
      });
    };
    const is = function (n, e) {
      return Ue(
        n,
        function (n) {
          return oe(n).exists(function (n) {
            return Zn(n, e);
          });
        },
        t
      ).isSome();
      let t;
    };
    const cs = function (u, i, c, n, a) {
      return Ge(n, "td,th", i).bind(function (o) {
        return Ge(o, "table", i).bind(function (n) {
          return is(a, n)
            ? es((e = u), (t = i), (r = c))
                .bind(function (n) {
                  return ts(e, t, n.element(), n.offset(), r, 20).map(
                    e.fromSitus
                  );
                })
                .bind(function (e) {
                  return Ge(e.finish(), "td,th", i).map(function (n) {
                    return { start: b(o), finish: b(n), range: b(e) };
                  });
                })
            : S.none();
          let e; let t; let r;
        });
      });
    };
    const as = function (n, e, t, r, o, u) {
      return Yn().browser.isIE()
        ? S.none()
        : u(r, e).orThunk(function () {
            return cs(n, e, t, r, o).map(function (n) {
              const e = n.range();
              return mf(
                S.some(hf(e.start(), e.soffset(), e.finish(), e.foffset())),
                !0
              );
            });
          });
    };
    const ls = function (n, r) {
      return Ge(n, "tr", r).bind(function (t) {
        return Ge(t, "table", r).bind(function (n) {
          const e = qe(n, "tr");
          return Zn(t, e[0])
            ? Af(
                If,
                n,
                function (n) {
                  return xt(n).isSome();
                },
                r
              ).map(function (n) {
                const e = wt(n);
                return mf(S.some(hf(n, e, n, e)), !0);
              })
            : S.none();
        });
      });
    };
    const fs = function (n, r) {
      return Ge(n, "tr", r).bind(function (t) {
        return Ge(t, "table", r).bind(function (n) {
          const e = qe(n, "tr");
          return Zn(t, e[e.length - 1])
            ? Bf(
                If,
                n,
                function (n) {
                  return St(n).isSome();
                },
                r
              ).map(function (n) {
                return mf(S.some(hf(n, 0, n, 0)), !0);
              })
            : S.none();
        });
      });
    };
    const ss = function (n, e, t, r, o, u, i) {
      return cs(n, t, r, o, u).bind(function (n) {
        return vf(e, t, n.start(), n.finish(), i);
      });
    };
    const ds = function (n, e) {
      return Ge(n, "td,th", e);
    };
  const ms = {
      traverse: ce,
      gather: kf,
      relative: Tl.before,
      otherRetry: ns.tryDown,
      ieRetry: ns.ieTryDown,
      failure: Nf.failedDown,
    };
    const gs = {
      traverse: ie,
      gather: Pf,
      relative: Tl.before,
      otherRetry: ns.tryUp,
      ieRetry: ns.ieTryUp,
      failure: Nf.failedUp,
    };
    const ps = function (e) {
      return function (n) {
        return n === e;
      };
    };
    const hs = ps(38);
    const vs = ps(40);
    const bs = function (n) {
      return n >= 37 && n <= 40;
    };
    const ws = { isBackward: ps(37), isForward: ps(39) };
    const ys = { isBackward: ps(39), isForward: ps(37) };
    const Cs = function (n) {
      return {
        left: n.left(),
        top: n.top(),
        right: n.right(),
        bottom: n.bottom(),
        width: n.width(),
        height: n.height(),
      };
    };
    const Ss = function (c) {
      return {
        elementFromPoint (n, e) {
          return Sn.fromPoint(Sn.fromDom(c.document), n, e);
        },
        getRect (n) {
          return n.dom().getBoundingClientRect();
        },
        getRangedRect (n, e, t, r) {
          const o = Ol.exact(n, e, t, r);
          return rf(c, o).map(Cs);
        },
        getSelection () {
          return tf(c).map(function (n) {
            return pf(c, n);
          });
        },
        fromSitus (n) {
          const e = Ol.relative(n.start(), n.finish());
          return pf(c, e);
        },
        situsFromPoint (n, e) {
          return of(c, n, e).map(function (n) {
            return gf(n.start(), n.soffset(), n.finish(), n.foffset());
          });
        },
        clearSelection () {
          c.getSelection().removeAllRanges();
        },
        collapseSelection (i) {
          void 0 === i && (i = !1),
            tf(c).each(function (n) {
              return n.fold(
                function (n) {
                  return n.collapse(i);
                },
                function (n, e) {
                  const t = i ? n : e;
                  Ql(c, t, t);
                },
                function (n, e, t, r) {
                  const o = i ? n : t;
                    const u = i ? e : r;
                  Jl(c, o, u, o, u);
                }
              );
            });
        },
        setSelection (n) {
          Jl(c, n.start(), n.soffset(), n.finish(), n.foffset());
        },
        setRelativeSelection (n, e) {
          Ql(c, n, e);
        },
        selectContents (n) {
          ef(c, n);
        },
        getInnerHeight () {
          return c.innerHeight;
        },
        getScrollY () {
          let n; let e; let t; let r;
          return ((n = Sn.fromDom(c.document)),
          (e = n !== undefined ? n.dom() : h.document),
          (t = e.body.scrollLeft || e.documentElement.scrollLeft),
          (r = e.body.scrollTop || e.documentElement.scrollTop),
          Dr(t, r)).top();
        },
        scrollBy (n, e) {
          let t; let r; let o;
          (t = n),
            (r = e),
            ((o = Sn.fromDom(c.document)) !== undefined
              ? o.dom()
              : h.document
            ).defaultView.scrollBy(t, r);
        },
      };
    };
    const xs = function (n, e) {
      return { rows: n, cols: e };
    };
    const Ts = function (n, e, t, r) {
      const o = (function c(o, u, e, i) {
        let t = S.none();
          const r = function () {
            t = S.none();
          };
        return {
          mousedown (n) {
            i.clear(u), (t = ds(n.target(), e));
          },
          mouseover (n) {
            t.each(function (r) {
              i.clearBeforeUpdate(u),
                ds(n.target(), e).each(function (t) {
                  nr(r, t, e).each(function (n) {
                    const e = n.boxes.getOr([]);
                    (e.length > 1 || (e.length === 1 && !Zn(r, t))) &&
                      (i.selectRange(u, e, n.start, n.finish),
                      o.selectContents(t));
                  });
                });
            });
          },
          mouseup (n) {
            t.each(r);
          },
        };
      })(Ss(n), e, t, r);
      return {
        mousedown: o.mousedown,
        mouseover: o.mouseover,
        mouseup: o.mouseup,
      };
    };
    const Rs = function (n, g, p, h) {
      const l = Ss(n);
        const f = function () {
          return h.clear(g), S.none();
        };
      return {
        keydown (n, e, t, r, o, i) {
          const u = n.raw();
            const c = u.which;
            const a = !0 === u.shiftKey;
          return er(g, h.selectedSelector).fold(
            function () {
              return vs(c) && a
                ? y(ss, l, g, p, ms, r, e, h.selectRange)
                : hs(c) && a
                ? y(ss, l, g, p, gs, r, e, h.selectRange)
                : vs(c)
                ? y(as, l, p, ms, r, e, fs)
                : hs(c)
                ? y(as, l, p, gs, r, e, ls)
                : S.none;
            },
            function (u) {
              const n = function (n) {
                return function () {
                  return q(n, function (n) {
                    return (
                      (e = n.rows),
                      (t = n.cols),
                      (r = g),
                      rr(
                        u,
                        e,
                        t,
                        (o = h).firstSelectedSelector,
                        o.lastSelectedSelector
                      ).map(function (n) {
                        return (
                          o.clearBeforeUpdate(r),
                          o.selectRange(r, n.boxes, n.start, n.finish),
                          n.boxes
                        );
                      })
                    );
                    let e; let t; let r; let o;
                  }).fold(
                    function () {
                      return tr(
                        g,
                        h.firstSelectedSelector,
                        h.lastSelectedSelector
                      ).map(function (n) {
                        const e = vs(c) || i.isForward(c) ? Tl.after : Tl.before;
                        return (
                          l.setRelativeSelection(
                            Tl.on(n.first(), 0),
                            e(n.table())
                          ),
                          h.clear(g),
                          mf(S.none(), !0)
                        );
                      });
                    },
                    function (n) {
                      return S.some(mf(S.none(), !0));
                    }
                  );
                };
              };
              return vs(c) && a
                ? n([xs(1, 0)])
                : hs(c) && a
                ? n([xs(-1, 0)])
                : i.isBackward(c) && a
                ? n([xs(0, -1), xs(-1, 0)])
                : i.isForward(c) && a
                ? n([xs(0, 1), xs(1, 0)])
                : bs(c) && !1 == a
                ? f
                : S.none;
            }
          )();
        },
        keyup (l, f, s, d, m) {
          return er(g, h.selectedSelector).fold(function () {
            let t;
              let r;
              let n;
              let e;
              let o;
              let u;
              let i;
              const c = l.raw();
              const a = c.which;
            return !1 != (!0 === c.shiftKey) && bs(a)
              ? ((t = g),
                (r = p),
                (n = f),
                (e = s),
                (o = d),
                (u = m),
                (i = h.selectRange),
                Zn(n, o) && e === u
                  ? S.none()
                  : Ge(n, "td,th", r).bind(function (e) {
                      return Ge(o, "td,th", r).bind(function (n) {
                        return vf(t, r, e, n, i);
                      });
                    }))
              : S.none();
          }, S.none);
        },
      };
    };
    const Os = function (n, r, e, o) {
      const u = Ss(n);
      return function (n, t) {
        o.clearBeforeUpdate(r),
          nr(n, t, e).each(function (n) {
            const e = n.boxes.getOr([]);
            o.selectRange(r, e, n.start, n.finish),
              u.selectContents(t),
              u.collapseSelection();
          });
      };
    };
    const Ds = function (e, n) {
      E(n, function (n) {
        !(function (n, e) {
          su(n) ? n.dom().classList.remove(e) : mu(n, e);
          pu(n);
        })(e, n);
      });
    };
    const As = {
      byClass (o) {
        let e;
          let t;
          const u =
            ((e = o.selected),
            function (n) {
              gu(n, e);
            });
          const r =
            ((t = [o.selected, o.lastSelected, o.firstSelected]),
            function (n) {
              Ds(n, t);
            });
          const i = function (n) {
            const e = qe(n, o.selectedSelector);
            E(e, r);
          };
        return {
          clearBeforeUpdate: i,
          clear: i,
          selectRange (n, e, t, r) {
            i(n), E(e, u), gu(t, o.firstSelected), gu(r, o.lastSelected);
          },
          selectedSelector: o.selectedSelector,
          firstSelectedSelector: o.firstSelectedSelector,
          lastSelectedSelector: o.lastSelectedSelector,
        };
      },
      byAttr (o, u, e) {
        const t = function (n) {
            mn(n, o.selected), mn(n, o.firstSelected), mn(n, o.lastSelected);
          };
          const i = function (n) {
            an(n, o.selected, "1");
          };
          const c = function (n) {
            r(n), e();
          };
          var r = function (n) {
            const e = qe(n, o.selectedSelector);
            E(e, t);
          };
        return {
          clearBeforeUpdate: r,
          clear: c,
          selectRange (n, e, t, r) {
            c(n),
              E(e, i),
              an(t, o.firstSelected, "1"),
              an(r, o.lastSelected, "1"),
              u(e, t, r);
          },
          selectedSelector: o.selectedSelector,
          firstSelectedSelector: o.firstSelectedSelector,
          lastSelectedSelector: o.lastSelectedSelector,
        };
      },
    };
    const Bs = function (n, e, s) {
      const d = mt.fromTable(n);
      return mc(d, e).map(function (n) {
        let t;
          let e;
          let r;
          let o;
          let u;
          let i;
          let c;
          let a;
          let l;
          const f = ic(d, s, !1);
        return {
          upOrLeftCells:
            ((t = n),
            (e = s),
            (r = f.slice(0, t[t.length - 1].row() + 1)),
            (o = ac(r, e)),
            F(o, function (n) {
              const e = n.cells().slice(0, t[t.length - 1].column() + 1);
              return k(e, function (n) {
                return n.element();
              });
            })),
          downOrRightCells:
            ((i = n),
            (c = s),
            (a = (u = f).slice(i[0].row() + i[0].rowspan() - 1, u.length)),
            (l = ac(a, c)),
            F(l, function (n) {
              const e = n
                .cells()
                .slice(i[0].column() + i[0].colspan() - 1, +n.cells().length);
              return k(e, function (n) {
                return n.element();
              });
            })),
        };
      });
    };
    const Is = function (n) {
      return !1 === hu(Sn.fromDom(n.target), "ephox-snooker-resizer-bar");
    };
  function Ps(d, m, n) {
    const g = As.byAttr(
      pr,
      function (u, i, c) {
        n.targets().each(function (o) {
          ct(i).each(function (n) {
            const e = di(d);
              const t = Et(w, Sn.fromDom(d.getDoc()), e);
              const r = Bs(n, o, t);
            Gu(d, u, i, c, r);
          });
        });
      },
      function () {
        return Yu(d);
      }
    );
    return (
      d.on("init", function (n) {
        const r = d.getWin();
          const o = gi(d);
          const e = vi(d);
          const t = Ts(r, o, e, g);
          const c = Rs(r, o, e, g);
          const u = Os(r, o, e, g);
        d.on("TableSelectorChange", function (n) {
          return u(n.start, n.finish);
        });
        let i;
          let a;
          const l = function (n, e) {
            !0 === n.raw().shiftKey &&
              (e.kill() && n.kill(),
              e.selection().each(function (n) {
                const e = Ol.relative(n.start(), n.finish());
                  const t = Ml(r, e);
                d.selection.setRng(t);
              }));
          };
          const f = function (n) {
            return n.button === 0;
          };
          const s =
            ((i = Ri(Sn.fromDom(o))),
            (a = Ri(0)),
            {
              touchEnd (n) {
                const e = Sn.fromDom(n.target);
                if (Q(e) === "td" || Q(e) === "th") {
                  const t = i.get();
                    const r = a.get();
                  Zn(t, e) &&
                    n.timeStamp - r < 300 &&
                    (n.preventDefault(), u(e, e));
                }
                i.set(e), a.set(n.timeStamp);
              },
            });
        d.on("mousedown", function (n) {
          f(n) && Is(n) && t.mousedown(lu(n));
        }),
          d.on("mouseover", function (n) {
            let e;
            ((e = n).buttons === undefined ||
              (dl.browser.isEdge() && e.buttons === 0) ||
              (1 & e.buttons) != 0) &&
              Is(n) &&
              t.mouseover(lu(n));
          }),
          d.on("mouseup", function (n) {
            f(n) && Is(n) && t.mouseup(lu(n));
          }),
          d.on("touchend", s.touchEnd),
          d.on("keyup", function (n) {
            const e = lu(n);
            if (e.raw().shiftKey && bs(e.raw().which)) {
              const t = d.selection.getRng();
                const r = Sn.fromDom(t.startContainer);
                const o = Sn.fromDom(t.endContainer);
              c.keyup(e, r, t.startOffset, o, t.endOffset).each(function (n) {
                l(e, n);
              });
            }
          }),
          d.on("keydown", function (n) {
            const e = lu(n);
            m().each(function (n) {
              return n.hideBars();
            });
            const t = d.selection.getRng();
              const r = Sn.fromDom(d.selection.getStart());
              const o = Sn.fromDom(t.startContainer);
              const u = Sn.fromDom(t.endContainer);
              const i = Ti(r).isRtl() ? ys : ws;
            c
              .keydown(e, o, t.startOffset, u, t.endOffset, i)
              .each(function (n) {
                l(e, n);
              }),
              m().each(function (n) {
                return n.showBars();
              });
          }),
          d.on("NodeChange", function () {
            const n = d.selection;
              const e = Sn.fromDom(n.getStart());
              const t = Sn.fromDom(n.getEnd());
            Qt(ct, [e, t]).fold(function () {
              return g.clear(o);
            }, w);
          });
      }),
      { clear: g.clear }
    );
  }
  const ks = function (n, t) {
      const o = Ri(S.none());
        const u = Ri([]);
        const e = function () {
          return Da(n).bind(function (e) {
            const n = ct(e);
            return n.map(function (n) {
              return Q(e) === "caption" ? xr(e) : Tr(t, n, e);
            });
          });
        };
        const r = function () {
          o.set(Tn(e)()),
            E(u.get(), function (n) {
              return n();
            });
        };
        const i = function (e, t) {
          const r = function () {
            return o.get().fold(
              function () {
                e.setDisabled(!0);
              },
              function (n) {
                e.setDisabled(t(n));
              }
            );
          };
          return (
            r(),
            u.set(u.get().concat([r])),
            function () {
              u.set(
                M(u.get(), function (n) {
                  return n !== r;
                })
              );
            }
          );
        };
      return (
        n.on("NodeChange ExecCommand TableSelectorChange", r),
        {
          onSetupTable (n) {
            return i(n, function (n) {
              return !1;
            });
          },
          onSetupCellOrRow (n) {
            return i(n, function (n) {
              return Q(n.element()) === "caption";
            });
          },
          onSetupPasteable (e) {
            return function (n) {
              return i(n, function (n) {
                return Q(n.element()) === "caption" || e().isNone();
              });
            };
          },
          onSetupMergeable (n) {
            return i(n, function (n) {
              return n.mergable().isNone();
            });
          },
          onSetupUnmergeable (n) {
            return i(n, function (n) {
              return n.unmergable().isNone();
            });
          },
          resetTargets: r,
          targets () {
            return o.get();
          },
        }
      );
    };
    const Es = function (e, n, t) {
      e.ui.registry.addMenuButton("table", {
        tooltip: "Table",
        icon: "table",
        fetch (n) {
          return n(
            "inserttable | cell row column | advtablesort | tableprops deletetable"
          );
        },
      });
      const r = function (n) {
        return function () {
          return e.execCommand(n);
        };
      };
      e.ui.registry.addButton("tableprops", {
        tooltip: "Table properties",
        onAction: r("mceTableProps"),
        icon: "table",
        onSetup: n.onSetupTable,
      }),
        e.ui.registry.addButton("tabledelete", {
          tooltip: "Delete table",
          onAction: r("mceTableDelete"),
          icon: "table-delete-table",
          onSetup: n.onSetupTable,
        }),
        e.ui.registry.addButton("tablecellprops", {
          tooltip: "Cell properties",
          onAction: r("mceTableCellProps"),
          icon: "table-cell-properties",
          onSetup: n.onSetupCellOrRow,
        }),
        e.ui.registry.addButton("tablemergecells", {
          tooltip: "Merge cells",
          onAction: r("mceTableMergeCells"),
          icon: "table-merge-cells",
          onSetup: n.onSetupMergeable,
        }),
        e.ui.registry.addButton("tablesplitcells", {
          tooltip: "Split cell",
          onAction: r("mceTableSplitCells"),
          icon: "table-split-cells",
          onSetup: n.onSetupUnmergeable,
        }),
        e.ui.registry.addButton("tableinsertrowbefore", {
          tooltip: "Insert row before",
          onAction: r("mceTableInsertRowBefore"),
          icon: "table-insert-row-above",
          onSetup: n.onSetupCellOrRow,
        }),
        e.ui.registry.addButton("tableinsertrowafter", {
          tooltip: "Insert row after",
          onAction: r("mceTableInsertRowAfter"),
          icon: "table-insert-row-after",
          onSetup: n.onSetupCellOrRow,
        }),
        e.ui.registry.addButton("tabledeleterow", {
          tooltip: "Delete row",
          onAction: r("mceTableDeleteRow"),
          icon: "table-delete-row",
          onSetup: n.onSetupCellOrRow,
        }),
        e.ui.registry.addButton("tablerowprops", {
          tooltip: "Row properties",
          onAction: r("mceTableRowProps"),
          icon: "table-row-properties",
          onSetup: n.onSetupCellOrRow,
        }),
        e.ui.registry.addButton("tableinsertcolbefore", {
          tooltip: "Insert column before",
          onAction: r("mceTableInsertColBefore"),
          icon: "table-insert-column-before",
          onSetup: n.onSetupCellOrRow,
        }),
        e.ui.registry.addButton("tableinsertcolafter", {
          tooltip: "Insert column after",
          onAction: r("mceTableInsertColAfter"),
          icon: "table-insert-column-after",
          onSetup: n.onSetupCellOrRow,
        }),
        e.ui.registry.addButton("tabledeletecol", {
          tooltip: "Delete column",
          onAction: r("mceTableDeleteCol"),
          icon: "table-delete-column",
          onSetup: n.onSetupCellOrRow,
        }),
        e.ui.registry.addButton("tablecutrow", {
          tooltip: "Cut row",
          icon: "cut-row",
          onAction: r("mceTableCutRow"),
          onSetup: n.onSetupCellOrRow,
        }),
        e.ui.registry.addButton("tablecopyrow", {
          tooltip: "Copy row",
          icon: "duplicate-row",
          onAction: r("mceTableCopyRow"),
          onSetup: n.onSetupCellOrRow,
        }),
        e.ui.registry.addButton("tablepasterowbefore", {
          tooltip: "Paste row before",
          icon: "paste-row-before",
          onAction: r("mceTablePasteRowBefore"),
          onSetup: n.onSetupPasteable(t.getRows),
        }),
        e.ui.registry.addButton("tablepasterowafter", {
          tooltip: "Paste row after",
          icon: "paste-row-after",
          onAction: r("mceTablePasteRowAfter"),
          onSetup: n.onSetupPasteable(t.getRows),
        }),
        e.ui.registry.addButton("tablecutcol", {
          tooltip: "Cut column",
          icon: "cut-column",
          onAction: r("mceTableCutCol"),
          onSetup: n.onSetupCellOrRow,
        }),
        e.ui.registry.addButton("tablecopycol", {
          tooltip: "Copy column",
          icon: "duplicate-column",
          onAction: r("mceTableCopyCol"),
          onSetup: n.onSetupCellOrRow,
        }),
        e.ui.registry.addButton("tablepastecolbefore", {
          tooltip: "Paste column before",
          icon: "paste-column-before",
          onAction: r("mceTablePasteColBefore"),
          onSetup: n.onSetupPasteable(t.getColumns),
        }),
        e.ui.registry.addButton("tablepastecolafter", {
          tooltip: "Paste column after",
          icon: "paste-column-after",
          onAction: r("mceTablePasteColAfter"),
          onSetup: n.onSetupPasteable(t.getColumns),
        }),
        e.ui.registry.addButton("tableinsertdialog", {
          tooltip: "Insert table",
          onAction: r("mceInsertTable"),
          icon: "table",
        });
    };
    const Ms = function (e) {
      const n = e.getParam(
        "table_toolbar",
        "tableprops tabledelete | tableinsertrowbefore tableinsertrowafter tabledeleterow | tableinsertcolbefore tableinsertcolafter tabledeletecol"
      );
      n.length > 0 &&
        e.ui.registry.addContextToolbar("table", {
          predicate (n) {
            return e.dom.is(n, "table") && e.getBody().contains(n);
          },
          items: n,
          scope: "node",
          position: "node",
        });
    };
    const Ns = function (r, n, e) {
      const t = function (n) {
          return function () {
            return r.execCommand(n);
          };
        };
        const o = function (n) {
          const e = n.numRows;
            const t = n.numColumns;
          r.undoManager.transact(function () {
            Ma(r, t, e, 0, 0);
          }),
            r.addVisual();
        };
        const u = {
          text: "Table properties",
          onSetup: n.onSetupTable,
          onAction: t("mceTableProps"),
        };
        const i = {
          text: "Delete table",
          icon: "table-delete-table",
          onSetup: n.onSetupTable,
          onAction: t("mceTableDelete"),
        };
      r.ui.registry.addMenuItem("tableinsertrowbefore", {
        text: "Insert row before",
        icon: "table-insert-row-above",
        onAction: t("mceTableInsertRowBefore"),
        onSetup: n.onSetupCellOrRow,
      }),
        r.ui.registry.addMenuItem("tableinsertrowafter", {
          text: "Insert row after",
          icon: "table-insert-row-after",
          onAction: t("mceTableInsertRowAfter"),
          onSetup: n.onSetupCellOrRow,
        }),
        r.ui.registry.addMenuItem("tabledeleterow", {
          text: "Delete row",
          icon: "table-delete-row",
          onAction: t("mceTableDeleteRow"),
          onSetup: n.onSetupCellOrRow,
        }),
        r.ui.registry.addMenuItem("tablerowprops", {
          text: "Row properties",
          icon: "table-row-properties",
          onAction: t("mceTableRowProps"),
          onSetup: n.onSetupCellOrRow,
        }),
        r.ui.registry.addMenuItem("tablecutrow", {
          text: "Cut row",
          icon: "cut-row",
          onAction: t("mceTableCutRow"),
          onSetup: n.onSetupCellOrRow,
        }),
        r.ui.registry.addMenuItem("tablecopyrow", {
          text: "Copy row",
          icon: "duplicate-row",
          onAction: t("mceTableCopyRow"),
          onSetup: n.onSetupCellOrRow,
        }),
        r.ui.registry.addMenuItem("tablepasterowbefore", {
          text: "Paste row before",
          icon: "paste-row-before",
          onAction: t("mceTablePasteRowBefore"),
          onSetup: n.onSetupPasteable(e.getRows),
        }),
        r.ui.registry.addMenuItem("tablepasterowafter", {
          text: "Paste row after",
          icon: "paste-row-after",
          onAction: t("mceTablePasteRowAfter"),
          onSetup: n.onSetupPasteable(e.getRows),
        });
      r.ui.registry.addMenuItem("tableinsertcolumnbefore", {
        text: "Insert column before",
        icon: "table-insert-column-before",
        onAction: t("mceTableInsertColBefore"),
        onSetup: n.onSetupCellOrRow,
      }),
        r.ui.registry.addMenuItem("tableinsertcolumnafter", {
          text: "Insert column after",
          icon: "table-insert-column-after",
          onAction: t("mceTableInsertColAfter"),
          onSetup: n.onSetupCellOrRow,
        }),
        r.ui.registry.addMenuItem("tabledeletecolumn", {
          text: "Delete column",
          icon: "table-delete-column",
          onAction: t("mceTableDeleteCol"),
          onSetup: n.onSetupCellOrRow,
        }),
        r.ui.registry.addMenuItem("tablecutcolumn", {
          text: "Cut column",
          icon: "cut-column",
          onAction: t("mceTableCutCol"),
          onSetup: n.onSetupCellOrRow,
        }),
        r.ui.registry.addMenuItem("tablecopycolumn", {
          text: "Copy column",
          icon: "duplicate-column",
          onAction: t("mceTableCopyCol"),
          onSetup: n.onSetupCellOrRow,
        }),
        r.ui.registry.addMenuItem("tablepastecolumnbefore", {
          text: "Paste column before",
          icon: "paste-column-before",
          onAction: t("mceTablePasteColBefore"),
          onSetup: n.onSetupPasteable(e.getColumns),
        }),
        r.ui.registry.addMenuItem("tablepastecolumnafter", {
          text: "Paste column after",
          icon: "paste-column-after",
          onAction: t("mceTablePasteColAfter"),
          onSetup: n.onSetupPasteable(e.getColumns),
        });
      r.ui.registry.addMenuItem("tablecellprops", {
        text: "Cell properties",
        icon: "table-cell-properties",
        onAction: t("mceTableCellProps"),
        onSetup: n.onSetupCellOrRow,
      }),
        r.ui.registry.addMenuItem("tablemergecells", {
          text: "Merge cells",
          icon: "table-merge-cells",
          onAction: t("mceTableMergeCells"),
          onSetup: n.onSetupMergeable,
        }),
        r.ui.registry.addMenuItem("tablesplitcells", {
          text: "Split cell",
          icon: "table-split-cells",
          onAction: t("mceTableSplitCells"),
          onSetup: n.onSetupUnmergeable,
        });
      !1 === r.getParam("table_grid", !0, "boolean")
        ? r.ui.registry.addMenuItem("inserttable", {
            text: "Table",
            icon: "table",
            onAction: t("mceInsertTable"),
          })
        : r.ui.registry.addNestedMenuItem("inserttable", {
            text: "Table",
            icon: "table",
            getSubmenuItems () {
              return [
                {
                  type: "fancymenuitem",
                  fancytype: "inserttable",
                  onAction: o,
                },
              ];
            },
          }),
        r.ui.registry.addMenuItem("inserttabledialog", {
          text: "Insert table",
          icon: "table",
          onAction: t("mceInsertTable"),
        }),
        r.ui.registry.addMenuItem("tableprops", u),
        r.ui.registry.addMenuItem("deletetable", i),
        r.ui.registry.addNestedMenuItem("row", {
          type: "nestedmenuitem",
          text: "Row",
          getSubmenuItems () {
            return "tableinsertrowbefore tableinsertrowafter tabledeleterow tablerowprops | tablecutrow tablecopyrow tablepasterowbefore tablepasterowafter";
          },
        }),
        r.ui.registry.addNestedMenuItem("column", {
          type: "nestedmenuitem",
          text: "Column",
          getSubmenuItems () {
            return "tableinsertcolumnbefore tableinsertcolumnafter tabledeletecolumn";
          },
        }),
        r.ui.registry.addNestedMenuItem("cell", {
          type: "nestedmenuitem",
          text: "Cell",
          getSubmenuItems () {
            return "tablecellprops tablemergecells tablesplitcells";
          },
        }),
        r.ui.registry.addContextMenu("table", {
          update () {
            return (
              n.resetTargets(),
              n.targets().fold(
                function () {
                  return "";
                },
                function (n) {
                  return Q(n.element()) === "caption"
                    ? "tableprops deletetable"
                    : "cell row column | advtablesort | tableprops deletetable";
                }
              )
            );
          },
        });
    };
    const _s = {
      tablecellbackgroundcolor: {
        selector: "td,th",
        styles: { backgroundColor: "%value" },
        remove_similar: !0,
      },
      tablecellbordercolor: {
        selector: "td,th",
        styles: { borderColor: "%value" },
        remove_similar: !0,
      },
      tablecellborderstyle: {
        selector: "td,th",
        styles: { borderStyle: "%value" },
        remove_similar: !0,
      },
      tablecellborderwidth: {
        selector: "td,th",
        styles: { borderWidth: "%value" },
        remove_similar: !0,
      },
    };
    const Ws = function (n) {
      n.formatter.register(_s);
    };
  function js(e) {
    const n = Ta(e);
      const t = ks(e, n);
      const r = zi(e);
      const o = Ps(e, r.lazyResize, t);
      const u = Ia(e, r.lazyWire);
      const i = bl();
    return (
      hl(e, u, o, n, i),
      vl(e, u, n),
      Rr(e, n, u, o),
      Ns(e, t, i),
      Es(e, t, i),
      Ms(e),
      e.on("PreInit", function () {
        e.serializer.addTempAttr(sr), e.serializer.addTempAttr(mr), Ws(e);
      }),
      ri(e) &&
        e.on("keydown", function (n) {
          df(n, e, u, r.lazyWire);
        }),
      e.on("remove", function () {
        r.destroy();
      }),
      ja(e, i, r, t)
    );
  }
  !(function Fs() {
    n.add("table", js);
  })();
})(window);
