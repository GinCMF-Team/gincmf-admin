/**
 * Copyright (c) Tiny Technologies, Inc. All rights reserved.
 * Licensed under the LGPL or a commercial license.
 * For LGPL see License.txt in the project root for license information.
 * For commercial licenses see https://www.tiny.cloud/
 *
 * Version: 5.4.1 (2020-07-08)
 */
!(function (c) {
  
  let e;
    let t;
    let n;
    let r;
    const o = tinymce.util.Tools.resolve("tinymce.PluginManager");
    let a = 0;
    const l = function (e, t, n) {
      let r;
        let o;
        const i = e.editorUpload.blobCache;
        const u = i.create(
          ((r = "mceu"),
          (o = new Date().getTime()),
          `${r  }_${  Math.floor(1e9 * Math.random())  }${++a  }${String(o)}`),
          n,
          t
        );
      i.add(u), e.insertContent(e.dom.createHTML("img", { src: u.blobUri() }));
    };
    const f = tinymce.util.Tools.resolve("tinymce.util.Promise");
    const d = tinymce.util.Tools.resolve("tinymce.Env");
    const s = tinymce.util.Tools.resolve("tinymce.util.Delay");
    const i = function (u) {
      u.ui.registry.addButton("quickimage", {
        icon: "image",
        tooltip: "Insert image",
        onAction () {
          let i;
          (i = u),
            new f(function (n) {
              const r = c.document.createElement("input");
              (r.type = "file"),
                (r.accept = "image/*"),
                (r.style.position = "fixed"),
                (r.style.left = "0"),
                (r.style.top = "0"),
                (r.style.opacity = "0.001"),
                c.document.body.appendChild(r),
                r.addEventListener("change", function (e) {
                  n(Array.prototype.slice.call(e.target.files));
                });
              var o = function (e) {
                const t = function () {
                  n([]), r.parentNode.removeChild(r);
                };
                d.os.isAndroid() && e.type !== "remove"
                  ? s.setEditorTimeout(i, t, 0)
                  : t(),
                  i.off("focusin remove", o);
              };
              i.on("focusin remove", o), r.click();
            }).then(function (e) {
              if (e.length > 0) {
                const t = e[0];
                (n = t),
                  new f(function (e) {
                    const t = new c.FileReader();
                    (t.onloadend = function () {
                      e(t.result.split(",")[1]);
                    }),
                      t.readAsDataURL(n);
                  }).then(function (e) {
                    l(u, e, t);
                  });
              }
              let n;
            });
        },
      }),
        u.ui.registry.addButton("quicktable", {
          icon: "table",
          tooltip: "Insert table",
          onAction () {
            let e; let t; let n; let r; let o; let i;
            (n = t = 2),
              (e = u).plugins.table
                ? e.plugins.table.insertTable(t, n)
                : ((o = t),
                  (i = n),
                  (r = e).undoManager.transact(function () {
                    r.insertContent(
                      (function (e, t) {
                        let n; let r; let o;
                        for (
                          o = '<table data-mce-id="mce" style="width: 100%">',
                            o += "<tbody>",
                            r = 0;
                          r < t;
                          r++
                        ) {
                          for (o += "<tr>", n = 0; n < e; n++)
                            o += "<td><br></td>";
                          o += "</tr>";
                        }
                        return (o += "</tbody>"), (o += "</table>");
                      })(o, i)
                    );
                    const e = r.dom.select("*[data-mce-id]")[0];
                    e.removeAttribute("data-mce-id");
                    const t = r.dom.select("td,th", e);
                    r.selection.setCursorLocation(t[0], 0);
                  }));
          },
        });
    };
    const u = function (e) {
      return function () {
        return e;
      };
    };
    const m = u(!1);
    const g = u(!0);
    const h = function () {
      return p;
    };
    var p =
      ((e = function (e) {
        return e.isNone();
      }),
      {
        fold (e, t) {
          return e();
        },
        is: m,
        isSome: m,
        isNone: g,
        getOr: (n = function (e) {
          return e;
        }),
        getOrThunk: (t = function (e) {
          return e();
        }),
        getOrDie (e) {
          throw new Error(e || "error: getOrDie called on none.");
        },
        getOrNull: u(null),
        getOrUndefined: u(undefined),
        or: n,
        orThunk: t,
        map: h,
        each () {},
        bind: h,
        exists: m,
        forall: g,
        filter: h,
        equals: e,
        equals_: e,
        toArray () {
          return [];
        },
        toString: u("none()"),
      });
    var y = function (n) {
      const e = u(n);
        const t = function () {
          return o;
        };
        const r = function (e) {
          return e(n);
        };
        var o = {
          fold (e, t) {
            return t(n);
          },
          is (e) {
            return n === e;
          },
          isSome: g,
          isNone: m,
          getOr: e,
          getOrThunk: e,
          getOrDie: e,
          getOrNull: e,
          getOrUndefined: e,
          or: t,
          orThunk: t,
          map (e) {
            return y(e(n));
          },
          each (e) {
            e(n);
          },
          bind: r,
          exists: r,
          forall: r,
          filter (e) {
            return e(n) ? o : p;
          },
          toArray () {
            return [n];
          },
          toString () {
            return `some(${  n  })`;
          },
          equals (e) {
            return e.is(n);
          },
          equals_ (e, t) {
            return e.fold(m, function (e) {
              return t(n, e);
            });
          },
        };
      return o;
    };
    const v = {
      some: y,
      none: h,
      from (e) {
        return e === null || e === undefined ? p : y(e);
      },
    };
    const b = function (e) {
      if (e === null || e === undefined)
        throw new Error("Node cannot be null or undefined");
      return { dom: u(e) };
    };
    const w = {
      fromHtml (e, t) {
        const n = (t || c.document).createElement("div");
        if (((n.innerHTML = e), !n.hasChildNodes() || n.childNodes.length > 1))
          throw (
            (c.console.error("HTML does not have a single root node", e),
            new Error("HTML must have a single root node"))
          );
        return b(n.childNodes[0]);
      },
      fromTag (e, t) {
        const n = (t || c.document).createElement(e);
        return b(n);
      },
      fromText (e, t) {
        const n = (t || c.document).createTextNode(e);
        return b(n);
      },
      fromDom: b,
      fromPoint (e, t, n) {
        const r = e.dom();
        return v.from(r.elementFromPoint(t, n)).map(b);
      },
    };
    const k =
      (typeof c.window !== "undefined" ? c.window : Function("return this;")(),
      function (r) {
        return function (e) {
          return (
            (n = typeof (t = e)),
            (t === null
              ? "null"
              : n == "object" &&
                (Array.prototype.isPrototypeOf(t) ||
                  (t.constructor && t.constructor.name === "Array"))
              ? "array"
              : n == "object" &&
                (String.prototype.isPrototypeOf(t) ||
                  (t.constructor && t.constructor.name === "String"))
              ? "string"
              : n) === r
          );
          let t; let n;
        };
      });
    const T = function (t) {
      return function (e) {
        return typeof e === t;
      };
    };
    const N = k("string");
    const E = k("object");
    const q = k("array");
    const M = T("boolean");
    const S =
      ((r = undefined),
      function (e) {
        return r === e;
      });
    const C = T("function");
  function O(e, t, n, r, o) {
    return e(n, r) ? v.some(n) : C(o) && o(n) ? v.none() : t(n, r, o);
  }
  let x;
    const A = function (e, t) {
      const n = e.dom();
      if (n.nodeType !== 1) return !1;
      const r = n;
      if (r.matches !== undefined) return r.matches(t);
      if (r.msMatchesSelector !== undefined) return r.msMatchesSelector(t);
      if (r.webkitMatchesSelector !== undefined)
        return r.webkitMatchesSelector(t);
      if (r.mozMatchesSelector !== undefined) return r.mozMatchesSelector(t);
      throw new Error("Browser lacks native selectors");
    };
    const D =
      (C(c.Element.prototype.attachShadow) && C(c.Node.prototype.getRootNode),
      function (e, t, n) {
        for (let r = e.dom(), o = C(n) ? n : u(!1); r.parentNode; ) {
          r = r.parentNode;
          const i = w.fromDom(r);
          if (t(i)) return v.some(i);
          if (o(i)) break;
        }
        return v.none();
      });
    const _ = function (e, t, n) {
      return D(
        e,
        function (e) {
          return A(e, t);
        },
        n
      );
    };
    const L =
      ((x = N),
      function (e, t, n) {
        return (
          (function (e, t) {
            if (!t(e))
              throw new Error("Default value doesn't match requested type.");
          })(n, x),
          (function (e, t) {
            if (q(e) || E(e))
              throw new Error(`expected a string but found: ${  e}`);
            return S(e) ? t : M(e) ? (!1 === e ? "" : t) : e;
          })(e.getParam(t, n), n)
        );
      });
    const P = function (o) {
      const e = L(o, "quickbars_insert_toolbar", "quickimage quicktable");
      e.trim().length > 0 &&
        o.ui.registry.addContextToolbar("quickblock", {
          predicate (e) {
            const t = w.fromDom(e);
              const n = o.schema.getTextBlockElements();
              const r = function (e) {
                return e.dom() === o.getBody();
              };
            return O(
              function (e, t) {
                return A(e, t);
              },
              _,
              t,
              "table",
              r
            ).fold(
              function () {
                return O(
                  function (e, t) {
                    return t(e);
                  },
                  D,
                  t,
                  function (e) {
                    return (
                      e.dom().nodeName.toLowerCase() in n &&
                      o.dom.isEmpty(e.dom())
                    );
                  },
                  r
                ).isSome();
              },
              function () {
                return !1;
              }
            );
          },
          items: e,
          position: "line",
          scope: "editor",
        });
    };
    const U = function (n) {
      const r = function (e) {
          return (
            e.nodeName === "IMG" ||
            (e.nodeName === "FIGURE" && /image/i.test(e.className))
          );
        };
        const e = L(n, "quickbars_image_toolbar", "alignleft aligncenter alignright");
      e.trim().length > 0 &&
        n.ui.registry.addContextToolbar("imageselection", {
          predicate: r,
          items: e,
          position: "node",
        });
      const t = L(
        n,
        "quickbars_selection_toolbar",
        "bold italic | quicklink h2 h3 blockquote"
      );
      t.trim().length > 0 &&
        n.ui.registry.addContextToolbar("textselection", {
          predicate (e) {
            return (
              !r(e) &&
              !n.selection.isCollapsed() &&
              ((t = e), n.dom.getContentEditableParent(t) !== "false")
            );
            let t;
          },
          items: t,
          position: "selection",
          scope: "editor",
        });
    };
  !(function B() {
    o.add("quickbars", function (e) {
      i(e), P(e), U(e);
    });
  })();
})(window);
