/**
 * Copyright (c) Tiny Technologies, Inc. All rights reserved.
 * Licensed under the LGPL or a commercial license.
 * For LGPL see License.txt in the project root for license information.
 * For commercial licenses see https://www.tiny.cloud/
 *
 * Version: 5.4.1 (2020-07-08)
 */
!(function () {
  
  const t = tinymce.util.Tools.resolve("tinymce.PluginManager");
    const r = function (t, o, e) {
      let n; let i;
      t.dom.toggleClass(t.getBody(), "mce-visualblocks"),
        e.set(!e.get()),
        (n = t),
        (i = e.get()),
        n.fire("VisualBlocks", { state: i });
    };
    const f = function (e, n) {
      return function (o) {
        o.setActive(n.get());
        const t = function (t) {
          return o.setActive(t.state);
        };
        return (
          e.on("VisualBlocks", t),
          function () {
            return e.off("VisualBlocks", t);
          }
        );
      };
    };
  !(function o() {
    t.add("visualblocks", function (t, o) {
      let e;
        let n;
        let i;
        let s;
        let c;
        let u;
        let l;
        const a =
          ((e = !1),
          {
            get () {
              return e;
            },
            set (t) {
              e = t;
            },
          });
      (i = a),
        (n = t).addCommand("mceVisualBlocks", function () {
          r(n, 0, i);
        }),
        (c = a),
        (s = t).ui.registry.addToggleButton("visualblocks", {
          icon: "visualblocks",
          tooltip: "Show blocks",
          onAction () {
            return s.execCommand("mceVisualBlocks");
          },
          onSetup: f(s, c),
        }),
        s.ui.registry.addToggleMenuItem("visualblocks", {
          text: "Show blocks",
          icon: "visualblocks",
          onAction () {
            return s.execCommand("mceVisualBlocks");
          },
          onSetup: f(s, c),
        }),
        (l = a),
        (u = t).on("PreviewFormats AfterPreviewFormats", function (t) {
          l.get() &&
            u.dom.toggleClass(
              u.getBody(),
              "mce-visualblocks",
              t.type === "afterpreviewformats"
            );
        }),
        u.on("init", function () {
          u.getParam("visualblocks_default_state", !1, "boolean") && r(u, 0, l);
        });
    });
  })();
})();
