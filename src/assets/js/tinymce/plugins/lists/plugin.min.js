/**
 * Copyright (c) Tiny Technologies, Inc. All rights reserved.
 * Licensed under the LGPL or a commercial license.
 * For LGPL see License.txt in the project root for license information.
 * For commercial licenses see https://www.tiny.cloud/
 *
 * Version: 5.4.1 (2020-07-08)
 */
!(function (a) {
  
  let e;
    let n;
    let t;
    let r;
    let o;
    let i;
    let u;
    const c = tinymce.util.Tools.resolve("tinymce.PluginManager");
    const s = function () {};
    const y = function (e) {
      return function () {
        return e;
      };
    };
    const f = function (n) {
      return function (e) {
        return !n(e);
      };
    };
    const d = y(!1);
    const l = y(!0);
    const m = function () {
      return p;
    };
    var p =
      ((e = function (e) {
        return e.isNone();
      }),
      {
        fold (e, n) {
          return e();
        },
        is: d,
        isSome: d,
        isNone: l,
        getOr: (t = function (e) {
          return e;
        }),
        getOrThunk: (n = function (e) {
          return e();
        }),
        getOrDie (e) {
          throw new Error(e || "error: getOrDie called on none.");
        },
        getOrNull: y(null),
        getOrUndefined: y(undefined),
        or: t,
        orThunk: n,
        map: m,
        each: s,
        bind: m,
        exists: d,
        forall: l,
        filter: m,
        equals: e,
        equals_: e,
        toArray () {
          return [];
        },
        toString: y("none()"),
      });
    var g = function (t) {
      const e = y(t);
        const n = function () {
          return o;
        };
        const r = function (e) {
          return e(t);
        };
        var o = {
          fold (e, n) {
            return n(t);
          },
          is (e) {
            return t === e;
          },
          isSome: l,
          isNone: d,
          getOr: e,
          getOrThunk: e,
          getOrDie: e,
          getOrNull: e,
          getOrUndefined: e,
          or: n,
          orThunk: n,
          map (e) {
            return g(e(t));
          },
          each (e) {
            e(t);
          },
          bind: r,
          exists: r,
          forall: r,
          filter (e) {
            return e(t) ? o : p;
          },
          toArray () {
            return [t];
          },
          toString () {
            return `some(${  t  })`;
          },
          equals (e) {
            return e.is(t);
          },
          equals_ (e, n) {
            return e.fold(d, function (e) {
              return n(t, e);
            });
          },
        };
      return o;
    };
    const v = {
      some: g,
      none: m,
      from (e) {
        return e === null || e === undefined ? p : g(e);
      },
    };
    const h = function (r) {
      return function (e) {
        return (
          (t = typeof (n = e)),
          (n === null
            ? "null"
            : t == "object" &&
              (Array.prototype.isPrototypeOf(n) ||
                (n.constructor && n.constructor.name === "Array"))
            ? "array"
            : t == "object" &&
              (String.prototype.isPrototypeOf(n) ||
                (n.constructor && n.constructor.name === "String"))
            ? "string"
            : t) === r
        );
        let n; let t;
      };
    };
    const S = function (n) {
      return function (e) {
        return typeof e === n;
      };
    };
    const b = h("string");
    const C = h("array");
    const N = S("boolean");
    const O = S("function");
    const L = S("number");
    const w = Array.prototype.slice;
    const T = Array.prototype.push;
    const D = function (e, n) {
      for (var t = e.length, r = new Array(t), o = 0; o < t; o++) {
        const i = e[o];
        r[o] = n(i, o);
      }
      return r;
    };
    const k = function (e, n) {
      for (let t = 0, r = e.length; t < r; t++) {
        n(e[t], t);
      }
    };
    const x = function (e, n) {
      for (var t = [], r = 0, o = e.length; r < o; r++) {
        const i = e[r];
        n(i, r) && t.push(i);
      }
      return t;
    };
    const A = function (e, n, t) {
      return (
        k(e, function (e) {
          t = n(t, e);
        }),
        t
      );
    };
    const E = function (e, n, t) {
      for (let r = 0, o = e.length; r < o; r++) {
        const i = e[r];
        if (n(i, r)) return v.some(i);
        if (t(i, r)) break;
      }
      return v.none();
    };
    const B = function (e, n) {
      return E(e, n, d);
    };
    const P = function (e, n) {
      return (function (e) {
        for (var n = [], t = 0, r = e.length; t < r; ++t) {
          if (!C(e[t]))
            throw new Error(
              `Arr.flatten item ${  t  } was not an array, input: ${  e}`
            );
          T.apply(n, e[t]);
        }
        return n;
      })(D(e, n));
    };
    const R = function (e) {
      const n = w.call(e, 0);
      return n.reverse(), n;
    };
    const I = function (e) {
      return e.length === 0 ? v.none() : v.some(e[0]);
    };
    const M = function (e) {
      return e.length === 0 ? v.none() : v.some(e[e.length - 1]);
    };
    var U = function () {
      return (U =
        Object.assign ||
        function (e) {
          for (var n, t = 1, r = arguments.length; t < r; t++)
            for (const o in (n = arguments[t]))
              Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o]);
          return e;
        }).apply(this, arguments);
    };
    const _ = function (e, n) {
      const t = (function (e, n) {
        for (let t = 0; t < e.length; t++) {
          const r = e[t];
          if (r.test(n)) return r;
        }
        return undefined;
      })(e, n);
      if (!t) return { major: 0, minor: 0 };
      const r = function (e) {
        return Number(n.replace(t, `$${  e}`));
      };
      return $(r(1), r(2));
    };
    const F = function () {
      return $(0, 0);
    };
    var $ = function (e, n) {
      return { major: e, minor: n };
    };
    const H = {
      nu: $,
      detect (e, n) {
        const t = String(n).toLowerCase();
        return e.length === 0 ? F() : _(e, t);
      },
      unknown: F,
    };
    const j = "Edge";
    const q = "Chrome";
    const K = "Opera";
    const V = "Firefox";
    const W = "Safari";
    const Q = function (e) {
      const n = e.current;
        const t = e.version;
        const r = function (e) {
          return function () {
            return n === e;
          };
        };
      return {
        current: n,
        version: t,
        isEdge: r(j),
        isChrome: r(q),
        isIE: r("IE"),
        isOpera: r(K),
        isFirefox: r(V),
        isSafari: r(W),
      };
    };
    const X = {
      unknown () {
        return Q({ current: undefined, version: H.unknown() });
      },
      nu: Q,
      edge: y(j),
      chrome: y(q),
      ie: y("IE"),
      opera: y(K),
      firefox: y(V),
      safari: y(W),
    };
    const z = "Windows";
    const Y = "Android";
    const G = "Solaris";
    const J = "FreeBSD";
    const Z = "ChromeOS";
    const ee = function (e) {
      const n = e.current;
        const t = e.version;
        const r = function (e) {
          return function () {
            return n === e;
          };
        };
      return {
        current: n,
        version: t,
        isWindows: r(z),
        isiOS: r("iOS"),
        isAndroid: r(Y),
        isOSX: r("OSX"),
        isLinux: r("Linux"),
        isSolaris: r(G),
        isFreeBSD: r(J),
        isChromeOS: r(Z),
      };
    };
    const ne = {
      unknown () {
        return ee({ current: undefined, version: H.unknown() });
      },
      nu: ee,
      windows: y(z),
      ios: y("iOS"),
      android: y(Y),
      linux: y("Linux"),
      osx: y("OSX"),
      solaris: y(G),
      freebsd: y(J),
      chromeos: y(Z),
    };
    const te = function (e, n) {
      const t = String(n).toLowerCase();
      return B(e, function (e) {
        return e.search(t);
      });
    };
    const re = function (e, t) {
      return te(e, t).map(function (e) {
        const n = H.detect(e.versionRegexes, t);
        return { current: e.name, version: n };
      });
    };
    const oe = function (e, t) {
      return te(e, t).map(function (e) {
        const n = H.detect(e.versionRegexes, t);
        return { current: e.name, version: n };
      });
    };
    const ie = function (e, n) {
      return e.indexOf(n) !== -1;
    };
    const ue = /.*?version\/\ ?([0-9]+)\.([0-9]+).*/;
    const ae = function (n) {
      return function (e) {
        return ie(e, n);
      };
    };
    const se = [
      {
        name: "Edge",
        versionRegexes: [/.*?edge\/ ?([0-9]+)\.([0-9]+)$/],
        search (e) {
          return (
            ie(e, "edge/") &&
            ie(e, "chrome") &&
            ie(e, "safari") &&
            ie(e, "applewebkit")
          );
        },
      },
      {
        name: "Chrome",
        versionRegexes: [/.*?chrome\/([0-9]+)\.([0-9]+).*/, ue],
        search (e) {
          return ie(e, "chrome") && !ie(e, "chromeframe");
        },
      },
      {
        name: "IE",
        versionRegexes: [
          /.*?msie\ ?([0-9]+)\.([0-9]+).*/,
          /.*?rv:([0-9]+)\.([0-9]+).*/,
        ],
        search (e) {
          return ie(e, "msie") || ie(e, "trident");
        },
      },
      {
        name: "Opera",
        versionRegexes: [ue, /.*?opera\/([0-9]+)\.([0-9]+).*/],
        search: ae("opera"),
      },
      {
        name: "Firefox",
        versionRegexes: [/.*?firefox\/\ ?([0-9]+)\.([0-9]+).*/],
        search: ae("firefox"),
      },
      {
        name: "Safari",
        versionRegexes: [ue, /.*?cpu os ([0-9]+)_([0-9]+).*/],
        search (e) {
          return (ie(e, "safari") || ie(e, "mobile/")) && ie(e, "applewebkit");
        },
      },
    ];
    const ce = [
      {
        name: "Windows",
        search: ae("win"),
        versionRegexes: [/.*?windows\ nt\ ?([0-9]+)\.([0-9]+).*/],
      },
      {
        name: "iOS",
        search (e) {
          return ie(e, "iphone") || ie(e, "ipad");
        },
        versionRegexes: [
          /.*?version\/\ ?([0-9]+)\.([0-9]+).*/,
          /.*cpu os ([0-9]+)_([0-9]+).*/,
          /.*cpu iphone os ([0-9]+)_([0-9]+).*/,
        ],
      },
      {
        name: "Android",
        search: ae("android"),
        versionRegexes: [/.*?android\ ?([0-9]+)\.([0-9]+).*/],
      },
      {
        name: "OSX",
        search: ae("mac os x"),
        versionRegexes: [/.*?mac\ os\ x\ ?([0-9]+)_([0-9]+).*/],
      },
      { name: "Linux", search: ae("linux"), versionRegexes: [] },
      { name: "Solaris", search: ae("sunos"), versionRegexes: [] },
      { name: "FreeBSD", search: ae("freebsd"), versionRegexes: [] },
      {
        name: "ChromeOS",
        search: ae("cros"),
        versionRegexes: [/.*?chrome\/([0-9]+)\.([0-9]+).*/],
      },
    ];
    const fe = { browsers: y(se), oses: y(ce) };
    const de = function (e, n) {
      let t;
        let r;
        let o;
        let i;
        let u;
        let a;
        let s;
        let c;
        let f;
        let d;
        let l;
        let m;
        const p = fe.browsers();
        const g = fe.oses();
        const v = re(p, e).fold(X.unknown, X.nu);
        const h = oe(g, e).fold(ne.unknown, ne.nu);
      return {
        browser: v,
        os: h,
        deviceType:
          ((r = v),
          (o = e),
          (i = n),
          (u = (t = h).isiOS() && !0 === /ipad/i.test(o)),
          (a = t.isiOS() && !u),
          (s = t.isiOS() || t.isAndroid()),
          (c = s || i("(pointer:coarse)")),
          (f = u || (!a && s && i("(min-device-width:768px)"))),
          (d = a || (s && !f)),
          (l = r.isSafari() && t.isiOS() && !1 === /safari/i.test(o)),
          (m = !d && !f && !l),
          {
            isiPad: y(u),
            isiPhone: y(a),
            isTablet: y(f),
            isPhone: y(d),
            isTouch: y(c),
            isAndroid: t.isAndroid,
            isiOS: t.isiOS,
            isWebView: y(l),
            isDesktop: y(m),
          }),
      };
    };
    const le = function (e) {
      return a.window.matchMedia(e).matches;
    };
    const me =
      ((i = !(r = function () {
        return de(a.navigator.userAgent, le);
      })),
      function () {
        for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];
        return i || ((i = !0), (o = r.apply(null, e))), o;
      });
    const pe = function (e) {
      if (e === null || e === undefined)
        throw new Error("Node cannot be null or undefined");
      return { dom: y(e) };
    };
    const ge = {
      fromHtml (e, n) {
        const t = (n || a.document).createElement("div");
        if (((t.innerHTML = e), !t.hasChildNodes() || t.childNodes.length > 1))
          throw (
            (a.console.error("HTML does not have a single root node", e),
            new Error("HTML must have a single root node"))
          );
        return pe(t.childNodes[0]);
      },
      fromTag (e, n) {
        const t = (n || a.document).createElement(e);
        return pe(t);
      },
      fromText (e, n) {
        const t = (n || a.document).createTextNode(e);
        return pe(t);
      },
      fromDom: pe,
      fromPoint (e, n, t) {
        const r = e.dom();
        return v.from(r.elementFromPoint(n, t)).map(pe);
      },
    };
    const ve = function (e, n) {
      return e.dom() === n.dom();
    };
    const he = function (e, n) {
      return (
        (t = e.dom()),
        (r = n.dom()),
        (o = t),
        (i = r),
        (u = a.Node.DOCUMENT_POSITION_CONTAINED_BY),
        (o.compareDocumentPosition(i) & u) != 0
      );
      let t; let r; let o; let i; let u;
    };
    const ye = function (e, n) {
      return me().browser.isIE()
        ? he(e, n)
        : ((t = n), (r = e.dom()), (o = t.dom()), r !== o && r.contains(o));
      let t; let r; let o;
    };
    const Se = function (e, n) {
      const t = e.dom();
      if (t.nodeType !== 1) return !1;
      const r = t;
      if (r.matches !== undefined) return r.matches(n);
      if (r.msMatchesSelector !== undefined) return r.msMatchesSelector(n);
      if (r.webkitMatchesSelector !== undefined)
        return r.webkitMatchesSelector(n);
      if (r.mozMatchesSelector !== undefined) return r.mozMatchesSelector(n);
      throw new Error("Browser lacks native selectors");
    };
    const be = tinymce.util.Tools.resolve("tinymce.dom.RangeUtils");
    const Ce = tinymce.util.Tools.resolve("tinymce.dom.TreeWalker");
    const Ne = tinymce.util.Tools.resolve("tinymce.util.VK");
    const Oe = function (e, n, t) {
      return e.isSome() && n.isSome()
        ? v.some(t(e.getOrDie(), n.getOrDie()))
        : v.none();
    };
    const Le =
      (typeof a.window !== "undefined" ? a.window : Function("return this;")(),
      function (e) {
        return e.dom().nodeName.toLowerCase();
      });
    const we =
      ((u = 1),
      function (e) {
        return e.dom().nodeType === u;
      });
    const Te = function (e) {
      return v.from(e.dom().parentNode).map(ge.fromDom);
    };
    const De = function (e) {
      return D(e.dom().childNodes, ge.fromDom);
    };
    const ke = function (e, n) {
      const t = e.dom().childNodes;
      return v.from(t[n]).map(ge.fromDom);
    };
    const xe = function (e) {
      return ke(e, 0);
    };
    const Ae = function (e) {
      return ke(e, e.dom().childNodes.length - 1);
    };
    const Ee = function (n, t) {
      Te(n).each(function (e) {
        e.dom().insertBefore(t.dom(), n.dom());
      });
    };
    const Be = function (e, n) {
      e.dom().appendChild(n.dom());
    };
    const Pe = function (n, e) {
      k(e, function (e) {
        Be(n, e);
      });
    };
    const Re = function (e) {
      const n = e.dom();
      n.parentNode !== null && n.parentNode.removeChild(n);
    };
    const Ie = function (e, n, t) {
      return e.fire("ListMutation", { action: n, element: t });
    };
    const Me = tinymce.util.Tools.resolve("tinymce.dom.DomQuery");
    const Ue = tinymce.util.Tools.resolve("tinymce.util.Tools");
    const _e = function (n) {
      return function (e) {
        return e && e.nodeName.toLowerCase() === n;
      };
    };
    const Fe = function (n) {
      return function (e) {
        return e && n.test(e.nodeName);
      };
    };
    const $e = function (e) {
      return e && e.nodeType === 3;
    };
    const He = Fe(/^(OL|UL|DL)$/);
    const je = Fe(/^(OL|UL)$/);
    const qe = _e("ol");
    const Ke = Fe(/^(LI|DT|DD)$/);
    const Ve = Fe(/^(DT|DD)$/);
    const We = Fe(/^(TH|TD)$/);
    const Qe = _e("br");
    const Xe = function (e, n) {
      return n && !!e.schema.getTextBlockElements()[n.nodeName];
    };
    const ze = function (e, n) {
      return e && e.nodeName in n;
    };
    const Ye = function (e, n, t) {
      const r = e.isEmpty(n);
      return (
        !(t && e.select("span[data-mce-type=bookmark]", n).length > 0) && r
      );
    };
    const Ge = function (e, n) {
      return e.isChildOf(n, e.getRoot());
    };
    const Je = function (e, n) {
      const t = n || e.selection.getStart(!0);
      return e.dom.getParent(t, "OL,UL,DL", nn(e, t));
    };
    const Ze = function (e) {
      let n;
        let t;
        let r;
        const o = Je(e);
        const i = e.selection.getSelectedBlocks();
      return (
        (r = i),
        (t = o) && r.length === 1 && r[0] === t
          ? ((n = o),
            Ue.grep(n.querySelectorAll("ol,ul,dl"), function (e) {
              return He(e);
            }))
          : Ue.grep(i, function (e) {
              return He(e) && o !== e;
            })
      );
    };
    const en = function (e) {
      let t;
        let n;
        let r;
        const o = e.selection.getSelectedBlocks();
      return Ue.grep(
        ((t = e),
        (n = o),
        (r = Ue.map(n, function (e) {
          const n = t.dom.getParent(e, "li,dd,dt", nn(t, e));
          return n || e;
        })),
        Me.unique(r)),
        function (e) {
          return Ke(e);
        }
      );
    };
    var nn = function (e, n) {
      const t = e.dom.getParents(n, "TD,TH");
      return t.length > 0 ? t[0] : e.getBody();
    };
    const tn = function (e, n) {
      const t = e.dom.getParents(n, "ol,ul", nn(e, n));
      return M(t);
    };
    const rn = function (e) {
      let n;
        let t;
        let r;
        const o =
          ((t = tn((n = e), n.selection.getStart())),
          (r = x(n.selection.getSelectedBlocks(), je)),
          t.toArray().concat(r));
      return on(e, o);
    };
    var on = function (n, e) {
      const t = D(e, function (e) {
        return tn(n, e).getOr(e);
      });
      return Me.unique(t);
    };
    const un = function (e, n) {
      let t;
        let r;
        let o;
        let i;
        const u = e.dom;
        const a = e.schema.getBlockElements();
        const s = u.createFragment();
        const c =
          !1 === (t = e.getParam("forced_root_block", "p"))
            ? ""
            : !0 === t
            ? "p"
            : t;
      if (
        (c &&
          ((o = u.create(c)).tagName === c.toUpperCase() &&
            u.setAttribs(o, e.getParam("forced_root_block_attrs", {})),
          ze(n.firstChild, a) || s.appendChild(o)),
        n)
      )
        for (; (r = n.firstChild); ) {
          const f = r.nodeName;
          i ||
            (f === "SPAN" && r.getAttribute("data-mce-type") === "bookmark") ||
            (i = !0),
            ze(r, a)
              ? (s.appendChild(r), (o = null))
              : c
              ? (o || ((o = u.create(c)), s.appendChild(o)), o.appendChild(r))
              : s.appendChild(r);
        }
      return (
        c
          ? i || o.appendChild(u.create("br", { "data-mce-bogus": "1" }))
          : s.appendChild(u.create("br")),
        s
      );
    };
    const an = Object.keys;
    const sn = function (e, n) {
      for (let t = an(e), r = 0, o = t.length; r < o; r++) {
        const i = t[r];
        n(e[i], i);
      }
    };
    const cn = function (e, n) {
      let t;
        let r;
        let o;
        let i;
        const u = {};
      return (
        (t = n),
        (i = u),
        (r = function (e, n) {
          i[n] = e;
        }),
        (o = s),
        sn(e, function (e, n) {
          (t(e, n) ? r : o)(e, n);
        }),
        u
      );
    };
    const fn = function (e, n) {
      const t = e.dom();
      sn(n, function (e, n) {
        !(function (e, n, t) {
          if (!(b(t) || N(t) || L(t)))
            throw (
              (a.console.error(
                "Invalid call to Attr.set. Key ",
                n,
                ":: Value ",
                t,
                ":: Element ",
                e
              ),
              new Error("Attribute value was not simple"))
            );
          e.setAttribute(n, `${t  }`);
        })(t, n, e);
      });
    };
    const dn = function (e) {
      return A(
        e.dom().attributes,
        function (e, n) {
          return (e[n.name] = n.value), e;
        },
        {}
      );
    };
    const ln =
      (O(a.Element.prototype.attachShadow) && O(a.Node.prototype.getRootNode),
      function (e, n, t) {
        if (!b(t))
          throw (
            (a.console.error(
              "Invalid call to CSS.set. Property ",
              n,
              ":: Value ",
              t,
              ":: Element ",
              e
            ),
            new Error(`CSS value must be a string: ${  t}`))
          );
        let r;
        (r = e).style !== undefined &&
          O(r.style.getPropertyValue) &&
          e.style.setProperty(n, t);
      });
    const mn = function (e) {
      return (n = e), (t = !0), ge.fromDom(n.dom().cloneNode(t));
      let n; let t;
    };
    const pn = function (e, n) {
      let t;
        let r;
        let o;
        let i;
        const u = ((t = e), (r = n), (o = ge.fromTag(r)), (i = dn(t)), fn(o, i), o);
      Ee(e, u);
      const a = De(e);
      return Pe(u, a), Re(e), u;
    };
    const gn = function (e, n) {
      Be(e.item, n.list);
    };
    const vn = function (f, e, d) {
      const n = e.slice(0, d.depth);
      return (
        M(n).each(function (e) {
          let n;
            let t;
            let r;
            let o;
            let i;
            let u;
            let a;
            let s;
            const c =
              ((n = f),
              (t = d.itemAttributes),
              (r = d.content),
              (o = ge.fromTag("li", n)),
              fn(o, t),
              Pe(o, r),
              o);
          (u = c),
            Be((i = e).list, u),
            (i.item = u),
            (s = d),
            Le((a = e).list) !== s.listType &&
              (a.list = pn(a.list, s.listType)),
            fn(a.list, s.listAttributes);
        }),
        n
      );
    };
    const hn = function (e, n, t) {
      let r;
        const o = (function (e, n, t) {
          for (var r, o, i, u = [], a = 0; a < t; a++)
            u.push(
              ((r = e),
              (o = n.listType),
              (i = { list: ge.fromTag(o, r), item: ge.fromTag("li", r) }),
              Be(i.list, i.item),
              i)
            );
          return u;
        })(e, t, t.depth - n.length);
      return (
        (function (e) {
          for (let n = 1; n < e.length; n++) gn(e[n - 1], e[n]);
        })(o),
        (function (e, n) {
          for (let t = 0; t < e.length - 1; t++)
            (r = e[t].item),
              (o = "list-style-type"),
              (i = "none"),
              (u = r.dom()),
              ln(u, o, i);
          let r; let o; let i; let u;
          M(e).each(function (e) {
            fn(e.list, n.listAttributes),
              fn(e.item, n.itemAttributes),
              Pe(e.item, n.content);
          });
        })(o, t),
        (r = o),
        Oe(M(n), I(r), gn),
        n.concat(o)
      );
    };
    const yn = function (e) {
      return Se(e, "OL,UL");
    };
    const Sn = function (e) {
      return xe(e).map(yn).getOr(!1);
    };
    const bn = function (e) {
      return e.depth > 0;
    };
    const Cn = function (e) {
      return e.isSelected;
    };
    const Nn = function (e) {
      const n = De(e);
        const t = Ae(e).map(yn).getOr(!1) ? n.slice(0, -1) : n;
      return D(t, mn);
    };
    const On = function (a) {
      return (
        k(a, function (r, e) {
          let n; let t; let o; let i; let u;
          (o = (n = a)[(t = e)].depth),
            (i = function (e) {
              return e.depth === o && !e.dirty;
            }),
            (u = function (e) {
              return e.depth < o;
            }),
            E(R(n.slice(0, t)), i, u)
              .orThunk(function () {
                return E(n.slice(t + 1), i, u);
              })
              .fold(
                function () {
                  let e;
                  r.dirty &&
                    ((e = r).listAttributes = cn(e.listAttributes, function (
                      e,
                      n
                    ) {
                      return n !== "start";
                    }));
                },
                function (e) {
                  return (
                    (t = e),
                    ((n = r).listType = t.listType),
                    void (n.listAttributes = { ...t.listAttributes})
                  );
                  let n; let t;
                }
              );
        }),
        a
      );
    };
    const Ln = function (i, u, a, s) {
      return xe(s)
        .filter(yn)
        .fold(
          function () {
            u.each(function (e) {
              ve(e.start, s) && a.set(!0);
            });
            let n;
              let t;
              let r;
              const e =
                ((n = s),
                (t = i),
                (r = a.get()),
                Te(n)
                  .filter(we)
                  .map(function (e) {
                    return {
                      depth: t,
                      dirty: !1,
                      isSelected: r,
                      content: Nn(n),
                      itemAttributes: dn(n),
                      listAttributes: dn(e),
                      listType: Le(e),
                    };
                  }));
            u.each(function (e) {
              ve(e.end, s) && a.set(!1);
            });
            const o = Ae(s)
              .filter(yn)
              .map(function (e) {
                return wn(i, u, a, e);
              })
              .getOr([]);
            return e.toArray().concat(o);
          },
          function (e) {
            return wn(i, u, a, e);
          }
        );
    };
    var wn = function (n, t, r, e) {
      return P(De(e), function (e) {
        return (yn(e) ? wn : Ln)(n + 1, t, r, e);
      });
    };
    const Tn = function (e, n) {
      let t;
        const r =
          ((t = !1),
          {
            get () {
              return t;
            },
            set (e) {
              t = e;
            },
          });
      return D(e, function (e) {
        return { sourceList: e, entries: wn(0, n, r, e) };
      });
    };
    const Dn = function (i, e) {
      const n = On(e);
      return D(n, function (e) {
        let n;
          let t;
          let r;
          const o =
            ((n = e.content),
            (r = (t || a.document).createDocumentFragment()),
            k(n, function (e) {
              r.appendChild(e.dom());
            }),
            ge.fromDom(r));
        return ge.fromDom(un(i, o.dom()));
      });
    };
    const kn = function (e, n) {
      let t;
        let r;
        const o = On(n);
      return (
        (t = e.contentDocument),
        (r = A(
          o,
          function (e, n) {
            return (n.depth > e.length ? hn : vn)(t, e, n);
          },
          []
        )),
        I(r)
          .map(function (e) {
            return e.list;
          })
          .toArray()
      );
    };
    const xn = function (a, e, s) {
      let n;
        const t = Tn(
          e,
          ((n = D(en(a), ge.fromDom)),
          Oe(B(n, f(Sn)), B(R(n), f(Sn)), function (e, n) {
            return { start: e, end: n };
          }))
        );
      k(t, function (e) {
        let n; let t;
        (n = e.entries),
          (t = s),
          k(x(n, Cn), function (e) {
            return (function (e, n) {
              switch (e) {
                case "Indent":
                  n.depth++;
                  break;
                case "Outdent":
                  n.depth--;
                  break;
                case "Flatten":
                  n.depth = 0;
              }
              n.dirty = !0;
            })(t, e);
          });
        let r;
          let o;
          let i;
          const u =
            ((r = a),
            (o = e.entries),
            P(
              (function (e, n) {
                if (e.length === 0) return [];
                for (
                  var t = n(e[0]), r = [], o = [], i = 0, u = e.length;
                  i < u;
                  i++
                ) {
                  const a = e[i];
                    const s = n(a);
                  s !== t && (r.push(o), (o = [])), (t = s), o.push(a);
                }
                return o.length !== 0 && r.push(o), r;
              })(o, bn),
              function (e) {
                return (I(e).map(bn).getOr(!1) ? kn : Dn)(r, e);
              }
            ));
        k(u, function (e) {
          Ie(a, s === "Indent" ? "IndentList" : "OutdentList", e.dom());
        }),
          (i = e.sourceList),
          k(u, function (e) {
            Ee(i, e);
          }),
          Re(e.sourceList);
      });
    };
    const An = tinymce.util.Tools.resolve("tinymce.dom.DOMUtils");
    const En = An.DOM;
    const Bn = function (n, t) {
      Se(t, "dd")
        ? pn(t, "dt")
        : Se(t, "dt") &&
          Te(t).each(function (e) {
            return (function (e, n, t) {
              const r = En.select('span[data-mce-type="bookmark"]', n);
                const o = un(e, t);
                const i = En.createRng();
              i.setStartAfter(t), i.setEndAfter(n);
              for (
                var u, a = i.extractContents(), s = a.firstChild;
                s;
                s = s.firstChild
              )
                if (s.nodeName === "LI" && e.dom.isEmpty(s)) {
                  En.remove(s);
                  break;
                }
              e.dom.isEmpty(a) || En.insertAfter(a, n),
                En.insertAfter(o, n),
                Ye(e.dom, t.parentNode) &&
                  ((u = t.parentNode),
                  Ue.each(r, function (e) {
                    u.parentNode.insertBefore(e, t.parentNode);
                  }),
                  En.remove(u)),
                En.remove(t),
                Ye(e.dom, n) && En.remove(n);
            })(n, e.dom(), t.dom());
          });
    };
    const Pn = function (e) {
      Se(e, "dt") && pn(e, "dd");
    };
    const Rn = function (e, n) {
      if ($e(e)) return { container: e, offset: n };
      const t = be.getNode(e, n);
      return $e(t)
        ? { container: t, offset: n >= e.childNodes.length ? t.data.length : 0 }
        : t.previousSibling && $e(t.previousSibling)
        ? {
            container: t.previousSibling,
            offset: t.previousSibling.data.length,
          }
        : t.nextSibling && $e(t.nextSibling)
        ? { container: t.nextSibling, offset: 0 }
        : { container: e, offset: n };
    };
    const In = function (e) {
      const n = e.cloneRange();
        const t = Rn(e.startContainer, e.startOffset);
      n.setStart(t.container, t.offset);
      const r = Rn(e.endContainer, e.endOffset);
      return n.setEnd(r.container, r.offset), n;
    };
    const Mn = function (e, n) {
      let t;
        const r = D(rn(e), ge.fromDom);
        const o = D(x(en(e), Ve), ge.fromDom);
        let i = !1;
      if (r.length || o.length) {
        const u = e.selection.getBookmark();
        xn(e, r, n),
          (t = e),
          k(
            o,
            n === "Indent"
              ? Pn
              : function (e) {
                  return Bn(t, e);
                }
          ),
          e.selection.moveToBookmark(u),
          e.selection.setRng(In(e.selection.getRng())),
          e.nodeChanged(),
          (i = !0);
      }
      return i;
    };
    const Un = function (e) {
      return Mn(e, "Indent");
    };
    const _n = function (e) {
      return Mn(e, "Outdent");
    };
    const Fn = function (e) {
      return Mn(e, "Flatten");
    };
    const $n = tinymce.util.Tools.resolve("tinymce.dom.BookmarkManager");
    const Hn = An.DOM;
    const jn = function (o) {
      const i = {};
        const e = function (e) {
          let n; let t; let r;
          (t = o[e ? "startContainer" : "endContainer"]),
            (r = o[e ? "startOffset" : "endOffset"]),
            t.nodeType === 1 &&
              ((n = Hn.create("span", { "data-mce-type": "bookmark" })),
              t.hasChildNodes()
                ? ((r = Math.min(r, t.childNodes.length - 1)),
                  e
                    ? t.insertBefore(n, t.childNodes[r])
                    : Hn.insertAfter(n, t.childNodes[r]))
                : t.appendChild(n),
              (t = n),
              (r = 0)),
            (i[e ? "startContainer" : "endContainer"] = t),
            (i[e ? "startOffset" : "endOffset"] = r);
        };
      return e(!0), o.collapsed || e(), i;
    };
    const qn = function (o) {
      function e(e) {
        let n; let t; let r;
        (n = r = o[e ? "startContainer" : "endContainer"]),
          (t = o[e ? "startOffset" : "endOffset"]),
          n &&
            (n.nodeType === 1 &&
              ((t = (function (e) {
                for (let n = e.parentNode.firstChild, t = 0; n; ) {
                  if (n === e) return t;
                  (n.nodeType === 1 &&
                    n.getAttribute("data-mce-type") === "bookmark") ||
                    t++,
                    (n = n.nextSibling);
                }
                return -1;
              })(n)),
              (n = n.parentNode),
              Hn.remove(r),
              !n.hasChildNodes() &&
                Hn.isBlock(n) &&
                n.appendChild(Hn.create("br"))),
            (o[e ? "startContainer" : "endContainer"] = n),
            (o[e ? "startOffset" : "endOffset"] = t));
      }
      e(!0), e();
      const n = Hn.createRng();
      return (
        n.setStart(o.startContainer, o.startOffset),
        o.endContainer && n.setEnd(o.endContainer, o.endOffset),
        In(n)
      );
    };
    const Kn = function (e) {
      switch (e) {
        case "UL":
          return "ToggleUlList";
        case "OL":
          return "ToggleOlList";
        case "DL":
          return "ToggleDLList";
      }
    };
    const Vn = function (e) {
      return /\btox\-/.test(e.className);
    };
    const Wn = function (n, t, r) {
      return function () {
        const e = function (e) {
          const n = E(e.parents, He, We)
            .filter(function (e) {
              return e.nodeName === t && !Vn(e);
            })
            .isSome();
          r(n);
        };
        return (
          n.on("NodeChange", e),
          function () {
            return n.off("NodeChange", e);
          }
        );
      };
    };
    const Qn = function (t, e) {
      Ue.each(e, function (e, n) {
        t.setAttribute(n, e);
      });
    };
    const Xn = function (e, n, t) {
      let r; let o; let i; let u; let a; let s; let c;
      (r = e),
        (o = n),
        (u = (i = t)["list-style-type"] ? i["list-style-type"] : null),
        r.setStyle(o, "list-style-type", u),
        (a = e),
        Qn((s = n), (c = t)["list-attributes"]),
        Ue.each(a.select("li", s), function (e) {
          Qn(e, c["list-item-attributes"]);
        });
    };
    const zn = function (e, n, t, r) {
      let o = n[t ? "startContainer" : "endContainer"];
        const i = n[t ? "startOffset" : "endOffset"];
      for (
        o.nodeType === 1 &&
          (o = o.childNodes[Math.min(i, o.childNodes.length - 1)] || o),
          !t && Qe(o.nextSibling) && (o = o.nextSibling);
        o.parentNode !== r;

      ) {
        if (Xe(e, o)) return o;
        if (/^(TD|TH)$/.test(o.parentNode.nodeName)) return o;
        o = o.parentNode;
      }
      return o;
    };
    const Yn = function (f, d, l) {
      void 0 === l && (l = {});
      const e = f.selection.getRng();
        let m = "LI";
        const n = nn(f, f.selection.getStart(!0));
        const p = f.dom;
      if (p.getContentEditable(f.selection.getNode()) !== "false") {
        (d = d.toUpperCase()) === "DL" && (m = "DT");
        const t = jn(e);
        Ue.each(
          (function (t, e, r) {
            for (
              var o,
                i = [],
                u = t.dom,
                n = zn(t, e, !0, r),
                a = zn(t, e, !1, r),
                s = [],
                c = n;
              c && (s.push(c), c !== a);
              c = c.nextSibling
            );
            return (
              Ue.each(s, function (e) {
                if (Xe(t, e)) return i.push(e), void (o = null);
                if (u.isBlock(e) || Qe(e))
                  return Qe(e) && u.remove(e), void (o = null);
                const n = e.nextSibling;
                $n.isBookmarkNode(e) && (Xe(t, n) || (!n && e.parentNode === r))
                  ? (o = null)
                  : (o ||
                      ((o = u.create("p")),
                      e.parentNode.insertBefore(o, e),
                      i.push(o)),
                    o.appendChild(e));
              }),
              i
            );
          })(f, e, n),
          function (e) {
            let n;
              let t;
              let r;
              let o;
              let i;
              let u;
              let a;
              let s;
              const c = e.previousSibling;
            c &&
            He(c) &&
            c.nodeName === d &&
            ((t = c),
            (r = l),
            (o = p.getStyle(t, "list-style-type")),
            (i = r ? r["list-style-type"] : ""),
            o === (i = i === null ? "" : i))
              ? ((n = c), (e = p.rename(e, m)), c.appendChild(e))
              : ((n = p.create(d)),
                e.parentNode.insertBefore(n, e),
                n.appendChild(e),
                (e = p.rename(e, m))),
              (u = p),
              (a = e),
              (s = [
                "margin",
                "margin-right",
                "margin-bottom",
                "margin-left",
                "margin-top",
                "padding",
                "padding-right",
                "padding-bottom",
                "padding-left",
                "padding-top",
              ]),
              Ue.each(s, function (e) {
                let n;
                return u.setStyle(a, (((n = {})[e] = ""), n));
              }),
              Xn(p, n, l),
              Jn(f.dom, n);
          }
        ),
          f.selection.setRng(qn(t));
      }
    };
    const Gn = function (e, n, t) {
      return (
        (s = t),
        (a = n) &&
          s &&
          He(a) &&
          a.nodeName === s.nodeName &&
          ((i = n),
          (u = t),
          (o = e).getStyle(i, "list-style-type", !0) ===
            o.getStyle(u, "list-style-type", !0)) &&
          ((r = t), n.className === r.className)
      );
      let r; let o; let i; let u; let a; let s;
    };
    var Jn = function (e, n) {
      let t; let r;
      if (((t = n.nextSibling), Gn(e, n, t))) {
        for (; (r = t.firstChild); ) n.appendChild(r);
        e.remove(t);
      }
      if (((t = n.previousSibling), Gn(e, n, t))) {
        for (; (r = t.lastChild); ) n.insertBefore(r, n.firstChild);
        e.remove(t);
      }
    };
    const Zn = function (n, e, t, r, o) {
      if (e.nodeName !== r || et(o)) {
        const i = jn(n.selection.getRng(!0));
        Ue.each([e].concat(t), function (e) {
          !(function (e, n, t, r) {
            if (n.nodeName !== t) {
              const o = e.dom.rename(n, t);
              Xn(e.dom, o, r), Ie(e, Kn(t), o);
            } else Xn(e.dom, n, r), Ie(e, Kn(t), n);
          })(n, e, r, o);
        }),
          n.selection.setRng(qn(i));
      } else Fn(n);
    };
    var et = function (e) {
      return "list-style-type" in e;
    };
    const nt = function (e, n, t) {
      const r = Je(e);
        const o = Ze(e);
      (t = t || {}),
        r && o.length > 0
          ? Zn(e, r, o, n, t)
          : (function (e, n, t, r) {
              if (n !== e.getBody())
                if (n)
                  if (n.nodeName !== t || et(r) || Vn(n)) {
                    const o = jn(e.selection.getRng(!0));
                    Xn(e.dom, n, r);
                    const i = e.dom.rename(n, t);
                    Jn(e.dom, i), e.selection.setRng(qn(o)), Ie(e, Kn(t), i);
                  } else Fn(e);
                else Yn(e, t, r), Ie(e, Kn(t), n);
            })(e, r, n, t);
    };
    const tt = An.DOM;
    const rt = function (i, e) {
      Ue.each(Ue.grep(i.select("ol,ul", e)), function (e) {
        let n; let t; let r; let o;
        (n = i),
          (o = (t = e).parentNode).nodeName === "LI" &&
            o.firstChild === t &&
            ((r = o.previousSibling) && r.nodeName === "LI"
              ? (r.appendChild(t), Ye(n, o) && tt.remove(o))
              : tt.setStyle(o, "listStyleType", "none")),
          He(o) &&
            (r = o.previousSibling) &&
            r.nodeName === "LI" &&
            r.appendChild(t);
      });
    };
    const ot = function (e, n, t, r) {
      let o = n.startContainer;
        const i = n.startOffset;
      if ($e(o) && (t ? i < o.data.length : i > 0)) return o;
      const u = e.schema.getNonEmptyElements();
      o.nodeType === 1 && (o = be.getNode(o, i));
      let a;
        let s;
        const c = new Ce(o, r);
      for (
        t &&
        ((a = e.dom),
        Qe((s = o)) &&
          a.isBlock(s.nextSibling) &&
          !Qe(s.previousSibling) &&
          c.next());
        (o = c[t ? "next" : "prev2"]());

      ) {
        if (o.nodeName === "LI" && !o.hasChildNodes()) return o;
        if (u[o.nodeName]) return o;
        if ($e(o) && o.data.length > 0) return o;
      }
    };
    const it = function (e, n) {
      const t = n.childNodes;
      return t.length === 1 && !He(t[0]) && e.isBlock(t[0]);
    };
    const ut = function (e, n, t) {
      let r;
        let o;
        let i;
        const u = it(e, t) ? t.firstChild : t;
      if ((it((o = e), (i = n)) && o.remove(i.firstChild, !0), !Ye(e, n, !0)))
        for (; (r = n.firstChild); ) u.appendChild(r);
    };
    const at = function (n, e, t) {
      let r;
        const o = e.parentNode;
      if (Ge(n, e) && Ge(n, t)) {
        He(t.lastChild) && (r = t.lastChild),
          o === t.lastChild &&
            Qe(o.previousSibling) &&
            n.remove(o.previousSibling);
        const i = t.lastChild;
        i && Qe(i) && e.hasChildNodes() && n.remove(i),
          Ye(n, t, !0) && n.$(t).empty(),
          ut(n, e, t),
          r && t.appendChild(r);
        const u = ye(ge.fromDom(t), ge.fromDom(e)) ? n.getParents(e, He, t) : [];
        n.remove(e),
          k(u, function (e) {
            Ye(n, e) && e !== n.getRoot() && n.remove(e);
          });
      }
    };
    const st = function (e, n, t, r) {
      let o;
        let i;
        let u;
        const a = e.dom;
      if (a.isEmpty(r))
        (i = t),
          (u = r),
          (o = e).dom.$(u).empty(),
          at(o.dom, i, u),
          o.selection.setCursorLocation(u);
      else {
        const s = jn(n);
        at(a, t, r), e.selection.setRng(qn(s));
      }
    };
    const ct = function (n, t) {
      const e = n.dom;
        const r = n.selection;
        const o = r.getStart();
        const i = nn(n, o);
        const u = e.getParent(r.getStart(), "LI", i);
      if (u) {
        const a = u.parentNode;
        if (a === n.getBody() && Ye(e, a)) return !0;
        const s = In(r.getRng());
          const c = e.getParent(ot(n, s, t, i), "LI", i);
        if (c && c !== u)
          return (
            n.undoManager.transact(function () {
              let e;
              t
                ? st(n, s, c, u)
                : (e = u).parentNode.firstChild === e
                ? _n(n)
                : (function (e, n, t, r) {
                    const o = jn(n);
                    at(e.dom, t, r);
                    const i = qn(o);
                    e.selection.setRng(i);
                  })(n, s, u, c);
            }),
            !0
          );
        if (!c && !t && s.startOffset === 0 && s.endOffset === 0)
          return (
            n.undoManager.transact(function () {
              Fn(n);
            }),
            !0
          );
      }
      return !1;
    };
    const ft = function (o, i) {
      const u = o.dom;
        const e = o.selection.getStart();
        const a = nn(o, e);
        const s = u.getParent(e, u.isBlock, a);
      if (s && u.isEmpty(s)) {
        const n = In(o.selection.getRng());
          const c = u.getParent(ot(o, n, i, a), "LI", a);
        if (c)
          return (
            o.undoManager.transact(function () {
              let e; let n; let t; let r;
              (n = s),
                (t = a),
                (r = (e = u).getParent(n.parentNode, e.isBlock, t)),
                e.remove(n),
                r && e.isEmpty(r) && e.remove(r),
                Jn(u, c.parentNode),
                o.selection.select(c, !0),
                o.selection.collapse(i);
            }),
            !0
          );
      }
      return !1;
    };
    const dt = function (e, n) {
      return e.selection.isCollapsed()
        ? ct((i = e), (u = n)) || ft(i, u)
        : ((r = (t = e).selection.getStart()),
          (o = nn(t, r)),
          !!(t.dom.getParent(r, "LI,DT,DD", o) || en(t).length > 0) &&
            (t.undoManager.transact(function () {
              t.execCommand("Delete"), rt(t.dom, t.getBody());
            }),
            !0));
      let t; let r; let o; let i; let u;
    };
    const lt = function (t) {
      const r = t.dom;
        const e = Je(t);
      qe(e) &&
        t.windowManager.open({
          title: "List Properties",
          body: {
            type: "panel",
            items: [
              {
                type: "input",
                name: "start",
                label: "Start list at number",
                inputMode: "numeric",
              },
            ],
          },
          initialData: { start: r.getAttrib(e, "start") || "1" },
          buttons: [
            { type: "cancel", name: "cancel", text: "Cancel" },
            { type: "submit", name: "save", text: "Save", primary: !0 },
          ],
          onSubmit (e) {
            const n = e.getData();
            t.undoManager.transact(function () {
              r.setAttrib(Je(t), "start", n.start === "1" ? "" : n.start);
            }),
              e.close();
          },
        });
    };
    const mt = function (n, t) {
      return function () {
        const e = n.dom.getParent(n.selection.getStart(), "UL,OL,DL");
        return e && e.nodeName === t;
      };
    };
    const pt = function (e) {
      let n; let t;
      e.getParam("lists_indent_on_tab", !0) &&
        (n = e).on("keydown", function (e) {
          e.keyCode !== Ne.TAB ||
            Ne.metaKeyPressed(e) ||
            n.undoManager.transact(function () {
              (e.shiftKey ? _n : Un)(n) && e.preventDefault();
            });
        }),
        (t = e).on("keydown", function (e) {
          e.keyCode === Ne.BACKSPACE
            ? dt(t, !1) && e.preventDefault()
            : e.keyCode === Ne.DELETE && dt(t, !0) && e.preventDefault();
        });
    };
  !(function gt() {
    c.add("lists", function (e) {
      let t; let n; let r; let o; let i; let u; let a; let s;
      return (
        !1 ==
          !(
            !/(^|[ ,])rtc([, ]|$)/.test(e.getParam("plugins", "", "string")) ||
            !c.get("rtc")
          ) &&
          (pt(e),
          (t = e).on("BeforeExecCommand", function (e) {
            const n = e.command.toLowerCase();
            n === "indent" ? Un(t) : n === "outdent" && _n(t);
          }),
          t.addCommand("InsertUnorderedList", function (e, n) {
            nt(t, "UL", n);
          }),
          t.addCommand("InsertOrderedList", function (e, n) {
            nt(t, "OL", n);
          }),
          t.addCommand("InsertDefinitionList", function (e, n) {
            nt(t, "DL", n);
          }),
          t.addCommand("RemoveList", function () {
            Fn(t);
          }),
          t.addCommand("mceListProps", function () {
            lt(t);
          }),
          t.addQueryStateHandler("InsertUnorderedList", mt(t, "UL")),
          t.addQueryStateHandler("InsertOrderedList", mt(t, "OL")),
          t.addQueryStateHandler("InsertDefinitionList", mt(t, "DL"))),
        (i = function (e) {
          return function () {
            return n.execCommand(e);
          };
        }),
        (r = "advlist"),
        (o = (n = e).getParam("plugins", "", "string")),
        Ue.inArray(o.split(/[ ,]/), r) === -1 &&
          (n.ui.registry.addToggleButton("numlist", {
            icon: "ordered-list",
            active: !1,
            tooltip: "Numbered list",
            onAction: i("InsertOrderedList"),
            onSetup (e) {
              return Wn(n, "OL", e.setActive);
            },
          }),
          n.ui.registry.addToggleButton("bullist", {
            icon: "unordered-list",
            active: !1,
            tooltip: "Bullet list",
            onAction: i("InsertUnorderedList"),
            onSetup (e) {
              return Wn(n, "UL", e.setActive);
            },
          })),
        (a = {
          text: "List properties...",
          icon: "ordered-list",
          onAction () {
            return lt(u);
          },
          onSetup (n) {
            return Wn(u, "OL", function (e) {
              return n.setDisabled(!e);
            });
          },
        }),
        (u = e).ui.registry.addMenuItem("listprops", a),
        u.ui.registry.addContextMenu("lists", {
          update (e) {
            const n = Je(u, e);
            return qe(n) ? ["listprops"] : [];
          },
        }),
        (s = e),
        {
          backspaceDelete (e) {
            dt(s, e);
          },
        }
      );
    });
  })();
})(window);
