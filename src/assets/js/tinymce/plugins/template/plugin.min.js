/**
 * Copyright (c) Tiny Technologies, Inc. All rights reserved.
 * Licensed under the LGPL or a commercial license.
 * For LGPL see License.txt in the project root for license information.
 * For commercial licenses see https://www.tiny.cloud/
 *
 * Version: 5.4.1 (2020-07-08)
 */
!(function () {
  
  const e = tinymce.util.Tools.resolve("tinymce.PluginManager");
    const t = function () {};
    const o = function (e) {
      return function () {
        return e;
      };
    };
  let n;
    let r;
    let a;
    const u = o(!1);
    const i = o(!0);
    const p = tinymce.util.Tools.resolve("tinymce.util.Tools");
    const c = tinymce.util.Tools.resolve("tinymce.util.XHR");
    const l = function (e) {
      return e.getParam("template_mdate_classes", "mdate");
    };
    const s = function (e) {
      return e.getParam("template_replace_values");
    };
    const f = function (e) {
      return e.getParam("template_mdate_format", e.translate("%Y-%m-%d"));
    };
    const m = function (e, t) {
      if ((e = `${  e}`).length < t)
        for (let n = 0; n < t - e.length; n++) e = `0${  e}`;
      return e;
    };
    const d = function (e, t, n) {
      const r = "Sun Mon Tue Wed Thu Fri Sat Sun".split(" ");
        const a = "Sunday Monday Tuesday Wednesday Thursday Friday Saturday Sunday".split(
          " "
        );
        const o = "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" ");
        const u = "January February March April May June July August September October November December".split(
          " "
        );
      return (
        (n = n || new Date()),
        (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = t.replace(
          "%D",
          "%m/%d/%Y"
        )).replace("%r", "%I:%M:%S %p")).replace(
          "%Y",
          `${  n.getFullYear()}`
        )).replace("%y", `${  n.getYear()}`)).replace(
          "%m",
          m(n.getMonth() + 1, 2)
        )).replace("%d", m(n.getDate(), 2))).replace(
          "%H",
          `${  m(n.getHours(), 2)}`
        )).replace("%M", `${  m(n.getMinutes(), 2)}`)).replace(
          "%S",
          `${  m(n.getSeconds(), 2)}`
        )).replace("%I", `${  ((n.getHours() + 11) % 12) + 1}`)).replace(
          "%p",
          n.getHours() < 12 ? "AM" : "PM"
        )).replace("%B", `${  e.translate(u[n.getMonth()])}`)).replace(
          "%b",
          `${  e.translate(o[n.getMonth()])}`
        )).replace("%A", `${  e.translate(a[n.getDay()])}`)).replace(
          "%a",
          `${  e.translate(r[n.getDay()])}`
        )).replace("%%", "%"))
      );
    };
    const g = function (t, n) {
      return function () {
        const e = t.getParam("templates");
        typeof e !== "function"
          ? typeof e === "string"
            ? c.send({
                url: e,
                success (e) {
                  n(JSON.parse(e));
                },
              })
            : n(e)
          : e(n);
      };
    };
    const v = function (n, e) {
      return (
        p.each(e, function (e, t) {
          typeof e === "function" && (e = e(t)),
            (n = n.replace(new RegExp(`\\{\\$${  t  }\\}`, "g"), e));
        }),
        n
      );
    };
    const h = function (e, t) {
      const r = e.dom;
        const a = s(e);
      p.each(r.select("*", t), function (n) {
        p.each(a, function (e, t) {
          r.hasClass(n, t) && typeof a[t] === "function" && a[t](n);
        });
      });
    };
    const y = function (e, t) {
      return new RegExp(`\\b${  t  }\\b`, "g").test(e.className);
    };
    const b = function (n, e, t) {
      let r;
        const a = n.dom;
        const o = n.selection.getContent();
      (t = v(t, s(n))), (r = a.create("div", null, t));
      const u = a.select(".mceTmpl", r);
      u &&
        u.length > 0 &&
        (r = a.create("div", null)).appendChild(u[0].cloneNode(!0)),
        p.each(a.select("*", r), function (e) {
          let t;
          y(
            e,
            n.getParam("template_cdate_classes", "cdate").replace(/\s+/g, "|")
          ) &&
            (e.innerHTML = d(
              n,
              (t = n).getParam("template_cdate_format", t.translate("%Y-%m-%d"))
            )),
            y(e, l(n).replace(/\s+/g, "|")) && (e.innerHTML = d(n, f(n))),
            y(
              e,
              n
                .getParam("template_selected_content_classes", "selcontent")
                .replace(/\s+/g, "|")
            ) && (e.innerHTML = o);
        }),
        h(n, r),
        n.execCommand("mceInsertContent", !1, r.innerHTML),
        n.addVisual();
    };
    const M = function (e) {
      e.addCommand(
        "mceInsertTemplate",
        (function t(r) {
          for (var a = [], e = 1; e < arguments.length; e++)
            a[e - 1] = arguments[e];
          return function () {
            for (var e = [], t = 0; t < arguments.length; t++)
              e[t] = arguments[t];
            const n = a.concat(e);
            return r.apply(null, n);
          };
        })(b, e)
      );
    };
    const T = function () {
      return O;
    };
    var O =
      ((n = function (e) {
        return e.isNone();
      }),
      {
        fold (e, t) {
          return e();
        },
        is: u,
        isSome: u,
        isNone: i,
        getOr: (a = function (e) {
          return e;
        }),
        getOrThunk: (r = function (e) {
          return e();
        }),
        getOrDie (e) {
          throw new Error(e || "error: getOrDie called on none.");
        },
        getOrNull: o(null),
        getOrUndefined: o(undefined),
        or: a,
        orThunk: r,
        map: T,
        each: t,
        bind: T,
        exists: u,
        forall: i,
        filter: T,
        equals: n,
        equals_: n,
        toArray () {
          return [];
        },
        toString: o("none()"),
      });
    var x = function (n) {
      const e = o(n);
        const t = function () {
          return a;
        };
        const r = function (e) {
          return e(n);
        };
        var a = {
          fold (e, t) {
            return t(n);
          },
          is (e) {
            return n === e;
          },
          isSome: i,
          isNone: u,
          getOr: e,
          getOrThunk: e,
          getOrDie: e,
          getOrNull: e,
          getOrUndefined: e,
          or: t,
          orThunk: t,
          map (e) {
            return x(e(n));
          },
          each (e) {
            e(n);
          },
          bind: r,
          exists: r,
          forall: r,
          filter (e) {
            return e(n) ? a : O;
          },
          toArray () {
            return [n];
          },
          toString () {
            return `some(${  n  })`;
          },
          equals (e) {
            return e.is(n);
          },
          equals_ (e, t) {
            return e.fold(u, function (e) {
              return t(n, e);
            });
          },
        };
      return a;
    };
    const S = {
      some: x,
      none: T,
      from (e) {
        return e === null || e === undefined ? O : x(e);
      },
    };
    const _ = function (e, t) {
      return (function (e, t, n) {
        for (let r = 0, a = e.length; r < a; r++) {
          const o = e[r];
          if (t(o, r)) return S.some(o);
          if (n(o, r)) break;
        }
        return S.none();
      })(e, t, u);
    };
    const P = tinymce.util.Tools.resolve("tinymce.util.Promise");
    const w = Object.hasOwnProperty;
    const D = function (e, t) {
      return w.call(e, t);
    };
    const C = {
      '"': "&quot;",
      "<": "&lt;",
      ">": "&gt;",
      "&": "&amp;",
      "'": "&#039;",
    };
    const A = function (e) {
      return e.replace(/["'<>&]/g, function (e) {
        return (D((t = C), (n = e)) ? S.from(t[n]) : S.none()).getOr(e);
        let t; let n;
      });
    };
    const N = function (l, t) {
      const e = function (e) {
          return (function (e, t) {
            for (var n = e.length, r = new Array(n), a = 0; a < n; a++) {
              const o = e[a];
              r[a] = t(o, a);
            }
            return r;
          })(e, function (e) {
            return { text: e.text, value: e.text };
          });
        };
        const s = function (e, t) {
          return _(e, function (e) {
            return e.text === t;
          });
        };
        const f = function (e) {
          l.windowManager.alert(
            "Could not load the specified template.",
            function () {
              return e.focus("template");
            }
          );
        };
        const m = function (e) {
          return new P(function (t, n) {
            e.value.url.fold(
              function () {
                return t(e.value.content.getOr(""));
              },
              function (e) {
                return c.send({
                  url: e,
                  success (e) {
                    t(e);
                  },
                  error (e) {
                    n(e);
                  },
                });
              }
            );
          });
        };
      (function () {
        if (t && t.length !== 0)
          return S.from(
            p.map(t, function (e, t) {
              const n = function (e) {
                return e.url !== undefined;
              };
              return {
                selected: t === 0,
                text: e.title,
                value: {
                  url: n(e) ? S.from(e.url) : S.none(),
                  content: n(e) ? S.none() : S.from(e.content),
                  description: e.description,
                },
              };
            })
          );
        const e = l.translate("No templates defined.");
        return l.notificationManager.open({ text: e, type: "info" }), S.none();
      })().each(function (o) {
        const u = e(o);
          const i = function (e, t) {
            return {
              title: "Insert Template",
              size: "large",
              body: { type: "panel", items: e },
              initialData: t,
              buttons: [
                { type: "cancel", name: "cancel", text: "Cancel" },
                { type: "submit", name: "save", text: "Save", primary: !0 },
              ],
              onSubmit (t) {
                const e = t.getData();
                s(n, e.template).each(function (e) {
                  m(e)
                    .then(function (e) {
                      b(l, 0, e), t.close();
                    })
                    .catch(function () {
                      t.disable("save"), f(t);
                    });
                });
              },
              onChange:
                ((r = n = o),
                (a = c),
                function (n, e) {
                  if (e.name === "template") {
                    const t = n.getData().template;
                    s(r, t).each(function (t) {
                      n.block("Loading..."),
                        m(t)
                          .then(function (e) {
                            a(n, t, e);
                          })
                          .catch(function () {
                            a(n, t, ""), n.disable("save"), f(n);
                          });
                    });
                  }
                }),
            };
            let r; let a; let n;
          };
          var c = function (e, t, n) {
            const r = (function (t, e) {
                if (e.indexOf("<html>") === -1) {
                  let n = "";
                  p.each(t.contentCSS, function (e) {
                    n +=
                      `<link type="text/css" rel="stylesheet" href="${ 
                      t.documentBaseURI.toAbsolute(e) 
                      }">`;
                  });
                  const r =
                      (l = (i = t).getParam(
                        "body_class",
                        "",
                        "string"
                      )).indexOf("=") ===
                      -1
                        ? l
                        : (c = i).getParam("body_class", "", "hash")[c.id] ||
                          "";
                    const a = t.dom.encode;
                    const o = t.getBody().dir;
                    const u = o ? ` dir="${  a(o)  }"` : "";
                  e =
                    `<!DOCTYPE html><html><head>${ 
                    n 
                    }</head><body class="${ 
                    a(r) 
                    }"${ 
                    u 
                    }>${ 
                    e 
                    }</body></html>`;
                }
                let i; let c; let l;
                return v(e, t.getParam("template_preview_replace_values"));
              })(l, n);
              const a = [
                {
                  type: "selectbox",
                  name: "template",
                  label: "Templates",
                  items: u,
                },
                {
                  type: "htmlpanel",
                  html:
                    `<p aria-live="polite">${  A(t.value.description)  }</p>`,
                },
                {
                  label: "Preview",
                  type: "iframe",
                  name: "preview",
                  sandboxed: !1,
                },
              ];
              const o = { template: t.text, preview: r };
            e.unblock(), e.redial(i(a, o)), e.focus("template");
          };
          const t = l.windowManager.open(i([], { template: "", preview: "" }));
        t.block("Loading..."),
          m(o[0])
            .then(function (e) {
              c(t, o[0], e);
            })
            .catch(function () {
              c(t, o[0], ""), t.disable("save"), f(t);
            });
      });
    };
    const H = function (t) {
      return function (e) {
        N(t, e);
      };
    };
  !(function k() {
    e.add("template", function (e) {
      let t; let r;
      (t = e).ui.registry.addButton("template", {
        icon: "template",
        tooltip: "Insert template",
        onAction: g(t, H(t)),
      }),
        t.ui.registry.addMenuItem("template", {
          icon: "template",
          text: "Insert template...",
          onAction: g(t, H(t)),
        }),
        M(e),
        (r = e).on("PreProcess", function (e) {
          const t = r.dom;
            const n = f(r);
          p.each(t.select("div", e.node), function (e) {
            t.hasClass(e, "mceTmpl") &&
              (p.each(t.select("*", e), function (e) {
                t.hasClass(e, l(r).replace(/\s+/g, "|")) &&
                  (e.innerHTML = d(r, n));
              }),
              h(r, e));
          });
        });
    });
  })();
})();
